// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: list_win_patch.proto

package patch

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	patch_manager "github.com/easyopsapis/easyops-api-go/protorepo-models/easyops/model/patch_manager"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//ListWinPatch请求
type ListWinPatchRequest struct {
	//
	//页码
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page" form:"page"`
	//
	//每页大小
	PageSize int32 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize" form:"pageSize"`
	//
	//补丁编号精确匹配
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name" form:"name"`
	//
	//补丁模糊匹配
	Keyword              string   `protobuf:"bytes,4,opt,name=keyword,proto3" json:"keyword" form:"keyword"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListWinPatchRequest) Reset()         { *m = ListWinPatchRequest{} }
func (m *ListWinPatchRequest) String() string { return proto.CompactTextString(m) }
func (*ListWinPatchRequest) ProtoMessage()    {}
func (*ListWinPatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7dddae37cf504c9c, []int{0}
}
func (m *ListWinPatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListWinPatchRequest.Unmarshal(m, b)
}
func (m *ListWinPatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListWinPatchRequest.Marshal(b, m, deterministic)
}
func (m *ListWinPatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListWinPatchRequest.Merge(m, src)
}
func (m *ListWinPatchRequest) XXX_Size() int {
	return xxx_messageInfo_ListWinPatchRequest.Size(m)
}
func (m *ListWinPatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListWinPatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListWinPatchRequest proto.InternalMessageInfo

func (m *ListWinPatchRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListWinPatchRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListWinPatchRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListWinPatchRequest) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

//
//ListWinPatch返回
type ListWinPatchResponse struct {
	//
	//页数
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page" form:"page"`
	//
	//页大小
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size" form:"page_size"`
	//
	//总数
	Total int32 `protobuf:"varint,3,opt,name=total,proto3" json:"total" form:"total"`
	//
	//数据列表
	List                 []*ListWinPatchResponse_List `protobuf:"bytes,4,rep,name=list,proto3" json:"list" form:"list"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ListWinPatchResponse) Reset()         { *m = ListWinPatchResponse{} }
func (m *ListWinPatchResponse) String() string { return proto.CompactTextString(m) }
func (*ListWinPatchResponse) ProtoMessage()    {}
func (*ListWinPatchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7dddae37cf504c9c, []int{1}
}
func (m *ListWinPatchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListWinPatchResponse.Unmarshal(m, b)
}
func (m *ListWinPatchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListWinPatchResponse.Marshal(b, m, deterministic)
}
func (m *ListWinPatchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListWinPatchResponse.Merge(m, src)
}
func (m *ListWinPatchResponse) XXX_Size() int {
	return xxx_messageInfo_ListWinPatchResponse.Size(m)
}
func (m *ListWinPatchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListWinPatchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListWinPatchResponse proto.InternalMessageInfo

func (m *ListWinPatchResponse) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListWinPatchResponse) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListWinPatchResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ListWinPatchResponse) GetList() []*ListWinPatchResponse_List {
	if m != nil {
		return m.List
	}
	return nil
}

type ListWinPatchResponse_List struct {
	//
	//依赖补丁列表
	PRE_PATCH []*patch_manager.WinPatch `protobuf:"bytes,1,rep,name=PRE_PATCH,json=PREPATCH,proto3" json:"PRE_PATCH" form:"PRE_PATCH"`
	//
	//补丁编号
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name" form:"name"`
	//
	//发布时间
	ReleaseTime string `protobuf:"bytes,3,opt,name=releaseTime,proto3" json:"releaseTime" form:"releaseTime"`
	//
	//适用系统
	OsSystem string `protobuf:"bytes,4,opt,name=osSystem,proto3" json:"osSystem" form:"osSystem"`
	//
	//是否需要重启
	RequireReboot bool `protobuf:"varint,5,opt,name=requireReboot,proto3" json:"requireReboot" form:"requireReboot"`
	//
	//MSRC编号
	Msrc string `protobuf:"bytes,6,opt,name=msrc,proto3" json:"msrc" form:"msrc"`
	//
	//操作系统架构
	OsArchitecture string `protobuf:"bytes,7,opt,name=osArchitecture,proto3" json:"osArchitecture" form:"osArchitecture"`
	//
	//补丁大小,单位KB
	Size_ int32 `protobuf:"varint,8,opt,name=size,proto3" json:"size" form:"size"`
	//
	//说明
	Desc string `protobuf:"bytes,9,opt,name=desc,proto3" json:"desc" form:"desc"`
	//
	//补丁下载链接
	Url                  string   `protobuf:"bytes,10,opt,name=url,proto3" json:"url" form:"url"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListWinPatchResponse_List) Reset()         { *m = ListWinPatchResponse_List{} }
func (m *ListWinPatchResponse_List) String() string { return proto.CompactTextString(m) }
func (*ListWinPatchResponse_List) ProtoMessage()    {}
func (*ListWinPatchResponse_List) Descriptor() ([]byte, []int) {
	return fileDescriptor_7dddae37cf504c9c, []int{1, 0}
}
func (m *ListWinPatchResponse_List) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListWinPatchResponse_List.Unmarshal(m, b)
}
func (m *ListWinPatchResponse_List) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListWinPatchResponse_List.Marshal(b, m, deterministic)
}
func (m *ListWinPatchResponse_List) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListWinPatchResponse_List.Merge(m, src)
}
func (m *ListWinPatchResponse_List) XXX_Size() int {
	return xxx_messageInfo_ListWinPatchResponse_List.Size(m)
}
func (m *ListWinPatchResponse_List) XXX_DiscardUnknown() {
	xxx_messageInfo_ListWinPatchResponse_List.DiscardUnknown(m)
}

var xxx_messageInfo_ListWinPatchResponse_List proto.InternalMessageInfo

func (m *ListWinPatchResponse_List) GetPRE_PATCH() []*patch_manager.WinPatch {
	if m != nil {
		return m.PRE_PATCH
	}
	return nil
}

func (m *ListWinPatchResponse_List) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListWinPatchResponse_List) GetReleaseTime() string {
	if m != nil {
		return m.ReleaseTime
	}
	return ""
}

func (m *ListWinPatchResponse_List) GetOsSystem() string {
	if m != nil {
		return m.OsSystem
	}
	return ""
}

func (m *ListWinPatchResponse_List) GetRequireReboot() bool {
	if m != nil {
		return m.RequireReboot
	}
	return false
}

func (m *ListWinPatchResponse_List) GetMsrc() string {
	if m != nil {
		return m.Msrc
	}
	return ""
}

func (m *ListWinPatchResponse_List) GetOsArchitecture() string {
	if m != nil {
		return m.OsArchitecture
	}
	return ""
}

func (m *ListWinPatchResponse_List) GetSize_() int32 {
	if m != nil {
		return m.Size_
	}
	return 0
}

func (m *ListWinPatchResponse_List) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *ListWinPatchResponse_List) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

//
//ListWinPatchApi返回
type ListWinPatchResponseWrapper struct {
	//
	//返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code" form:"code"`
	//
	//返回码解释
	CodeExplain string `protobuf:"bytes,2,opt,name=codeExplain,proto3" json:"codeExplain" form:"codeExplain"`
	//
	//错误详情
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error" form:"error"`
	//
	//返回数据
	Data                 *ListWinPatchResponse `protobuf:"bytes,4,opt,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ListWinPatchResponseWrapper) Reset()         { *m = ListWinPatchResponseWrapper{} }
func (m *ListWinPatchResponseWrapper) String() string { return proto.CompactTextString(m) }
func (*ListWinPatchResponseWrapper) ProtoMessage()    {}
func (*ListWinPatchResponseWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_7dddae37cf504c9c, []int{2}
}
func (m *ListWinPatchResponseWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListWinPatchResponseWrapper.Unmarshal(m, b)
}
func (m *ListWinPatchResponseWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListWinPatchResponseWrapper.Marshal(b, m, deterministic)
}
func (m *ListWinPatchResponseWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListWinPatchResponseWrapper.Merge(m, src)
}
func (m *ListWinPatchResponseWrapper) XXX_Size() int {
	return xxx_messageInfo_ListWinPatchResponseWrapper.Size(m)
}
func (m *ListWinPatchResponseWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_ListWinPatchResponseWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_ListWinPatchResponseWrapper proto.InternalMessageInfo

func (m *ListWinPatchResponseWrapper) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListWinPatchResponseWrapper) GetCodeExplain() string {
	if m != nil {
		return m.CodeExplain
	}
	return ""
}

func (m *ListWinPatchResponseWrapper) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *ListWinPatchResponseWrapper) GetData() *ListWinPatchResponse {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*ListWinPatchRequest)(nil), "patch.ListWinPatchRequest")
	proto.RegisterType((*ListWinPatchResponse)(nil), "patch.ListWinPatchResponse")
	proto.RegisterType((*ListWinPatchResponse_List)(nil), "patch.ListWinPatchResponse.List")
	proto.RegisterType((*ListWinPatchResponseWrapper)(nil), "patch.ListWinPatchResponseWrapper")
}

func init() { proto.RegisterFile("list_win_patch.proto", fileDescriptor_7dddae37cf504c9c) }

var fileDescriptor_7dddae37cf504c9c = []byte{
	// 803 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xd1, 0x6e, 0xe3, 0x44,
	0x14, 0xc5, 0x6d, 0xb2, 0x4d, 0x27, 0xd0, 0xad, 0xbc, 0x5d, 0x30, 0xd9, 0x07, 0x47, 0x03, 0x42,
	0x0e, 0x8b, 0xed, 0x34, 0x65, 0x81, 0xed, 0x03, 0xa1, 0x41, 0x95, 0x10, 0xe2, 0xa1, 0x9a, 0xad,
	0x54, 0x09, 0x13, 0xa2, 0xa9, 0x33, 0x9b, 0x5a, 0x6b, 0x67, 0xbc, 0x33, 0x13, 0x4a, 0xa1, 0xfc,
	0x06, 0x1f, 0xb1, 0x12, 0xff, 0x81, 0xf8, 0x08, 0x23, 0xf1, 0xc0, 0x0b, 0x6f, 0xfe, 0x02, 0x34,
	0xd7, 0x71, 0xec, 0x84, 0x6a, 0x25, 0x9e, 0x66, 0xee, 0x3d, 0xe7, 0xf8, 0xce, 0x9d, 0x7b, 0xc6,
	0xe8, 0x20, 0x8e, 0xa4, 0x9a, 0x5c, 0x47, 0xf3, 0x49, 0x4a, 0x55, 0x78, 0xe5, 0xa5, 0x82, 0x2b,
	0x6e, 0x36, 0x21, 0xe8, 0xb8, 0xb3, 0x48, 0x5d, 0x2d, 0x2e, 0xbd, 0x90, 0x27, 0xfe, 0x8c, 0xcf,
	0xb8, 0x0f, 0xe8, 0xe5, 0xe2, 0x39, 0x44, 0x10, 0xc0, 0xae, 0x50, 0x75, 0x2e, 0x66, 0xdc, 0x63,
	0x54, 0xde, 0xf0, 0x54, 0x7a, 0x31, 0x0f, 0x69, 0xec, 0x87, 0x7c, 0xae, 0x04, 0x0d, 0x95, 0x2c,
	0x94, 0x82, 0xa5, 0xdc, 0x4d, 0xf8, 0x94, 0xc5, 0xd2, 0x5f, 0x12, 0x7d, 0x08, 0x7d, 0xa8, 0x37,
	0x49, 0xe8, 0x9c, 0xce, 0x98, 0xf0, 0x37, 0x8e, 0xd3, 0xf9, 0xa4, 0x76, 0x8e, 0xe4, 0x3a, 0x52,
	0x2f, 0xf8, 0xb5, 0x3f, 0xe3, 0x2e, 0x80, 0xee, 0x0f, 0x34, 0x8e, 0xa6, 0x54, 0x71, 0x21, 0xfd,
	0xd5, 0xb6, 0xd0, 0xe1, 0x3f, 0x0c, 0xf4, 0xe0, 0x9b, 0x48, 0xaa, 0x8b, 0x68, 0x7e, 0xa6, 0x3f,
	0x47, 0xd8, 0xcb, 0x05, 0x93, 0xca, 0xec, 0xa1, 0x46, 0x4a, 0x67, 0xcc, 0x32, 0xba, 0x86, 0xd3,
	0x1c, 0x3d, 0xcc, 0x33, 0xbb, 0xfd, 0x9c, 0x8b, 0xe4, 0x18, 0xeb, 0x2c, 0xfe, 0xeb, 0x4f, 0x7b,
	0x6b, 0xff, 0x0d, 0x02, 0x14, 0xf3, 0x09, 0x6a, 0xe9, 0xf5, 0x59, 0xf4, 0x13, 0xb3, 0xb6, 0x80,
	0xfe, 0x6e, 0x9e, 0xd9, 0xf7, 0x2b, 0xba, 0x46, 0x4a, 0xc9, 0x8a, 0x6a, 0xbe, 0x87, 0x1a, 0x73,
	0x9a, 0x30, 0x6b, 0xbb, 0x6b, 0x38, 0xbb, 0xa3, 0xfb, 0x55, 0x05, 0x9d, 0xc5, 0x04, 0x40, 0xf3,
	0x23, 0xb4, 0xf3, 0x82, 0xdd, 0x5c, 0x73, 0x31, 0xb5, 0x1a, 0xc0, 0x33, 0xf3, 0xcc, 0xde, 0x2b,
	0x78, 0x4b, 0x00, 0x93, 0x92, 0x82, 0x7f, 0xdd, 0x41, 0x07, 0xeb, 0xcd, 0xc8, 0x94, 0xcf, 0x25,
	0xfb, 0x3f, 0xdd, 0x7c, 0x8a, 0x76, 0xf5, 0x3a, 0x91, 0x55, 0x3b, 0x9d, 0x3c, 0xb3, 0xf7, 0x2b,
	0x3e, 0x40, 0xff, 0xed, 0xe7, 0x03, 0xd4, 0x54, 0x5c, 0xd1, 0x18, 0x1a, 0x6a, 0x8e, 0xf6, 0xf3,
	0xcc, 0x7e, 0xb3, 0x10, 0x41, 0x1a, 0x93, 0x02, 0x36, 0x4f, 0x51, 0x43, 0x1b, 0xca, 0x6a, 0x74,
	0xb7, 0x9d, 0xf6, 0xa0, 0xeb, 0x15, 0x53, 0xbc, 0xeb, 0xd8, 0x90, 0xac, 0xdf, 0x8c, 0xd6, 0x61,
	0x02, 0xf2, 0xce, 0xab, 0x26, 0x6a, 0x68, 0xdc, 0xfc, 0x1a, 0xed, 0x9e, 0x91, 0xd3, 0xc9, 0xd9,
	0xc9, 0xf9, 0x97, 0x5f, 0x59, 0x06, 0x7c, 0xf4, 0x1d, 0x6f, 0xcd, 0x2c, 0x5e, 0xf9, 0xe1, 0xd1,
	0x41, 0xd5, 0xc9, 0x4a, 0x83, 0x49, 0xeb, 0x8c, 0x9c, 0xc2, 0x76, 0x35, 0x93, 0xad, 0xd7, 0xcd,
	0xe4, 0x1f, 0x03, 0xb5, 0x05, 0x8b, 0x19, 0x95, 0xec, 0x3c, 0x5a, 0x0d, 0xf0, 0x77, 0x23, 0xcf,
	0x6c, 0xb3, 0x60, 0xd7, 0x50, 0x7d, 0x4f, 0xbf, 0x19, 0xe8, 0x95, 0xf1, 0xbd, 0xe3, 0x0c, 0x8f,
	0x83, 0x43, 0xf7, 0xe9, 0x38, 0xe8, 0xbb, 0x4f, 0xc7, 0x1f, 0xf6, 0x86, 0xb0, 0xfe, 0xfc, 0xf1,
	0x2f, 0x3d, 0xd7, 0x39, 0x0c, 0xfa, 0xee, 0x60, 0x7c, 0xdb, 0x07, 0xbc, 0xe7, 0x3a, 0x47, 0x41,
	0xdf, 0x3d, 0x2c, 0xe3, 0xdb, 0xe0, 0xd0, 0x1d, 0x14, 0xaa, 0x5e, 0x70, 0xde, 0x1d, 0x3b, 0x83,
	0xa0, 0xef, 0x1e, 0x8d, 0x6f, 0x81, 0x53, 0xa4, 0x8f, 0x9d, 0xa0, 0xef, 0x3e, 0x29, 0x83, 0x6a,
	0xef, 0x7c, 0xe7, 0xc1, 0xfa, 0xb8, 0x37, 0x74, 0xbe, 0xbd, 0x0d, 0x1e, 0xbb, 0x63, 0x67, 0x78,
	0x7c, 0x87, 0xbc, 0xa6, 0x1e, 0xbe, 0x4f, 0xea, 0xdd, 0x99, 0x3e, 0x6a, 0x71, 0xf9, 0xec, 0x46,
	0x2a, 0x96, 0x2c, 0x2d, 0xf8, 0xa0, 0x72, 0x77, 0x89, 0x60, 0xb2, 0x22, 0x99, 0x9f, 0xa3, 0xb7,
	0x04, 0x7b, 0xb9, 0x88, 0x04, 0x23, 0xec, 0x92, 0x73, 0x65, 0x35, 0xbb, 0x86, 0xd3, 0x1a, 0x59,
	0x79, 0x66, 0x1f, 0x94, 0xd7, 0x53, 0x83, 0x31, 0x59, 0xa7, 0xeb, 0x19, 0x24, 0x52, 0x84, 0xd6,
	0xbd, 0xcd, 0x19, 0xe8, 0x2c, 0x26, 0x00, 0x9a, 0x27, 0x68, 0x8f, 0xcb, 0x13, 0x11, 0x5e, 0x45,
	0x8a, 0x85, 0x6a, 0x21, 0x98, 0xb5, 0x03, 0x74, 0xfd, 0xf2, 0x1e, 0x96, 0x67, 0xab, 0xe3, 0x98,
	0x6c, 0x08, 0x74, 0x1d, 0xf0, 0x78, 0x0b, 0xec, 0x5a, 0xab, 0x03, 0xf6, 0x26, 0x00, 0x6a, 0xd2,
	0x94, 0xc9, 0xd0, 0xda, 0xdd, 0x3c, 0x8c, 0xce, 0x62, 0x02, 0xa0, 0xd9, 0x45, 0xdb, 0x0b, 0x11,
	0x5b, 0x08, 0x38, 0x7b, 0x79, 0x66, 0xa3, 0x82, 0xb3, 0x10, 0x31, 0x26, 0x1a, 0xc2, 0x7f, 0x1b,
	0xe8, 0xd1, 0x5d, 0x0e, 0xbf, 0x10, 0x34, 0x4d, 0x99, 0xd0, 0x65, 0x42, 0x3e, 0x2d, 0xdf, 0x67,
	0xad, 0x8c, 0xce, 0x62, 0x02, 0xa0, 0xf9, 0x19, 0x6a, 0xeb, 0xf5, 0xf4, 0xc7, 0x34, 0xa6, 0xd1,
	0x7c, 0xe9, 0xd1, 0xb7, 0x2b, 0xd7, 0xd5, 0x40, 0x4c, 0xea, 0x54, 0xfd, 0x34, 0x99, 0x10, 0x5c,
	0x2c, 0xad, 0x5a, 0x7b, 0x9a, 0x90, 0xc6, 0xa4, 0x80, 0xcd, 0x2f, 0x50, 0x63, 0x4a, 0x15, 0x85,
	0x39, 0xb7, 0x07, 0x8f, 0x5e, 0xf3, 0x34, 0xd7, 0xae, 0x82, 0x2a, 0xaa, 0xaf, 0x82, 0x2a, 0x7a,
	0x79, 0x0f, 0xfe, 0xaa, 0x47, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0x10, 0x0d, 0x2c, 0x16, 0x34,
	0x06, 0x00, 0x00,
}
