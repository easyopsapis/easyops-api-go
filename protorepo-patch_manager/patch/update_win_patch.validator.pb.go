// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: update_win_patch.proto

package patch

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	math "math"
	regexp "regexp"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

var _regex_UpdateWinPatchRequest_PatchId = regexp.MustCompile(`^[0-9a-z]{13}$`)
var _regex_UpdateWinPatchRequest_ReleaseTime = regexp.MustCompile(`^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])[T ](2[0-3]|[0-1][0-9]):([0-5][0-9]):[0-5][0-9](\.[0-9]+)?(Z|[+-](?:2[0-3]|[0-1][0-9]):[0-5][0-9])?$`)

func (this *UpdateWinPatchRequest) Validate() error {
	if !_regex_UpdateWinPatchRequest_PatchId.MatchString(this.PatchId) {
		return github_com_mwitkow_go_proto_validators.FieldError("PatchId", fmt.Errorf(`value '%v' must be a string conforming to regex "^[0-9a-z]{13}$"`, this.PatchId))
	}
	if !_regex_UpdateWinPatchRequest_ReleaseTime.MatchString(this.ReleaseTime) {
		return github_com_mwitkow_go_proto_validators.FieldError("ReleaseTime", fmt.Errorf(`value '%v' must be a string conforming to regex "^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])[T ](2[0-3]|[0-1][0-9]):([0-5][0-9]):[0-5][0-9](\\.[0-9]+)?(Z|[+-](?:2[0-3]|[0-1][0-9]):[0-5][0-9])?$"`, this.ReleaseTime))
	}
	return nil
}
func (this *UpdateWinPatchResponse) Validate() error {
	return nil
}
func (this *UpdateWinPatchResponseWrapper) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
