// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: instance_search_all.proto

package cmdb_service_ctrl

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//InstanceSearchAll请求
type InstanceSearchAllRequest struct {
	//
	//模型对象ID
	ObjectId string `protobuf:"bytes,1,opt,name=objectId,proto3" json:"objectId" form:"objectId"`
	//
	//e.g.: { name: { $like: '%q%' } }, { $or: [{ name: { $like: '%q%' }}] }
	Query *types.Struct `protobuf:"bytes,2,opt,name=query,proto3" json:"query" form:"query"`
	//
	//e.g.: { instanceId: true, name: true }
	Fields *types.Struct `protobuf:"bytes,3,opt,name=fields,proto3" json:"fields" form:"fields"`
	//
	//当为 true 时，只搜索与我相关实例
	OnlyMyInstance bool `protobuf:"varint,4,opt,name=only_my_instance,json=onlyMyInstance,proto3" json:"only_my_instance" form:"only_my_instance"`
	//
	//对于关联的实例数据是否只获取 relation_view 中指定的属性, 这个字段为 true 时, 会覆盖 fields 字段中指定的二级字段设置
	OnlyRelationView bool `protobuf:"varint,5,opt,name=only_relation_view,json=onlyRelationView,proto3" json:"only_relation_view" form:"only_relation_view"`
	//
	//按字段排序, 留空默认按照实例ID降序排序(1表示升序, -1表示降序) e.g.: { instanceId: 1 }
	Sort *types.Struct `protobuf:"bytes,6,opt,name=sort,proto3" json:"sort" form:"sort"`
	//
	//按照权限过滤(通用实例都有 read, update, delete 权限控制, 主机实例在通用实例权限基础上有额外的 operate 权限, 应用实例在通用实例权限基础上有额外的 developClusterOperate, testClusterOperate, prereleaseClusterOperate, productionClusterOperate 权限) e.g.: [ "operate", "update" ]
	Permission           []string `protobuf:"bytes,7,rep,name=permission,proto3" json:"permission" form:"permission"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstanceSearchAllRequest) Reset()         { *m = InstanceSearchAllRequest{} }
func (m *InstanceSearchAllRequest) String() string { return proto.CompactTextString(m) }
func (*InstanceSearchAllRequest) ProtoMessage()    {}
func (*InstanceSearchAllRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfcf14e8a68bb69f, []int{0}
}
func (m *InstanceSearchAllRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceSearchAllRequest.Unmarshal(m, b)
}
func (m *InstanceSearchAllRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceSearchAllRequest.Marshal(b, m, deterministic)
}
func (m *InstanceSearchAllRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceSearchAllRequest.Merge(m, src)
}
func (m *InstanceSearchAllRequest) XXX_Size() int {
	return xxx_messageInfo_InstanceSearchAllRequest.Size(m)
}
func (m *InstanceSearchAllRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceSearchAllRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceSearchAllRequest proto.InternalMessageInfo

func (m *InstanceSearchAllRequest) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *InstanceSearchAllRequest) GetQuery() *types.Struct {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *InstanceSearchAllRequest) GetFields() *types.Struct {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *InstanceSearchAllRequest) GetOnlyMyInstance() bool {
	if m != nil {
		return m.OnlyMyInstance
	}
	return false
}

func (m *InstanceSearchAllRequest) GetOnlyRelationView() bool {
	if m != nil {
		return m.OnlyRelationView
	}
	return false
}

func (m *InstanceSearchAllRequest) GetSort() *types.Struct {
	if m != nil {
		return m.Sort
	}
	return nil
}

func (m *InstanceSearchAllRequest) GetPermission() []string {
	if m != nil {
		return m.Permission
	}
	return nil
}

//
//InstanceSearchAll返回
type InstanceSearchAllResponse struct {
	//
	//返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code" form:"code"`
	//
	//错误信息
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error" form:"error"`
	//
	//返回消息
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message" form:"message"`
	//
	//实例列表
	Data                 []*types.Struct `protobuf:"bytes,4,rep,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *InstanceSearchAllResponse) Reset()         { *m = InstanceSearchAllResponse{} }
func (m *InstanceSearchAllResponse) String() string { return proto.CompactTextString(m) }
func (*InstanceSearchAllResponse) ProtoMessage()    {}
func (*InstanceSearchAllResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfcf14e8a68bb69f, []int{1}
}
func (m *InstanceSearchAllResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceSearchAllResponse.Unmarshal(m, b)
}
func (m *InstanceSearchAllResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceSearchAllResponse.Marshal(b, m, deterministic)
}
func (m *InstanceSearchAllResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceSearchAllResponse.Merge(m, src)
}
func (m *InstanceSearchAllResponse) XXX_Size() int {
	return xxx_messageInfo_InstanceSearchAllResponse.Size(m)
}
func (m *InstanceSearchAllResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceSearchAllResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceSearchAllResponse proto.InternalMessageInfo

func (m *InstanceSearchAllResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *InstanceSearchAllResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *InstanceSearchAllResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *InstanceSearchAllResponse) GetData() []*types.Struct {
	if m != nil {
		return m.Data
	}
	return nil
}

//
//InstanceSearchAllApi返回
type InstanceSearchAllResponseWrapper struct {
	//
	//返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code" form:"code"`
	//
	//返回码解释
	CodeExplain string `protobuf:"bytes,2,opt,name=codeExplain,proto3" json:"codeExplain" form:"codeExplain"`
	//
	//错误详情
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error" form:"error"`
	//
	//返回数据
	Data                 *InstanceSearchAllResponse `protobuf:"bytes,4,opt,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *InstanceSearchAllResponseWrapper) Reset()         { *m = InstanceSearchAllResponseWrapper{} }
func (m *InstanceSearchAllResponseWrapper) String() string { return proto.CompactTextString(m) }
func (*InstanceSearchAllResponseWrapper) ProtoMessage()    {}
func (*InstanceSearchAllResponseWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfcf14e8a68bb69f, []int{2}
}
func (m *InstanceSearchAllResponseWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceSearchAllResponseWrapper.Unmarshal(m, b)
}
func (m *InstanceSearchAllResponseWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceSearchAllResponseWrapper.Marshal(b, m, deterministic)
}
func (m *InstanceSearchAllResponseWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceSearchAllResponseWrapper.Merge(m, src)
}
func (m *InstanceSearchAllResponseWrapper) XXX_Size() int {
	return xxx_messageInfo_InstanceSearchAllResponseWrapper.Size(m)
}
func (m *InstanceSearchAllResponseWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceSearchAllResponseWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceSearchAllResponseWrapper proto.InternalMessageInfo

func (m *InstanceSearchAllResponseWrapper) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *InstanceSearchAllResponseWrapper) GetCodeExplain() string {
	if m != nil {
		return m.CodeExplain
	}
	return ""
}

func (m *InstanceSearchAllResponseWrapper) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *InstanceSearchAllResponseWrapper) GetData() *InstanceSearchAllResponse {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*InstanceSearchAllRequest)(nil), "cmdb_service_ctrl.InstanceSearchAllRequest")
	proto.RegisterType((*InstanceSearchAllResponse)(nil), "cmdb_service_ctrl.InstanceSearchAllResponse")
	proto.RegisterType((*InstanceSearchAllResponseWrapper)(nil), "cmdb_service_ctrl.InstanceSearchAllResponseWrapper")
}

func init() { proto.RegisterFile("instance_search_all.proto", fileDescriptor_dfcf14e8a68bb69f) }

var fileDescriptor_dfcf14e8a68bb69f = []byte{
	// 578 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x5d, 0x6b, 0xd4, 0x40,
	0x14, 0x25, 0xee, 0x6e, 0xdb, 0x9d, 0x6a, 0x3f, 0x06, 0xb4, 0x69, 0xb5, 0x24, 0x8c, 0x22, 0xfb,
	0xd0, 0x64, 0xab, 0xc5, 0xa2, 0x22, 0x48, 0x03, 0x7d, 0x28, 0xe2, 0x83, 0x53, 0x50, 0xb0, 0x68,
	0x98, 0x4d, 0xa6, 0xe9, 0x68, 0x92, 0x49, 0x67, 0x66, 0xbb, 0xae, 0xe2, 0xbf, 0xf4, 0x39, 0x82,
	0x3f, 0x21, 0xcf, 0x7d, 0x90, 0x4c, 0x92, 0x6e, 0xfc, 0x68, 0xe9, 0x53, 0x66, 0xee, 0x39, 0xf7,
	0xcc, 0x3d, 0xf7, 0x40, 0xc0, 0x3a, 0x4b, 0xa5, 0x22, 0x69, 0x40, 0x7d, 0x49, 0x89, 0x08, 0x4e,
	0x7c, 0x12, 0xc7, 0x6e, 0x26, 0xb8, 0xe2, 0x70, 0x35, 0x48, 0xc2, 0x91, 0x2f, 0xa9, 0x38, 0x63,
	0x01, 0xf5, 0x03, 0x25, 0xe2, 0x0d, 0x27, 0x62, 0xea, 0x64, 0x3c, 0x72, 0x03, 0x9e, 0x0c, 0x23,
	0x1e, 0xf1, 0xa1, 0x66, 0x8e, 0xc6, 0xc7, 0xfa, 0xa6, 0x2f, 0xfa, 0x54, 0x29, 0x6c, 0xec, 0xb6,
	0xe8, 0xc9, 0x84, 0xa9, 0xcf, 0x7c, 0x32, 0x8c, 0xb8, 0xa3, 0x41, 0xe7, 0x8c, 0xc4, 0x2c, 0x24,
	0x8a, 0x0b, 0x39, 0xbc, 0x38, 0xd6, 0x7d, 0xf7, 0x22, 0xce, 0xa3, 0x98, 0xce, 0xd4, 0xa5, 0x12,
	0xe3, 0x40, 0x55, 0x28, 0x3a, 0xef, 0x00, 0xf3, 0xa0, 0x9e, 0xfa, 0x50, 0x0f, 0xbd, 0x17, 0xc7,
	0x98, 0x9e, 0x8e, 0xa9, 0x54, 0x10, 0x83, 0x05, 0x3e, 0xfa, 0x44, 0x03, 0x75, 0x10, 0x9a, 0x86,
	0x6d, 0x0c, 0xfa, 0xde, 0x6e, 0x91, 0x5b, 0xcb, 0xc7, 0x5c, 0x24, 0xcf, 0x51, 0x83, 0xa0, 0x5f,
	0x3f, 0x2d, 0x0b, 0x6c, 0x7e, 0x3c, 0x22, 0xce, 0xd7, 0x3d, 0xe7, 0xbd, 0xff, 0xe1, 0x68, 0xdb,
	0x79, 0xd6, 0x9c, 0xbf, 0x6d, 0x6f, 0xed, 0x3c, 0xfa, 0xfe, 0x00, 0x5f, 0xe8, 0xc0, 0x97, 0xa0,
	0x77, 0x3a, 0xa6, 0x62, 0x6a, 0xde, 0xb0, 0x8d, 0xc1, 0xe2, 0xe3, 0x35, 0xb7, 0x1a, 0xcf, 0x6d,
	0xc6, 0x73, 0x0f, 0xf5, 0x78, 0xde, 0x4a, 0x91, 0x5b, 0x37, 0xab, 0x97, 0x34, 0x1f, 0xe1, 0xaa,
	0x0f, 0x7a, 0x60, 0xee, 0x98, 0xd1, 0x38, 0x94, 0x66, 0xe7, 0x6a, 0x85, 0xd5, 0x22, 0xb7, 0x6e,
	0x55, 0x0a, 0x55, 0x03, 0xc2, 0x75, 0x27, 0xdc, 0x07, 0x2b, 0x3c, 0x8d, 0xa7, 0x7e, 0x32, 0xf5,
	0x9b, 0xc8, 0xcc, 0xae, 0x6d, 0x0c, 0x16, 0xbc, 0xbb, 0x45, 0x6e, 0xad, 0xd5, 0x06, 0xff, 0x62,
	0x20, 0xbc, 0x54, 0x96, 0x5e, 0x4f, 0x9b, 0x7d, 0xc1, 0x57, 0x00, 0x6a, 0x92, 0xa0, 0x31, 0x51,
	0x8c, 0xa7, 0xfe, 0x19, 0xa3, 0x13, 0xb3, 0xa7, 0x85, 0x36, 0x8b, 0xdc, 0x5a, 0x6f, 0x09, 0xfd,
	0xc1, 0x41, 0x58, 0xbf, 0x8f, 0xeb, 0xda, 0x5b, 0x46, 0x27, 0xf0, 0x05, 0xe8, 0x4a, 0x2e, 0x94,
	0x39, 0x77, 0xb5, 0xab, 0xe5, 0x22, 0xb7, 0x16, 0x2b, 0xdd, 0x92, 0x8e, 0xb0, 0xee, 0x82, 0x4f,
	0x00, 0xc8, 0xa8, 0x48, 0x98, 0x94, 0x8c, 0xa7, 0xe6, 0xbc, 0xdd, 0x19, 0xf4, 0xbd, 0xdb, 0x45,
	0x6e, 0xad, 0x56, 0xd4, 0x19, 0x86, 0x70, 0x8b, 0x88, 0x7e, 0x18, 0x60, 0xfd, 0x3f, 0xf1, 0xcb,
	0x8c, 0xa7, 0x92, 0xc2, 0xfb, 0xa0, 0x1b, 0xf0, 0x90, 0xea, 0xec, 0x7b, 0xed, 0x97, 0xcb, 0x2a,
	0xc2, 0x1a, 0x84, 0x0f, 0x41, 0x8f, 0x0a, 0xc1, 0x85, 0x0e, 0xb4, 0xdf, 0xce, 0x4d, 0x97, 0x11,
	0xae, 0x60, 0xb8, 0x05, 0xe6, 0x13, 0x2a, 0x25, 0x89, 0xa8, 0x0e, 0xae, 0xef, 0xc1, 0x22, 0xb7,
	0x96, 0x2a, 0x66, 0x0d, 0x20, 0xdc, 0x50, 0xca, 0x6d, 0x84, 0x44, 0x11, 0xb3, 0x6b, 0x77, 0xae,
	0xb9, 0x8d, 0x92, 0x8e, 0xb0, 0xee, 0x42, 0xe7, 0x06, 0xb0, 0x2f, 0xb5, 0xf5, 0x4e, 0x90, 0x2c,
	0xa3, 0xe2, 0x7a, 0xee, 0x9e, 0x82, 0xc5, 0xf2, 0xbb, 0xff, 0x25, 0x8b, 0x09, 0x4b, 0x6b, 0x8f,
	0x77, 0x8a, 0xdc, 0x82, 0x33, 0x6e, 0x0d, 0x22, 0xdc, 0xa6, 0xce, 0xf6, 0xd2, 0xb9, 0x7a, 0x2f,
	0x6f, 0x2e, 0x9c, 0x96, 0xb9, 0x6f, 0xb9, 0xff, 0xfc, 0x28, 0xdc, 0x4b, 0x9d, 0x5c, 0x62, 0x7f,
	0x34, 0xa7, 0xd7, 0xb4, 0xf3, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x2a, 0x21, 0x12, 0xea, 0x90, 0x04,
	0x00, 0x00,
}
