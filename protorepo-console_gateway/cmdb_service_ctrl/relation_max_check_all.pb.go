// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: relation_max_check_all.proto

package cmdb_service_ctrl

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//RelationMaxCheckAll请求
type RelationMaxCheckAllRequest struct {
	//
	//资源模型ID
	ObjectId string `protobuf:"bytes,1,opt,name=objectId,proto3" json:"objectId" form:"objectId"`
	//
	//资源模型关系ID
	RelationId string `protobuf:"bytes,2,opt,name=relation_id,json=relationId,proto3" json:"relation_id" form:"relation_id"`
	//
	//left_id或者right_id来指定资源模型在关系的哪一端
	RelationSideId string `protobuf:"bytes,3,opt,name=relation_side_id,json=relationSideId,proto3" json:"relation_side_id" form:"relation_side_id"`
	//
	//查询条件,与[实例搜索接口]的query字段说明一致
	Query *types.Struct `protobuf:"bytes,4,opt,name=query,proto3" json:"query" form:"query"`
	//
	//按字段排序, 留空默认按照实例ID降序排序(1表示升序, -1表示降序)
	Sort *types.Struct `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort" form:"sort"`
	//
	//按照权限过滤(通用实例都有`read`, `update`, `delete`权限控制, 主机实例在通用实例权限基础上有额外的`operate`权限, 应用实例在通用实例权限基础上有额外的`developClusterOperate`, `testClusterOperate`, `prereleaseClusterOperate`, `productionClusterOperate`权限)
	Permission           []string `protobuf:"bytes,6,rep,name=permission,proto3" json:"permission" form:"permission"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RelationMaxCheckAllRequest) Reset()         { *m = RelationMaxCheckAllRequest{} }
func (m *RelationMaxCheckAllRequest) String() string { return proto.CompactTextString(m) }
func (*RelationMaxCheckAllRequest) ProtoMessage()    {}
func (*RelationMaxCheckAllRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_785a848dfbdb6186, []int{0}
}
func (m *RelationMaxCheckAllRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelationMaxCheckAllRequest.Unmarshal(m, b)
}
func (m *RelationMaxCheckAllRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelationMaxCheckAllRequest.Marshal(b, m, deterministic)
}
func (m *RelationMaxCheckAllRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelationMaxCheckAllRequest.Merge(m, src)
}
func (m *RelationMaxCheckAllRequest) XXX_Size() int {
	return xxx_messageInfo_RelationMaxCheckAllRequest.Size(m)
}
func (m *RelationMaxCheckAllRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RelationMaxCheckAllRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RelationMaxCheckAllRequest proto.InternalMessageInfo

func (m *RelationMaxCheckAllRequest) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *RelationMaxCheckAllRequest) GetRelationId() string {
	if m != nil {
		return m.RelationId
	}
	return ""
}

func (m *RelationMaxCheckAllRequest) GetRelationSideId() string {
	if m != nil {
		return m.RelationSideId
	}
	return ""
}

func (m *RelationMaxCheckAllRequest) GetQuery() *types.Struct {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *RelationMaxCheckAllRequest) GetSort() *types.Struct {
	if m != nil {
		return m.Sort
	}
	return nil
}

func (m *RelationMaxCheckAllRequest) GetPermission() []string {
	if m != nil {
		return m.Permission
	}
	return nil
}

//
//RelationMaxCheckAll返回
type RelationMaxCheckAllResponse struct {
	//
	//返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code" form:"code"`
	//
	//错误信息
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error" form:"error"`
	//
	//返回消息
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message" form:"message"`
	//
	//数据列表
	Data                 []*RelationMaxCheckAllResponse_Data `protobuf:"bytes,4,rep,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *RelationMaxCheckAllResponse) Reset()         { *m = RelationMaxCheckAllResponse{} }
func (m *RelationMaxCheckAllResponse) String() string { return proto.CompactTextString(m) }
func (*RelationMaxCheckAllResponse) ProtoMessage()    {}
func (*RelationMaxCheckAllResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_785a848dfbdb6186, []int{1}
}
func (m *RelationMaxCheckAllResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelationMaxCheckAllResponse.Unmarshal(m, b)
}
func (m *RelationMaxCheckAllResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelationMaxCheckAllResponse.Marshal(b, m, deterministic)
}
func (m *RelationMaxCheckAllResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelationMaxCheckAllResponse.Merge(m, src)
}
func (m *RelationMaxCheckAllResponse) XXX_Size() int {
	return xxx_messageInfo_RelationMaxCheckAllResponse.Size(m)
}
func (m *RelationMaxCheckAllResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RelationMaxCheckAllResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RelationMaxCheckAllResponse proto.InternalMessageInfo

func (m *RelationMaxCheckAllResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RelationMaxCheckAllResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *RelationMaxCheckAllResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *RelationMaxCheckAllResponse) GetData() []*RelationMaxCheckAllResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type RelationMaxCheckAllResponse_Data struct {
	//
	//实例Id
	InstanceId string `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId" form:"instanceId"`
	//
	//_relation_is_max
	XRelationIsMax       bool     `protobuf:"varint,2,opt,name=_relation_is_max,json=RelationIsMax,proto3" json:"_relation_is_max" form:"_relation_is_max"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RelationMaxCheckAllResponse_Data) Reset()         { *m = RelationMaxCheckAllResponse_Data{} }
func (m *RelationMaxCheckAllResponse_Data) String() string { return proto.CompactTextString(m) }
func (*RelationMaxCheckAllResponse_Data) ProtoMessage()    {}
func (*RelationMaxCheckAllResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_785a848dfbdb6186, []int{1, 0}
}
func (m *RelationMaxCheckAllResponse_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelationMaxCheckAllResponse_Data.Unmarshal(m, b)
}
func (m *RelationMaxCheckAllResponse_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelationMaxCheckAllResponse_Data.Marshal(b, m, deterministic)
}
func (m *RelationMaxCheckAllResponse_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelationMaxCheckAllResponse_Data.Merge(m, src)
}
func (m *RelationMaxCheckAllResponse_Data) XXX_Size() int {
	return xxx_messageInfo_RelationMaxCheckAllResponse_Data.Size(m)
}
func (m *RelationMaxCheckAllResponse_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_RelationMaxCheckAllResponse_Data.DiscardUnknown(m)
}

var xxx_messageInfo_RelationMaxCheckAllResponse_Data proto.InternalMessageInfo

func (m *RelationMaxCheckAllResponse_Data) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *RelationMaxCheckAllResponse_Data) GetXRelationIsMax() bool {
	if m != nil {
		return m.XRelationIsMax
	}
	return false
}

//
//RelationMaxCheckAllApi返回
type RelationMaxCheckAllResponseWrapper struct {
	//
	//返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code" form:"code"`
	//
	//返回码解释
	CodeExplain string `protobuf:"bytes,2,opt,name=codeExplain,proto3" json:"codeExplain" form:"codeExplain"`
	//
	//错误详情
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error" form:"error"`
	//
	//返回数据
	Data                 *RelationMaxCheckAllResponse `protobuf:"bytes,4,opt,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *RelationMaxCheckAllResponseWrapper) Reset()         { *m = RelationMaxCheckAllResponseWrapper{} }
func (m *RelationMaxCheckAllResponseWrapper) String() string { return proto.CompactTextString(m) }
func (*RelationMaxCheckAllResponseWrapper) ProtoMessage()    {}
func (*RelationMaxCheckAllResponseWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_785a848dfbdb6186, []int{2}
}
func (m *RelationMaxCheckAllResponseWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelationMaxCheckAllResponseWrapper.Unmarshal(m, b)
}
func (m *RelationMaxCheckAllResponseWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelationMaxCheckAllResponseWrapper.Marshal(b, m, deterministic)
}
func (m *RelationMaxCheckAllResponseWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelationMaxCheckAllResponseWrapper.Merge(m, src)
}
func (m *RelationMaxCheckAllResponseWrapper) XXX_Size() int {
	return xxx_messageInfo_RelationMaxCheckAllResponseWrapper.Size(m)
}
func (m *RelationMaxCheckAllResponseWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_RelationMaxCheckAllResponseWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_RelationMaxCheckAllResponseWrapper proto.InternalMessageInfo

func (m *RelationMaxCheckAllResponseWrapper) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RelationMaxCheckAllResponseWrapper) GetCodeExplain() string {
	if m != nil {
		return m.CodeExplain
	}
	return ""
}

func (m *RelationMaxCheckAllResponseWrapper) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *RelationMaxCheckAllResponseWrapper) GetData() *RelationMaxCheckAllResponse {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*RelationMaxCheckAllRequest)(nil), "cmdb_service_ctrl.RelationMaxCheckAllRequest")
	proto.RegisterType((*RelationMaxCheckAllResponse)(nil), "cmdb_service_ctrl.RelationMaxCheckAllResponse")
	proto.RegisterType((*RelationMaxCheckAllResponse_Data)(nil), "cmdb_service_ctrl.RelationMaxCheckAllResponse.Data")
	proto.RegisterType((*RelationMaxCheckAllResponseWrapper)(nil), "cmdb_service_ctrl.RelationMaxCheckAllResponseWrapper")
}

func init() { proto.RegisterFile("relation_max_check_all.proto", fileDescriptor_785a848dfbdb6186) }

var fileDescriptor_785a848dfbdb6186 = []byte{
	// 630 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0x4d, 0x4f, 0x13, 0x4f,
	0x18, 0x4f, 0x69, 0xcb, 0x1f, 0xa6, 0x7f, 0xa1, 0x4c, 0xa2, 0x6c, 0x0a, 0x66, 0x9b, 0x91, 0x98,
	0x6a, 0xe8, 0x16, 0xa8, 0x12, 0x35, 0x46, 0x43, 0xc5, 0x43, 0x0f, 0x5c, 0x86, 0x18, 0x8d, 0x04,
	0x36, 0xd3, 0xdd, 0x61, 0x59, 0xd9, 0xed, 0x94, 0x99, 0x29, 0x54, 0x09, 0x89, 0x1f, 0xc0, 0xbb,
	0xdf, 0x6e, 0x4d, 0xbc, 0x78, 0xdf, 0x4f, 0x60, 0x76, 0xf6, 0x35, 0x88, 0x0d, 0x9e, 0x76, 0x76,
	0x7e, 0x2f, 0xf3, 0xcc, 0xf3, 0x7b, 0x06, 0xac, 0x72, 0xea, 0x11, 0xe9, 0xb2, 0xa1, 0xe9, 0x93,
	0x89, 0x69, 0x9d, 0x50, 0xeb, 0xd4, 0x24, 0x9e, 0x67, 0x8c, 0x38, 0x93, 0x0c, 0x2e, 0x59, 0xbe,
	0x3d, 0x30, 0x05, 0xe5, 0xe7, 0xae, 0x45, 0x4d, 0x4b, 0x72, 0xaf, 0xd1, 0x76, 0x5c, 0x79, 0x32,
	0x1e, 0x18, 0x16, 0xf3, 0x3b, 0x0e, 0x73, 0x58, 0x47, 0x31, 0x07, 0xe3, 0x63, 0xf5, 0xa7, 0x7e,
	0xd4, 0x2a, 0x76, 0x68, 0x6c, 0x17, 0xe8, 0xfe, 0x85, 0x2b, 0x4f, 0xd9, 0x45, 0xc7, 0x61, 0x6d,
	0x05, 0xb6, 0xcf, 0x89, 0xe7, 0xda, 0x44, 0x32, 0x2e, 0x3a, 0xd9, 0x32, 0xd1, 0xad, 0x3a, 0x8c,
	0x39, 0x1e, 0xcd, 0xdd, 0x85, 0xe4, 0x63, 0x4b, 0xc6, 0x28, 0xfa, 0x55, 0x06, 0x0d, 0x9c, 0x14,
	0xbe, 0x47, 0x26, 0x6f, 0xa2, 0xb2, 0x77, 0x3c, 0x0f, 0xd3, 0xb3, 0x31, 0x15, 0x12, 0x62, 0x30,
	0xc7, 0x06, 0x9f, 0xa8, 0x25, 0xfb, 0xb6, 0x56, 0x6a, 0x96, 0x5a, 0xf3, 0xbd, 0xed, 0x30, 0xd0,
	0x17, 0x8f, 0x19, 0xf7, 0x5f, 0xa0, 0x14, 0x41, 0x3f, 0x7f, 0xe8, 0x3a, 0xb8, 0x7f, 0x74, 0x40,
	0xda, 0x5f, 0x76, 0xda, 0x1f, 0xcd, 0xc3, 0x83, 0x8d, 0xf6, 0xf3, 0x74, 0x7d, 0xb9, 0xb1, 0xde,
	0xdd, 0xbc, 0x5a, 0xc3, 0x99, 0x0f, 0x7c, 0x07, 0x6a, 0x59, 0xab, 0x5c, 0x5b, 0x9b, 0x51, 0xb6,
	0x4f, 0xc2, 0x40, 0x87, 0xb1, 0x6d, 0x01, 0x8c, 0x9c, 0x1b, 0x40, 0xbb, 0xd9, 0xf9, 0xf1, 0x1a,
	0x06, 0x29, 0xb7, 0x6f, 0xc3, 0x13, 0x50, 0xcf, 0x94, 0xc2, 0xb5, 0x69, 0xe4, 0x5d, 0x56, 0xde,
	0xaf, 0xc2, 0x40, 0x5f, 0xbe, 0xe6, 0x9d, 0x30, 0x6e, 0x55, 0xfa, 0x42, 0xaa, 0xda, 0x77, 0x6d,
	0xda, 0xb7, 0xe1, 0x6b, 0x50, 0x3d, 0x1b, 0x53, 0xfe, 0x59, 0xab, 0x34, 0x4b, 0xad, 0xda, 0xd6,
	0xb2, 0x11, 0x77, 0xd8, 0x48, 0x3b, 0x6c, 0xec, 0xab, 0x0e, 0xf7, 0xea, 0x61, 0xa0, 0xff, 0x1f,
	0x9f, 0xab, 0xf8, 0x08, 0xc7, 0x3a, 0xf8, 0x12, 0x54, 0x04, 0xe3, 0x52, 0xab, 0x4e, 0xd7, 0x2f,
	0x86, 0x81, 0x5e, 0x8b, 0xf5, 0x11, 0x1d, 0x61, 0xa5, 0x82, 0x4f, 0x01, 0x18, 0x51, 0xee, 0xbb,
	0x42, 0xb8, 0x6c, 0xa8, 0xcd, 0x36, 0xcb, 0xad, 0xf9, 0xde, 0xdd, 0x30, 0xd0, 0x97, 0x62, 0x6a,
	0x8e, 0x21, 0x5c, 0x20, 0xa2, 0x6f, 0x65, 0xb0, 0x72, 0x63, 0xd2, 0x62, 0xc4, 0x86, 0x82, 0xc2,
	0x07, 0xa0, 0x62, 0x31, 0x9b, 0xaa, 0x98, 0xab, 0xc5, 0xb3, 0xa3, 0x5d, 0x84, 0x15, 0x08, 0x1f,
	0x82, 0x2a, 0xe5, 0x9c, 0xf1, 0x24, 0xb5, 0xc2, 0x0d, 0xd5, 0x36, 0xc2, 0x31, 0x0c, 0xd7, 0xc1,
	0x7f, 0x3e, 0x15, 0x82, 0x38, 0x34, 0xc9, 0x00, 0x86, 0x81, 0xbe, 0x10, 0x33, 0x13, 0x00, 0xe1,
	0x94, 0x02, 0x3f, 0x80, 0x8a, 0x4d, 0x24, 0xd1, 0x2a, 0xcd, 0x72, 0xab, 0xb6, 0xd5, 0x35, 0xfe,
	0x78, 0x2b, 0xc6, 0x94, 0xc2, 0x8d, 0x5d, 0x22, 0x49, 0xb1, 0xde, 0xc8, 0x0a, 0x61, 0xe5, 0xd8,
	0xf8, 0x5e, 0x02, 0x95, 0x08, 0x87, 0x7d, 0x00, 0xdc, 0xa1, 0x90, 0x64, 0x68, 0xd1, 0x6c, 0x94,
	0x1f, 0xe5, 0x4d, 0xcb, 0xb1, 0x68, 0x22, 0xea, 0x60, 0xe1, 0x28, 0x19, 0x84, 0xc3, 0xcb, 0xcd,
	0xee, 0xd5, 0x1a, 0x2e, 0x88, 0xe1, 0x2e, 0xa8, 0x9b, 0xf9, 0x8c, 0x8a, 0xe8, 0xb9, 0xab, 0x76,
	0xcc, 0xf5, 0x56, 0xf2, 0x41, 0xbb, 0xce, 0x40, 0xf8, 0x4e, 0x7a, 0x87, 0xbe, 0xd8, 0x23, 0x13,
	0xf4, 0x75, 0x06, 0xa0, 0x29, 0xb7, 0x7a, 0xcf, 0xc9, 0x68, 0x44, 0xf9, 0xed, 0x52, 0x79, 0x06,
	0x6a, 0xd1, 0xf7, 0xed, 0x64, 0xe4, 0x11, 0x77, 0x98, 0x64, 0x73, 0x2f, 0x7f, 0x51, 0x05, 0x10,
	0xe1, 0x22, 0x35, 0xcf, 0xb3, 0x3c, 0x3d, 0xcf, 0xfd, 0x2c, 0xa1, 0x68, 0x62, 0x8d, 0x7f, 0x4b,
	0xe8, 0x2f, 0xe1, 0x0c, 0x66, 0xd5, 0xc0, 0x77, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0x1c, 0x55,
	0xb9, 0x8d, 0x3a, 0x05, 0x00, 0x00,
}
