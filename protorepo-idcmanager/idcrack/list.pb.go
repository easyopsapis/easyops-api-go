// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: list.proto

package idcrack

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	idcmanager "github.com/easyopsapis/easyops-api-go/protorepo-models/easyops/model/idcmanager"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//ListIDCRack请求
type ListIDCRackRequest struct {
	//
	//机柜ID列表，以,分割
	IdcrackIds           string   `protobuf:"bytes,1,opt,name=idcrackIds,proto3" json:"idcrackIds" form:"idcrackIds"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListIDCRackRequest) Reset()         { *m = ListIDCRackRequest{} }
func (m *ListIDCRackRequest) String() string { return proto.CompactTextString(m) }
func (*ListIDCRackRequest) ProtoMessage()    {}
func (*ListIDCRackRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_af793ce248ee1bf0, []int{0}
}
func (m *ListIDCRackRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListIDCRackRequest.Unmarshal(m, b)
}
func (m *ListIDCRackRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListIDCRackRequest.Marshal(b, m, deterministic)
}
func (m *ListIDCRackRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListIDCRackRequest.Merge(m, src)
}
func (m *ListIDCRackRequest) XXX_Size() int {
	return xxx_messageInfo_ListIDCRackRequest.Size(m)
}
func (m *ListIDCRackRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListIDCRackRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListIDCRackRequest proto.InternalMessageInfo

func (m *ListIDCRackRequest) GetIdcrackIds() string {
	if m != nil {
		return m.IdcrackIds
	}
	return ""
}

//
//ListIDCRack返回
type ListIDCRackResponse struct {
	//
	//页数
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page" form:"page"`
	//
	//页大小
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size" form:"page_size"`
	//
	//总数
	Total int32 `protobuf:"varint,3,opt,name=total,proto3" json:"total" form:"total"`
	//
	//数据列表
	List                 []*ListIDCRackResponse_List `protobuf:"bytes,4,rep,name=list,proto3" json:"list" form:"list"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ListIDCRackResponse) Reset()         { *m = ListIDCRackResponse{} }
func (m *ListIDCRackResponse) String() string { return proto.CompactTextString(m) }
func (*ListIDCRackResponse) ProtoMessage()    {}
func (*ListIDCRackResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_af793ce248ee1bf0, []int{1}
}
func (m *ListIDCRackResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListIDCRackResponse.Unmarshal(m, b)
}
func (m *ListIDCRackResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListIDCRackResponse.Marshal(b, m, deterministic)
}
func (m *ListIDCRackResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListIDCRackResponse.Merge(m, src)
}
func (m *ListIDCRackResponse) XXX_Size() int {
	return xxx_messageInfo_ListIDCRackResponse.Size(m)
}
func (m *ListIDCRackResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListIDCRackResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListIDCRackResponse proto.InternalMessageInfo

func (m *ListIDCRackResponse) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListIDCRackResponse) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListIDCRackResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ListIDCRackResponse) GetList() []*ListIDCRackResponse_List {
	if m != nil {
		return m.List
	}
	return nil
}

type ListIDCRackResponse_List struct {
	//
	//所在的机房
	Idc *idcmanager.IDC `protobuf:"bytes,1,opt,name=idc,proto3" json:"idc" form:"idc"`
	//
	//机柜上的主机
	Hosts []*idcmanager.Host `protobuf:"bytes,2,rep,name=hosts,proto3" json:"hosts" form:"hosts"`
	//
	//机柜上的交换机
	Switchs []*idcmanager.Switch `protobuf:"bytes,3,rep,name=switchs,proto3" json:"switchs" form:"switchs"`
	//
	//机柜上的路由器
	Routers []*idcmanager.Router `protobuf:"bytes,4,rep,name=routers,proto3" json:"routers" form:"routers"`
	//
	//机柜上的防火墙
	Firewalls []*idcmanager.Firewall `protobuf:"bytes,5,rep,name=firewalls,proto3" json:"firewalls" form:"firewalls"`
	//
	//机柜ID
	InstanceId string `protobuf:"bytes,6,opt,name=instanceId,proto3" json:"instanceId" form:"instanceId"`
	//
	//机柜名称
	Name string `protobuf:"bytes,7,opt,name=name,proto3" json:"name" form:"name"`
	//
	//机柜编号
	Code string `protobuf:"bytes,8,opt,name=code,proto3" json:"code" form:"code"`
	//
	//机柜状态
	Status string `protobuf:"bytes,9,opt,name=status,proto3" json:"status" form:"status"`
	//
	//机柜类型
	Type string `protobuf:"bytes,10,opt,name=type,proto3" json:"type" form:"type"`
	//
	//机柜U数
	Unum int32 `protobuf:"varint,11,opt,name=unum,proto3" json:"unum" form:"unum"`
	//
	//空闲U位数
	FreeUnum int32 `protobuf:"varint,12,opt,name=freeUnum,proto3" json:"freeUnum" form:"freeUnum"`
	//
	//备注
	Memo string `protobuf:"bytes,13,opt,name=memo,proto3" json:"memo" form:"memo"`
	//
	//机柜部局
	Layout []*ListIDCRackResponse_List_Layout `protobuf:"bytes,14,rep,name=layout,proto3" json:"layout" form:"layout"`
	//
	//创建时间
	Ctime string `protobuf:"bytes,15,opt,name=ctime,proto3" json:"ctime" form:"ctime"`
	//
	//创建者
	Creator              string   `protobuf:"bytes,16,opt,name=creator,proto3" json:"creator" form:"creator"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListIDCRackResponse_List) Reset()         { *m = ListIDCRackResponse_List{} }
func (m *ListIDCRackResponse_List) String() string { return proto.CompactTextString(m) }
func (*ListIDCRackResponse_List) ProtoMessage()    {}
func (*ListIDCRackResponse_List) Descriptor() ([]byte, []int) {
	return fileDescriptor_af793ce248ee1bf0, []int{1, 0}
}
func (m *ListIDCRackResponse_List) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListIDCRackResponse_List.Unmarshal(m, b)
}
func (m *ListIDCRackResponse_List) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListIDCRackResponse_List.Marshal(b, m, deterministic)
}
func (m *ListIDCRackResponse_List) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListIDCRackResponse_List.Merge(m, src)
}
func (m *ListIDCRackResponse_List) XXX_Size() int {
	return xxx_messageInfo_ListIDCRackResponse_List.Size(m)
}
func (m *ListIDCRackResponse_List) XXX_DiscardUnknown() {
	xxx_messageInfo_ListIDCRackResponse_List.DiscardUnknown(m)
}

var xxx_messageInfo_ListIDCRackResponse_List proto.InternalMessageInfo

func (m *ListIDCRackResponse_List) GetIdc() *idcmanager.IDC {
	if m != nil {
		return m.Idc
	}
	return nil
}

func (m *ListIDCRackResponse_List) GetHosts() []*idcmanager.Host {
	if m != nil {
		return m.Hosts
	}
	return nil
}

func (m *ListIDCRackResponse_List) GetSwitchs() []*idcmanager.Switch {
	if m != nil {
		return m.Switchs
	}
	return nil
}

func (m *ListIDCRackResponse_List) GetRouters() []*idcmanager.Router {
	if m != nil {
		return m.Routers
	}
	return nil
}

func (m *ListIDCRackResponse_List) GetFirewalls() []*idcmanager.Firewall {
	if m != nil {
		return m.Firewalls
	}
	return nil
}

func (m *ListIDCRackResponse_List) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *ListIDCRackResponse_List) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListIDCRackResponse_List) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ListIDCRackResponse_List) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ListIDCRackResponse_List) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ListIDCRackResponse_List) GetUnum() int32 {
	if m != nil {
		return m.Unum
	}
	return 0
}

func (m *ListIDCRackResponse_List) GetFreeUnum() int32 {
	if m != nil {
		return m.FreeUnum
	}
	return 0
}

func (m *ListIDCRackResponse_List) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *ListIDCRackResponse_List) GetLayout() []*ListIDCRackResponse_List_Layout {
	if m != nil {
		return m.Layout
	}
	return nil
}

func (m *ListIDCRackResponse_List) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

func (m *ListIDCRackResponse_List) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type ListIDCRackResponse_List_Layout struct {
	//
	//设备ID
	InstanceId string `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId" form:"instanceId"`
	//
	//设备类型(host,switch,router,firewall,disable)
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type" form:"type"`
	//
	//起始U位
	StartU int32 `protobuf:"varint,3,opt,name=startU,proto3" json:"startU" form:"startU"`
	//
	//占用U位
	OccupiedU            int32    `protobuf:"varint,4,opt,name=occupiedU,proto3" json:"occupiedU" form:"occupiedU"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListIDCRackResponse_List_Layout) Reset()         { *m = ListIDCRackResponse_List_Layout{} }
func (m *ListIDCRackResponse_List_Layout) String() string { return proto.CompactTextString(m) }
func (*ListIDCRackResponse_List_Layout) ProtoMessage()    {}
func (*ListIDCRackResponse_List_Layout) Descriptor() ([]byte, []int) {
	return fileDescriptor_af793ce248ee1bf0, []int{1, 0, 0}
}
func (m *ListIDCRackResponse_List_Layout) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListIDCRackResponse_List_Layout.Unmarshal(m, b)
}
func (m *ListIDCRackResponse_List_Layout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListIDCRackResponse_List_Layout.Marshal(b, m, deterministic)
}
func (m *ListIDCRackResponse_List_Layout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListIDCRackResponse_List_Layout.Merge(m, src)
}
func (m *ListIDCRackResponse_List_Layout) XXX_Size() int {
	return xxx_messageInfo_ListIDCRackResponse_List_Layout.Size(m)
}
func (m *ListIDCRackResponse_List_Layout) XXX_DiscardUnknown() {
	xxx_messageInfo_ListIDCRackResponse_List_Layout.DiscardUnknown(m)
}

var xxx_messageInfo_ListIDCRackResponse_List_Layout proto.InternalMessageInfo

func (m *ListIDCRackResponse_List_Layout) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *ListIDCRackResponse_List_Layout) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ListIDCRackResponse_List_Layout) GetStartU() int32 {
	if m != nil {
		return m.StartU
	}
	return 0
}

func (m *ListIDCRackResponse_List_Layout) GetOccupiedU() int32 {
	if m != nil {
		return m.OccupiedU
	}
	return 0
}

//
//ListIDCRackApi返回
type ListIDCRackResponseWrapper struct {
	//
	//返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code" form:"code"`
	//
	//返回码解释
	CodeExplain string `protobuf:"bytes,2,opt,name=codeExplain,proto3" json:"codeExplain" form:"codeExplain"`
	//
	//错误详情
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error" form:"error"`
	//
	//返回数据
	Data                 *ListIDCRackResponse `protobuf:"bytes,4,opt,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ListIDCRackResponseWrapper) Reset()         { *m = ListIDCRackResponseWrapper{} }
func (m *ListIDCRackResponseWrapper) String() string { return proto.CompactTextString(m) }
func (*ListIDCRackResponseWrapper) ProtoMessage()    {}
func (*ListIDCRackResponseWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_af793ce248ee1bf0, []int{2}
}
func (m *ListIDCRackResponseWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListIDCRackResponseWrapper.Unmarshal(m, b)
}
func (m *ListIDCRackResponseWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListIDCRackResponseWrapper.Marshal(b, m, deterministic)
}
func (m *ListIDCRackResponseWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListIDCRackResponseWrapper.Merge(m, src)
}
func (m *ListIDCRackResponseWrapper) XXX_Size() int {
	return xxx_messageInfo_ListIDCRackResponseWrapper.Size(m)
}
func (m *ListIDCRackResponseWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_ListIDCRackResponseWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_ListIDCRackResponseWrapper proto.InternalMessageInfo

func (m *ListIDCRackResponseWrapper) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListIDCRackResponseWrapper) GetCodeExplain() string {
	if m != nil {
		return m.CodeExplain
	}
	return ""
}

func (m *ListIDCRackResponseWrapper) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *ListIDCRackResponseWrapper) GetData() *ListIDCRackResponse {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*ListIDCRackRequest)(nil), "idcrack.ListIDCRackRequest")
	proto.RegisterType((*ListIDCRackResponse)(nil), "idcrack.ListIDCRackResponse")
	proto.RegisterType((*ListIDCRackResponse_List)(nil), "idcrack.ListIDCRackResponse.List")
	proto.RegisterType((*ListIDCRackResponse_List_Layout)(nil), "idcrack.ListIDCRackResponse.List.Layout")
	proto.RegisterType((*ListIDCRackResponseWrapper)(nil), "idcrack.ListIDCRackResponseWrapper")
}

func init() { proto.RegisterFile("list.proto", fileDescriptor_af793ce248ee1bf0) }

var fileDescriptor_af793ce248ee1bf0 = []byte{
	// 1035 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xdb, 0x6e, 0xdb, 0xb6,
	0x1b, 0xff, 0x3b, 0x71, 0x0e, 0xa6, 0xdb, 0xc4, 0x61, 0xda, 0x3f, 0x04, 0x63, 0x80, 0x53, 0x36,
	0x18, 0xe4, 0x34, 0x92, 0x0f, 0x59, 0xb7, 0x26, 0x37, 0x59, 0xdd, 0xae, 0x68, 0x80, 0x60, 0xc3,
	0x98, 0x05, 0x03, 0xaa, 0x3a, 0x05, 0x23, 0x33, 0x8e, 0x10, 0xcb, 0xd4, 0x48, 0x7a, 0x59, 0x4e,
	0x2f, 0x34, 0x60, 0x2f, 0xb1, 0x3d, 0x45, 0x6f, 0x3c, 0x60, 0x17, 0xbb, 0xdb, 0x8d, 0x9f, 0x60,
	0xe0, 0x27, 0xd9, 0x52, 0x8c, 0xa0, 0xbb, 0xc9, 0x95, 0xc8, 0xef, 0x77, 0x30, 0x3f, 0xf2, 0x47,
	0x1a, 0xa1, 0x5e, 0xa0, 0xb4, 0x1b, 0x49, 0xa1, 0x05, 0x5e, 0x08, 0x3a, 0xbe, 0x64, 0xfe, 0x59,
	0xd9, 0xe9, 0x06, 0xfa, 0x74, 0x70, 0xec, 0xfa, 0x22, 0xac, 0x75, 0x45, 0x57, 0xd4, 0x00, 0x3f,
	0x1e, 0x9c, 0xc0, 0x0c, 0x26, 0x30, 0x8a, 0x75, 0xe5, 0x6f, 0xbb, 0xc2, 0xe5, 0x4c, 0x5d, 0x88,
	0x48, 0xb9, 0x3d, 0xe1, 0xb3, 0x5e, 0xcd, 0x17, 0x7d, 0x2d, 0x99, 0xaf, 0x55, 0xac, 0x94, 0x3c,
	0x12, 0x4e, 0x28, 0x3a, 0xbc, 0xa7, 0x6a, 0x09, 0xb1, 0x06, 0xd3, 0x5a, 0xd0, 0xf1, 0x43, 0xd6,
	0x67, 0x5d, 0x2e, 0xcd, 0x30, 0xf1, 0xfb, 0xee, 0x5e, 0xfc, 0x4e, 0xc5, 0xb8, 0xb1, 0xf2, 0xf7,
	0xf7, 0x62, 0xa8, 0xce, 0x03, 0xed, 0x9f, 0xde, 0xab, 0xa5, 0x14, 0x03, 0xcd, 0x65, 0x62, 0x79,
	0x70, 0x2f, 0x96, 0x27, 0x81, 0xe4, 0xe7, 0xac, 0xd7, 0x4b, 0x4c, 0xbf, 0xcc, 0x1c, 0x65, 0x78,
	0x1e, 0xe8, 0x33, 0x71, 0x5e, 0xeb, 0x0a, 0x07, 0x40, 0xe7, 0x67, 0xd6, 0x0b, 0x3a, 0x4c, 0x0b,
	0xa9, 0x6a, 0x93, 0x61, 0xac, 0x23, 0xc7, 0x08, 0xef, 0x07, 0x4a, 0xef, 0xbd, 0x7e, 0x45, 0x99,
	0x7f, 0x46, 0xf9, 0x4f, 0x03, 0xae, 0x34, 0xde, 0x47, 0x28, 0xc9, 0xc8, 0x5e, 0x47, 0x59, 0xb9,
	0xb5, 0x9c, 0x5d, 0x68, 0x6d, 0x8e, 0x86, 0x95, 0x95, 0x13, 0x21, 0xc3, 0x1d, 0x92, 0x62, 0xe4,
	0xaf, 0x3f, 0x2b, 0xab, 0x68, 0xe5, 0xc8, 0xf6, 0x8e, 0x36, 0xdb, 0x1b, 0xef, 0x37, 0xab, 0x1b,
	0x30, 0x58, 0xa7, 0x19, 0x3d, 0xf9, 0x58, 0x44, 0xab, 0xb7, 0x7e, 0x44, 0x45, 0xa2, 0xaf, 0x38,
	0xae, 0xa2, 0x7c, 0xc4, 0xba, 0x1c, 0xfc, 0xe7, 0x5a, 0x8f, 0x47, 0xc3, 0x4a, 0x31, 0xf6, 0x37,
	0x55, 0xe3, 0x3c, 0x53, 0xfa, 0x1f, 0x05, 0x0a, 0xfe, 0x0a, 0x15, 0xcc, 0xf7, 0x83, 0x0a, 0x2e,
	0xb9, 0x35, 0x03, 0xfc, 0xf2, 0x68, 0x58, 0x29, 0xa5, 0x7c, 0x80, 0xc6, 0xa2, 0x45, 0x53, 0x39,
	0x08, 0x2e, 0x39, 0xfe, 0x1c, 0xcd, 0x69, 0xa1, 0x59, 0xcf, 0x9a, 0x05, 0x51, 0x69, 0x34, 0xac,
	0x3c, 0x88, 0x45, 0x50, 0x26, 0x34, 0x86, 0xf1, 0x1b, 0x94, 0x37, 0x37, 0xc4, 0xca, 0xaf, 0xcd,
	0xda, 0xc5, 0xe6, 0x13, 0x37, 0x59, 0xbe, 0x7b, 0xc7, 0xba, 0xa1, 0xd6, 0x5a, 0x4e, 0x97, 0x6b,
	0x84, 0x84, 0x82, 0xbe, 0xfc, 0x4f, 0x01, 0xe5, 0x0d, 0x8e, 0x1b, 0x68, 0x36, 0xe8, 0xf8, 0xd0,
	0x5b, 0xb1, 0xb9, 0xec, 0xa6, 0x27, 0xe7, 0xee, 0xbd, 0x7e, 0xd5, 0x5a, 0x1a, 0x0d, 0x2b, 0x68,
	0xb2, 0x99, 0x84, 0x1a, 0x2e, 0x7e, 0x81, 0xe6, 0x4c, 0x98, 0x95, 0x35, 0x03, 0x8b, 0x28, 0x65,
	0x45, 0x6f, 0x85, 0xd2, 0xd9, 0xd5, 0x03, 0x91, 0xd0, 0x58, 0x80, 0xbf, 0x46, 0x0b, 0x71, 0x6a,
	0x95, 0x35, 0x0b, 0x5a, 0x9c, 0xd5, 0x1e, 0x00, 0xd4, 0xc2, 0xa3, 0x61, 0x65, 0x29, 0x56, 0x27,
	0x64, 0x42, 0xc7, 0x32, 0xe3, 0x10, 0x87, 0x54, 0x25, 0x5b, 0x70, 0xcb, 0x81, 0x02, 0x94, 0x75,
	0x48, 0xc8, 0x84, 0x8e, 0x65, 0xf8, 0x2d, 0x2a, 0x8c, 0x33, 0xa9, 0xac, 0x39, 0xf0, 0x78, 0x94,
	0xf5, 0x78, 0x93, 0x80, 0xad, 0x47, 0xe9, 0xc1, 0x4d, 0x04, 0x84, 0xa6, 0x62, 0xbc, 0x87, 0x50,
	0xd0, 0x57, 0x9a, 0xf5, 0x7d, 0xbe, 0xd7, 0xb1, 0xe6, 0x21, 0x7d, 0xd5, 0x4c, 0xfa, 0x26, 0x98,
	0x39, 0xee, 0x12, 0x5a, 0x3a, 0xf2, 0xea, 0xce, 0x36, 0x73, 0x2e, 0xdb, 0x57, 0x8d, 0xad, 0x1b,
	0x13, 0xbd, 0x09, 0x01, 0x3f, 0x45, 0xf9, 0x3e, 0x0b, 0xb9, 0xb5, 0x00, 0x26, 0x99, 0x33, 0x33,
	0x55, 0x42, 0x01, 0x34, 0x24, 0x5f, 0x74, 0xb8, 0xb5, 0x38, 0x4d, 0x32, 0x55, 0x42, 0x01, 0xc4,
	0x55, 0x34, 0xaf, 0x34, 0xd3, 0x03, 0x65, 0x15, 0x80, 0xb6, 0x32, 0x1a, 0x56, 0x1e, 0x26, 0xbb,
	0x09, 0x75, 0x42, 0x13, 0x82, 0xf1, 0xd3, 0x17, 0x11, 0xb7, 0xd0, 0xb4, 0x9f, 0xa9, 0x12, 0x0a,
	0xa0, 0x21, 0x0d, 0xfa, 0x83, 0xd0, 0x2a, 0x42, 0x2e, 0x33, 0x24, 0x53, 0x25, 0x14, 0x40, 0x5c,
	0x43, 0x8b, 0x27, 0x92, 0xf3, 0x43, 0x43, 0x7c, 0x00, 0xc4, 0xd5, 0xd1, 0xb0, 0xb2, 0x9c, 0x6c,
	0x5e, 0x82, 0x10, 0x3a, 0x21, 0x19, 0xd7, 0x90, 0x87, 0xc2, 0x7a, 0x38, 0xfd, 0xd3, 0xa6, 0x4a,
	0x28, 0x80, 0xf8, 0x00, 0xcd, 0xf7, 0xd8, 0x85, 0x18, 0x68, 0x6b, 0x09, 0x8e, 0xc9, 0xfe, 0xcf,
	0xb4, 0xbb, 0xfb, 0xc0, 0xcf, 0x36, 0x1d, 0x3b, 0x10, 0x9a, 0x58, 0xe1, 0x8f, 0x39, 0x34, 0xe7,
	0xeb, 0x20, 0xe4, 0xd6, 0x32, 0xfc, 0xf6, 0xef, 0xb9, 0x34, 0xac, 0x50, 0x37, 0x87, 0xf5, 0x5b,
	0x0e, 0xfd, 0x9a, 0x3b, 0xb2, 0xed, 0xdd, 0x1d, 0xaf, 0xe1, 0x6c, 0xb7, 0xcd, 0xb9, 0xb5, 0x37,
	0xaa, 0xbb, 0xf0, 0xbd, 0xfa, 0xe2, 0xa6, 0xea, 0xd8, 0x0d, 0xaf, 0xee, 0x34, 0xdb, 0xd7, 0x75,
	0xc0, 0xab, 0x8e, 0xbd, 0xe5, 0xd5, 0x9d, 0xc6, 0x78, 0x7e, 0xed, 0x35, 0x9c, 0x66, 0xac, 0xaa,
	0x7a, 0x3f, 0xac, 0xb5, 0xed, 0xa6, 0x57, 0x77, 0xb6, 0xda, 0xd7, 0xc0, 0x89, 0xcb, 0x3b, 0xb6,
	0x57, 0x77, 0x9e, 0x8f, 0x27, 0xe9, 0xd8, 0x7e, 0xef, 0xc2, 0xf7, 0x59, 0x75, 0xd7, 0x7e, 0x77,
	0xed, 0x3d, 0x73, 0xda, 0xf6, 0xee, 0xce, 0x1d, 0xf2, 0x8c, 0x7a, 0x77, 0x9d, 0xc6, 0x1d, 0xe1,
	0x03, 0xb4, 0xe0, 0x4b, 0x6e, 0x5e, 0x4d, 0xab, 0x04, 0xcd, 0x6d, 0xa7, 0x17, 0x21, 0x01, 0x4c,
	0x77, 0x4f, 0xd1, 0x93, 0x23, 0x8f, 0x39, 0x97, 0x2f, 0x9d, 0x77, 0xc6, 0xc0, 0x73, 0x27, 0xe3,
	0x0f, 0x4e, 0xfb, 0xaa, 0xb9, 0xb9, 0xd5, 0xb8, 0x59, 0xa7, 0x63, 0xa7, 0xf2, 0x1f, 0x39, 0x34,
	0x1f, 0x6f, 0x2b, 0x7e, 0x7e, 0x2b, 0xf0, 0xf1, 0x73, 0xfb, 0xf8, 0xce, 0xc0, 0x4f, 0x87, 0x1b,
	0x72, 0x36, 0xf3, 0xa9, 0x9c, 0xc5, 0xb9, 0x95, 0xfa, 0x30, 0x79, 0x01, 0x6f, 0xe7, 0x56, 0xea,
	0xc3, 0x38, 0xb7, 0x52, 0x1f, 0xe2, 0x26, 0x2a, 0x08, 0xdf, 0x1f, 0x44, 0x01, 0xef, 0x1c, 0x5a,
	0x79, 0x60, 0x67, 0xee, 0xea, 0x04, 0x22, 0x34, 0xa5, 0x91, 0xbf, 0x73, 0xa8, 0x7c, 0x47, 0x6a,
	0x7e, 0x94, 0x2c, 0x8a, 0xb8, 0x9c, 0x5c, 0xad, 0xdc, 0x74, 0xca, 0xb3, 0x57, 0xeb, 0x05, 0x2a,
	0x9a, 0xef, 0x37, 0xbf, 0x44, 0x3d, 0x16, 0xf4, 0x93, 0x76, 0xfe, 0x3f, 0x1a, 0x56, 0x70, 0xca,
	0x4d, 0x40, 0x42, 0xb3, 0x54, 0xf3, 0xba, 0x73, 0x29, 0x85, 0x84, 0xde, 0x0a, 0xd9, 0xf7, 0x11,
	0xca, 0x84, 0xc6, 0x30, 0x7e, 0x89, 0xf2, 0x1d, 0xa6, 0x19, 0x34, 0x55, 0x6c, 0x7e, 0xf6, 0xa9,
	0xbc, 0x67, 0x17, 0x69, 0x34, 0x84, 0x82, 0xf4, 0x78, 0x1e, 0xfe, 0x2f, 0xb7, 0xfe, 0x0d, 0x00,
	0x00, 0xff, 0xff, 0x39, 0x29, 0x1b, 0xff, 0x49, 0x09, 0x00, 0x00,
}
