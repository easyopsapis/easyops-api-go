// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: list_v2.proto

package idcrack

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	_ "github.com/mwitkow/go-proto-validators"
	idcmanager "github.com/easyopsapis/easyops-api-go/protorepo-models/easyops/model/idcmanager"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//ListIDCRackV2请求
type ListIDCRackV2Request struct {
	//
	//机柜ID列表，以,分割
	IdcrackIds           string   `protobuf:"bytes,1,opt,name=idcrackIds,proto3" json:"idcrackIds" form:"idcrackIds"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListIDCRackV2Request) Reset()         { *m = ListIDCRackV2Request{} }
func (m *ListIDCRackV2Request) String() string { return proto.CompactTextString(m) }
func (*ListIDCRackV2Request) ProtoMessage()    {}
func (*ListIDCRackV2Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_e01d2bc491ac448c, []int{0}
}
func (m *ListIDCRackV2Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListIDCRackV2Request.Unmarshal(m, b)
}
func (m *ListIDCRackV2Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListIDCRackV2Request.Marshal(b, m, deterministic)
}
func (m *ListIDCRackV2Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListIDCRackV2Request.Merge(m, src)
}
func (m *ListIDCRackV2Request) XXX_Size() int {
	return xxx_messageInfo_ListIDCRackV2Request.Size(m)
}
func (m *ListIDCRackV2Request) XXX_DiscardUnknown() {
	xxx_messageInfo_ListIDCRackV2Request.DiscardUnknown(m)
}

var xxx_messageInfo_ListIDCRackV2Request proto.InternalMessageInfo

func (m *ListIDCRackV2Request) GetIdcrackIds() string {
	if m != nil {
		return m.IdcrackIds
	}
	return ""
}

//
//ListIDCRackV2返回
type ListIDCRackV2Response struct {
	//
	//页数
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page" form:"page"`
	//
	//页大小
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size" form:"page_size"`
	//
	//总数
	Total int32 `protobuf:"varint,3,opt,name=total,proto3" json:"total" form:"total"`
	//
	//数据列表
	List                 []*ListIDCRackV2Response_List `protobuf:"bytes,4,rep,name=list,proto3" json:"list" form:"list"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ListIDCRackV2Response) Reset()         { *m = ListIDCRackV2Response{} }
func (m *ListIDCRackV2Response) String() string { return proto.CompactTextString(m) }
func (*ListIDCRackV2Response) ProtoMessage()    {}
func (*ListIDCRackV2Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_e01d2bc491ac448c, []int{1}
}
func (m *ListIDCRackV2Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListIDCRackV2Response.Unmarshal(m, b)
}
func (m *ListIDCRackV2Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListIDCRackV2Response.Marshal(b, m, deterministic)
}
func (m *ListIDCRackV2Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListIDCRackV2Response.Merge(m, src)
}
func (m *ListIDCRackV2Response) XXX_Size() int {
	return xxx_messageInfo_ListIDCRackV2Response.Size(m)
}
func (m *ListIDCRackV2Response) XXX_DiscardUnknown() {
	xxx_messageInfo_ListIDCRackV2Response.DiscardUnknown(m)
}

var xxx_messageInfo_ListIDCRackV2Response proto.InternalMessageInfo

func (m *ListIDCRackV2Response) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListIDCRackV2Response) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListIDCRackV2Response) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ListIDCRackV2Response) GetList() []*ListIDCRackV2Response_List {
	if m != nil {
		return m.List
	}
	return nil
}

type ListIDCRackV2Response_List struct {
	//
	//机柜布局
	Layout []*ListIDCRackV2Response_List_Layout `protobuf:"bytes,1,rep,name=layout,proto3" json:"layout" form:"layout"`
	//
	//所在的机房
	Idc *idcmanager.IDC `protobuf:"bytes,2,opt,name=idc,proto3" json:"idc" form:"idc"`
	//
	//机柜ID
	InstanceId string `protobuf:"bytes,3,opt,name=instanceId,proto3" json:"instanceId" form:"instanceId"`
	//
	//机柜名称
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name" form:"name"`
	//
	//机柜编号
	Code string `protobuf:"bytes,5,opt,name=code,proto3" json:"code" form:"code"`
	//
	//机柜状态
	Status string `protobuf:"bytes,6,opt,name=status,proto3" json:"status" form:"status"`
	//
	//机柜类型
	Type string `protobuf:"bytes,7,opt,name=type,proto3" json:"type" form:"type"`
	//
	//机柜U数
	Unum int32 `protobuf:"varint,8,opt,name=unum,proto3" json:"unum" form:"unum"`
	//
	//空闲U位数
	FreeUnum int32 `protobuf:"varint,9,opt,name=freeUnum,proto3" json:"freeUnum" form:"freeUnum"`
	//
	//创建时间
	Ctime string `protobuf:"bytes,10,opt,name=ctime,proto3" json:"ctime" form:"ctime"`
	//
	//创建者
	Creator              string   `protobuf:"bytes,11,opt,name=creator,proto3" json:"creator" form:"creator"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListIDCRackV2Response_List) Reset()         { *m = ListIDCRackV2Response_List{} }
func (m *ListIDCRackV2Response_List) String() string { return proto.CompactTextString(m) }
func (*ListIDCRackV2Response_List) ProtoMessage()    {}
func (*ListIDCRackV2Response_List) Descriptor() ([]byte, []int) {
	return fileDescriptor_e01d2bc491ac448c, []int{1, 0}
}
func (m *ListIDCRackV2Response_List) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListIDCRackV2Response_List.Unmarshal(m, b)
}
func (m *ListIDCRackV2Response_List) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListIDCRackV2Response_List.Marshal(b, m, deterministic)
}
func (m *ListIDCRackV2Response_List) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListIDCRackV2Response_List.Merge(m, src)
}
func (m *ListIDCRackV2Response_List) XXX_Size() int {
	return xxx_messageInfo_ListIDCRackV2Response_List.Size(m)
}
func (m *ListIDCRackV2Response_List) XXX_DiscardUnknown() {
	xxx_messageInfo_ListIDCRackV2Response_List.DiscardUnknown(m)
}

var xxx_messageInfo_ListIDCRackV2Response_List proto.InternalMessageInfo

func (m *ListIDCRackV2Response_List) GetLayout() []*ListIDCRackV2Response_List_Layout {
	if m != nil {
		return m.Layout
	}
	return nil
}

func (m *ListIDCRackV2Response_List) GetIdc() *idcmanager.IDC {
	if m != nil {
		return m.Idc
	}
	return nil
}

func (m *ListIDCRackV2Response_List) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *ListIDCRackV2Response_List) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListIDCRackV2Response_List) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ListIDCRackV2Response_List) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ListIDCRackV2Response_List) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ListIDCRackV2Response_List) GetUnum() int32 {
	if m != nil {
		return m.Unum
	}
	return 0
}

func (m *ListIDCRackV2Response_List) GetFreeUnum() int32 {
	if m != nil {
		return m.FreeUnum
	}
	return 0
}

func (m *ListIDCRackV2Response_List) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

func (m *ListIDCRackV2Response_List) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type ListIDCRackV2Response_List_Layout struct {
	//
	//设备ID
	InstanceId string `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId" form:"instanceId"`
	//
	//设备类型(HOST, _SWITCH, _FIREWALL, _ROUTER, disable)
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type" form:"type"`
	//
	//起始U位
	StartU int32 `protobuf:"varint,3,opt,name=startU,proto3" json:"startU" form:"startU"`
	//
	//占用U位
	OccupiedU int32 `protobuf:"varint,4,opt,name=occupiedU,proto3" json:"occupiedU" form:"occupiedU"`
	//
	//对应的设备的类型
	Device               *types.Struct `protobuf:"bytes,5,opt,name=device,proto3" json:"device" form:"device"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListIDCRackV2Response_List_Layout) Reset()         { *m = ListIDCRackV2Response_List_Layout{} }
func (m *ListIDCRackV2Response_List_Layout) String() string { return proto.CompactTextString(m) }
func (*ListIDCRackV2Response_List_Layout) ProtoMessage()    {}
func (*ListIDCRackV2Response_List_Layout) Descriptor() ([]byte, []int) {
	return fileDescriptor_e01d2bc491ac448c, []int{1, 0, 0}
}
func (m *ListIDCRackV2Response_List_Layout) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListIDCRackV2Response_List_Layout.Unmarshal(m, b)
}
func (m *ListIDCRackV2Response_List_Layout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListIDCRackV2Response_List_Layout.Marshal(b, m, deterministic)
}
func (m *ListIDCRackV2Response_List_Layout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListIDCRackV2Response_List_Layout.Merge(m, src)
}
func (m *ListIDCRackV2Response_List_Layout) XXX_Size() int {
	return xxx_messageInfo_ListIDCRackV2Response_List_Layout.Size(m)
}
func (m *ListIDCRackV2Response_List_Layout) XXX_DiscardUnknown() {
	xxx_messageInfo_ListIDCRackV2Response_List_Layout.DiscardUnknown(m)
}

var xxx_messageInfo_ListIDCRackV2Response_List_Layout proto.InternalMessageInfo

func (m *ListIDCRackV2Response_List_Layout) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *ListIDCRackV2Response_List_Layout) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ListIDCRackV2Response_List_Layout) GetStartU() int32 {
	if m != nil {
		return m.StartU
	}
	return 0
}

func (m *ListIDCRackV2Response_List_Layout) GetOccupiedU() int32 {
	if m != nil {
		return m.OccupiedU
	}
	return 0
}

func (m *ListIDCRackV2Response_List_Layout) GetDevice() *types.Struct {
	if m != nil {
		return m.Device
	}
	return nil
}

//
//ListIDCRackV2Api返回
type ListIDCRackV2ResponseWrapper struct {
	//
	//返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code" form:"code"`
	//
	//返回码解释
	CodeExplain string `protobuf:"bytes,2,opt,name=codeExplain,proto3" json:"codeExplain" form:"codeExplain"`
	//
	//错误详情
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error" form:"error"`
	//
	//返回数据
	Data                 *ListIDCRackV2Response `protobuf:"bytes,4,opt,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ListIDCRackV2ResponseWrapper) Reset()         { *m = ListIDCRackV2ResponseWrapper{} }
func (m *ListIDCRackV2ResponseWrapper) String() string { return proto.CompactTextString(m) }
func (*ListIDCRackV2ResponseWrapper) ProtoMessage()    {}
func (*ListIDCRackV2ResponseWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_e01d2bc491ac448c, []int{2}
}
func (m *ListIDCRackV2ResponseWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListIDCRackV2ResponseWrapper.Unmarshal(m, b)
}
func (m *ListIDCRackV2ResponseWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListIDCRackV2ResponseWrapper.Marshal(b, m, deterministic)
}
func (m *ListIDCRackV2ResponseWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListIDCRackV2ResponseWrapper.Merge(m, src)
}
func (m *ListIDCRackV2ResponseWrapper) XXX_Size() int {
	return xxx_messageInfo_ListIDCRackV2ResponseWrapper.Size(m)
}
func (m *ListIDCRackV2ResponseWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_ListIDCRackV2ResponseWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_ListIDCRackV2ResponseWrapper proto.InternalMessageInfo

func (m *ListIDCRackV2ResponseWrapper) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListIDCRackV2ResponseWrapper) GetCodeExplain() string {
	if m != nil {
		return m.CodeExplain
	}
	return ""
}

func (m *ListIDCRackV2ResponseWrapper) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *ListIDCRackV2ResponseWrapper) GetData() *ListIDCRackV2Response {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*ListIDCRackV2Request)(nil), "idcrack.ListIDCRackV2Request")
	proto.RegisterType((*ListIDCRackV2Response)(nil), "idcrack.ListIDCRackV2Response")
	proto.RegisterType((*ListIDCRackV2Response_List)(nil), "idcrack.ListIDCRackV2Response.List")
	proto.RegisterType((*ListIDCRackV2Response_List_Layout)(nil), "idcrack.ListIDCRackV2Response.List.Layout")
	proto.RegisterType((*ListIDCRackV2ResponseWrapper)(nil), "idcrack.ListIDCRackV2ResponseWrapper")
}

func init() { proto.RegisterFile("list_v2.proto", fileDescriptor_e01d2bc491ac448c) }

var fileDescriptor_e01d2bc491ac448c = []byte{
	// 948 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x5d, 0x6f, 0xe3, 0x44,
	0x17, 0x7e, 0xd3, 0x26, 0x69, 0x33, 0x79, 0xb7, 0x1f, 0xde, 0x2d, 0x58, 0xd1, 0x0a, 0x97, 0x69,
	0x85, 0x9c, 0x6e, 0xed, 0x24, 0x0e, 0x0b, 0xb4, 0x37, 0x11, 0xe9, 0x22, 0x11, 0xa9, 0xe2, 0x62,
	0x4a, 0x40, 0x5a, 0x6f, 0x52, 0x4d, 0xed, 0x69, 0xb0, 0x9a, 0x64, 0x8c, 0x3d, 0xe9, 0xd2, 0xaf,
	0x5b, 0xf8, 0x2f, 0x48, 0xfc, 0x09, 0xfe, 0x05, 0x37, 0x41, 0xe2, 0x92, 0xcb, 0x5c, 0x70, 0x8d,
	0xe6, 0x8c, 0x13, 0x7b, 0xa3, 0x6a, 0xc5, 0xd5, 0xcc, 0x9c, 0xe7, 0x79, 0xce, 0xcc, 0xf9, 0x98,
	0x83, 0x9e, 0x0c, 0x83, 0x58, 0x9c, 0x5f, 0x3b, 0x76, 0x18, 0x71, 0xc1, 0xb5, 0xb5, 0xc0, 0xf7,
	0x22, 0xea, 0x5d, 0x55, 0xac, 0x41, 0x20, 0x7e, 0x98, 0x5c, 0xd8, 0x1e, 0x1f, 0xd5, 0x06, 0x7c,
	0xc0, 0x6b, 0x80, 0x5f, 0x4c, 0x2e, 0xe1, 0x04, 0x07, 0xd8, 0x29, 0x5d, 0xe5, 0x9b, 0x01, 0xb7,
	0x19, 0x8d, 0x6f, 0x78, 0x18, 0xdb, 0x43, 0xee, 0xd1, 0x61, 0xcd, 0xe3, 0x63, 0x11, 0x51, 0x4f,
	0xc4, 0x4a, 0x19, 0xb1, 0x90, 0x5b, 0x23, 0xee, 0xb3, 0x61, 0x5c, 0x4b, 0x88, 0x35, 0x38, 0xd6,
	0x02, 0xdf, 0x1b, 0xd1, 0x31, 0x1d, 0xb0, 0x48, 0x6e, 0x13, 0x7f, 0x9f, 0x65, 0xae, 0x1f, 0xbd,
	0x0d, 0xc4, 0x15, 0x7f, 0x5b, 0x1b, 0x70, 0x0b, 0x40, 0xeb, 0x9a, 0x0e, 0x03, 0x9f, 0x0a, 0x1e,
	0xc5, 0xb5, 0xc5, 0x36, 0xd1, 0x3d, 0x1f, 0x70, 0x3e, 0x18, 0xb2, 0xf4, 0xb5, 0xb1, 0x88, 0x26,
	0x9e, 0x50, 0x28, 0xf6, 0xd1, 0xb3, 0xd3, 0x20, 0x16, 0x9d, 0x57, 0x27, 0x84, 0x7a, 0x57, 0xdf,
	0x39, 0x84, 0xfd, 0x38, 0x61, 0xb1, 0xd0, 0x4e, 0x11, 0x4a, 0xe2, 0xee, 0xf8, 0xb1, 0x9e, 0xdb,
	0xcd, 0x99, 0xa5, 0xf6, 0xe1, 0x6c, 0x6a, 0x6c, 0x5f, 0xf2, 0x68, 0x74, 0x8c, 0x53, 0x0c, 0xff,
	0xf5, 0xa7, 0xf1, 0x14, 0x6d, 0xf7, 0x4d, 0xb7, 0x7f, 0xd8, 0x3b, 0x78, 0x73, 0x58, 0x3d, 0x80,
	0xcd, 0x3e, 0xc9, 0xe8, 0xf1, 0x3f, 0x25, 0xb4, 0xb3, 0x74, 0x4d, 0x1c, 0xf2, 0x71, 0xcc, 0xb4,
	0x2a, 0xca, 0x87, 0x74, 0xc0, 0xe0, 0x86, 0x42, 0x7b, 0x67, 0x36, 0x35, 0xca, 0xea, 0x06, 0x69,
	0x95, 0xbe, 0x57, 0xb6, 0xfe, 0x47, 0x80, 0xa2, 0x7d, 0x8e, 0x4a, 0x72, 0x3d, 0x8f, 0x83, 0x5b,
	0xa6, 0xaf, 0x00, 0xbf, 0x32, 0x9b, 0x1a, 0x5b, 0x29, 0x1f, 0xa0, 0xb9, 0x68, 0x5d, 0x5a, 0xce,
	0x82, 0x5b, 0xa6, 0x7d, 0x82, 0x0a, 0x82, 0x0b, 0x3a, 0xd4, 0x57, 0x41, 0xb4, 0x35, 0x9b, 0x1a,
	0xff, 0x57, 0x22, 0x30, 0x63, 0xa2, 0x60, 0xed, 0x6b, 0x94, 0x97, 0xa5, 0xd7, 0xf3, 0xbb, 0xab,
	0x66, 0xd9, 0xd9, 0xb3, 0x93, 0x00, 0xec, 0x47, 0x5f, 0x0e, 0xd6, 0xf6, 0x66, 0xfa, 0x60, 0x29,
	0xc5, 0x04, 0x3c, 0x54, 0x7e, 0x5e, 0x47, 0x79, 0x89, 0x6b, 0x5d, 0x54, 0x1c, 0xd2, 0x1b, 0x3e,
	0x11, 0x7a, 0x0e, 0x9c, 0x1e, 0xfc, 0x07, 0xa7, 0xf6, 0x29, 0x28, 0xda, 0xdb, 0xb3, 0xa9, 0xf1,
	0x24, 0xf1, 0x0d, 0x16, 0x4c, 0x12, 0x67, 0x5a, 0x03, 0xad, 0x06, 0xbe, 0x07, 0x49, 0x28, 0x3b,
	0x9b, 0x76, 0xda, 0x2f, 0x76, 0xe7, 0xd5, 0x49, 0x7b, 0x63, 0x36, 0x35, 0xd0, 0xa2, 0x4e, 0x98,
	0x48, 0xae, 0xd6, 0x41, 0x28, 0x18, 0xc7, 0x82, 0x8e, 0x3d, 0xd6, 0xf1, 0x21, 0x13, 0xa5, 0x76,
	0x35, 0x53, 0xd0, 0x05, 0x26, 0xf3, 0xb7, 0x85, 0x36, 0xfa, 0x6e, 0xdd, 0x3a, 0xa2, 0xd6, 0x6d,
	0xef, 0xae, 0xd1, 0x7c, 0x90, 0xd5, 0x5c, 0x10, 0xb4, 0x3d, 0x94, 0x1f, 0xd3, 0x11, 0xd3, 0xf3,
	0xe0, 0x24, 0x93, 0x02, 0x69, 0xc5, 0x04, 0x40, 0x49, 0xf2, 0xb8, 0xcf, 0xf4, 0xc2, 0x32, 0x49,
	0x5a, 0x31, 0x01, 0x50, 0xab, 0xa2, 0x62, 0x2c, 0xa8, 0x98, 0xc4, 0x7a, 0x11, 0x68, 0x99, 0x90,
	0x95, 0x1d, 0x93, 0x84, 0x20, 0xfd, 0x89, 0x9b, 0x90, 0xe9, 0x6b, 0xcb, 0xfe, 0xa4, 0x15, 0x13,
	0x00, 0x25, 0x69, 0x32, 0x9e, 0x8c, 0xf4, 0x75, 0x28, 0x74, 0x86, 0x24, 0xad, 0x98, 0x00, 0xa8,
	0xd5, 0xd0, 0xfa, 0x65, 0xc4, 0x58, 0x57, 0x12, 0x4b, 0x40, 0x7c, 0x3a, 0x9b, 0x1a, 0x9b, 0x8a,
	0x38, 0x47, 0x30, 0x59, 0x90, 0xb4, 0x3f, 0x72, 0xa8, 0xe0, 0x89, 0x60, 0xc4, 0x74, 0x04, 0x97,
	0xff, 0x9e, 0x4b, 0x3b, 0x08, 0xec, 0x32, 0x65, 0xbf, 0xe5, 0xd0, 0xaf, 0xb9, 0xbe, 0x69, 0xb6,
	0x8e, 0xdd, 0x86, 0x75, 0xd4, 0x93, 0xd9, 0xeb, 0x1d, 0x54, 0x5b, 0xb0, 0xde, 0x7d, 0xfa, 0x50,
	0xb5, 0xcc, 0x86, 0x5b, 0xb7, 0x9c, 0xde, 0x7d, 0x1d, 0xf0, 0xaa, 0x65, 0x36, 0xdd, 0xba, 0xd5,
	0x98, 0x9f, 0xef, 0xdd, 0x86, 0xe5, 0x28, 0x55, 0xd5, 0xfd, 0x76, 0xb7, 0x67, 0x3a, 0x6e, 0xdd,
	0x6a, 0xf6, 0xee, 0x81, 0xa3, 0xcc, 0xc7, 0xa6, 0x5b, 0xb7, 0x5e, 0xce, 0x0f, 0xe9, 0xde, 0x7c,
	0x63, 0xc3, 0xfa, 0xa2, 0xda, 0x32, 0x5f, 0xdf, 0xbb, 0x2f, 0xac, 0x9e, 0xd9, 0x3a, 0x7e, 0x44,
	0x9e, 0x51, 0xb7, 0xf6, 0x89, 0x8a, 0x48, 0x3b, 0x43, 0x6b, 0x5e, 0xc4, 0xe4, 0xb8, 0xd0, 0xcb,
	0x10, 0xdc, 0xd1, 0x6c, 0x6a, 0x6c, 0x24, 0xb1, 0x29, 0x40, 0x46, 0xb7, 0x87, 0x3e, 0xee, 0xbb,
	0xd4, 0xba, 0xfd, 0xd2, 0x7a, 0x2d, 0x1d, 0xb8, 0xf6, 0x62, 0x7f, 0x6e, 0xf5, 0xee, 0x9c, 0xc3,
	0x66, 0xe3, 0x61, 0x9f, 0xcc, 0x3d, 0x55, 0x7e, 0x59, 0x41, 0x45, 0xd5, 0xc4, 0xda, 0xcb, 0x77,
	0xda, 0x4e, 0xcd, 0x91, 0x9d, 0x47, 0xdb, 0x6e, 0xb9, 0xc5, 0xa0, 0xda, 0x2b, 0xef, 0xab, 0xb6,
	0xea, 0x9e, 0x48, 0x74, 0x93, 0x8f, 0xfd, 0x6e, 0xf7, 0x44, 0xa2, 0xab, 0xba, 0x27, 0x12, 0x5d,
	0xcd, 0x41, 0x25, 0xee, 0x79, 0x93, 0x30, 0x60, 0x7e, 0x17, 0xfa, 0xb6, 0xd0, 0x7e, 0x96, 0xce,
	0x8e, 0x05, 0x84, 0x49, 0x4a, 0xd3, 0xda, 0xa8, 0xe8, 0xb3, 0xeb, 0xc0, 0x53, 0x3d, 0x5c, 0x76,
	0x3e, 0xb4, 0xd5, 0x24, 0xb5, 0xe7, 0x93, 0xd4, 0x3e, 0x83, 0x49, 0x9a, 0xbd, 0x57, 0x09, 0x30,
	0x49, 0x94, 0xf8, 0xef, 0x1c, 0x7a, 0xfe, 0xe8, 0x4f, 0xff, 0x3e, 0xa2, 0x61, 0xc8, 0xa2, 0xc5,
	0x37, 0xc9, 0x2d, 0x77, 0x6c, 0xf6, 0x9b, 0x7c, 0x81, 0xca, 0x72, 0xfd, 0xea, 0xa7, 0x70, 0x48,
	0x83, 0x71, 0x92, 0x94, 0x0f, 0x66, 0x53, 0x43, 0x4b, 0xb9, 0x09, 0x88, 0x49, 0x96, 0x2a, 0x47,
	0x1f, 0x8b, 0x22, 0x1e, 0x25, 0x1f, 0x3e, 0x33, 0xfa, 0xc0, 0x8c, 0x89, 0x82, 0xb5, 0x13, 0x94,
	0xf7, 0xa9, 0xa0, 0x90, 0x9a, 0xb2, 0xf3, 0xd1, 0xfb, 0xa7, 0x54, 0xf6, 0x99, 0x52, 0x85, 0x09,
	0x88, 0x2f, 0x8a, 0x90, 0x98, 0xe6, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x40, 0x1e, 0x39, 0x21,
	0x41, 0x07, 0x00, 0x00,
}
