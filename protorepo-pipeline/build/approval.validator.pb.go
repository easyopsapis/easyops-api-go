// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: approval.proto

package build

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	math "math"
	regexp "regexp"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

var _regex_ApprovalRequest_BuildId = regexp.MustCompile(`^[0-9a-z]{13}$`)
var _regex_ApprovalRequest_StepId = regexp.MustCompile(`^[0-9a-z]{13}$`)

func (this *ApprovalRequest) Validate() error {
	if !_regex_ApprovalRequest_BuildId.MatchString(this.BuildId) {
		return github_com_mwitkow_go_proto_validators.FieldError("BuildId", fmt.Errorf(`value '%v' must be a string conforming to regex "^[0-9a-z]{13}$"`, this.BuildId))
	}
	if !_regex_ApprovalRequest_StepId.MatchString(this.StepId) {
		return github_com_mwitkow_go_proto_validators.FieldError("StepId", fmt.Errorf(`value '%v' must be a string conforming to regex "^[0-9a-z]{13}$"`, this.StepId))
	}
	return nil
}
func (this *ApprovalResponseWrapper) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
