// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: get.proto

package micro_app

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "github.com/easyopsapis/easyops-api-go/protorepo-models/easyops/model/app_store"
	math "math"
	regexp "regexp"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

var _regex_GetAppStoreMicroAppRequest_AppId = regexp.MustCompile(`^[a-zA-Z_]{1,32}$`)

func (this *GetAppStoreMicroAppRequest) Validate() error {
	if !_regex_GetAppStoreMicroAppRequest_AppId.MatchString(this.AppId) {
		return github_com_mwitkow_go_proto_validators.FieldError("AppId", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z_]{1,32}$"`, this.AppId))
	}
	return nil
}

var _regex_GetAppStoreMicroAppResponse_Name = regexp.MustCompile(`^[a-zA-Z_]{1,32}$`)
var _regex_GetAppStoreMicroAppResponse_Id = regexp.MustCompile(`^[a-zA-Z_]{1,32}$`)

func (this *GetAppStoreMicroAppResponse) Validate() error {
	if this.CurrentVersion != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CurrentVersion); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CurrentVersion", err)
		}
	}
	if !_regex_GetAppStoreMicroAppResponse_Name.MatchString(this.Name) {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z_]{1,32}$"`, this.Name))
	}
	if !_regex_GetAppStoreMicroAppResponse_Id.MatchString(this.Id) {
		return github_com_mwitkow_go_proto_validators.FieldError("Id", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z_]{1,32}$"`, this.Id))
	}
	return nil
}
func (this *GetAppStoreMicroAppResponseWrapper) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
