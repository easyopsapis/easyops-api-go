// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: tool_debug_snapshot.proto

package execute

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	_ "github.com/mwitkow/go-proto-validators"
	tool "github.com/easyopsapis/easyops-api-go/protorepo-models/easyops/model/tool"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//ToolDebugSnapshot请求
type ToolDebugSnapshotRequest struct {
	//
	//工具脚本的内容
	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content" form:"content"`
	//
	//工具脚本的类型(python, shell..)
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type" form:"type"`
	//
	//执行用户
	ExecUser string `protobuf:"bytes,3,opt,name=execUser,proto3" json:"execUser" form:"execUser"`
	//
	//白名单
	WhiteList []string `protobuf:"bytes,4,rep,name=whiteList,proto3" json:"whiteList" form:"whiteList"`
	//
	//黑名单
	BlackList []string `protobuf:"bytes,5,rep,name=blackList,proto3" json:"blackList" form:"blackList"`
	//
	//工具的输出, 输出为空为[],非空时为object, 结构如下:
	//fields:
	//- name: dimensions
	//type: object[]
	//description: 维度列
	//fields:
	//- name: id
	//type: string
	//description: 列id
	//- name: name
	//type: string
	//description: 列标题
	//- name: type
	//type: string
	//description: 列类型
	//- name: columns
	//type: object[]
	//description: 输出列
	//fields:
	//- name: id
	//type: string
	//description: 列id
	//- name: name
	//type: string
	//description: 列标题
	//- name: type
	//type: string
	//description: 列类型
	//
	ToolOutputs *types.Value `protobuf:"bytes,6,opt,name=toolOutputs,proto3" json:"toolOutputs" form:"toolOutputs"`
	//
	//工具输入参数
	Inputs *types.Struct `protobuf:"bytes,7,opt,name=inputs,proto3" json:"inputs" form:"inputs"`
	//
	//工具输出参数
	Outputs *types.Struct `protobuf:"bytes,8,opt,name=outputs,proto3" json:"outputs" form:"outputs"`
	//
	//agent列表
	Agents []string `protobuf:"bytes,9,rep,name=agents,proto3" json:"agents" form:"agents"`
	//
	//工具的Env
	ToolEnv *types.Struct `protobuf:"bytes,10,opt,name=toolEnv,proto3" json:"toolEnv" form:"toolEnv"`
	//
	//工具执行的通知信息
	NeedNotify           string   `protobuf:"bytes,11,opt,name=needNotify,proto3" json:"needNotify" form:"needNotify"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ToolDebugSnapshotRequest) Reset()         { *m = ToolDebugSnapshotRequest{} }
func (m *ToolDebugSnapshotRequest) String() string { return proto.CompactTextString(m) }
func (*ToolDebugSnapshotRequest) ProtoMessage()    {}
func (*ToolDebugSnapshotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc96e55d551ce53d, []int{0}
}
func (m *ToolDebugSnapshotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ToolDebugSnapshotRequest.Unmarshal(m, b)
}
func (m *ToolDebugSnapshotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ToolDebugSnapshotRequest.Marshal(b, m, deterministic)
}
func (m *ToolDebugSnapshotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ToolDebugSnapshotRequest.Merge(m, src)
}
func (m *ToolDebugSnapshotRequest) XXX_Size() int {
	return xxx_messageInfo_ToolDebugSnapshotRequest.Size(m)
}
func (m *ToolDebugSnapshotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ToolDebugSnapshotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ToolDebugSnapshotRequest proto.InternalMessageInfo

func (m *ToolDebugSnapshotRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *ToolDebugSnapshotRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ToolDebugSnapshotRequest) GetExecUser() string {
	if m != nil {
		return m.ExecUser
	}
	return ""
}

func (m *ToolDebugSnapshotRequest) GetWhiteList() []string {
	if m != nil {
		return m.WhiteList
	}
	return nil
}

func (m *ToolDebugSnapshotRequest) GetBlackList() []string {
	if m != nil {
		return m.BlackList
	}
	return nil
}

func (m *ToolDebugSnapshotRequest) GetToolOutputs() *types.Value {
	if m != nil {
		return m.ToolOutputs
	}
	return nil
}

func (m *ToolDebugSnapshotRequest) GetInputs() *types.Struct {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *ToolDebugSnapshotRequest) GetOutputs() *types.Struct {
	if m != nil {
		return m.Outputs
	}
	return nil
}

func (m *ToolDebugSnapshotRequest) GetAgents() []string {
	if m != nil {
		return m.Agents
	}
	return nil
}

func (m *ToolDebugSnapshotRequest) GetToolEnv() *types.Struct {
	if m != nil {
		return m.ToolEnv
	}
	return nil
}

func (m *ToolDebugSnapshotRequest) GetNeedNotify() string {
	if m != nil {
		return m.NeedNotify
	}
	return ""
}

//
//ToolDebugSnapshotApi返回
type ToolDebugSnapshotResponseWrapper struct {
	//
	//返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code" form:"code"`
	//
	//返回码解释
	CodeExplain string `protobuf:"bytes,2,opt,name=codeExplain,proto3" json:"codeExplain" form:"codeExplain"`
	//
	//错误详情
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error" form:"error"`
	//
	//返回数据
	Data                 *tool.ExecutionSnapshot `protobuf:"bytes,4,opt,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ToolDebugSnapshotResponseWrapper) Reset()         { *m = ToolDebugSnapshotResponseWrapper{} }
func (m *ToolDebugSnapshotResponseWrapper) String() string { return proto.CompactTextString(m) }
func (*ToolDebugSnapshotResponseWrapper) ProtoMessage()    {}
func (*ToolDebugSnapshotResponseWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc96e55d551ce53d, []int{1}
}
func (m *ToolDebugSnapshotResponseWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ToolDebugSnapshotResponseWrapper.Unmarshal(m, b)
}
func (m *ToolDebugSnapshotResponseWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ToolDebugSnapshotResponseWrapper.Marshal(b, m, deterministic)
}
func (m *ToolDebugSnapshotResponseWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ToolDebugSnapshotResponseWrapper.Merge(m, src)
}
func (m *ToolDebugSnapshotResponseWrapper) XXX_Size() int {
	return xxx_messageInfo_ToolDebugSnapshotResponseWrapper.Size(m)
}
func (m *ToolDebugSnapshotResponseWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_ToolDebugSnapshotResponseWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_ToolDebugSnapshotResponseWrapper proto.InternalMessageInfo

func (m *ToolDebugSnapshotResponseWrapper) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ToolDebugSnapshotResponseWrapper) GetCodeExplain() string {
	if m != nil {
		return m.CodeExplain
	}
	return ""
}

func (m *ToolDebugSnapshotResponseWrapper) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *ToolDebugSnapshotResponseWrapper) GetData() *tool.ExecutionSnapshot {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*ToolDebugSnapshotRequest)(nil), "execute.ToolDebugSnapshotRequest")
	proto.RegisterType((*ToolDebugSnapshotResponseWrapper)(nil), "execute.ToolDebugSnapshotResponseWrapper")
}

func init() { proto.RegisterFile("tool_debug_snapshot.proto", fileDescriptor_bc96e55d551ce53d) }

var fileDescriptor_bc96e55d551ce53d = []byte{
	// 873 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x96, 0x6f, 0x6f, 0xdb, 0x44,
	0x1c, 0xc7, 0x55, 0xd6, 0x3f, 0xcb, 0x05, 0xf6, 0xc7, 0x82, 0x61, 0x2a, 0x24, 0x17, 0x6f, 0xa0,
	0xf3, 0x88, 0xed, 0xc4, 0x49, 0x3a, 0x1a, 0x21, 0x55, 0x8b, 0x28, 0x8f, 0x80, 0x21, 0x0f, 0x36,
	0x89, 0x24, 0xab, 0x2e, 0xf6, 0xc5, 0xb5, 0xea, 0xfa, 0x8c, 0xef, 0xbc, 0xb6, 0x24, 0x7e, 0x0d,
	0x48, 0xbc, 0x0a, 0xde, 0x06, 0xcf, 0x79, 0x0d, 0x41, 0xe2, 0x09, 0xcf, 0xf3, 0x0a, 0xd0, 0x9d,
	0xed, 0xc4, 0x5a, 0xeb, 0x31, 0x69, 0xa5, 0x8f, 0x62, 0xdf, 0xf7, 0xfb, 0xfd, 0xdd, 0xc7, 0xbf,
	0x93, 0xee, 0x17, 0xf0, 0x11, 0x23, 0x24, 0x38, 0x74, 0xf1, 0x38, 0xf1, 0x0e, 0x69, 0x88, 0x22,
	0x7a, 0x44, 0x98, 0x11, 0xc5, 0x84, 0x11, 0x69, 0x0b, 0x9f, 0x61, 0x27, 0x61, 0x78, 0x5b, 0xf7,
	0x7c, 0x76, 0x94, 0x8c, 0x0d, 0x87, 0x9c, 0x98, 0x1e, 0xf1, 0x88, 0x29, 0xf4, 0x71, 0x32, 0x11,
	0x6f, 0xe2, 0x45, 0x3c, 0x65, 0xb9, 0xed, 0x6f, 0x3d, 0x62, 0x60, 0x44, 0xcf, 0x49, 0x44, 0x8d,
	0x80, 0x38, 0x28, 0x30, 0x1d, 0x12, 0xb2, 0x18, 0x39, 0x8c, 0x66, 0xc9, 0x18, 0x47, 0x44, 0x3f,
	0x21, 0x2e, 0x0e, 0xa8, 0x99, 0x1b, 0x4d, 0xf1, 0x6a, 0x72, 0x18, 0xd3, 0x41, 0x41, 0x30, 0x46,
	0xce, 0x71, 0x5e, 0xee, 0xc9, 0x5b, 0x96, 0xc3, 0x67, 0x2c, 0x46, 0x87, 0x7e, 0x38, 0x29, 0xf8,
	0x9e, 0xbf, 0x75, 0x41, 0xde, 0x16, 0x9f, 0x84, 0xaf, 0x34, 0x6c, 0x7b, 0xb7, 0xd4, 0xa7, 0x93,
	0x53, 0x9f, 0x1d, 0x93, 0x53, 0xd3, 0x23, 0xba, 0x10, 0xf5, 0x97, 0x28, 0xf0, 0x5d, 0xc4, 0x48,
	0x4c, 0xcd, 0xe5, 0x63, 0x9e, 0xfb, 0xd8, 0x23, 0xc4, 0x0b, 0xf0, 0xaa, 0xad, 0x94, 0xc5, 0x89,
	0x93, 0x57, 0x55, 0xff, 0xbc, 0x05, 0xe4, 0x1f, 0x08, 0x09, 0xbe, 0xe2, 0x67, 0xf4, 0x34, 0xdf,
	0xd1, 0xc6, 0x3f, 0x27, 0x98, 0x32, 0xa9, 0x01, 0xb6, 0x38, 0x3c, 0x0e, 0x99, 0xbc, 0xb6, 0xb3,
	0x06, 0x6b, 0x7d, 0x69, 0x31, 0x57, 0x6e, 0x4d, 0x48, 0x7c, 0xd2, 0x53, 0x73, 0x41, 0xb5, 0x0b,
	0x8b, 0x74, 0x1f, 0xac, 0xb3, 0xf3, 0x08, 0xcb, 0xef, 0x08, 0xeb, 0xed, 0xc5, 0x5c, 0xa9, 0x67,
	0x56, 0xbe, 0xaa, 0xda, 0x42, 0x94, 0x9e, 0x81, 0x9b, 0xfc, 0x0b, 0x7f, 0xa4, 0x38, 0x96, 0x6f,
	0x08, 0x63, 0x6f, 0x31, 0x57, 0x6e, 0x67, 0xc6, 0x42, 0x51, 0xff, 0xfe, 0x4b, 0xb9, 0x0f, 0x3e,
	0x79, 0x31, 0x40, 0xfa, 0x2f, 0x8f, 0xf5, 0x9f, 0x9a, 0xfa, 0xde, 0x68, 0x60, 0x2c, 0x9f, 0x0f,
	0xf5, 0xd1, 0xd4, 0x6a, 0xb4, 0x5b, 0xe9, 0x03, 0x7b, 0x59, 0x4b, 0xb2, 0x40, 0xed, 0xf4, 0xc8,
	0x67, 0xf8, 0x1b, 0x9f, 0x32, 0x79, 0x7d, 0xe7, 0x06, 0xac, 0xf5, 0xdf, 0x5f, 0xcc, 0x95, 0x3b,
	0x59, 0xe1, 0xa5, 0xa4, 0xda, 0x2b, 0x1b, 0xcf, 0x8c, 0x03, 0xe4, 0x1c, 0x8b, 0xcc, 0xc6, 0xab,
	0x99, 0xa5, 0xa4, 0xda, 0x2b, 0x9b, 0xf4, 0x3d, 0xa8, 0xf3, 0x63, 0x7a, 0x92, 0xb0, 0x28, 0x61,
	0x54, 0xde, 0xdc, 0x59, 0x83, 0x75, 0xeb, 0x9e, 0x91, 0xf5, 0xd8, 0x28, 0x7a, 0x6c, 0x3c, 0x43,
	0x41, 0x82, 0xfb, 0xf7, 0x16, 0x73, 0x45, 0xca, 0x7b, 0xb0, 0x0a, 0xa9, 0x76, 0xb9, 0x84, 0xd4,
	0x07, 0x9b, 0x7e, 0x28, 0x8a, 0x6d, 0x89, 0x62, 0x1f, 0x5e, 0x28, 0xf6, 0x54, 0x1c, 0x58, 0xff,
	0xee, 0x62, 0xae, 0xbc, 0x97, 0x55, 0xcb, 0x02, 0xaa, 0x9d, 0x27, 0xa5, 0x03, 0xb0, 0x45, 0x72,
	0xa2, 0x9b, 0xaf, 0x2f, 0x52, 0x3a, 0x41, 0x52, 0xe0, 0x14, 0x59, 0xe9, 0x8f, 0x1a, 0xd8, 0x44,
	0x1e, 0x0e, 0x19, 0x95, 0x6b, 0xa2, 0x1d, 0xbf, 0xd7, 0x56, 0x7b, 0x66, 0x02, 0x3f, 0x9a, 0xdf,
	0x6a, 0xe0, 0xd7, 0xda, 0x0b, 0x08, 0x2d, 0xd8, 0x1d, 0x34, 0xf5, 0xee, 0x68, 0xda, 0x4a, 0x67,
	0x83, 0xa6, 0xde, 0x19, 0x0d, 0xdd, 0x69, 0x2b, 0xd5, 0xf8, 0x73, 0x6b, 0xb4, 0xcf, 0x5f, 0x1a,
	0x56, 0xaa, 0xc1, 0xa1, 0xf1, 0x86, 0x4e, 0x6d, 0xda, 0x4e, 0xb5, 0xd9, 0x90, 0x3e, 0x84, 0x10,
	0x0e, 0x9a, 0xfa, 0xde, 0x63, 0xfd, 0x6b, 0xa4, 0x4f, 0x46, 0xd3, 0x56, 0xa3, 0x93, 0xf6, 0xb4,
	0xe9, 0xa3, 0xf4, 0xc2, 0xea, 0xac, 0xa7, 0x69, 0xb3, 0x4b, 0xcd, 0xbb, 0x29, 0xec, 0x5d, 0x70,
	0x43, 0x68, 0x65, 0x1c, 0x33, 0x2b, 0xa7, 0x98, 0xb5, 0x86, 0xee, 0xd0, 0x9d, 0x0d, 0x5a, 0xfa,
	0x1e, 0xe7, 0xc8, 0x60, 0xff, 0xc3, 0x93, 0x61, 0x56, 0xee, 0xdc, 0x4d, 0x21, 0xbc, 0xb8, 0xb7,
	0x96, 0x7d, 0xe2, 0xac, 0x77, 0x2d, 0x0c, 0x9d, 0x4a, 0x06, 0x1e, 0xbb, 0x4c, 0xda, 0xbf, 0x4a,
	0xb0, 0xd7, 0x90, 0xb5, 0x2b, 0xc9, 0x3a, 0x15, 0x64, 0xd3, 0x66, 0xc3, 0x4a, 0xaf, 0x89, 0xce,
	0xaa, 0xa4, 0xeb, 0x56, 0xd3, 0xb5, 0xaf, 0x8b, 0xae, 0x55, 0x49, 0xb7, 0x5b, 0x4d, 0xd7, 0xf9,
	0x3f, 0xe8, 0x7a, 0x55, 0x20, 0x8f, 0xaa, 0x41, 0xba, 0x57, 0x0f, 0xa2, 0xc1, 0x4f, 0x8d, 0xcf,
	0xb5, 0xfd, 0x21, 0x7d, 0xf8, 0xc0, 0xce, 0x2f, 0x2e, 0x7e, 0x15, 0xf2, 0xdb, 0xf5, 0x20, 0x7c,
	0x29, 0x83, 0x37, 0xbe, 0x0a, 0xf3, 0x84, 0x6a, 0x17, 0x59, 0xa9, 0x0b, 0x40, 0x88, 0xb1, 0xfb,
	0x1d, 0x61, 0xfe, 0xe4, 0x5c, 0xae, 0x8b, 0x49, 0xf5, 0xc1, 0x62, 0xae, 0xdc, 0xcd, 0x02, 0x2b,
	0x4d, 0xb5, 0x4b, 0x46, 0xf5, 0x9f, 0x35, 0xb0, 0x73, 0xc9, 0x38, 0xa5, 0x11, 0x09, 0x29, 0x7e,
	0x1e, 0xa3, 0x28, 0xc2, 0x31, 0x1f, 0x94, 0x0e, 0x71, 0xb1, 0x98, 0xa9, 0x1b, 0xe5, 0x41, 0xc9,
	0x57, 0x55, 0x5b, 0x88, 0xd2, 0x17, 0xa0, 0xce, 0x7f, 0x0f, 0xce, 0xa2, 0x00, 0xf9, 0x61, 0x3e,
	0x54, 0x4b, 0x03, 0xa5, 0x24, 0xaa, 0x76, 0xd9, 0x2a, 0x7d, 0x06, 0x36, 0x70, 0x1c, 0x93, 0x62,
	0xbe, 0xde, 0x59, 0xcc, 0x95, 0x77, 0xf3, 0xf9, 0xca, 0x97, 0x55, 0x3b, 0x93, 0xa5, 0x2f, 0xc1,
	0xba, 0x8b, 0x18, 0x92, 0xd7, 0xf3, 0x36, 0xf1, 0x4f, 0x37, 0x0e, 0x8a, 0xbf, 0x1f, 0x05, 0x7c,
	0x99, 0x8f, 0xdb, 0x55, 0x5b, 0xa4, 0xc6, 0x9b, 0xa2, 0x9d, 0xed, 0x7f, 0x03, 0x00, 0x00, 0xff,
	0xff, 0xa4, 0x95, 0x92, 0x0a, 0xe3, 0x09, 0x00, 0x00,
}
