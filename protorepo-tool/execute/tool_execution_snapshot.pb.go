// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: tool_execution_snapshot.proto

package execute

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	_ "github.com/mwitkow/go-proto-validators"
	tool "github.com/easyopsapis/easyops-api-go/protorepo-models/easyops/model/tool"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//ToolExecutionSnapshot请求
type ToolExecutionSnapshotRequest struct {
	//
	//工具执行成功的回调信息
	Callback *tool.Callback `protobuf:"bytes,1,opt,name=callback,proto3" json:"callback" form:"callback"`
	//
	//工具Id，服务端自动生成
	ToolId string `protobuf:"bytes,2,opt,name=toolId,proto3" json:"toolId" form:"toolId"`
	//
	//工具版本
	VId string `protobuf:"bytes,3,opt,name=vId,proto3" json:"vId" form:"vId"`
	//
	//agent列表
	Agents []string `protobuf:"bytes,4,rep,name=agents,proto3" json:"agents" form:"agents"`
	//
	//工具输入参数
	Inputs *types.Struct `protobuf:"bytes,5,opt,name=inputs,proto3" json:"inputs" form:"inputs"`
	//
	//执行用户
	ExecUser string `protobuf:"bytes,6,opt,name=execUser,proto3" json:"execUser" form:"execUser"`
	//
	//工具的Env
	ToolEnv *types.Struct `protobuf:"bytes,7,opt,name=toolEnv,proto3" json:"toolEnv" form:"toolEnv"`
	//
	//工具执行的超时时间(0表示不超时，默认为86400秒)
	Timeout int32 `protobuf:"varint,8,opt,name=timeout,proto3" json:"timeout" form:"timeout"`
	//
	//工具名字
	Name string `protobuf:"bytes,9,opt,name=name,proto3" json:"name" form:"name"`
	//
	//工具执行的通知信息
	NeedNotify           string   `protobuf:"bytes,10,opt,name=needNotify,proto3" json:"needNotify" form:"needNotify"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ToolExecutionSnapshotRequest) Reset()         { *m = ToolExecutionSnapshotRequest{} }
func (m *ToolExecutionSnapshotRequest) String() string { return proto.CompactTextString(m) }
func (*ToolExecutionSnapshotRequest) ProtoMessage()    {}
func (*ToolExecutionSnapshotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8fc5497a0d7e4197, []int{0}
}
func (m *ToolExecutionSnapshotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ToolExecutionSnapshotRequest.Unmarshal(m, b)
}
func (m *ToolExecutionSnapshotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ToolExecutionSnapshotRequest.Marshal(b, m, deterministic)
}
func (m *ToolExecutionSnapshotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ToolExecutionSnapshotRequest.Merge(m, src)
}
func (m *ToolExecutionSnapshotRequest) XXX_Size() int {
	return xxx_messageInfo_ToolExecutionSnapshotRequest.Size(m)
}
func (m *ToolExecutionSnapshotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ToolExecutionSnapshotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ToolExecutionSnapshotRequest proto.InternalMessageInfo

func (m *ToolExecutionSnapshotRequest) GetCallback() *tool.Callback {
	if m != nil {
		return m.Callback
	}
	return nil
}

func (m *ToolExecutionSnapshotRequest) GetToolId() string {
	if m != nil {
		return m.ToolId
	}
	return ""
}

func (m *ToolExecutionSnapshotRequest) GetVId() string {
	if m != nil {
		return m.VId
	}
	return ""
}

func (m *ToolExecutionSnapshotRequest) GetAgents() []string {
	if m != nil {
		return m.Agents
	}
	return nil
}

func (m *ToolExecutionSnapshotRequest) GetInputs() *types.Struct {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *ToolExecutionSnapshotRequest) GetExecUser() string {
	if m != nil {
		return m.ExecUser
	}
	return ""
}

func (m *ToolExecutionSnapshotRequest) GetToolEnv() *types.Struct {
	if m != nil {
		return m.ToolEnv
	}
	return nil
}

func (m *ToolExecutionSnapshotRequest) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *ToolExecutionSnapshotRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ToolExecutionSnapshotRequest) GetNeedNotify() string {
	if m != nil {
		return m.NeedNotify
	}
	return ""
}

//
//ToolExecutionSnapshotApi返回
type ToolExecutionSnapshotResponseWrapper struct {
	//
	//返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code" form:"code"`
	//
	//返回码解释
	CodeExplain string `protobuf:"bytes,2,opt,name=codeExplain,proto3" json:"codeExplain" form:"codeExplain"`
	//
	//错误详情
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error" form:"error"`
	//
	//返回数据
	Data                 *tool.ExecutionSnapshot `protobuf:"bytes,4,opt,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ToolExecutionSnapshotResponseWrapper) Reset()         { *m = ToolExecutionSnapshotResponseWrapper{} }
func (m *ToolExecutionSnapshotResponseWrapper) String() string { return proto.CompactTextString(m) }
func (*ToolExecutionSnapshotResponseWrapper) ProtoMessage()    {}
func (*ToolExecutionSnapshotResponseWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_8fc5497a0d7e4197, []int{1}
}
func (m *ToolExecutionSnapshotResponseWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ToolExecutionSnapshotResponseWrapper.Unmarshal(m, b)
}
func (m *ToolExecutionSnapshotResponseWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ToolExecutionSnapshotResponseWrapper.Marshal(b, m, deterministic)
}
func (m *ToolExecutionSnapshotResponseWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ToolExecutionSnapshotResponseWrapper.Merge(m, src)
}
func (m *ToolExecutionSnapshotResponseWrapper) XXX_Size() int {
	return xxx_messageInfo_ToolExecutionSnapshotResponseWrapper.Size(m)
}
func (m *ToolExecutionSnapshotResponseWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_ToolExecutionSnapshotResponseWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_ToolExecutionSnapshotResponseWrapper proto.InternalMessageInfo

func (m *ToolExecutionSnapshotResponseWrapper) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ToolExecutionSnapshotResponseWrapper) GetCodeExplain() string {
	if m != nil {
		return m.CodeExplain
	}
	return ""
}

func (m *ToolExecutionSnapshotResponseWrapper) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *ToolExecutionSnapshotResponseWrapper) GetData() *tool.ExecutionSnapshot {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*ToolExecutionSnapshotRequest)(nil), "execute.ToolExecutionSnapshotRequest")
	proto.RegisterType((*ToolExecutionSnapshotResponseWrapper)(nil), "execute.ToolExecutionSnapshotResponseWrapper")
}

func init() { proto.RegisterFile("tool_execution_snapshot.proto", fileDescriptor_8fc5497a0d7e4197) }

var fileDescriptor_8fc5497a0d7e4197 = []byte{
	// 866 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x95, 0x6f, 0x6f, 0xdb, 0x44,
	0x00, 0xc6, 0x15, 0xda, 0xa6, 0xcd, 0x15, 0x3a, 0xea, 0x09, 0xb0, 0xaa, 0x21, 0x17, 0xaf, 0x43,
	0xe7, 0x11, 0xdb, 0x89, 0x93, 0xb4, 0x34, 0x42, 0x2a, 0x0d, 0xca, 0xa4, 0xbd, 0x00, 0x24, 0x0f,
	0x98, 0x44, 0x92, 0x55, 0x57, 0xfb, 0x92, 0x59, 0x73, 0x7c, 0xc6, 0xbe, 0x64, 0x1d, 0x89, 0x3f,
	0x01, 0x2f, 0x90, 0xf8, 0x14, 0x7c, 0x0d, 0xbe, 0x48, 0x90, 0x78, 0xcb, 0x3b, 0x7f, 0x02, 0x74,
	0x77, 0xce, 0x1f, 0x94, 0xba, 0x20, 0x6d, 0xeb, 0xab, 0xdc, 0xdd, 0xf3, 0x3c, 0x77, 0xbf, 0x9c,
	0xa5, 0xe7, 0xc0, 0xc7, 0x94, 0x10, 0xff, 0x02, 0x5f, 0x61, 0x67, 0x44, 0x3d, 0x12, 0x5c, 0xc4,
	0x01, 0x0a, 0xe3, 0xe7, 0x84, 0x1a, 0x61, 0x44, 0x28, 0x91, 0xb6, 0x85, 0x82, 0x0f, 0xf4, 0x81,
	0x47, 0x9f, 0x8f, 0x2e, 0x0d, 0x87, 0x0c, 0xcd, 0x01, 0x19, 0x10, 0x93, 0xeb, 0x97, 0xa3, 0x3e,
	0x9f, 0xf1, 0x09, 0x1f, 0x89, 0xdc, 0xc1, 0xd7, 0x03, 0x62, 0x60, 0x14, 0xbf, 0x22, 0x61, 0x6c,
	0xf8, 0xc4, 0x41, 0xbe, 0xe9, 0x90, 0x80, 0x46, 0xc8, 0xa1, 0xb1, 0x48, 0x46, 0x38, 0x24, 0xfa,
	0x90, 0xb8, 0xd8, 0x8f, 0xcd, 0xcc, 0x68, 0xf2, 0xa9, 0xc9, 0x80, 0x4c, 0x07, 0xf9, 0xfe, 0x25,
	0x72, 0x5e, 0x64, 0xdb, 0x7d, 0xfb, 0x9a, 0xdb, 0xe1, 0x2b, 0x1a, 0xa1, 0x0b, 0x2f, 0xe8, 0xcf,
	0xf9, 0x9e, 0xbe, 0xf6, 0x86, 0xd7, 0x5f, 0xd8, 0xc1, 0xf1, 0xca, 0x3d, 0x0d, 0x5f, 0x7a, 0xf4,
	0x05, 0x79, 0x69, 0x0e, 0x88, 0xce, 0x45, 0x7d, 0x8c, 0x7c, 0xcf, 0x45, 0x94, 0x44, 0xb1, 0xb9,
	0x18, 0x66, 0xb9, 0x7b, 0x03, 0x42, 0x06, 0x3e, 0x5e, 0x5e, 0x6b, 0x4c, 0xa3, 0x91, 0x93, 0xed,
	0xaa, 0xfe, 0xb2, 0x07, 0xee, 0x7d, 0x47, 0x88, 0xdf, 0x9e, 0x1f, 0xfb, 0x24, 0x3b, 0xd5, 0xc6,
	0x3f, 0x8d, 0x70, 0x4c, 0xa5, 0x33, 0xb0, 0x33, 0xbf, 0x32, 0xb9, 0x70, 0x58, 0x80, 0xbb, 0xd6,
	0x9e, 0xc1, 0x40, 0x8d, 0xaf, 0xb2, 0xd5, 0xd6, 0xdd, 0x74, 0xa6, 0xdc, 0xe9, 0x93, 0x68, 0xd8,
	0x54, 0xe7, 0x4e, 0xd5, 0x5e, 0x84, 0xa4, 0x2f, 0x41, 0x91, 0xf9, 0x1f, 0xbb, 0xf2, 0x3b, 0x87,
	0x05, 0x58, 0x6a, 0xc1, 0x74, 0xa6, 0xbc, 0x27, 0xec, 0x62, 0x5d, 0xfd, 0xeb, 0x4f, 0xe5, 0x2e,
	0xd8, 0x7f, 0xd6, 0x41, 0x7a, 0xff, 0x5c, 0x7f, 0x54, 0xd1, 0x4f, 0x7b, 0x93, 0x9a, 0x95, 0x1c,
	0xd9, 0x59, 0x4e, 0x3a, 0x01, 0x1b, 0xe3, 0xc7, 0xae, 0xbc, 0xc1, 0xe3, 0x0f, 0xd2, 0x99, 0x02,
	0x44, 0x7c, 0x7c, 0x43, 0x96, 0x25, 0xa4, 0x3f, 0x4a, 0xa0, 0x88, 0x06, 0x38, 0xa0, 0xb1, 0xbc,
	0x79, 0xb8, 0x01, 0x4b, 0xad, 0xdf, 0x4b, 0xcb, 0xc3, 0x85, 0xc0, 0x36, 0xf8, 0xad, 0x04, 0x7e,
	0x2d, 0x3d, 0x83, 0xd0, 0x82, 0x8d, 0x4e, 0x45, 0x6f, 0xf4, 0x26, 0xd5, 0x64, 0xda, 0xa9, 0xe8,
	0xf5, 0x5e, 0xd7, 0x9d, 0x54, 0x13, 0x8d, 0x8d, 0xab, 0xbd, 0x33, 0x36, 0x29, 0x5b, 0x89, 0x06,
	0xbb, 0xc6, 0xff, 0x74, 0x6a, 0x93, 0x5a, 0xa2, 0x4d, 0xbb, 0xf1, 0x43, 0x08, 0x61, 0xa7, 0xa2,
	0x9f, 0x9e, 0xeb, 0x8f, 0x90, 0xde, 0xef, 0x4d, 0xaa, 0xe5, 0x7a, 0xd2, 0xd4, 0x26, 0x27, 0xc9,
	0xda, 0xea, 0xb4, 0xa9, 0x69, 0xd3, 0x6b, 0xcd, 0xc7, 0x09, 0x6c, 0xae, 0xb9, 0x21, 0xb4, 0x04,
	0xc7, 0xd4, 0xca, 0x28, 0xa6, 0xd5, 0xae, 0xdb, 0x75, 0xa7, 0x9d, 0xaa, 0x7e, 0xca, 0x38, 0x04,
	0xec, 0x7f, 0x78, 0x04, 0x66, 0xee, 0xc9, 0x8d, 0x04, 0xc2, 0xf5, 0xb3, 0x35, 0xf1, 0x17, 0xa7,
	0xcd, 0x5b, 0x61, 0xa8, 0xe7, 0x32, 0xb0, 0xd8, 0x75, 0xd2, 0xd9, 0x9b, 0x04, 0xbb, 0x81, 0xac,
	0x96, 0x4b, 0x56, 0xcf, 0x21, 0x9b, 0x54, 0xca, 0x56, 0x72, 0x4b, 0x74, 0x56, 0x2e, 0x5d, 0x23,
	0x9f, 0xae, 0x76, 0x5b, 0x74, 0xd5, 0x5c, 0xba, 0xe3, 0x7c, 0xba, 0xfa, 0xdb, 0xa0, 0x6b, 0xe6,
	0x81, 0x9c, 0xe4, 0x83, 0x34, 0xde, 0x3c, 0x88, 0x06, 0x1f, 0x18, 0x9f, 0x69, 0x67, 0xdd, 0xf8,
	0xe1, 0x91, 0x9d, 0x15, 0x97, 0xd4, 0x02, 0x45, 0x2f, 0x08, 0x47, 0x34, 0x96, 0xb7, 0x78, 0xfb,
	0x7e, 0x64, 0x88, 0x3e, 0x37, 0xe6, 0x7d, 0x6e, 0x3c, 0xe1, 0x7d, 0xde, 0xda, 0x5f, 0x56, 0x9b,
	0x08, 0xa8, 0x76, 0x96, 0x94, 0x7e, 0x00, 0x3b, 0xec, 0x59, 0xf9, 0x3e, 0xc6, 0x91, 0x5c, 0xe4,
	0x2d, 0xda, 0x5c, 0x76, 0xf6, 0x5c, 0x61, 0x4d, 0x78, 0x1f, 0x7c, 0xc2, 0xaa, 0xf4, 0xe7, 0x73,
	0xfd, 0x47, 0x56, 0xa5, 0x1d, 0x63, 0x31, 0xbe, 0xd0, 0x7b, 0x13, 0xab, 0x5c, 0xab, 0x26, 0x47,
	0xf6, 0x62, 0x2f, 0xa9, 0x0d, 0xb6, 0x59, 0x45, 0xb7, 0x83, 0xb1, 0xbc, 0x7d, 0x33, 0x9c, 0x94,
	0xce, 0x94, 0xbd, 0x65, 0xe9, 0xb7, 0x83, 0xb1, 0x6a, 0xcf, 0xb3, 0x52, 0x19, 0x6c, 0x53, 0x6f,
	0x88, 0xc9, 0x88, 0xca, 0x3b, 0x87, 0x05, 0xb8, 0xf5, 0x2f, 0xb7, 0x10, 0x98, 0x5b, 0x8c, 0xa4,
	0xfb, 0x60, 0x33, 0x40, 0x43, 0x2c, 0x97, 0xf8, 0x1f, 0xb9, 0x93, 0xce, 0x94, 0x5d, 0x61, 0x65,
	0xab, 0xaa, 0xcd, 0x45, 0xa9, 0x01, 0x40, 0x80, 0xb1, 0xfb, 0x0d, 0xa1, 0x5e, 0xff, 0x95, 0x0c,
	0xb8, 0xf5, 0x83, 0x74, 0xa6, 0xec, 0x67, 0xd6, 0x85, 0xa6, 0xda, 0x2b, 0x46, 0xf5, 0xef, 0x02,
	0x38, 0xca, 0x79, 0x0d, 0xe3, 0x90, 0x04, 0x31, 0x7e, 0x1a, 0xa1, 0x30, 0xc4, 0x11, 0x83, 0x70,
	0x88, 0x8b, 0xf9, 0x8b, 0xb8, 0xb5, 0x0a, 0xc1, 0x56, 0x55, 0x9b, 0x8b, 0xd2, 0xe7, 0x60, 0x97,
	0xfd, 0xb6, 0xaf, 0x42, 0x1f, 0x79, 0x41, 0xf6, 0xfc, 0x7d, 0x98, 0xce, 0x14, 0x69, 0xe9, 0xcd,
	0x44, 0xd5, 0x5e, 0xb5, 0x4a, 0x9f, 0x82, 0x2d, 0x1c, 0x45, 0x24, 0xca, 0xde, 0xbc, 0xf7, 0xd3,
	0x99, 0xf2, 0x6e, 0xf6, 0xb5, 0xd8, 0xb2, 0x6a, 0x0b, 0x59, 0xfa, 0x02, 0x6c, 0xba, 0x88, 0x22,
	0x79, 0x33, 0xbb, 0x7d, 0xfe, 0x30, 0xaf, 0xc1, 0xaf, 0xf2, 0x31, 0xbb, 0x6a, 0xf3, 0xd4, 0x65,
	0x91, 0x7f, 0xa5, 0xda, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x90, 0xb6, 0xa8, 0x40, 0xaa, 0x09,
	0x00, 0x00,
}
