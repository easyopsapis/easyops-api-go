// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: execute_debug_tool.proto

package execute

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "github.com/easyopsapis/easyops-api-go/protorepo-models/easyops/model/tool"
	math "math"
	regexp "regexp"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

var _regex_ExecuteDebugToolRequest_ExecUser = regexp.MustCompile(`^[a-zA-Z0-9][.a-zA-Z0-9_-]{2,31}$`)

func (this *ExecuteDebugToolRequest) Validate() error {
	for _, item := range this.InputsInfo {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("InputsInfo", err)
			}
		}
	}
	if this.Inputs != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Inputs); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Inputs", err)
		}
	}
	if this.Outputs != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Outputs); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Outputs", err)
		}
	}
	if !_regex_ExecuteDebugToolRequest_ExecUser.MatchString(this.ExecUser) {
		return github_com_mwitkow_go_proto_validators.FieldError("ExecUser", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9][.a-zA-Z0-9_-]{2,31}$"`, this.ExecUser))
	}
	if this.ToolOutputs != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ToolOutputs); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ToolOutputs", err)
		}
	}
	for _, item := range this.OutputDefs {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("OutputDefs", err)
			}
		}
	}
	for _, item := range this.TableDefs {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("TableDefs", err)
			}
		}
	}
	if this.ToolEnv != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ToolEnv); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ToolEnv", err)
		}
	}
	return nil
}
func (this *ExecuteDebugToolRequest_OutputDefs) Validate() error {
	return nil
}
func (this *ExecuteDebugToolRequest_TableDefs) Validate() error {
	for _, item := range this.Dimensions {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Dimensions", err)
			}
		}
	}
	for _, item := range this.Columns {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Columns", err)
			}
		}
	}
	return nil
}
func (this *ExecuteDebugToolRequest_TableDefs_Dimensions) Validate() error {
	return nil
}
func (this *ExecuteDebugToolRequest_TableDefs_Columns) Validate() error {
	return nil
}
func (this *ExecuteDebugToolResponse) Validate() error {
	return nil
}
func (this *ExecuteDebugToolResponseWrapper) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
