// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: batch_update_tool_permission.proto

package basic

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	math "math"
	regexp "regexp"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

var _regex_BatchUpdateToolPermissionRequest_ToolIds = regexp.MustCompile(`^[a-fA-F0-9]{32}$`)

func (this *BatchUpdateToolPermissionRequest) Validate() error {
	for _, item := range this.ToolIds {
		if !_regex_BatchUpdateToolPermissionRequest_ToolIds.MatchString(item) {
			return github_com_mwitkow_go_proto_validators.FieldError("ToolIds", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-fA-F0-9]{32}$"`, item))
		}
	}
	return nil
}
func (this *BatchUpdateToolPermissionResponse) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *BatchUpdateToolPermissionResponseWrapper) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
