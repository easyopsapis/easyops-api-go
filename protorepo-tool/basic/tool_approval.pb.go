// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: tool_approval.proto

package basic

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//ToolApproval请求
type ToolApprovalRequest struct {
	//
	//工具审批结果[approving=待审批;approved=已审批;rejected=审批未通过;]
	CheckType string `protobuf:"bytes,1,opt,name=checkType,proto3" json:"checkType" form:"checkType"`
	//
	//工具审批意见
	CheckComment string `protobuf:"bytes,2,opt,name=checkComment,proto3" json:"checkComment" form:"checkComment"`
	//
	//前端访问地址
	Origin string `protobuf:"bytes,3,opt,name=origin,proto3" json:"origin" form:"origin"`
	//
	//工具Id，服务端自动生成
	ToolId string `protobuf:"bytes,4,opt,name=toolId,proto3" json:"toolId" form:"toolId"`
	//
	//工具版本
	VId                  string   `protobuf:"bytes,5,opt,name=vId,proto3" json:"vId" form:"vId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ToolApprovalRequest) Reset()         { *m = ToolApprovalRequest{} }
func (m *ToolApprovalRequest) String() string { return proto.CompactTextString(m) }
func (*ToolApprovalRequest) ProtoMessage()    {}
func (*ToolApprovalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd8184db34348329, []int{0}
}
func (m *ToolApprovalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ToolApprovalRequest.Unmarshal(m, b)
}
func (m *ToolApprovalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ToolApprovalRequest.Marshal(b, m, deterministic)
}
func (m *ToolApprovalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ToolApprovalRequest.Merge(m, src)
}
func (m *ToolApprovalRequest) XXX_Size() int {
	return xxx_messageInfo_ToolApprovalRequest.Size(m)
}
func (m *ToolApprovalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ToolApprovalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ToolApprovalRequest proto.InternalMessageInfo

func (m *ToolApprovalRequest) GetCheckType() string {
	if m != nil {
		return m.CheckType
	}
	return ""
}

func (m *ToolApprovalRequest) GetCheckComment() string {
	if m != nil {
		return m.CheckComment
	}
	return ""
}

func (m *ToolApprovalRequest) GetOrigin() string {
	if m != nil {
		return m.Origin
	}
	return ""
}

func (m *ToolApprovalRequest) GetToolId() string {
	if m != nil {
		return m.ToolId
	}
	return ""
}

func (m *ToolApprovalRequest) GetVId() string {
	if m != nil {
		return m.VId
	}
	return ""
}

//
//ToolApproval返回
type ToolApprovalResponse struct {
	//
	//版本类型
	EnvType string `protobuf:"bytes,1,opt,name=envType,proto3" json:"envType" form:"envType"`
	//
	//工具审批结果(approving=待审批;approved=已审批;rejected=审批未通过)
	CheckType string `protobuf:"bytes,2,opt,name=checkType,proto3" json:"checkType" form:"checkType"`
	//
	//审批发起人
	CheckSponsor string `protobuf:"bytes,3,opt,name=checkSponsor,proto3" json:"checkSponsor" form:"checkSponsor"`
	//
	//工具审批结论意见
	CheckComment string `protobuf:"bytes,4,opt,name=checkComment,proto3" json:"checkComment" form:"checkComment"`
	//
	//审批人
	CheckUser            string   `protobuf:"bytes,5,opt,name=checkUser,proto3" json:"checkUser" form:"checkUser"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ToolApprovalResponse) Reset()         { *m = ToolApprovalResponse{} }
func (m *ToolApprovalResponse) String() string { return proto.CompactTextString(m) }
func (*ToolApprovalResponse) ProtoMessage()    {}
func (*ToolApprovalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd8184db34348329, []int{1}
}
func (m *ToolApprovalResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ToolApprovalResponse.Unmarshal(m, b)
}
func (m *ToolApprovalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ToolApprovalResponse.Marshal(b, m, deterministic)
}
func (m *ToolApprovalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ToolApprovalResponse.Merge(m, src)
}
func (m *ToolApprovalResponse) XXX_Size() int {
	return xxx_messageInfo_ToolApprovalResponse.Size(m)
}
func (m *ToolApprovalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ToolApprovalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ToolApprovalResponse proto.InternalMessageInfo

func (m *ToolApprovalResponse) GetEnvType() string {
	if m != nil {
		return m.EnvType
	}
	return ""
}

func (m *ToolApprovalResponse) GetCheckType() string {
	if m != nil {
		return m.CheckType
	}
	return ""
}

func (m *ToolApprovalResponse) GetCheckSponsor() string {
	if m != nil {
		return m.CheckSponsor
	}
	return ""
}

func (m *ToolApprovalResponse) GetCheckComment() string {
	if m != nil {
		return m.CheckComment
	}
	return ""
}

func (m *ToolApprovalResponse) GetCheckUser() string {
	if m != nil {
		return m.CheckUser
	}
	return ""
}

//
//ToolApprovalApi返回
type ToolApprovalResponseWrapper struct {
	//
	//返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code" form:"code"`
	//
	//返回码解释
	CodeExplain string `protobuf:"bytes,2,opt,name=codeExplain,proto3" json:"codeExplain" form:"codeExplain"`
	//
	//错误详情
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error" form:"error"`
	//
	//返回数据
	Data                 *ToolApprovalResponse `protobuf:"bytes,4,opt,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ToolApprovalResponseWrapper) Reset()         { *m = ToolApprovalResponseWrapper{} }
func (m *ToolApprovalResponseWrapper) String() string { return proto.CompactTextString(m) }
func (*ToolApprovalResponseWrapper) ProtoMessage()    {}
func (*ToolApprovalResponseWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd8184db34348329, []int{2}
}
func (m *ToolApprovalResponseWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ToolApprovalResponseWrapper.Unmarshal(m, b)
}
func (m *ToolApprovalResponseWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ToolApprovalResponseWrapper.Marshal(b, m, deterministic)
}
func (m *ToolApprovalResponseWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ToolApprovalResponseWrapper.Merge(m, src)
}
func (m *ToolApprovalResponseWrapper) XXX_Size() int {
	return xxx_messageInfo_ToolApprovalResponseWrapper.Size(m)
}
func (m *ToolApprovalResponseWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_ToolApprovalResponseWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_ToolApprovalResponseWrapper proto.InternalMessageInfo

func (m *ToolApprovalResponseWrapper) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ToolApprovalResponseWrapper) GetCodeExplain() string {
	if m != nil {
		return m.CodeExplain
	}
	return ""
}

func (m *ToolApprovalResponseWrapper) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *ToolApprovalResponseWrapper) GetData() *ToolApprovalResponse {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*ToolApprovalRequest)(nil), "basic.ToolApprovalRequest")
	proto.RegisterType((*ToolApprovalResponse)(nil), "basic.ToolApprovalResponse")
	proto.RegisterType((*ToolApprovalResponseWrapper)(nil), "basic.ToolApprovalResponseWrapper")
}

func init() { proto.RegisterFile("tool_approval.proto", fileDescriptor_dd8184db34348329) }

var fileDescriptor_dd8184db34348329 = []byte{
	// 577 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x94, 0x5d, 0x6f, 0x12, 0x41,
	0x14, 0x86, 0x53, 0x0a, 0x35, 0x1d, 0xaa, 0xd6, 0xa1, 0x51, 0xd2, 0x5e, 0xac, 0x1d, 0xda, 0x86,
	0xa6, 0xcc, 0x6e, 0x85, 0x44, 0x2d, 0x44, 0x81, 0x1a, 0x4d, 0x9a, 0x18, 0x2f, 0xd6, 0x1a, 0x63,
	0x11, 0xc9, 0x7e, 0x0c, 0xb0, 0xe9, 0xc2, 0xac, 0xbb, 0x03, 0xd5, 0x42, 0xfd, 0xa9, 0x6b, 0xe2,
	0x85, 0x3f, 0x60, 0xe3, 0xb5, 0x31, 0x33, 0x3b, 0xf2, 0xd1, 0x36, 0xa6, 0x5e, 0x31, 0x33, 0xef,
	0x79, 0xe6, 0x9c, 0xf3, 0x9e, 0x61, 0x41, 0x86, 0x51, 0xea, 0xb6, 0x0c, 0xcf, 0xf3, 0xe9, 0xd0,
	0x70, 0x55, 0xcf, 0xa7, 0x8c, 0xc2, 0x94, 0x69, 0x04, 0x8e, 0xb5, 0x8e, 0x3b, 0x0e, 0xeb, 0x0e,
	0x4c, 0xd5, 0xa2, 0x3d, 0xad, 0x43, 0x3b, 0x54, 0x13, 0xaa, 0x39, 0x68, 0x8b, 0x9d, 0xd8, 0x88,
	0x55, 0x4c, 0xad, 0x3f, 0x9e, 0x09, 0xef, 0x9d, 0x39, 0xec, 0x94, 0x9e, 0x69, 0x1d, 0x8a, 0x85,
	0x88, 0x87, 0x86, 0xeb, 0xd8, 0x06, 0xa3, 0x7e, 0xa0, 0x4d, 0x96, 0x31, 0x87, 0x7e, 0x27, 0x40,
	0xe6, 0x98, 0x52, 0xb7, 0x2e, 0x8b, 0xd0, 0xc9, 0xe7, 0x01, 0x09, 0x18, 0x2c, 0x82, 0x65, 0xab,
	0x4b, 0xac, 0xd3, 0xe3, 0xaf, 0x1e, 0xc9, 0x2e, 0x3c, 0x5c, 0xc8, 0x2f, 0x1f, 0xae, 0x45, 0xa1,
	0xb2, 0xda, 0xa6, 0x7e, 0xaf, 0x8c, 0x26, 0x12, 0xd2, 0xa7, 0x61, 0xb0, 0x02, 0x56, 0xc4, 0xe6,
	0x05, 0xed, 0xf5, 0x48, 0x9f, 0x65, 0x13, 0x02, 0x7b, 0x10, 0x85, 0x4a, 0x66, 0x06, 0x93, 0x2a,
	0xd2, 0xe7, 0x82, 0xe1, 0x08, 0x2c, 0x51, 0xdf, 0xe9, 0x38, 0xfd, 0xec, 0xa2, 0xc0, 0xac, 0x28,
	0x54, 0x6e, 0xc7, 0x58, 0x7c, 0x8e, 0x7e, 0x7c, 0x57, 0xde, 0x80, 0xd7, 0xf9, 0x8f, 0x66, 0xbe,
	0xcb, 0x98, 0x17, 0x54, 0xc7, 0x6d, 0xe6, 0x8d, 0xdb, 0x8e, 0x4b, 0x76, 0xcb, 0x9a, 0xb6, 0x5b,
	0x6d, 0xe0, 0x3a, 0x3e, 0x31, 0xf0, 0xf9, 0x3e, 0x3e, 0xd8, 0xdb, 0xa9, 0xe5, 0xb4, 0xed, 0xea,
	0xb3, 0x6f, 0xad, 0xf1, 0x66, 0xb9, 0xa0, 0x56, 0x9a, 0x7b, 0x57, 0x44, 0xae, 0x35, 0x75, 0x99,
	0x12, 0xd6, 0xc0, 0x12, 0x1f, 0xc5, 0x91, 0x9d, 0x4d, 0x8a, 0xe4, 0xf9, 0x69, 0xf2, 0xf8, 0x9c,
	0x27, 0xcf, 0x80, 0x7b, 0x9f, 0x1a, 0x06, 0x6e, 0xd7, 0xf1, 0xab, 0x7d, 0x7c, 0xd0, 0x1c, 0x95,
	0x8a, 0x17, 0x5b, 0xba, 0xe4, 0xe0, 0x13, 0xb0, 0x38, 0x3c, 0xb2, 0xb3, 0x29, 0x81, 0x6f, 0x47,
	0xa1, 0x02, 0x62, 0x7c, 0xf8, 0x0f, 0x96, 0x13, 0xe8, 0x57, 0x02, 0xac, 0xcd, 0x0f, 0x20, 0xf0,
	0x68, 0x3f, 0x20, 0xb0, 0x00, 0x6e, 0x91, 0xfe, 0x70, 0xc6, 0x7f, 0x18, 0x85, 0xca, 0x9d, 0xf8,
	0x56, 0x29, 0x20, 0xfd, 0x6f, 0xc8, 0xfc, 0xbc, 0x12, 0x37, 0x9b, 0x97, 0x29, 0xe7, 0xf5, 0x96,
	0x27, 0xa4, 0xbe, 0x34, 0xfe, 0xf9, 0xa5, 0x79, 0x49, 0x95, 0x77, 0x91, 0x03, 0x9b, 0xbc, 0x8b,
	0xf3, 0x3a, 0x3e, 0xe1, 0x5d, 0x34, 0xd4, 0xc9, 0xba, 0x85, 0x9b, 0xa3, 0x62, 0xa1, 0xf4, 0xe8,
	0x62, 0x4b, 0x9f, 0xbb, 0xf3, 0xca, 0x9b, 0x48, 0xfe, 0xcf, 0x9b, 0xf8, 0x20, 0x9b, 0x7a, 0x17,
	0x10, 0x5f, 0x5a, 0x5b, 0xb9, 0xd4, 0x14, 0x97, 0x6e, 0x5c, 0xda, 0xf4, 0x36, 0xf4, 0x73, 0x01,
	0x6c, 0x5c, 0x67, 0xfb, 0x7b, 0xdf, 0xf0, 0x3c, 0xe2, 0xc3, 0x1c, 0x48, 0x5a, 0xd4, 0x8e, 0xad,
	0x4f, 0x1d, 0xde, 0x8d, 0x42, 0x25, 0x2d, 0xb3, 0x52, 0x9b, 0x20, 0x5d, 0x88, 0xf0, 0x29, 0x48,
	0xf3, 0xdf, 0x97, 0x5f, 0x3c, 0xd7, 0x70, 0xfa, 0xd2, 0xf6, 0xfb, 0x51, 0xa8, 0xc0, 0x69, 0xac,
	0x14, 0x91, 0x3e, 0x1b, 0x0a, 0x77, 0x40, 0x8a, 0xf8, 0xfe, 0xc4, 0xf3, 0xd5, 0x28, 0x54, 0x56,
	0xe4, 0x68, 0xf9, 0x31, 0xd2, 0x63, 0x19, 0xd6, 0x40, 0xd2, 0x36, 0x98, 0x21, 0x6c, 0x4b, 0x17,
	0x37, 0x54, 0xf1, 0x6d, 0x50, 0xaf, 0x2b, 0x7c, 0xb6, 0x46, 0x8e, 0x20, 0x5d, 0x90, 0xe6, 0x92,
	0xf8, 0x9f, 0x97, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0xd5, 0x5a, 0x9a, 0x76, 0x6c, 0x04, 0x00,
	0x00,
}
