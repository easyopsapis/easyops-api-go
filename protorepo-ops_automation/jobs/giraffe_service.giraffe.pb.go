// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: giraffe_service.proto

package jobs

import (
	context "context"
	fmt "fmt"
	giraffe_micro "github.com/easyops-cn/giraffe-micro"
	go_proto_giraffe "github.com/easyops-cn/go-proto-giraffe"
	proto "github.com/gogo/protobuf/proto"
	ops_automation "github.com/easyopsapis/easyops-api-go/protorepo-models/easyops/model/ops_automation"
	io "io"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ = io.EOF
var _ context.Context
var _ giraffe_micro.Client
var _ go_proto_giraffe.Contract

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = giraffe_micro.SupportPackageIsVersion4 // please upgrade the giraffe_micro package

// Client is the client API for jobs service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type Client interface {
	CreateJobsExcution(ctx context.Context, in *CreateJobsExcutionRequest) (*CreateJobsExcutionResponse, error)
	CreateJobs(ctx context.Context, in *ops_automation.Jobs) (*CreateJobsResponse, error)
	DeleteJobs(ctx context.Context, in *DeleteJobsRequest) (*DeleteJobsResponse, error)
	GetJobs(ctx context.Context, in *GetJobsRequest) (*ops_automation.JobDetails, error)
	GetJobChangeLog(ctx context.Context, in *GetJobChangeLogRequest) (*GetJobChangeLogResponse, error)
	ListJobs(ctx context.Context, in *ListJobsRequest) (*ListJobsResponse, error)
	UpdateJobs(ctx context.Context, in *ops_automation.Jobs) (*UpdateJobsResponse, error)
}

type client struct {
	c giraffe_micro.Client
}

func NewClient(c giraffe_micro.Client) Client {
	return &client{
		c: c,
	}
}

func (c *client) CreateJobsExcution(ctx context.Context, in *CreateJobsExcutionRequest) (*CreateJobsExcutionResponse, error) {
	out := new(CreateJobsExcutionResponse)
	err := c.c.Invoke(ctx, _CreateJobsExcutionMethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) CreateJobs(ctx context.Context, in *ops_automation.Jobs) (*CreateJobsResponse, error) {
	out := new(CreateJobsResponse)
	err := c.c.Invoke(ctx, _CreateJobsMethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) DeleteJobs(ctx context.Context, in *DeleteJobsRequest) (*DeleteJobsResponse, error) {
	out := new(DeleteJobsResponse)
	err := c.c.Invoke(ctx, _DeleteJobsMethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) GetJobs(ctx context.Context, in *GetJobsRequest) (*ops_automation.JobDetails, error) {
	out := new(ops_automation.JobDetails)
	err := c.c.Invoke(ctx, _GetJobsMethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) GetJobChangeLog(ctx context.Context, in *GetJobChangeLogRequest) (*GetJobChangeLogResponse, error) {
	out := new(GetJobChangeLogResponse)
	err := c.c.Invoke(ctx, _GetJobChangeLogMethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) ListJobs(ctx context.Context, in *ListJobsRequest) (*ListJobsResponse, error) {
	out := new(ListJobsResponse)
	err := c.c.Invoke(ctx, _ListJobsMethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) UpdateJobs(ctx context.Context, in *ops_automation.Jobs) (*UpdateJobsResponse, error) {
	out := new(UpdateJobsResponse)
	err := c.c.Invoke(ctx, _UpdateJobsMethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Service is the server API for jobs service.
type Service interface {
	CreateJobsExcution(context.Context, *CreateJobsExcutionRequest) (*CreateJobsExcutionResponse, error)
	CreateJobs(context.Context, *ops_automation.Jobs) (*CreateJobsResponse, error)
	DeleteJobs(context.Context, *DeleteJobsRequest) (*DeleteJobsResponse, error)
	GetJobs(context.Context, *GetJobsRequest) (*ops_automation.JobDetails, error)
	GetJobChangeLog(context.Context, *GetJobChangeLogRequest) (*GetJobChangeLogResponse, error)
	ListJobs(context.Context, *ListJobsRequest) (*ListJobsResponse, error)
	UpdateJobs(context.Context, *ops_automation.Jobs) (*UpdateJobsResponse, error)
}

func _CreateJobsExcutionEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.CreateJobsExcution(ctx, req.(*CreateJobsExcutionRequest))
	}
}

func _CreateJobsEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.CreateJobs(ctx, req.(*ops_automation.Jobs))
	}
}

func _DeleteJobsEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.DeleteJobs(ctx, req.(*DeleteJobsRequest))
	}
}

func _GetJobsEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.GetJobs(ctx, req.(*GetJobsRequest))
	}
}

func _GetJobChangeLogEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.GetJobChangeLog(ctx, req.(*GetJobChangeLogRequest))
	}
}

func _ListJobsEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.ListJobs(ctx, req.(*ListJobsRequest))
	}
}

func _UpdateJobsEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.UpdateJobs(ctx, req.(*ops_automation.Jobs))
	}
}

func RegisterService(s giraffe_micro.Server, srv Service) {
	s.RegisterUnaryEndpoint(_CreateJobsExcutionMethodDesc, _CreateJobsExcutionEndpoint(srv))
	s.RegisterUnaryEndpoint(_CreateJobsMethodDesc, _CreateJobsEndpoint(srv))
	s.RegisterUnaryEndpoint(_DeleteJobsMethodDesc, _DeleteJobsEndpoint(srv))
	s.RegisterUnaryEndpoint(_GetJobsMethodDesc, _GetJobsEndpoint(srv))
	s.RegisterUnaryEndpoint(_GetJobChangeLogMethodDesc, _GetJobChangeLogEndpoint(srv))
	s.RegisterUnaryEndpoint(_ListJobsMethodDesc, _ListJobsEndpoint(srv))
	s.RegisterUnaryEndpoint(_UpdateJobsMethodDesc, _UpdateJobsEndpoint(srv))
}

// Method Description
var _CreateJobsExcutionMethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.ops_automation.jobs.CreateJobsExcution",
		Version: "1.0",
	},
	ServiceName:  "jobs.rpc",
	MethodName:   "CreateJobsExcution",
	RequestType:  (*CreateJobsExcutionRequest)(nil),
	ResponseType: (*CreateJobsExcutionResponse)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Post{
			Post: "/api/ops_automation/v1/jobs/execution",
		},
		Body:         "",
		ResponseBody: "data",
	},
}

var _CreateJobsMethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.ops_automation.jobs.CreateJobs",
		Version: "1.0",
	},
	ServiceName:  "jobs.rpc",
	MethodName:   "CreateJobs",
	RequestType:  (*ops_automation.Jobs)(nil),
	ResponseType: (*CreateJobsResponse)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Post{
			Post: "/api/ops_automation/v1/jobs",
		},
		Body:         "",
		ResponseBody: "data",
	},
}

var _DeleteJobsMethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.ops_automation.jobs.DeleteJobs",
		Version: "1.0",
	},
	ServiceName:  "jobs.rpc",
	MethodName:   "DeleteJobs",
	RequestType:  (*DeleteJobsRequest)(nil),
	ResponseType: (*DeleteJobsResponse)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Delete{
			Delete: "/api/ops_automation/v1/jobs/:jobId",
		},
		Body:         "",
		ResponseBody: "data",
	},
}

var _GetJobsMethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.ops_automation.jobs.GetJobs",
		Version: "1.0",
	},
	ServiceName:  "jobs.rpc",
	MethodName:   "GetJobs",
	RequestType:  (*GetJobsRequest)(nil),
	ResponseType: (*ops_automation.JobDetails)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Get{
			Get: "/api/ops_automation/v1/jobs/:jobId",
		},
		Body:         "",
		ResponseBody: "data",
	},
}

var _GetJobChangeLogMethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.ops_automation.jobs.GetJobChangeLog",
		Version: "1.0",
	},
	ServiceName:  "jobs.rpc",
	MethodName:   "GetJobChangeLog",
	RequestType:  (*GetJobChangeLogRequest)(nil),
	ResponseType: (*GetJobChangeLogResponse)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Get{
			Get: "/api/ops_automation/v1/jobs/:jobId/changeLog",
		},
		Body:         "",
		ResponseBody: "data",
	},
}

var _ListJobsMethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.ops_automation.jobs.ListJobs",
		Version: "1.0",
	},
	ServiceName:  "jobs.rpc",
	MethodName:   "ListJobs",
	RequestType:  (*ListJobsRequest)(nil),
	ResponseType: (*ListJobsResponse)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Get{
			Get: "/api/ops_automation/v1/jobs",
		},
		Body:         "",
		ResponseBody: "data",
	},
}

var _UpdateJobsMethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.ops_automation.jobs.UpdateJobs",
		Version: "1.0",
	},
	ServiceName:  "jobs.rpc",
	MethodName:   "UpdateJobs",
	RequestType:  (*ops_automation.Jobs)(nil),
	ResponseType: (*UpdateJobsResponse)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Put{
			Put: "/api/ops_automation/v1/jobs/:id",
		},
		Body:         "",
		ResponseBody: "data",
	},
}
