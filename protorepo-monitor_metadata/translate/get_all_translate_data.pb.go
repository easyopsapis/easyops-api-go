// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: get_all_translate_data.proto

package translate

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	monitor_metadata "github.com/easyopsapis/easyops-api-go/protorepo-models/easyops/model/monitor_metadata"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//GetAllTranslateMessage返回
type GetAllTranslateMessageResponse struct {
	//
	//code
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code" form:"code"`
	//
	//返回码字符串表示
	CodeExplain string `protobuf:"bytes,2,opt,name=codeExplain,proto3" json:"codeExplain" form:"codeExplain"`
	//
	//返回码字符串表示"
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message" form:"message"`
	//
	//返回数据
	Data                 []*monitor_metadata.TranslateMessage `protobuf:"bytes,4,rep,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *GetAllTranslateMessageResponse) Reset()         { *m = GetAllTranslateMessageResponse{} }
func (m *GetAllTranslateMessageResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllTranslateMessageResponse) ProtoMessage()    {}
func (*GetAllTranslateMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c47176084f6d5c1, []int{0}
}
func (m *GetAllTranslateMessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllTranslateMessageResponse.Unmarshal(m, b)
}
func (m *GetAllTranslateMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllTranslateMessageResponse.Marshal(b, m, deterministic)
}
func (m *GetAllTranslateMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllTranslateMessageResponse.Merge(m, src)
}
func (m *GetAllTranslateMessageResponse) XXX_Size() int {
	return xxx_messageInfo_GetAllTranslateMessageResponse.Size(m)
}
func (m *GetAllTranslateMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllTranslateMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllTranslateMessageResponse proto.InternalMessageInfo

func (m *GetAllTranslateMessageResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetAllTranslateMessageResponse) GetCodeExplain() string {
	if m != nil {
		return m.CodeExplain
	}
	return ""
}

func (m *GetAllTranslateMessageResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetAllTranslateMessageResponse) GetData() []*monitor_metadata.TranslateMessage {
	if m != nil {
		return m.Data
	}
	return nil
}

//
//GetAllTranslateMessageApi返回
type GetAllTranslateMessageResponseWrapper struct {
	//
	//返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code" form:"code"`
	//
	//返回码解释
	CodeExplain string `protobuf:"bytes,2,opt,name=codeExplain,proto3" json:"codeExplain" form:"codeExplain"`
	//
	//错误详情
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error" form:"error"`
	//
	//返回数据
	Data                 *GetAllTranslateMessageResponse `protobuf:"bytes,4,opt,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *GetAllTranslateMessageResponseWrapper) Reset()         { *m = GetAllTranslateMessageResponseWrapper{} }
func (m *GetAllTranslateMessageResponseWrapper) String() string { return proto.CompactTextString(m) }
func (*GetAllTranslateMessageResponseWrapper) ProtoMessage()    {}
func (*GetAllTranslateMessageResponseWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c47176084f6d5c1, []int{1}
}
func (m *GetAllTranslateMessageResponseWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllTranslateMessageResponseWrapper.Unmarshal(m, b)
}
func (m *GetAllTranslateMessageResponseWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllTranslateMessageResponseWrapper.Marshal(b, m, deterministic)
}
func (m *GetAllTranslateMessageResponseWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllTranslateMessageResponseWrapper.Merge(m, src)
}
func (m *GetAllTranslateMessageResponseWrapper) XXX_Size() int {
	return xxx_messageInfo_GetAllTranslateMessageResponseWrapper.Size(m)
}
func (m *GetAllTranslateMessageResponseWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllTranslateMessageResponseWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllTranslateMessageResponseWrapper proto.InternalMessageInfo

func (m *GetAllTranslateMessageResponseWrapper) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetAllTranslateMessageResponseWrapper) GetCodeExplain() string {
	if m != nil {
		return m.CodeExplain
	}
	return ""
}

func (m *GetAllTranslateMessageResponseWrapper) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *GetAllTranslateMessageResponseWrapper) GetData() *GetAllTranslateMessageResponse {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*GetAllTranslateMessageResponse)(nil), "translate.GetAllTranslateMessageResponse")
	proto.RegisterType((*GetAllTranslateMessageResponseWrapper)(nil), "translate.GetAllTranslateMessageResponseWrapper")
}

func init() { proto.RegisterFile("get_all_translate_data.proto", fileDescriptor_2c47176084f6d5c1) }

var fileDescriptor_2c47176084f6d5c1 = []byte{
	// 349 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x92, 0xcf, 0x4b, 0xc3, 0x30,
	0x14, 0xc7, 0xa9, 0xdb, 0x94, 0xa5, 0xa2, 0x92, 0x83, 0x94, 0x21, 0x76, 0x44, 0x94, 0x0a, 0x2e,
	0x85, 0x79, 0x11, 0x6f, 0x0e, 0x64, 0x27, 0x3d, 0x14, 0xc1, 0x63, 0x49, 0xbb, 0xac, 0x0e, 0xd2,
	0xbe, 0x92, 0x64, 0xa0, 0xff, 0x6c, 0xff, 0x88, 0x1e, 0x3c, 0x8a, 0x34, 0xe9, 0x7e, 0x30, 0x70,
	0x37, 0x4f, 0xed, 0x7b, 0xef, 0xf3, 0x6d, 0xdf, 0xa7, 0x0d, 0xba, 0xc8, 0xb8, 0x8e, 0x99, 0x10,
	0xb1, 0x96, 0xac, 0x50, 0x82, 0x69, 0x1e, 0xcf, 0x98, 0x66, 0xb4, 0x94, 0xa0, 0x01, 0xf7, 0xd7,
	0xdd, 0xc1, 0x28, 0x5b, 0xe8, 0x8f, 0x65, 0x42, 0x53, 0xc8, 0xc3, 0x0c, 0x32, 0x08, 0x0d, 0x91,
	0x2c, 0xe7, 0xa6, 0x32, 0x85, 0xb9, 0xb3, 0xc9, 0x41, 0x92, 0x01, 0xe5, 0x4c, 0x7d, 0x41, 0xa9,
	0xa8, 0x80, 0x94, 0x89, 0x30, 0x85, 0x42, 0x4b, 0x96, 0x6a, 0x65, 0x93, 0x92, 0x97, 0x30, 0xca,
	0x61, 0xc6, 0x85, 0x0a, 0x5b, 0x30, 0x34, 0x65, 0x98, 0x43, 0xb1, 0xd0, 0x20, 0xe3, 0x9c, 0x6b,
	0xd6, 0xec, 0x12, 0x6e, 0x56, 0xcb, 0xb9, 0x52, 0x2c, 0xe3, 0xf6, 0x1d, 0xe4, 0xdb, 0x41, 0x97,
	0x53, 0xae, 0x9f, 0x84, 0x78, 0x5b, 0x11, 0x2f, 0x16, 0x88, 0xb8, 0x2a, 0xa1, 0x50, 0x1c, 0x5f,
	0xa1, 0x6e, 0x0a, 0x33, 0xee, 0x39, 0x43, 0x27, 0xe8, 0x4d, 0x4e, 0xeb, 0xca, 0x77, 0xe7, 0x20,
	0xf3, 0x47, 0xd2, 0x74, 0x49, 0x64, 0x86, 0xf8, 0x01, 0xb9, 0xcd, 0xf5, 0xf9, 0xb3, 0x14, 0x6c,
	0x51, 0x78, 0x07, 0x43, 0x27, 0xe8, 0x4f, 0xce, 0xeb, 0xca, 0xc7, 0x1b, 0xb6, 0x1d, 0x92, 0x68,
	0x1b, 0xc5, 0x77, 0xe8, 0xa8, 0x5d, 0xc9, 0xeb, 0x98, 0x14, 0xae, 0x2b, 0xff, 0xc4, 0xa6, 0xda,
	0x01, 0x89, 0x56, 0x08, 0x9e, 0xa2, 0x6e, 0xe3, 0xe3, 0x75, 0x87, 0x9d, 0xc0, 0x1d, 0x13, 0xba,
	0x2b, 0x4a, 0x77, 0x35, 0xb6, 0x17, 0x6e, 0x00, 0x12, 0x99, 0x07, 0x90, 0x1f, 0x07, 0x5d, 0xef,
	0x17, 0x7f, 0x97, 0xac, 0x2c, 0xb9, 0xfc, 0x6f, 0xff, 0x1b, 0xd4, 0xe3, 0x52, 0x82, 0x6c, 0xed,
	0xcf, 0xea, 0xca, 0x3f, 0xb6, 0x19, 0xd3, 0x26, 0x91, 0x1d, 0xe3, 0xd7, 0xb5, 0xb9, 0x13, 0xb8,
	0xe3, 0x5b, 0xba, 0xfe, 0xa3, 0x74, 0xbf, 0xc6, 0x1f, 0x1f, 0x20, 0x39, 0x34, 0x07, 0xe0, 0xfe,
	0x37, 0x00, 0x00, 0xff, 0xff, 0x86, 0xa8, 0xf1, 0xee, 0xbe, 0x02, 0x00, 0x00,
}
