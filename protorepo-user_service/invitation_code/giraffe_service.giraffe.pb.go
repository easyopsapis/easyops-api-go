// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: giraffe_service.proto

package invitation_code

import (
	context "context"
	fmt "fmt"
	giraffe_micro "github.com/easyops-cn/giraffe-micro"
	_ "github.com/easyops-cn/go-proto-giraffe"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	io "io"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ = io.EOF
var _ context.Context
var _ giraffe_micro.Client

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = giraffe_micro.SupportPackageIsVersion3 // please upgrade the giraffe_micro package

// Client is the client API for invitation_code service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type Client interface {
	CheckInvitationCode(ctx context.Context, in *CheckInvitationCodeRequest) (*CheckInvitationCodeResponse, error)
	GetInvitationCode(ctx context.Context, in *types.Empty) (*GetInvitationCodeResponse, error)
	ResetInvitationCode(ctx context.Context, in *types.Empty) (*ResetInvitationCodeResponse, error)
}

type client struct {
	c giraffe_micro.Client
}

func NewClient(c giraffe_micro.Client) Client {
	return &client{
		c: c,
	}
}

func (c *client) CheckInvitationCode(ctx context.Context, in *CheckInvitationCodeRequest) (*CheckInvitationCodeResponse, error) {
	out := new(CheckInvitationCodeResponse)
	err := c.c.Invoke(ctx, _CheckInvitationCodeContract, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) GetInvitationCode(ctx context.Context, in *types.Empty) (*GetInvitationCodeResponse, error) {
	out := new(GetInvitationCodeResponse)
	err := c.c.Invoke(ctx, _GetInvitationCodeContract, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) ResetInvitationCode(ctx context.Context, in *types.Empty) (*ResetInvitationCodeResponse, error) {
	out := new(ResetInvitationCodeResponse)
	err := c.c.Invoke(ctx, _ResetInvitationCodeContract, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Service is the server API for invitation_code service.
type Service interface {
	CheckInvitationCode(context.Context, *CheckInvitationCodeRequest) (*CheckInvitationCodeResponse, error)
	GetInvitationCode(context.Context, *types.Empty) (*GetInvitationCodeResponse, error)
	ResetInvitationCode(context.Context, *types.Empty) (*ResetInvitationCodeResponse, error)
}

func _CheckInvitationCodeEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.CheckInvitationCode(ctx, req.(*CheckInvitationCodeRequest))
	}
}

func _GetInvitationCodeEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.GetInvitationCode(ctx, req.(*types.Empty))
	}
}

func _ResetInvitationCodeEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.ResetInvitationCode(ctx, req.(*types.Empty))
	}
}

func RegisterService(s giraffe_micro.Server, srv Service) {
	s.RegisterUnaryEndpoint(_CheckInvitationCodeContract, _CheckInvitationCodeEndpoint(srv))
	s.RegisterUnaryEndpoint(_GetInvitationCodeContract, _GetInvitationCodeEndpoint(srv))
	s.RegisterUnaryEndpoint(_ResetInvitationCodeContract, _ResetInvitationCodeEndpoint(srv))
}

// API Contract
var _CheckInvitationCodeContract = &checkInvitationCodeContract{}

type checkInvitationCodeContract struct{}

func (*checkInvitationCodeContract) ServiceName() string { return "invitation_code.rpc" }
func (*checkInvitationCodeContract) MethodName() string  { return "CheckInvitationCode" }
func (*checkInvitationCodeContract) RequestMessage() interface{} {
	return new(CheckInvitationCodeRequest)
}
func (*checkInvitationCodeContract) ResponseMessage() interface{} {
	return new(CheckInvitationCodeRequest)
}
func (*checkInvitationCodeContract) ContractName() string {
	return "easyops.api.user_service.invitation_code.CheckInvitationCode"
}
func (*checkInvitationCodeContract) ContractVersion() string { return "1.0" }
func (*checkInvitationCodeContract) Pattern() (string, string) {
	return "GET", "/api/v1/invitation/code/:code/check"
}
func (*checkInvitationCodeContract) Body() string { return "" }

var _GetInvitationCodeContract = &getInvitationCodeContract{}

type getInvitationCodeContract struct{}

func (*getInvitationCodeContract) ServiceName() string          { return "invitation_code.rpc" }
func (*getInvitationCodeContract) MethodName() string           { return "GetInvitationCode" }
func (*getInvitationCodeContract) RequestMessage() interface{}  { return new(types.Empty) }
func (*getInvitationCodeContract) ResponseMessage() interface{} { return new(types.Empty) }
func (*getInvitationCodeContract) ContractName() string {
	return "easyops.api.user_service.invitation_code.GetInvitationCode"
}
func (*getInvitationCodeContract) ContractVersion() string   { return "1.0" }
func (*getInvitationCodeContract) Pattern() (string, string) { return "GET", "/api/v1/invitation/code" }
func (*getInvitationCodeContract) Body() string              { return "" }

var _ResetInvitationCodeContract = &resetInvitationCodeContract{}

type resetInvitationCodeContract struct{}

func (*resetInvitationCodeContract) ServiceName() string          { return "invitation_code.rpc" }
func (*resetInvitationCodeContract) MethodName() string           { return "ResetInvitationCode" }
func (*resetInvitationCodeContract) RequestMessage() interface{}  { return new(types.Empty) }
func (*resetInvitationCodeContract) ResponseMessage() interface{} { return new(types.Empty) }
func (*resetInvitationCodeContract) ContractName() string {
	return "easyops.api.user_service.invitation_code.ResetInvitationCode"
}
func (*resetInvitationCodeContract) ContractVersion() string { return "1.0" }
func (*resetInvitationCodeContract) Pattern() (string, string) {
	return "PUT", "/api/v1/invitation/code/_reset"
}
func (*resetInvitationCodeContract) Body() string { return "" }
