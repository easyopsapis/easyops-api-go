// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: list_alert_rule_all.proto

package alert_rule

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	monitor "github.com/easyopsapis/easyops-api-go/protorepo-models/easyops/model/monitor"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//ListAlertRuleAll返回
type ListAlertRuleAllResponse struct {
	//
	//code
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code" form:"code"`
	//
	//msg
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg" form:"msg"`
	//
	//总数
	Total int32 `protobuf:"varint,3,opt,name=total,proto3" json:"total" form:"total"`
	//
	//页数
	Page int32 `protobuf:"varint,4,opt,name=page,proto3" json:"page" form:"page"`
	//
	//分页大小
	PageSize int32 `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size" form:"page_size"`
	//
	//data
	Data                 []*monitor.AlertRule `protobuf:"bytes,6,rep,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ListAlertRuleAllResponse) Reset()         { *m = ListAlertRuleAllResponse{} }
func (m *ListAlertRuleAllResponse) String() string { return proto.CompactTextString(m) }
func (*ListAlertRuleAllResponse) ProtoMessage()    {}
func (*ListAlertRuleAllResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a29effb61c20421a, []int{0}
}
func (m *ListAlertRuleAllResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAlertRuleAllResponse.Unmarshal(m, b)
}
func (m *ListAlertRuleAllResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAlertRuleAllResponse.Marshal(b, m, deterministic)
}
func (m *ListAlertRuleAllResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAlertRuleAllResponse.Merge(m, src)
}
func (m *ListAlertRuleAllResponse) XXX_Size() int {
	return xxx_messageInfo_ListAlertRuleAllResponse.Size(m)
}
func (m *ListAlertRuleAllResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAlertRuleAllResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListAlertRuleAllResponse proto.InternalMessageInfo

func (m *ListAlertRuleAllResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListAlertRuleAllResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *ListAlertRuleAllResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ListAlertRuleAllResponse) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListAlertRuleAllResponse) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListAlertRuleAllResponse) GetData() []*monitor.AlertRule {
	if m != nil {
		return m.Data
	}
	return nil
}

//
//ListAlertRuleAllApi返回
type ListAlertRuleAllResponseWrapper struct {
	//
	//返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code" form:"code"`
	//
	//返回码解释
	CodeExplain string `protobuf:"bytes,2,opt,name=codeExplain,proto3" json:"codeExplain" form:"codeExplain"`
	//
	//错误详情
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error" form:"error"`
	//
	//返回数据
	Data                 *ListAlertRuleAllResponse `protobuf:"bytes,4,opt,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ListAlertRuleAllResponseWrapper) Reset()         { *m = ListAlertRuleAllResponseWrapper{} }
func (m *ListAlertRuleAllResponseWrapper) String() string { return proto.CompactTextString(m) }
func (*ListAlertRuleAllResponseWrapper) ProtoMessage()    {}
func (*ListAlertRuleAllResponseWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_a29effb61c20421a, []int{1}
}
func (m *ListAlertRuleAllResponseWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAlertRuleAllResponseWrapper.Unmarshal(m, b)
}
func (m *ListAlertRuleAllResponseWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAlertRuleAllResponseWrapper.Marshal(b, m, deterministic)
}
func (m *ListAlertRuleAllResponseWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAlertRuleAllResponseWrapper.Merge(m, src)
}
func (m *ListAlertRuleAllResponseWrapper) XXX_Size() int {
	return xxx_messageInfo_ListAlertRuleAllResponseWrapper.Size(m)
}
func (m *ListAlertRuleAllResponseWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAlertRuleAllResponseWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_ListAlertRuleAllResponseWrapper proto.InternalMessageInfo

func (m *ListAlertRuleAllResponseWrapper) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListAlertRuleAllResponseWrapper) GetCodeExplain() string {
	if m != nil {
		return m.CodeExplain
	}
	return ""
}

func (m *ListAlertRuleAllResponseWrapper) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *ListAlertRuleAllResponseWrapper) GetData() *ListAlertRuleAllResponse {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*ListAlertRuleAllResponse)(nil), "alert_rule.ListAlertRuleAllResponse")
	proto.RegisterType((*ListAlertRuleAllResponseWrapper)(nil), "alert_rule.ListAlertRuleAllResponseWrapper")
}

func init() { proto.RegisterFile("list_alert_rule_all.proto", fileDescriptor_a29effb61c20421a) }

var fileDescriptor_a29effb61c20421a = []byte{
	// 429 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xcf, 0xaa, 0xd4, 0x30,
	0x18, 0xc5, 0x9d, 0x7f, 0x17, 0x27, 0x23, 0x3a, 0x04, 0x94, 0x3a, 0x9b, 0x0e, 0x51, 0x64, 0x5c,
	0x4c, 0x03, 0x57, 0x50, 0x71, 0x77, 0x2f, 0xb8, 0x10, 0x5c, 0xc5, 0x85, 0xcb, 0x21, 0xd3, 0xc9,
	0xad, 0xc1, 0x74, 0xbe, 0x90, 0xa4, 0x5e, 0xbd, 0x0f, 0xe4, 0x63, 0x55, 0xf0, 0x11, 0xea, 0x0b,
	0x48, 0xbe, 0xd6, 0x69, 0x37, 0x03, 0xae, 0x9a, 0x9c, 0xf3, 0x3b, 0x49, 0xbf, 0x43, 0xc8, 0x53,
	0xa3, 0x7d, 0xd8, 0x49, 0xa3, 0x5c, 0xd8, 0xb9, 0xca, 0xa8, 0x9d, 0x34, 0x26, 0xb3, 0x0e, 0x02,
	0x50, 0xd2, 0xab, 0xab, 0x6d, 0xa1, 0xc3, 0x97, 0x6a, 0x9f, 0xe5, 0x50, 0xf2, 0x02, 0x0a, 0xe0,
	0x88, 0xec, 0xab, 0x1b, 0xdc, 0xe1, 0x06, 0x57, 0x6d, 0x74, 0x25, 0x0a, 0xc8, 0x94, 0xf4, 0x3f,
	0xc0, 0xfa, 0xcc, 0x40, 0x2e, 0x0d, 0xcf, 0xe1, 0x18, 0x9c, 0xcc, 0x83, 0x6f, 0x93, 0x4e, 0x59,
	0xd8, 0x96, 0x70, 0x50, 0xc6, 0xf3, 0x0e, 0xe4, 0xb8, 0xe5, 0x25, 0x1c, 0x75, 0x00, 0xc7, 0xfb,
	0xcb, 0xbb, 0x33, 0x5f, 0x0f, 0x7e, 0xa1, 0xbc, 0xd5, 0xe1, 0x2b, 0xdc, 0xf2, 0x02, 0xb6, 0x68,
	0x6e, 0xbf, 0x49, 0xa3, 0x0f, 0x32, 0x80, 0xf3, 0xfc, 0xb4, 0x6c, 0x73, 0xec, 0xe7, 0x98, 0x24,
	0x1f, 0xb5, 0x0f, 0x57, 0xf1, 0x40, 0x51, 0x19, 0x75, 0x65, 0x8c, 0x50, 0xde, 0xc2, 0xd1, 0x2b,
	0xfa, 0x8c, 0x4c, 0x73, 0x38, 0xa8, 0x64, 0xb4, 0x1e, 0x6d, 0x66, 0xd7, 0x8f, 0x9a, 0x3a, 0x5d,
	0xdc, 0x80, 0x2b, 0xdf, 0xb1, 0xa8, 0x32, 0x81, 0x26, 0x5d, 0x93, 0x49, 0xe9, 0x8b, 0x64, 0xbc,
	0x1e, 0x6d, 0xe6, 0xd7, 0x0f, 0x9b, 0x3a, 0x25, 0x2d, 0x53, 0xfa, 0x82, 0x89, 0x68, 0xd1, 0x17,
	0x64, 0x16, 0x20, 0x48, 0x93, 0x4c, 0xf0, 0x9c, 0x65, 0x53, 0xa7, 0x0f, 0x5a, 0x06, 0x65, 0x26,
	0x5a, 0x9b, 0xbe, 0x24, 0x53, 0x2b, 0x0b, 0x95, 0x4c, 0x11, 0x7b, 0xdc, 0x5f, 0x17, 0x55, 0xf6,
	0xfb, 0x57, 0x3a, 0x5e, 0xde, 0x13, 0x88, 0xd0, 0x37, 0x64, 0x1e, 0xbf, 0x3b, 0xaf, 0xef, 0x54,
	0x32, 0x43, 0x7e, 0xd5, 0xd4, 0xe9, 0xb2, 0xe7, 0xd1, 0xfa, 0x17, 0xba, 0x1f, 0x95, 0x4f, 0xfa,
	0x2e, 0x06, 0xa7, 0x07, 0x19, 0x64, 0x72, 0xb1, 0x9e, 0x6c, 0x16, 0x97, 0x34, 0xeb, 0x0a, 0xcd,
	0x4e, 0xf3, 0x0f, 0xc7, 0x8c, 0x24, 0x13, 0x18, 0x60, 0x7f, 0x46, 0x24, 0x3d, 0x57, 0xd4, 0x67,
	0x27, 0xad, 0x55, 0xee, 0xff, 0xfa, 0x7a, 0x4b, 0x16, 0xf1, 0xfb, 0xfe, 0xbb, 0x35, 0x52, 0x1f,
	0xbb, 0xde, 0x9e, 0x34, 0x75, 0x4a, 0x7b, 0xb6, 0x33, 0x99, 0x18, 0xa2, 0xb1, 0x47, 0xe5, 0x1c,
	0x38, 0xec, 0x71, 0x3e, 0xec, 0x11, 0x65, 0x26, 0x5a, 0x9b, 0x7e, 0xe8, 0x66, 0x8c, 0x3d, 0x2e,
	0x2e, 0x9f, 0x67, 0x83, 0xc7, 0x72, 0x6e, 0x82, 0x33, 0x53, 0xef, 0x2f, 0xf0, 0x95, 0xbc, 0xfa,
	0x1b, 0x00, 0x00, 0xff, 0xff, 0x78, 0xf4, 0xb0, 0xfa, 0x09, 0x03, 0x00, 0x00,
}
