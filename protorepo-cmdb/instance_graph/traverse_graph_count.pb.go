// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: traverse_graph_count.proto

package instance_graph

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	_ "github.com/mwitkow/go-proto-validators"
	cmdb "github.com/easyopsapis/easyops-api-go/protorepo-models/easyops/model/cmdb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

//
//TraverseGraphCount请求
type TraverseGraphCountRequest struct {
	//
	//模型Id
	ObjectId string `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id" form:"object_id"`
	//
	//实例的过滤条件 (过滤条件不仅支持属性的过滤，也支持关系字段的过滤)
	Query *types.Struct `protobuf:"bytes,2,opt,name=query,proto3" json:"query" form:"query"`
	//
	//指定返回此关系指向模型的fields
	Fields *types.Struct `protobuf:"bytes,3,opt,name=fields,proto3" json:"fields" form:"fields"`
	//
	//子节点列表
	Child                []*cmdb.TraverseChildNode `protobuf:"bytes,4,rep,name=child,proto3" json:"child" form:"child"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *TraverseGraphCountRequest) Reset()         { *m = TraverseGraphCountRequest{} }
func (m *TraverseGraphCountRequest) String() string { return proto.CompactTextString(m) }
func (*TraverseGraphCountRequest) ProtoMessage()    {}
func (*TraverseGraphCountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_826b6fc5b945696b, []int{0}
}
func (m *TraverseGraphCountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraverseGraphCountRequest.Unmarshal(m, b)
}
func (m *TraverseGraphCountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraverseGraphCountRequest.Marshal(b, m, deterministic)
}
func (m *TraverseGraphCountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraverseGraphCountRequest.Merge(m, src)
}
func (m *TraverseGraphCountRequest) XXX_Size() int {
	return xxx_messageInfo_TraverseGraphCountRequest.Size(m)
}
func (m *TraverseGraphCountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TraverseGraphCountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TraverseGraphCountRequest proto.InternalMessageInfo

func (m *TraverseGraphCountRequest) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *TraverseGraphCountRequest) GetQuery() *types.Struct {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *TraverseGraphCountRequest) GetFields() *types.Struct {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *TraverseGraphCountRequest) GetChild() []*cmdb.TraverseChildNode {
	if m != nil {
		return m.Child
	}
	return nil
}

//
//TraverseGraphCount返回
type TraverseGraphCountResponse struct {
	//
	//根节点模型Id
	ObjectId string `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id" form:"object_id"`
	//
	//根节点instanceId
	InstanceId string `protobuf:"bytes,2,opt,name=instanceId,proto3" json:"instanceId" form:"instanceId"`
	//
	//叶子节点个数统计
	List                 []*TraverseGraphCountResponse_List `protobuf:"bytes,3,rep,name=list,proto3" json:"list" form:"list"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *TraverseGraphCountResponse) Reset()         { *m = TraverseGraphCountResponse{} }
func (m *TraverseGraphCountResponse) String() string { return proto.CompactTextString(m) }
func (*TraverseGraphCountResponse) ProtoMessage()    {}
func (*TraverseGraphCountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_826b6fc5b945696b, []int{1}
}
func (m *TraverseGraphCountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraverseGraphCountResponse.Unmarshal(m, b)
}
func (m *TraverseGraphCountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraverseGraphCountResponse.Marshal(b, m, deterministic)
}
func (m *TraverseGraphCountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraverseGraphCountResponse.Merge(m, src)
}
func (m *TraverseGraphCountResponse) XXX_Size() int {
	return xxx_messageInfo_TraverseGraphCountResponse.Size(m)
}
func (m *TraverseGraphCountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TraverseGraphCountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TraverseGraphCountResponse proto.InternalMessageInfo

func (m *TraverseGraphCountResponse) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *TraverseGraphCountResponse) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *TraverseGraphCountResponse) GetList() []*TraverseGraphCountResponse_List {
	if m != nil {
		return m.List
	}
	return nil
}

type TraverseGraphCountResponse_List struct {
	//
	//叶子节点模型Id
	ObjectId string `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id" form:"object_id"`
	//
	//路径，eg: a.b.c
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path" form:"path"`
	//
	//节点个数
	Count                int32    `protobuf:"varint,3,opt,name=count,proto3" json:"count" form:"count"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TraverseGraphCountResponse_List) Reset()         { *m = TraverseGraphCountResponse_List{} }
func (m *TraverseGraphCountResponse_List) String() string { return proto.CompactTextString(m) }
func (*TraverseGraphCountResponse_List) ProtoMessage()    {}
func (*TraverseGraphCountResponse_List) Descriptor() ([]byte, []int) {
	return fileDescriptor_826b6fc5b945696b, []int{1, 0}
}
func (m *TraverseGraphCountResponse_List) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraverseGraphCountResponse_List.Unmarshal(m, b)
}
func (m *TraverseGraphCountResponse_List) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraverseGraphCountResponse_List.Marshal(b, m, deterministic)
}
func (m *TraverseGraphCountResponse_List) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraverseGraphCountResponse_List.Merge(m, src)
}
func (m *TraverseGraphCountResponse_List) XXX_Size() int {
	return xxx_messageInfo_TraverseGraphCountResponse_List.Size(m)
}
func (m *TraverseGraphCountResponse_List) XXX_DiscardUnknown() {
	xxx_messageInfo_TraverseGraphCountResponse_List.DiscardUnknown(m)
}

var xxx_messageInfo_TraverseGraphCountResponse_List proto.InternalMessageInfo

func (m *TraverseGraphCountResponse_List) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *TraverseGraphCountResponse_List) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *TraverseGraphCountResponse_List) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

//
//TraverseGraphCountApi返回
type TraverseGraphCountResponseWrapper struct {
	//
	//返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code" form:"code"`
	//
	//返回码解释
	CodeExplain string `protobuf:"bytes,2,opt,name=codeExplain,proto3" json:"codeExplain" form:"codeExplain"`
	//
	//错误详情
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error" form:"error"`
	//
	//返回数据
	Data                 []*TraverseGraphCountResponse `protobuf:"bytes,4,rep,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *TraverseGraphCountResponseWrapper) Reset()         { *m = TraverseGraphCountResponseWrapper{} }
func (m *TraverseGraphCountResponseWrapper) String() string { return proto.CompactTextString(m) }
func (*TraverseGraphCountResponseWrapper) ProtoMessage()    {}
func (*TraverseGraphCountResponseWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_826b6fc5b945696b, []int{2}
}
func (m *TraverseGraphCountResponseWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraverseGraphCountResponseWrapper.Unmarshal(m, b)
}
func (m *TraverseGraphCountResponseWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraverseGraphCountResponseWrapper.Marshal(b, m, deterministic)
}
func (m *TraverseGraphCountResponseWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraverseGraphCountResponseWrapper.Merge(m, src)
}
func (m *TraverseGraphCountResponseWrapper) XXX_Size() int {
	return xxx_messageInfo_TraverseGraphCountResponseWrapper.Size(m)
}
func (m *TraverseGraphCountResponseWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_TraverseGraphCountResponseWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_TraverseGraphCountResponseWrapper proto.InternalMessageInfo

func (m *TraverseGraphCountResponseWrapper) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *TraverseGraphCountResponseWrapper) GetCodeExplain() string {
	if m != nil {
		return m.CodeExplain
	}
	return ""
}

func (m *TraverseGraphCountResponseWrapper) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *TraverseGraphCountResponseWrapper) GetData() []*TraverseGraphCountResponse {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*TraverseGraphCountRequest)(nil), "instance_graph.TraverseGraphCountRequest")
	proto.RegisterType((*TraverseGraphCountResponse)(nil), "instance_graph.TraverseGraphCountResponse")
	proto.RegisterType((*TraverseGraphCountResponse_List)(nil), "instance_graph.TraverseGraphCountResponse.List")
	proto.RegisterType((*TraverseGraphCountResponseWrapper)(nil), "instance_graph.TraverseGraphCountResponseWrapper")
}

func init() { proto.RegisterFile("traverse_graph_count.proto", fileDescriptor_826b6fc5b945696b) }

var fileDescriptor_826b6fc5b945696b = []byte{
	// 603 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0x5d, 0x6b, 0xd4, 0x40,
	0x14, 0x65, 0xbb, 0xbb, 0xc5, 0x9d, 0x6a, 0x6d, 0x23, 0xe8, 0xba, 0x08, 0xa9, 0x63, 0x91, 0xfa,
	0x91, 0xc4, 0xb6, 0x20, 0xea, 0x8b, 0xb8, 0x45, 0xb4, 0x20, 0x0a, 0xb1, 0xa0, 0x58, 0xda, 0x65,
	0x36, 0x33, 0xcd, 0x46, 0xb3, 0xb9, 0xe9, 0xcc, 0x6c, 0x6b, 0x5b, 0xfa, 0x53, 0x7c, 0xf6, 0xc1,
	0xff, 0xb4, 0x82, 0x3f, 0x21, 0xaf, 0xbe, 0xc8, 0xdc, 0x49, 0xbb, 0x29, 0x58, 0xf1, 0xa1, 0x4f,
	0xc9, 0xcc, 0xb9, 0xe7, 0xdc, 0x73, 0xee, 0xcc, 0x90, 0x8e, 0x96, 0x6c, 0x4f, 0x48, 0x25, 0x7a,
	0xb1, 0x64, 0xf9, 0xa0, 0x17, 0xc1, 0x28, 0xd3, 0x7e, 0x2e, 0x41, 0x83, 0x33, 0x9b, 0x64, 0x4a,
	0xb3, 0x2c, 0x2a, 0xb1, 0x8e, 0x17, 0x27, 0x7a, 0x30, 0xea, 0xfb, 0x11, 0x0c, 0x83, 0x18, 0x62,
	0x08, 0xb0, 0xac, 0x3f, 0xda, 0xc1, 0x15, 0x2e, 0xf0, 0xcf, 0xd2, 0x3b, 0x1f, 0x63, 0xf0, 0x05,
	0x53, 0x07, 0x90, 0x2b, 0x3f, 0x85, 0x88, 0xa5, 0x41, 0x04, 0x99, 0x96, 0x2c, 0xd2, 0xca, 0x32,
	0xa5, 0xc8, 0xc1, 0x1b, 0x02, 0x17, 0xa9, 0x0a, 0xca, 0xc2, 0x00, 0x97, 0x41, 0x34, 0xe4, 0xfd,
	0xe0, 0xd4, 0x59, 0x34, 0x48, 0x52, 0xde, 0xcb, 0x80, 0x8b, 0x52, 0xf9, 0x71, 0xc5, 0xc8, 0x70,
	0x3f, 0xd1, 0x5f, 0x60, 0x3f, 0x88, 0xc1, 0x43, 0xd0, 0xdb, 0x63, 0x69, 0xc2, 0x99, 0x06, 0xa9,
	0x82, 0xd3, 0xdf, 0x92, 0x77, 0x2b, 0x06, 0x88, 0x53, 0x31, 0xf1, 0xad, 0xb4, 0x1c, 0x45, 0x65,
	0x5c, 0xfa, 0x63, 0x8a, 0xdc, 0xdc, 0x28, 0x7b, 0xbe, 0x32, 0x81, 0xd7, 0xcc, 0x2c, 0x42, 0xb1,
	0x3b, 0x12, 0x4a, 0x3b, 0xaf, 0x49, 0x0b, 0xfa, 0x9f, 0x45, 0xa4, 0x7b, 0x09, 0x6f, 0xd7, 0x16,
	0x6a, 0x4b, 0xad, 0xee, 0x83, 0x62, 0xec, 0xce, 0xed, 0x80, 0x1c, 0x3e, 0xa3, 0xa7, 0x10, 0xfd,
	0xf5, 0xd3, 0xbd, 0x46, 0xe6, 0xb7, 0x37, 0x99, 0x77, 0xf8, 0xc2, 0xfb, 0xd4, 0xdb, 0x3a, 0x5a,
	0x7e, 0xb8, 0xba, 0x72, 0xbc, 0x18, 0x5e, 0xb2, 0x25, 0xeb, 0xdc, 0x79, 0x4e, 0x9a, 0xbb, 0x23,
	0x21, 0x0f, 0xda, 0x53, 0x0b, 0xb5, 0xa5, 0x99, 0x95, 0x1b, 0xbe, 0x75, 0xe5, 0x9f, 0xb8, 0xf2,
	0xdf, 0xa3, 0xab, 0xee, 0x5c, 0x31, 0x76, 0x2f, 0x5b, 0x79, 0xac, 0xa7, 0xa1, 0xe5, 0x39, 0x5d,
	0x32, 0xbd, 0x93, 0x88, 0x94, 0xab, 0x76, 0xfd, 0xdf, 0x0a, 0xf3, 0xc5, 0xd8, 0xbd, 0x62, 0x15,
	0x2c, 0x81, 0x86, 0x25, 0xd3, 0x98, 0xc0, 0xb1, 0xb6, 0x1b, 0x0b, 0x75, 0x94, 0x30, 0x23, 0xf7,
	0x4f, 0xe2, 0xaf, 0x19, 0xe8, 0x2d, 0x70, 0x51, 0x35, 0x81, 0xf5, 0x34, 0xb4, 0x3c, 0xfa, 0xbd,
	0x4e, 0x3a, 0x7f, 0x9b, 0x96, 0xca, 0x21, 0x53, 0xe2, 0x02, 0xc7, 0xb5, 0x4e, 0xc8, 0xc9, 0x3d,
	0x5c, 0xe7, 0x38, 0xb3, 0x56, 0xf7, 0x5e, 0x31, 0x76, 0xe7, 0xad, 0xd4, 0x04, 0x33, 0x5a, 0x73,
	0x64, 0x76, 0x7b, 0xf3, 0x91, 0xf7, 0x94, 0x79, 0x87, 0x5b, 0x47, 0xcb, 0xab, 0xc7, 0x8b, 0x61,
	0x85, 0xec, 0x6c, 0x90, 0x46, 0x9a, 0x28, 0xdd, 0xae, 0x63, 0xe6, 0xc0, 0x3f, 0x7b, 0xbf, 0xfd,
	0xf3, 0xe3, 0xf8, 0x6f, 0x12, 0xa5, 0xbb, 0x57, 0x8b, 0xb1, 0x3b, 0x63, 0xbb, 0x1a, 0x19, 0x1a,
	0xa2, 0x5a, 0xe7, 0x5b, 0x8d, 0x34, 0x0c, 0x7e, 0x81, 0x99, 0xef, 0x90, 0x46, 0xce, 0xf4, 0xa0,
	0x4c, 0x5b, 0xe9, 0x6b, 0x76, 0x69, 0x88, 0xa0, 0x73, 0x97, 0x34, 0xf1, 0xb5, 0xe2, 0x2d, 0x68,
	0x9e, 0x39, 0x29, 0xb3, 0x6d, 0x4e, 0x0a, 0xbf, 0xbf, 0x6b, 0xe4, 0xf6, 0xf9, 0xd1, 0x3e, 0x48,
	0x96, 0xe7, 0x42, 0x9a, 0x96, 0x11, 0x70, 0x81, 0xbe, 0x9b, 0xd5, 0x96, 0x66, 0x97, 0x86, 0x08,
	0x3a, 0x4f, 0xc8, 0x8c, 0xf9, 0xbe, 0xfc, 0x9a, 0xa7, 0x2c, 0xc9, 0x4a, 0x7b, 0xd7, 0x8b, 0xb1,
	0xeb, 0x4c, 0x6a, 0x4b, 0x90, 0x86, 0xd5, 0x52, 0x63, 0x56, 0x48, 0x09, 0x12, 0xcd, 0xb6, 0xaa,
	0x66, 0x71, 0x9b, 0x86, 0x16, 0x76, 0xde, 0x91, 0x06, 0x67, 0x9a, 0x95, 0xd7, 0xf2, 0xfe, 0xff,
	0x1f, 0x51, 0xd5, 0xb2, 0x51, 0xa0, 0x21, 0x0a, 0xf5, 0xa7, 0xf1, 0x51, 0xac, 0xfe, 0x09, 0x00,
	0x00, 0xff, 0xff, 0x8b, 0x20, 0xc1, 0xff, 0xe9, 0x04, 0x00, 0x00,
}
