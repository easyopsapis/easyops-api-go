// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: create.proto

package cmdb_object

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	cmdb "github.com/easyopsapis/easyops-api-go/protorepo-models/easyops/model/cmdb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//Create请求
type CreateRequest struct {
	//
	//objectId
	ObjectId string `protobuf:"bytes,1,opt,name=objectId,proto3" json:"objectId" form:"objectId"`
	//
	//名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name" form:"name"`
	//
	//模型图标
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon" form:"icon"`
	//
	//分类
	Category string `protobuf:"bytes,4,opt,name=category,proto3" json:"category" form:"category"`
	//
	//备注
	Memo string `protobuf:"bytes,5,opt,name=memo,proto3" json:"memo" form:"memo"`
	//
	//视图设置
	View *cmdb.ObjectView `protobuf:"bytes,6,opt,name=view,proto3" json:"view" form:"view"`
	//
	//是否是抽象模型(父模型)
	IsAbstract bool `protobuf:"varint,7,opt,name=isAbstract,proto3" json:"isAbstract" form:"isAbstract"`
	//
	//所属父模型
	ParentObjectId       string   `protobuf:"bytes,8,opt,name=parentObjectId,proto3" json:"parentObjectId" form:"parentObjectId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4d26d5dcda09a78, []int{0}
}
func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *CreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateRequest) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *CreateRequest) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *CreateRequest) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *CreateRequest) GetView() *cmdb.ObjectView {
	if m != nil {
		return m.View
	}
	return nil
}

func (m *CreateRequest) GetIsAbstract() bool {
	if m != nil {
		return m.IsAbstract
	}
	return false
}

func (m *CreateRequest) GetParentObjectId() string {
	if m != nil {
		return m.ParentObjectId
	}
	return ""
}

//
//CreateApi返回
type CreateResponseWrapper struct {
	//
	//返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code" form:"code"`
	//
	//返回码解释
	CodeExplain string `protobuf:"bytes,2,opt,name=codeExplain,proto3" json:"codeExplain" form:"codeExplain"`
	//
	//错误详情
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error" form:"error"`
	//
	//返回数据
	Data                 *cmdb.CmdbObject `protobuf:"bytes,4,opt,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CreateResponseWrapper) Reset()         { *m = CreateResponseWrapper{} }
func (m *CreateResponseWrapper) String() string { return proto.CompactTextString(m) }
func (*CreateResponseWrapper) ProtoMessage()    {}
func (*CreateResponseWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4d26d5dcda09a78, []int{1}
}
func (m *CreateResponseWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponseWrapper.Unmarshal(m, b)
}
func (m *CreateResponseWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponseWrapper.Marshal(b, m, deterministic)
}
func (m *CreateResponseWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponseWrapper.Merge(m, src)
}
func (m *CreateResponseWrapper) XXX_Size() int {
	return xxx_messageInfo_CreateResponseWrapper.Size(m)
}
func (m *CreateResponseWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponseWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponseWrapper proto.InternalMessageInfo

func (m *CreateResponseWrapper) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateResponseWrapper) GetCodeExplain() string {
	if m != nil {
		return m.CodeExplain
	}
	return ""
}

func (m *CreateResponseWrapper) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *CreateResponseWrapper) GetData() *cmdb.CmdbObject {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateRequest)(nil), "cmdb_object.CreateRequest")
	proto.RegisterType((*CreateResponseWrapper)(nil), "cmdb_object.CreateResponseWrapper")
}

func init() { proto.RegisterFile("create.proto", fileDescriptor_a4d26d5dcda09a78) }

var fileDescriptor_a4d26d5dcda09a78 = []byte{
	// 546 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x52, 0xdf, 0x6e, 0xd3, 0x3c,
	0x14, 0xff, 0xba, 0xb5, 0xfb, 0x8a, 0x3b, 0xd8, 0x30, 0x2a, 0x0a, 0x93, 0x50, 0x2a, 0x83, 0x50,
	0x91, 0x48, 0x32, 0x98, 0x36, 0x01, 0x77, 0x65, 0xe2, 0x82, 0xab, 0x21, 0x0b, 0x81, 0xb4, 0x09,
	0x2a, 0x27, 0xf1, 0x42, 0x20, 0xc9, 0x09, 0x8e, 0xbb, 0x32, 0x10, 0x2f, 0xc6, 0x7b, 0x70, 0x5b,
	0x24, 0x1e, 0xa1, 0x4f, 0x80, 0x7c, 0x9c, 0xb6, 0x61, 0xd7, 0xbd, 0x8a, 0x7d, 0x7e, 0x7f, 0x72,
	0xce, 0xf9, 0x99, 0x6c, 0x47, 0x4a, 0x0a, 0x2d, 0xfd, 0x52, 0x81, 0x06, 0xda, 0x8b, 0xf2, 0x38,
	0x1c, 0x43, 0xf8, 0x49, 0x46, 0x7a, 0xcf, 0x4b, 0x52, 0xfd, 0x71, 0x12, 0xfa, 0x11, 0xe4, 0x41,
	0x02, 0x09, 0x04, 0xc8, 0x09, 0x27, 0xe7, 0x78, 0xc3, 0x0b, 0x9e, 0xac, 0x76, 0xef, 0x75, 0x02,
	0xbe, 0x14, 0xd5, 0x25, 0x94, 0x95, 0x9f, 0x41, 0x24, 0xb2, 0x20, 0x82, 0x42, 0x2b, 0x11, 0xe9,
	0xca, 0x2a, 0x95, 0x2c, 0xc1, 0xcb, 0x21, 0x96, 0x59, 0x15, 0xd4, 0xc4, 0x00, 0xaf, 0x81, 0xf9,
	0x6b, 0x60, 0xff, 0x3a, 0xbe, 0x48, 0xe5, 0x74, 0xbd, 0x8e, 0x42, 0x6b, 0x55, 0x3b, 0xbe, 0x59,
	0x8f, 0xa3, 0x92, 0x99, 0xd0, 0x29, 0x14, 0xb5, 0xeb, 0xe9, 0x7a, 0x5d, 0xc7, 0x89, 0x82, 0x49,
	0xb9, 0xa6, 0x1d, 0x34, 0x02, 0xad, 0x1d, 0x8f, 0x1a, 0xb1, 0xe6, 0xd3, 0x54, 0x7f, 0x86, 0x69,
	0x90, 0x80, 0x87, 0xa0, 0x77, 0x21, 0xb2, 0x34, 0x16, 0x1a, 0x54, 0x15, 0x2c, 0x8f, 0x56, 0xc7,
	0x7e, 0x6e, 0x92, 0xeb, 0xc7, 0xf8, 0x58, 0xb8, 0xfc, 0x32, 0x91, 0x95, 0xa6, 0x9c, 0x74, 0xad,
	0xf3, 0xab, 0xd8, 0x69, 0x0d, 0x5a, 0xc3, 0x6b, 0x2f, 0x8e, 0xe6, 0x33, 0x77, 0xe7, 0x1c, 0x54,
	0xfe, 0x9c, 0x2d, 0x10, 0xf6, 0xe7, 0xb7, 0xeb, 0x92, 0xbb, 0x1f, 0xce, 0x84, 0xf7, 0x6d, 0xe4,
	0x9d, 0x8e, 0xdf, 0x9f, 0xed, 0x7b, 0xcf, 0x16, 0xe7, 0xef, 0xfb, 0x8f, 0x0e, 0x1e, 0xff, 0xb8,
	0xcf, 0x97, 0x3e, 0xf4, 0x21, 0x69, 0x17, 0x22, 0x97, 0xce, 0x06, 0xfa, 0xf5, 0xe7, 0x33, 0xb7,
	0x67, 0xfd, 0x4c, 0xd5, 0x78, 0x6d, 0x94, 0xff, 0x71, 0xa4, 0xd0, 0x7b, 0xa4, 0x9d, 0x46, 0x50,
	0x38, 0x9b, 0x48, 0xdd, 0x59, 0x51, 0x4d, 0x95, 0x71, 0x04, 0x69, 0x40, 0xba, 0x91, 0xd0, 0x32,
	0x01, 0x75, 0xe9, 0xb4, 0x91, 0x78, 0x6b, 0xd5, 0xe3, 0x02, 0x61, 0x7c, 0x49, 0x32, 0xae, 0xb9,
	0xcc, 0xc1, 0xe9, 0x5c, 0x75, 0x35, 0x55, 0xc6, 0x11, 0xa4, 0x87, 0xa4, 0x6d, 0xde, 0xa9, 0xb3,
	0x35, 0x68, 0x0d, 0x7b, 0x4f, 0x76, 0x7d, 0xb3, 0x65, 0xff, 0x04, 0x67, 0x78, 0x9b, 0xca, 0x69,
	0x53, 0x66, 0x78, 0x8c, 0x23, 0x9d, 0x1e, 0x12, 0x92, 0x56, 0xa3, 0xb0, 0xc2, 0xfc, 0x9c, 0xff,
	0x07, 0xad, 0x61, 0x17, 0x47, 0xbc, 0x59, 0xf7, 0xbd, 0xc4, 0x18, 0x6f, 0x10, 0xe9, 0x88, 0xdc,
	0x28, 0x85, 0x92, 0x85, 0x3e, 0x59, 0x6c, 0xbb, 0x8b, 0xcd, 0xdd, 0x99, 0xcf, 0xdc, 0xbe, 0x95,
	0xfe, 0x8b, 0x33, 0x7e, 0x45, 0xc0, 0x7e, 0xb5, 0x48, 0x7f, 0x11, 0x5e, 0x55, 0x42, 0x51, 0xc9,
	0x77, 0x4a, 0x94, 0xa5, 0x54, 0x66, 0xde, 0x08, 0x62, 0x89, 0x01, 0x76, 0x9a, 0x8d, 0x9b, 0x2a,
	0xe3, 0x08, 0xd2, 0xa7, 0xa4, 0x67, 0xbe, 0x2f, 0xbf, 0x96, 0x99, 0x48, 0x8b, 0x3a, 0x9c, 0xdb,
	0xf3, 0x99, 0x4b, 0x57, 0xdc, 0x1a, 0x64, 0xbc, 0x49, 0xa5, 0x0f, 0x48, 0x47, 0x2a, 0x05, 0xaa,
	0x4e, 0x69, 0x77, 0x3e, 0x73, 0xb7, 0xad, 0x06, 0xcb, 0x8c, 0x5b, 0xd8, 0x6c, 0x34, 0x16, 0x5a,
	0x60, 0x46, 0xcb, 0x8d, 0x1e, 0xe7, 0x71, 0x68, 0x47, 0x68, 0x36, 0x66, 0x78, 0x8c, 0x23, 0x3d,
	0xdc, 0xc2, 0xb7, 0x79, 0xf0, 0x37, 0x00, 0x00, 0xff, 0xff, 0x4c, 0x52, 0x57, 0xb0, 0xc7, 0x04,
	0x00, 0x00,
}
