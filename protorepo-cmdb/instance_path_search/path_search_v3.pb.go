// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: path_search_v3.proto

package instance_path_search

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	_ "github.com/mwitkow/go-proto-validators"
	cmdb "github.com/easyopsapis/easyops-api-go/protorepo-models/easyops/model/cmdb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//PathSearchV3请求
type PathSearchV3Request struct {
	//
	//查询路径
	Path []*cmdb.StrategyPathNode `protobuf:"bytes,1,rep,name=path,proto3" json:"path" form:"path"`
	//
	//以alias_id表示的字段排序 {"APP.name": -1}
	AliasIdSort *types.Struct `protobuf:"bytes,2,opt,name=alias_id_sort,json=aliasIdSort,proto3" json:"alias_id_sort" form:"alias_id_sort"`
	//
	//页数
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page" form:"page"`
	//
	//页大小
	PageSize             int32    `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize" form:"pageSize"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PathSearchV3Request) Reset()         { *m = PathSearchV3Request{} }
func (m *PathSearchV3Request) String() string { return proto.CompactTextString(m) }
func (*PathSearchV3Request) ProtoMessage()    {}
func (*PathSearchV3Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_2dce0a7fd006e9e8, []int{0}
}
func (m *PathSearchV3Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PathSearchV3Request.Unmarshal(m, b)
}
func (m *PathSearchV3Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PathSearchV3Request.Marshal(b, m, deterministic)
}
func (m *PathSearchV3Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PathSearchV3Request.Merge(m, src)
}
func (m *PathSearchV3Request) XXX_Size() int {
	return xxx_messageInfo_PathSearchV3Request.Size(m)
}
func (m *PathSearchV3Request) XXX_DiscardUnknown() {
	xxx_messageInfo_PathSearchV3Request.DiscardUnknown(m)
}

var xxx_messageInfo_PathSearchV3Request proto.InternalMessageInfo

func (m *PathSearchV3Request) GetPath() []*cmdb.StrategyPathNode {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *PathSearchV3Request) GetAliasIdSort() *types.Struct {
	if m != nil {
		return m.AliasIdSort
	}
	return nil
}

func (m *PathSearchV3Request) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *PathSearchV3Request) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

//
//PathSearchV3返回
type PathSearchV3Response struct {
	//
	//页数
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page" form:"page"`
	//
	//页大小
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size" form:"page_size"`
	//
	//查询总数
	Total int32 `protobuf:"varint,3,opt,name=total,proto3" json:"total" form:"total"`
	//
	//结果列表 eg: [[{"_object_id": "APP","attrId1": 2.355, "instanceId": "xxxx","name": "test1253" },{"_object_id": "CLUSTER","instanceId": "xxxxx","name": "dev"}]]
	List                 *types.Value `protobuf:"bytes,4,opt,name=list,proto3" json:"list" form:"list"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PathSearchV3Response) Reset()         { *m = PathSearchV3Response{} }
func (m *PathSearchV3Response) String() string { return proto.CompactTextString(m) }
func (*PathSearchV3Response) ProtoMessage()    {}
func (*PathSearchV3Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_2dce0a7fd006e9e8, []int{1}
}
func (m *PathSearchV3Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PathSearchV3Response.Unmarshal(m, b)
}
func (m *PathSearchV3Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PathSearchV3Response.Marshal(b, m, deterministic)
}
func (m *PathSearchV3Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PathSearchV3Response.Merge(m, src)
}
func (m *PathSearchV3Response) XXX_Size() int {
	return xxx_messageInfo_PathSearchV3Response.Size(m)
}
func (m *PathSearchV3Response) XXX_DiscardUnknown() {
	xxx_messageInfo_PathSearchV3Response.DiscardUnknown(m)
}

var xxx_messageInfo_PathSearchV3Response proto.InternalMessageInfo

func (m *PathSearchV3Response) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *PathSearchV3Response) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *PathSearchV3Response) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *PathSearchV3Response) GetList() *types.Value {
	if m != nil {
		return m.List
	}
	return nil
}

//
//PathSearchV3Api返回
type PathSearchV3ResponseWrapper struct {
	//
	//返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code" form:"code"`
	//
	//返回码解释
	CodeExplain string `protobuf:"bytes,2,opt,name=codeExplain,proto3" json:"codeExplain" form:"codeExplain"`
	//
	//错误详情
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error" form:"error"`
	//
	//返回数据
	Data                 *PathSearchV3Response `protobuf:"bytes,4,opt,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *PathSearchV3ResponseWrapper) Reset()         { *m = PathSearchV3ResponseWrapper{} }
func (m *PathSearchV3ResponseWrapper) String() string { return proto.CompactTextString(m) }
func (*PathSearchV3ResponseWrapper) ProtoMessage()    {}
func (*PathSearchV3ResponseWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_2dce0a7fd006e9e8, []int{2}
}
func (m *PathSearchV3ResponseWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PathSearchV3ResponseWrapper.Unmarshal(m, b)
}
func (m *PathSearchV3ResponseWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PathSearchV3ResponseWrapper.Marshal(b, m, deterministic)
}
func (m *PathSearchV3ResponseWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PathSearchV3ResponseWrapper.Merge(m, src)
}
func (m *PathSearchV3ResponseWrapper) XXX_Size() int {
	return xxx_messageInfo_PathSearchV3ResponseWrapper.Size(m)
}
func (m *PathSearchV3ResponseWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_PathSearchV3ResponseWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_PathSearchV3ResponseWrapper proto.InternalMessageInfo

func (m *PathSearchV3ResponseWrapper) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *PathSearchV3ResponseWrapper) GetCodeExplain() string {
	if m != nil {
		return m.CodeExplain
	}
	return ""
}

func (m *PathSearchV3ResponseWrapper) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *PathSearchV3ResponseWrapper) GetData() *PathSearchV3Response {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*PathSearchV3Request)(nil), "instance_path_search.PathSearchV3Request")
	proto.RegisterType((*PathSearchV3Response)(nil), "instance_path_search.PathSearchV3Response")
	proto.RegisterType((*PathSearchV3ResponseWrapper)(nil), "instance_path_search.PathSearchV3ResponseWrapper")
}

func init() { proto.RegisterFile("path_search_v3.proto", fileDescriptor_2dce0a7fd006e9e8) }

var fileDescriptor_2dce0a7fd006e9e8 = []byte{
	// 538 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0xdd, 0x8a, 0xd3, 0x40,
	0x14, 0x36, 0xdd, 0xae, 0xb8, 0x53, 0x65, 0x97, 0x58, 0xd7, 0xba, 0x0a, 0x29, 0x23, 0x48, 0x15,
	0x9a, 0xc0, 0x16, 0x7f, 0xd0, 0xbb, 0x82, 0x17, 0xde, 0xa8, 0xa4, 0xb8, 0x7b, 0x19, 0xa6, 0xc9,
	0x6c, 0x1a, 0x4c, 0x73, 0xe2, 0xcc, 0xc9, 0xae, 0xeb, 0x2b, 0xf8, 0x8e, 0x59, 0xf0, 0x11, 0x02,
	0xde, 0xcb, 0x9c, 0xa4, 0x6d, 0xaa, 0x05, 0xaf, 0x26, 0x33, 0xdf, 0xcf, 0xf9, 0xbe, 0x19, 0xc2,
	0xfa, 0xb9, 0xc0, 0x45, 0xa0, 0xa5, 0x50, 0xe1, 0x22, 0xb8, 0x9c, 0xb8, 0xb9, 0x02, 0x04, 0xbb,
	0x9f, 0x64, 0x1a, 0x45, 0x16, 0xca, 0xa0, 0x05, 0x9f, 0x8c, 0xe3, 0x04, 0x17, 0xc5, 0xdc, 0x0d,
	0x61, 0xe9, 0xc5, 0x10, 0x83, 0x47, 0xe4, 0x79, 0x71, 0x41, 0x3b, 0xda, 0xd0, 0x57, 0x6d, 0x72,
	0x72, 0x1e, 0x83, 0x2b, 0x85, 0xbe, 0x86, 0x5c, 0xbb, 0x29, 0x84, 0x22, 0xf5, 0x42, 0xc8, 0x50,
	0x89, 0x10, 0x75, 0xad, 0x54, 0x32, 0x87, 0xf1, 0x12, 0x22, 0x99, 0x6a, 0xaf, 0x21, 0x7a, 0xb4,
	0xf5, 0xc2, 0x65, 0x34, 0xf7, 0x34, 0x2a, 0x81, 0x32, 0xbe, 0xae, 0x33, 0x64, 0x10, 0xc9, 0xc6,
	0xf8, 0x55, 0x2b, 0xc7, 0xf2, 0x2a, 0xc1, 0xaf, 0x70, 0xe5, 0xc5, 0x30, 0x26, 0x70, 0x7c, 0x29,
	0xd2, 0x24, 0x12, 0x08, 0x4a, 0x7b, 0xeb, 0xcf, 0x46, 0xf7, 0x24, 0x06, 0x88, 0x53, 0xb9, 0x89,
	0xad, 0x51, 0x15, 0x21, 0xd6, 0x28, 0xff, 0xd9, 0x61, 0xf7, 0x3f, 0x0b, 0x5c, 0xcc, 0xa8, 0xec,
	0xd9, 0xc4, 0x97, 0xdf, 0x0a, 0xa9, 0xd1, 0x7e, 0xc7, 0xba, 0x26, 0xc0, 0xc0, 0x1a, 0xee, 0x8d,
	0x7a, 0xa7, 0xc7, 0xae, 0xc9, 0xe6, 0xce, 0x9a, 0x6c, 0x46, 0xf0, 0x11, 0x22, 0x39, 0x3d, 0xac,
	0x4a, 0xa7, 0x77, 0x01, 0x6a, 0xf9, 0x96, 0x1b, 0x36, 0xf7, 0x49, 0x64, 0x7f, 0x61, 0xf7, 0x44,
	0x9a, 0x08, 0x1d, 0x24, 0x51, 0xa0, 0x41, 0xe1, 0xa0, 0x33, 0xb4, 0x46, 0xbd, 0xd3, 0x87, 0x6e,
	0x1d, 0xc5, 0x5d, 0x45, 0x31, 0x86, 0x45, 0x88, 0xd3, 0x41, 0x55, 0x3a, 0xfd, 0xda, 0x66, 0x4b,
	0xc7, 0xfd, 0x1e, 0xed, 0x3f, 0x44, 0x33, 0x50, 0x68, 0x3f, 0x37, 0x99, 0x62, 0x39, 0xd8, 0x1b,
	0x5a, 0xa3, 0xfd, 0xe9, 0x83, 0xf6, 0xec, 0x58, 0xf2, 0x5f, 0x37, 0x4e, 0xe7, 0xe8, 0x96, 0x4f,
	0x14, 0xfb, 0x25, 0xbb, 0x63, 0xd6, 0x59, 0xf2, 0x43, 0x0e, 0xba, 0x44, 0x7f, 0x54, 0x95, 0xce,
	0xe1, 0x86, 0x6e, 0x90, 0x95, 0x64, 0x4d, 0xe5, 0x37, 0x16, 0xeb, 0x6f, 0xdf, 0x86, 0xce, 0x21,
	0xd3, 0x72, 0x3d, 0xda, 0xfa, 0xff, 0xe8, 0xd7, 0xec, 0xc0, 0xac, 0x81, 0x36, 0xb3, 0x3b, 0xc4,
	0x3f, 0xa9, 0x4a, 0xe7, 0x68, 0xc3, 0x27, 0xe8, 0x9f, 0xe1, 0xf6, 0x33, 0xb6, 0x8f, 0x80, 0x22,
	0x6d, 0xfa, 0x1d, 0x55, 0xa5, 0x73, 0xb7, 0x16, 0xd1, 0x31, 0xf7, 0x6b, 0xd8, 0x3c, 0x4d, 0x9a,
	0x68, 0xa4, 0x5e, 0xe6, 0x69, 0xfe, 0xbe, 0xd4, 0x33, 0x91, 0x16, 0x5b, 0x4f, 0x63, 0xd8, 0xdc,
	0x27, 0x11, 0xff, 0x6d, 0xb1, 0xc7, 0xbb, 0x1a, 0x9e, 0x2b, 0x91, 0xe7, 0x52, 0xd9, 0x4f, 0x59,
	0x37, 0x84, 0x68, 0x55, 0xb4, 0x65, 0x62, 0x4e, 0xb9, 0x4f, 0xa0, 0xfd, 0x86, 0xf5, 0xcc, 0xfa,
	0xfe, 0x7b, 0x9e, 0x8a, 0x24, 0xa3, 0x92, 0x07, 0xd3, 0xe3, 0xaa, 0x74, 0xec, 0x0d, 0xb7, 0x01,
	0xb9, 0xdf, 0xa6, 0x9a, 0x8e, 0x52, 0x29, 0x50, 0xd4, 0xf1, 0xa0, 0xdd, 0x91, 0x8e, 0xb9, 0x5f,
	0xc3, 0xf6, 0x27, 0xd6, 0x8d, 0x04, 0x8a, 0xa6, 0xe3, 0x0b, 0x77, 0xd7, 0x9f, 0xe9, 0xee, 0xea,
	0xd1, 0x8e, 0x6c, 0x1c, 0xb8, 0x4f, 0x46, 0xf3, 0xdb, 0x74, 0x3d, 0x93, 0x3f, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x3d, 0x26, 0xe6, 0xca, 0xfa, 0x03, 0x00, 0x00,
}
