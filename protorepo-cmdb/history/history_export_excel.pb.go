// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: history_export_excel.proto

package history

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//HistoryExportExcel请求
type HistoryExportExcelRequest struct {
	//
	//模型Id
	ObjectId string `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id" form:"object_id"`
	//
	//实例ID
	InstanceId string `protobuf:"bytes,2,opt,name=instanceId,proto3" json:"instanceId" form:"instanceId"`
	//
	//操作人
	Operator string `protobuf:"bytes,3,opt,name=operator,proto3" json:"operator" form:"operator"`
	//
	//事件名称
	Event string `protobuf:"bytes,4,opt,name=event,proto3" json:"event" form:"event"`
	//
	//排除事件名称
	ExcludeEvent string `protobuf:"bytes,5,opt,name=exclude_event,json=excludeEvent,proto3" json:"exclude_event" form:"exclude_event"`
	//
	//range
	Range string `protobuf:"bytes,6,opt,name=range,proto3" json:"range" form:"range"`
	//
	//st
	St string `protobuf:"bytes,7,opt,name=st,proto3" json:"st" form:"st"`
	//
	//et
	Et                   string   `protobuf:"bytes,8,opt,name=et,proto3" json:"et" form:"et"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HistoryExportExcelRequest) Reset()         { *m = HistoryExportExcelRequest{} }
func (m *HistoryExportExcelRequest) String() string { return proto.CompactTextString(m) }
func (*HistoryExportExcelRequest) ProtoMessage()    {}
func (*HistoryExportExcelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d562c1de5a80cc9d, []int{0}
}
func (m *HistoryExportExcelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoryExportExcelRequest.Unmarshal(m, b)
}
func (m *HistoryExportExcelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoryExportExcelRequest.Marshal(b, m, deterministic)
}
func (m *HistoryExportExcelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoryExportExcelRequest.Merge(m, src)
}
func (m *HistoryExportExcelRequest) XXX_Size() int {
	return xxx_messageInfo_HistoryExportExcelRequest.Size(m)
}
func (m *HistoryExportExcelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoryExportExcelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HistoryExportExcelRequest proto.InternalMessageInfo

func (m *HistoryExportExcelRequest) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *HistoryExportExcelRequest) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *HistoryExportExcelRequest) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

func (m *HistoryExportExcelRequest) GetEvent() string {
	if m != nil {
		return m.Event
	}
	return ""
}

func (m *HistoryExportExcelRequest) GetExcludeEvent() string {
	if m != nil {
		return m.ExcludeEvent
	}
	return ""
}

func (m *HistoryExportExcelRequest) GetRange() string {
	if m != nil {
		return m.Range
	}
	return ""
}

func (m *HistoryExportExcelRequest) GetSt() string {
	if m != nil {
		return m.St
	}
	return ""
}

func (m *HistoryExportExcelRequest) GetEt() string {
	if m != nil {
		return m.Et
	}
	return ""
}

func init() {
	proto.RegisterType((*HistoryExportExcelRequest)(nil), "history.HistoryExportExcelRequest")
}

func init() { proto.RegisterFile("history_export_excel.proto", fileDescriptor_d562c1de5a80cc9d) }

var fileDescriptor_d562c1de5a80cc9d = []byte{
	// 320 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x91, 0xcf, 0x4e, 0xc2, 0x40,
	0x10, 0xc6, 0x03, 0xc8, 0xbf, 0x0d, 0x44, 0xac, 0x98, 0xac, 0x18, 0x53, 0xb3, 0x07, 0xe2, 0x45,
	0x88, 0x31, 0x5e, 0x4c, 0xbc, 0x98, 0x90, 0xc8, 0x75, 0x5f, 0xa0, 0xa1, 0xed, 0x50, 0x6a, 0xa0,
	0x53, 0xb7, 0x53, 0x03, 0x67, 0xdf, 0xb3, 0x0f, 0xd1, 0x27, 0x30, 0x9d, 0x6d, 0x84, 0x70, 0x9b,
	0x99, 0xdf, 0xef, 0xdb, 0xef, 0xb0, 0x62, 0xb2, 0x89, 0x33, 0x42, 0x73, 0xf0, 0x60, 0x9f, 0xa2,
	0x21, 0x0f, 0xf6, 0x01, 0x6c, 0x67, 0xa9, 0x41, 0x42, 0xa7, 0x5b, 0xb3, 0xc9, 0x53, 0x14, 0xd3,
	0x26, 0xf7, 0x67, 0x01, 0xee, 0xe6, 0x11, 0x46, 0x38, 0x67, 0xee, 0xe7, 0x6b, 0xde, 0x78, 0xe1,
	0xc9, 0xe6, 0x26, 0x77, 0x11, 0x62, 0xb4, 0x85, 0xa3, 0x05, 0xbb, 0x94, 0x0e, 0x16, 0xaa, 0xdf,
	0x96, 0xb8, 0xfd, 0xb4, 0xef, 0x2e, 0xb8, 0x72, 0x51, 0x35, 0x6a, 0xf8, 0xce, 0x21, 0x23, 0xe7,
	0x59, 0xf4, 0xd1, 0xff, 0x82, 0x80, 0xbc, 0x38, 0x94, 0x8d, 0x87, 0xc6, 0x63, 0xff, 0x63, 0x5c,
	0x16, 0xee, 0x68, 0x8d, 0x66, 0xf7, 0xa6, 0xfe, 0x91, 0xd2, 0x3d, 0x3b, 0x2f, 0x43, 0xe7, 0x55,
	0x88, 0x38, 0xc9, 0x68, 0x95, 0x04, 0xb0, 0x0c, 0x65, 0x93, 0x33, 0x37, 0x65, 0xe1, 0x5e, 0xd9,
	0xcc, 0x91, 0x29, 0x7d, 0x22, 0x3a, 0x73, 0xd1, 0xc3, 0x14, 0xcc, 0x8a, 0xd0, 0xc8, 0x16, 0x87,
	0xae, 0xcb, 0xc2, 0xbd, 0xac, 0x8b, 0x6a, 0x52, 0xf5, 0xd4, 0xa3, 0x33, 0x15, 0x6d, 0xf8, 0x81,
	0x84, 0xe4, 0x05, 0xdb, 0xa3, 0xb2, 0x70, 0x07, 0xd6, 0xe6, 0xb3, 0xd2, 0x16, 0x3b, 0xef, 0x62,
	0x08, 0xfb, 0x60, 0x9b, 0x87, 0xe0, 0x59, 0xbf, 0xcd, 0xbe, 0x2c, 0x0b, 0x77, 0x5c, 0xfb, 0xa7,
	0x58, 0xe9, 0x41, 0xbd, 0x2f, 0x38, 0x3e, 0x15, 0x6d, 0xb3, 0x4a, 0x22, 0x90, 0x9d, 0xf3, 0x1a,
	0x3e, 0x2b, 0x6d, 0xb1, 0x73, 0x2f, 0x9a, 0x19, 0xc9, 0x2e, 0x4b, 0xc3, 0xb2, 0x70, 0xfb, 0x56,
	0xca, 0x48, 0xe9, 0x66, 0x46, 0x15, 0x06, 0x92, 0xbd, 0x73, 0x0c, 0x15, 0x06, 0xf2, 0x3b, 0xfc,
	0x19, 0x2f, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xe9, 0x2e, 0x85, 0x15, 0xff, 0x01, 0x00, 0x00,
}
