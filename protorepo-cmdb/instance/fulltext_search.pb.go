// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: fulltext_search.proto

package instance

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//FulltextSearch请求
type FulltextSearchRequest struct {
	//
	//页码
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page" form:"page"`
	//
	//页大小
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size" form:"page_size"`
	//
	//搜索关键字
	Keyword string `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword" form:"keyword"`
	//
	//资源模型Id
	ObjectId string `protobuf:"bytes,4,opt,name=object_id,json=objectId,proto3" json:"object_id" form:"object_id"`
	//
	//默认前缀搜索,true/false
	PrefixSearch         string   `protobuf:"bytes,5,opt,name=prefixSearch,proto3" json:"prefixSearch" form:"prefixSearch"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FulltextSearchRequest) Reset()         { *m = FulltextSearchRequest{} }
func (m *FulltextSearchRequest) String() string { return proto.CompactTextString(m) }
func (*FulltextSearchRequest) ProtoMessage()    {}
func (*FulltextSearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_68008c307ca54e7b, []int{0}
}
func (m *FulltextSearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FulltextSearchRequest.Unmarshal(m, b)
}
func (m *FulltextSearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FulltextSearchRequest.Marshal(b, m, deterministic)
}
func (m *FulltextSearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FulltextSearchRequest.Merge(m, src)
}
func (m *FulltextSearchRequest) XXX_Size() int {
	return xxx_messageInfo_FulltextSearchRequest.Size(m)
}
func (m *FulltextSearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FulltextSearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FulltextSearchRequest proto.InternalMessageInfo

func (m *FulltextSearchRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *FulltextSearchRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *FulltextSearchRequest) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

func (m *FulltextSearchRequest) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *FulltextSearchRequest) GetPrefixSearch() string {
	if m != nil {
		return m.PrefixSearch
	}
	return ""
}

//
//FulltextSearch返回
type FulltextSearchResponse struct {
	//
	//实例数据
	List []*types.Struct `protobuf:"bytes,1,rep,name=list,proto3" json:"list" form:"list"`
	//
	//实例总数
	Total int32 `protobuf:"varint,2,opt,name=total,proto3" json:"total" form:"total"`
	//
	//页码
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page" form:"page"`
	//
	//页大小
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size" form:"page_size"`
	//
	//模型实例统计数据,如:{"HOST": 10, "APP": 5}
	Count                *types.Struct `protobuf:"bytes,5,opt,name=count,proto3" json:"count" form:"count"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *FulltextSearchResponse) Reset()         { *m = FulltextSearchResponse{} }
func (m *FulltextSearchResponse) String() string { return proto.CompactTextString(m) }
func (*FulltextSearchResponse) ProtoMessage()    {}
func (*FulltextSearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_68008c307ca54e7b, []int{1}
}
func (m *FulltextSearchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FulltextSearchResponse.Unmarshal(m, b)
}
func (m *FulltextSearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FulltextSearchResponse.Marshal(b, m, deterministic)
}
func (m *FulltextSearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FulltextSearchResponse.Merge(m, src)
}
func (m *FulltextSearchResponse) XXX_Size() int {
	return xxx_messageInfo_FulltextSearchResponse.Size(m)
}
func (m *FulltextSearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FulltextSearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FulltextSearchResponse proto.InternalMessageInfo

func (m *FulltextSearchResponse) GetList() []*types.Struct {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *FulltextSearchResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *FulltextSearchResponse) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *FulltextSearchResponse) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *FulltextSearchResponse) GetCount() *types.Struct {
	if m != nil {
		return m.Count
	}
	return nil
}

//
//FulltextSearchApi返回
type FulltextSearchResponseWrapper struct {
	//
	//返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code" form:"code"`
	//
	//返回码解释
	CodeExplain string `protobuf:"bytes,2,opt,name=codeExplain,proto3" json:"codeExplain" form:"codeExplain"`
	//
	//错误详情
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error" form:"error"`
	//
	//返回数据
	Data                 *FulltextSearchResponse `protobuf:"bytes,4,opt,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *FulltextSearchResponseWrapper) Reset()         { *m = FulltextSearchResponseWrapper{} }
func (m *FulltextSearchResponseWrapper) String() string { return proto.CompactTextString(m) }
func (*FulltextSearchResponseWrapper) ProtoMessage()    {}
func (*FulltextSearchResponseWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_68008c307ca54e7b, []int{2}
}
func (m *FulltextSearchResponseWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FulltextSearchResponseWrapper.Unmarshal(m, b)
}
func (m *FulltextSearchResponseWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FulltextSearchResponseWrapper.Marshal(b, m, deterministic)
}
func (m *FulltextSearchResponseWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FulltextSearchResponseWrapper.Merge(m, src)
}
func (m *FulltextSearchResponseWrapper) XXX_Size() int {
	return xxx_messageInfo_FulltextSearchResponseWrapper.Size(m)
}
func (m *FulltextSearchResponseWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_FulltextSearchResponseWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_FulltextSearchResponseWrapper proto.InternalMessageInfo

func (m *FulltextSearchResponseWrapper) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *FulltextSearchResponseWrapper) GetCodeExplain() string {
	if m != nil {
		return m.CodeExplain
	}
	return ""
}

func (m *FulltextSearchResponseWrapper) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *FulltextSearchResponseWrapper) GetData() *FulltextSearchResponse {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*FulltextSearchRequest)(nil), "instance.FulltextSearchRequest")
	proto.RegisterType((*FulltextSearchResponse)(nil), "instance.FulltextSearchResponse")
	proto.RegisterType((*FulltextSearchResponseWrapper)(nil), "instance.FulltextSearchResponseWrapper")
}

func init() { proto.RegisterFile("fulltext_search.proto", fileDescriptor_68008c307ca54e7b) }

var fileDescriptor_68008c307ca54e7b = []byte{
	// 533 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0xdf, 0x8a, 0xd3, 0x40,
	0x14, 0xc6, 0x6d, 0x9b, 0x6a, 0x3b, 0x5d, 0xb4, 0x8c, 0x74, 0x37, 0x14, 0x97, 0x94, 0x51, 0xa4,
	0xc2, 0x26, 0x5d, 0x77, 0xc1, 0xf5, 0x1f, 0x88, 0x85, 0x15, 0xbc, 0x9d, 0x0a, 0x82, 0x8b, 0x96,
	0x69, 0x32, 0xcd, 0xc6, 0x4d, 0x3b, 0x71, 0x32, 0xb1, 0xb5, 0xe2, 0xd3, 0xf8, 0x1a, 0x3e, 0x4b,
	0x04, 0xef, 0xbd, 0xc9, 0x13, 0x48, 0x4e, 0x92, 0x26, 0xca, 0x22, 0xec, 0x55, 0x26, 0xe7, 0xfb,
	0x7d, 0x99, 0x33, 0xdf, 0x99, 0xa0, 0xde, 0x3c, 0xf2, 0x7d, 0xc5, 0xd7, 0x6a, 0x1a, 0x72, 0x26,
	0xed, 0x73, 0x2b, 0x90, 0x42, 0x09, 0xdc, 0xf2, 0x96, 0xa1, 0x62, 0x4b, 0x9b, 0xf7, 0x4d, 0xd7,
	0x53, 0xe7, 0xd1, 0xcc, 0xb2, 0xc5, 0x62, 0xe4, 0x0a, 0x57, 0x8c, 0x00, 0x98, 0x45, 0x73, 0x78,
	0x83, 0x17, 0x58, 0x65, 0xc6, 0xfe, 0xa3, 0x0a, 0xbe, 0x58, 0x79, 0xea, 0x42, 0xac, 0x46, 0xae,
	0x30, 0x41, 0x34, 0x3f, 0x33, 0xdf, 0x73, 0x98, 0x12, 0x32, 0x1c, 0x6d, 0x97, 0xb9, 0xef, 0x8e,
	0x2b, 0x84, 0xeb, 0xf3, 0xf2, 0xeb, 0xa1, 0x92, 0x91, 0xad, 0x32, 0x95, 0xfc, 0xa8, 0xa3, 0xde,
	0xab, 0xbc, 0xd1, 0x09, 0xf4, 0x49, 0xf9, 0xa7, 0x88, 0x87, 0x0a, 0x3f, 0x40, 0x5a, 0xc0, 0x5c,
	0xae, 0xd7, 0x06, 0xb5, 0x61, 0x73, 0xdc, 0x4b, 0x62, 0xa3, 0x33, 0x17, 0x72, 0xf1, 0x94, 0xa4,
	0x55, 0xf2, 0xeb, 0xa7, 0x51, 0xef, 0x5e, 0xa3, 0x80, 0xe0, 0x13, 0xd4, 0x4e, 0x9f, 0xd3, 0xd0,
	0xdb, 0x70, 0xbd, 0x0e, 0x7c, 0x3f, 0x89, 0x8d, 0x6e, 0xc9, 0x83, 0x54, 0x98, 0x5a, 0x69, 0x65,
	0xe2, 0x6d, 0x38, 0x3e, 0x40, 0x37, 0x2e, 0xf8, 0x97, 0x95, 0x90, 0x8e, 0xde, 0x18, 0xd4, 0x86,
	0xed, 0x31, 0x4e, 0x62, 0xe3, 0x66, 0x66, 0xcb, 0x05, 0x42, 0x0b, 0x04, 0xbf, 0x41, 0x6d, 0x31,
	0xfb, 0xc8, 0x6d, 0x35, 0xf5, 0x1c, 0x5d, 0x03, 0xfe, 0xa4, 0xdc, 0x66, 0x2b, 0xa5, 0xdb, 0x18,
	0x68, 0xff, 0xc3, 0x19, 0x33, 0x37, 0x2f, 0xcd, 0x77, 0xd3, 0xf7, 0x67, 0x87, 0xe6, 0x93, 0x62,
	0xfd, 0xf5, 0xf0, 0xe0, 0xf8, 0xe1, 0xb7, 0x7b, 0xb4, 0x95, 0xe1, 0xaf, 0x1d, 0xfc, 0x0c, 0xed,
	0x04, 0x92, 0xcf, 0xbd, 0x75, 0x76, 0x7c, 0xbd, 0x09, 0x1f, 0xde, 0x4b, 0x62, 0xe3, 0x76, 0xde,
	0x7f, 0x45, 0x25, 0xf4, 0x2f, 0x98, 0x7c, 0xaf, 0xa3, 0xdd, 0x7f, 0xe3, 0x0b, 0x03, 0xb1, 0x0c,
	0x39, 0x7e, 0x8e, 0x34, 0xdf, 0x0b, 0x95, 0x5e, 0x1b, 0x34, 0x86, 0x9d, 0xa3, 0x3d, 0x2b, 0x1b,
	0x83, 0x55, 0x8c, 0xc1, 0x9a, 0xc0, 0x18, 0xc6, 0xb7, 0xca, 0x60, 0x53, 0x9c, 0x50, 0x70, 0xe1,
	0xfb, 0xa8, 0xa9, 0x84, 0x62, 0x7e, 0x1e, 0x67, 0x37, 0x89, 0x8d, 0x9d, 0x8c, 0x82, 0x32, 0xa1,
	0x99, 0xbc, 0x9d, 0x52, 0xe3, 0x8a, 0x53, 0xd2, 0xae, 0x30, 0xa5, 0x17, 0xa8, 0x69, 0x8b, 0x68,
	0xa9, 0x20, 0x9a, 0xff, 0x1c, 0xa5, 0xd2, 0x24, 0xf0, 0x84, 0x66, 0x3e, 0xf2, 0xbb, 0x86, 0xf6,
	0x2f, 0x4f, 0xe9, 0xad, 0x64, 0x41, 0xc0, 0x25, 0xbe, 0x8b, 0x34, 0x5b, 0x38, 0xc5, 0x65, 0xab,
	0x64, 0x92, 0x56, 0x09, 0x05, 0x11, 0x3f, 0x46, 0x9d, 0xf4, 0x79, 0xba, 0x0e, 0x7c, 0xe6, 0x2d,
	0x21, 0x99, 0xf6, 0x78, 0x37, 0x89, 0x0d, 0x5c, 0xb2, 0xb9, 0x48, 0x68, 0x15, 0x4d, 0xd3, 0xe4,
	0x52, 0x0a, 0x99, 0xdf, 0xb2, 0x4a, 0xa3, 0x50, 0x26, 0x34, 0x93, 0xf1, 0x29, 0xd2, 0x1c, 0xa6,
	0x18, 0xa4, 0xd3, 0x39, 0x1a, 0x58, 0xc5, 0xbf, 0x6a, 0x5d, 0xde, 0x7d, 0xb5, 0xd1, 0xd4, 0x47,
	0x28, 0xd8, 0x67, 0xd7, 0x21, 0x99, 0xe3, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x6c, 0x17, 0xa2,
	0xf9, 0x03, 0x04, 0x00, 0x00,
}
