// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: relation_max_check.proto

package instance

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//RelationMaxCheck请求
type RelationMaxCheckRequest struct {
	//
	//资源模型ID
	ObjectId string `protobuf:"bytes,1,opt,name=objectId,proto3" json:"objectId" form:"objectId"`
	//
	//资源模型关系ID
	RelationId string `protobuf:"bytes,2,opt,name=relation_id,json=relationId,proto3" json:"relation_id" form:"relation_id"`
	//
	//left_id或者right_id来指定资源模型在关系的哪一端
	RelationSideId string `protobuf:"bytes,3,opt,name=relation_side_id,json=relationSideId,proto3" json:"relation_side_id" form:"relation_side_id"`
	//
	//查询条件,与[实例搜索接口]的query字段说明一致
	Query *types.Struct `protobuf:"bytes,4,opt,name=query,proto3" json:"query" form:"query"`
	//
	//按字段排序, 留空默认按照实例ID降序排序(1表示升序, -1表示降序)
	Sort *types.Struct `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort" form:"sort"`
	//
	//按照权限过滤(通用实例都有`read`, `update`, `delete`权限控制, 主机实例在通用实例权限基础上有额外的`operate`权限, 应用实例在通用实例权限基础上有额外的`developClusterOperate`, `testClusterOperate`, `prereleaseClusterOperate`, `productionClusterOperate`权限)
	Permission []string `protobuf:"bytes,6,rep,name=permission,proto3" json:"permission" form:"permission"`
	//
	//页码
	Page int32 `protobuf:"varint,7,opt,name=page,proto3" json:"page" form:"page"`
	//
	//页大小
	PageSize             int32    `protobuf:"varint,8,opt,name=page_size,json=pageSize,proto3" json:"page_size" form:"page_size"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RelationMaxCheckRequest) Reset()         { *m = RelationMaxCheckRequest{} }
func (m *RelationMaxCheckRequest) String() string { return proto.CompactTextString(m) }
func (*RelationMaxCheckRequest) ProtoMessage()    {}
func (*RelationMaxCheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9945cd2c789dd35f, []int{0}
}
func (m *RelationMaxCheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelationMaxCheckRequest.Unmarshal(m, b)
}
func (m *RelationMaxCheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelationMaxCheckRequest.Marshal(b, m, deterministic)
}
func (m *RelationMaxCheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelationMaxCheckRequest.Merge(m, src)
}
func (m *RelationMaxCheckRequest) XXX_Size() int {
	return xxx_messageInfo_RelationMaxCheckRequest.Size(m)
}
func (m *RelationMaxCheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RelationMaxCheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RelationMaxCheckRequest proto.InternalMessageInfo

func (m *RelationMaxCheckRequest) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *RelationMaxCheckRequest) GetRelationId() string {
	if m != nil {
		return m.RelationId
	}
	return ""
}

func (m *RelationMaxCheckRequest) GetRelationSideId() string {
	if m != nil {
		return m.RelationSideId
	}
	return ""
}

func (m *RelationMaxCheckRequest) GetQuery() *types.Struct {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *RelationMaxCheckRequest) GetSort() *types.Struct {
	if m != nil {
		return m.Sort
	}
	return nil
}

func (m *RelationMaxCheckRequest) GetPermission() []string {
	if m != nil {
		return m.Permission
	}
	return nil
}

func (m *RelationMaxCheckRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *RelationMaxCheckRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

//
//RelationMaxCheck返回
type RelationMaxCheckResponse struct {
	//
	//总数
	Total int32 `protobuf:"varint,1,opt,name=total,proto3" json:"total" form:"total"`
	//
	//页码
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page" form:"page"`
	//
	//页大小
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size" form:"page_size"`
	//
	//数据列表
	List                 []*RelationMaxCheckResponse_List `protobuf:"bytes,4,rep,name=list,proto3" json:"list" form:"list"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *RelationMaxCheckResponse) Reset()         { *m = RelationMaxCheckResponse{} }
func (m *RelationMaxCheckResponse) String() string { return proto.CompactTextString(m) }
func (*RelationMaxCheckResponse) ProtoMessage()    {}
func (*RelationMaxCheckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9945cd2c789dd35f, []int{1}
}
func (m *RelationMaxCheckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelationMaxCheckResponse.Unmarshal(m, b)
}
func (m *RelationMaxCheckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelationMaxCheckResponse.Marshal(b, m, deterministic)
}
func (m *RelationMaxCheckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelationMaxCheckResponse.Merge(m, src)
}
func (m *RelationMaxCheckResponse) XXX_Size() int {
	return xxx_messageInfo_RelationMaxCheckResponse.Size(m)
}
func (m *RelationMaxCheckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RelationMaxCheckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RelationMaxCheckResponse proto.InternalMessageInfo

func (m *RelationMaxCheckResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *RelationMaxCheckResponse) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *RelationMaxCheckResponse) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *RelationMaxCheckResponse) GetList() []*RelationMaxCheckResponse_List {
	if m != nil {
		return m.List
	}
	return nil
}

type RelationMaxCheckResponse_List struct {
	//
	//实例Id
	InstanceId string `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId" form:"instanceId"`
	//
	//_relation_is_max
	XRelationIsMax       bool     `protobuf:"varint,2,opt,name=_relation_is_max,json=RelationIsMax,proto3" json:"_relation_is_max" form:"_relation_is_max"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RelationMaxCheckResponse_List) Reset()         { *m = RelationMaxCheckResponse_List{} }
func (m *RelationMaxCheckResponse_List) String() string { return proto.CompactTextString(m) }
func (*RelationMaxCheckResponse_List) ProtoMessage()    {}
func (*RelationMaxCheckResponse_List) Descriptor() ([]byte, []int) {
	return fileDescriptor_9945cd2c789dd35f, []int{1, 0}
}
func (m *RelationMaxCheckResponse_List) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelationMaxCheckResponse_List.Unmarshal(m, b)
}
func (m *RelationMaxCheckResponse_List) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelationMaxCheckResponse_List.Marshal(b, m, deterministic)
}
func (m *RelationMaxCheckResponse_List) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelationMaxCheckResponse_List.Merge(m, src)
}
func (m *RelationMaxCheckResponse_List) XXX_Size() int {
	return xxx_messageInfo_RelationMaxCheckResponse_List.Size(m)
}
func (m *RelationMaxCheckResponse_List) XXX_DiscardUnknown() {
	xxx_messageInfo_RelationMaxCheckResponse_List.DiscardUnknown(m)
}

var xxx_messageInfo_RelationMaxCheckResponse_List proto.InternalMessageInfo

func (m *RelationMaxCheckResponse_List) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *RelationMaxCheckResponse_List) GetXRelationIsMax() bool {
	if m != nil {
		return m.XRelationIsMax
	}
	return false
}

//
//RelationMaxCheckApi返回
type RelationMaxCheckResponseWrapper struct {
	//
	//返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code" form:"code"`
	//
	//返回码解释
	CodeExplain string `protobuf:"bytes,2,opt,name=codeExplain,proto3" json:"codeExplain" form:"codeExplain"`
	//
	//错误详情
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error" form:"error"`
	//
	//返回数据
	Data                 *RelationMaxCheckResponse `protobuf:"bytes,4,opt,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *RelationMaxCheckResponseWrapper) Reset()         { *m = RelationMaxCheckResponseWrapper{} }
func (m *RelationMaxCheckResponseWrapper) String() string { return proto.CompactTextString(m) }
func (*RelationMaxCheckResponseWrapper) ProtoMessage()    {}
func (*RelationMaxCheckResponseWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_9945cd2c789dd35f, []int{2}
}
func (m *RelationMaxCheckResponseWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelationMaxCheckResponseWrapper.Unmarshal(m, b)
}
func (m *RelationMaxCheckResponseWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelationMaxCheckResponseWrapper.Marshal(b, m, deterministic)
}
func (m *RelationMaxCheckResponseWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelationMaxCheckResponseWrapper.Merge(m, src)
}
func (m *RelationMaxCheckResponseWrapper) XXX_Size() int {
	return xxx_messageInfo_RelationMaxCheckResponseWrapper.Size(m)
}
func (m *RelationMaxCheckResponseWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_RelationMaxCheckResponseWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_RelationMaxCheckResponseWrapper proto.InternalMessageInfo

func (m *RelationMaxCheckResponseWrapper) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RelationMaxCheckResponseWrapper) GetCodeExplain() string {
	if m != nil {
		return m.CodeExplain
	}
	return ""
}

func (m *RelationMaxCheckResponseWrapper) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *RelationMaxCheckResponseWrapper) GetData() *RelationMaxCheckResponse {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*RelationMaxCheckRequest)(nil), "instance.RelationMaxCheckRequest")
	proto.RegisterType((*RelationMaxCheckResponse)(nil), "instance.RelationMaxCheckResponse")
	proto.RegisterType((*RelationMaxCheckResponse_List)(nil), "instance.RelationMaxCheckResponse.List")
	proto.RegisterType((*RelationMaxCheckResponseWrapper)(nil), "instance.RelationMaxCheckResponseWrapper")
}

func init() { proto.RegisterFile("relation_max_check.proto", fileDescriptor_9945cd2c789dd35f) }

var fileDescriptor_9945cd2c789dd35f = []byte{
	// 664 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xdd, 0x6e, 0xd3, 0x30,
	0x14, 0xa6, 0x6b, 0x3a, 0x3a, 0x17, 0xb6, 0x62, 0x09, 0x16, 0x15, 0x50, 0x2a, 0x33, 0x41, 0x87,
	0x68, 0xba, 0x1f, 0x18, 0x3f, 0x42, 0x20, 0x0a, 0x08, 0x55, 0xda, 0x6e, 0x3c, 0x21, 0x24, 0xa6,
	0xad, 0x72, 0x13, 0x2f, 0x33, 0x6b, 0xeb, 0x2c, 0x76, 0x59, 0xd9, 0xb4, 0x57, 0xe0, 0x96, 0x57,
	0xe2, 0x29, 0x82, 0xc4, 0x1b, 0x90, 0x27, 0x40, 0x76, 0x92, 0x26, 0x0c, 0x06, 0xe3, 0x2a, 0xc9,
	0xf9, 0x7e, 0xfa, 0xf9, 0x1c, 0x9f, 0x02, 0x33, 0xa0, 0x7d, 0x22, 0x19, 0x1f, 0x76, 0x07, 0x64,
	0xdc, 0x75, 0xf6, 0xa8, 0xb3, 0x6f, 0xfb, 0x01, 0x97, 0x1c, 0x96, 0xd9, 0x50, 0x48, 0x32, 0x74,
	0x68, 0xad, 0xe9, 0x31, 0xb9, 0x37, 0xea, 0xd9, 0x0e, 0x1f, 0xb4, 0x3c, 0xee, 0xf1, 0x96, 0x26,
	0xf4, 0x46, 0xbb, 0xfa, 0x4b, 0x7f, 0xe8, 0xb7, 0x58, 0x58, 0x5b, 0xcb, 0xd1, 0x07, 0x87, 0x4c,
	0xee, 0xf3, 0xc3, 0x96, 0xc7, 0x9b, 0x1a, 0x6c, 0x7e, 0x24, 0x7d, 0xe6, 0x12, 0xc9, 0x03, 0xd1,
	0x9a, 0xbc, 0x26, 0xba, 0x1b, 0x1e, 0xe7, 0x5e, 0x9f, 0x66, 0xee, 0x42, 0x06, 0x23, 0x47, 0xc6,
	0x28, 0xfa, 0x6a, 0x80, 0x79, 0x9c, 0x64, 0xdd, 0x20, 0xe3, 0x97, 0x2a, 0x29, 0xa6, 0x07, 0x23,
	0x2a, 0x24, 0xc4, 0xa0, 0xcc, 0x7b, 0x1f, 0xa8, 0x23, 0x3b, 0xae, 0x59, 0xa8, 0x17, 0x1a, 0x33,
	0xed, 0xb5, 0x28, 0xb4, 0xe6, 0x76, 0x79, 0x30, 0x78, 0x82, 0x52, 0x04, 0x7d, 0xff, 0x66, 0x59,
	0xe0, 0xe6, 0xce, 0x16, 0x69, 0x1e, 0xbd, 0x68, 0xbe, 0xef, 0x6e, 0x6f, 0x2d, 0x35, 0x1f, 0xa7,
	0xef, 0xc7, 0x4b, 0xf7, 0x56, 0x97, 0x4f, 0x16, 0xf0, 0xc4, 0x07, 0xbe, 0x05, 0x95, 0x49, 0x6b,
	0x98, 0x6b, 0x4e, 0x69, 0xdb, 0xfb, 0x51, 0x68, 0xc1, 0xd8, 0x36, 0x07, 0x2a, 0xe7, 0x1a, 0x30,
	0xff, 0xec, 0x7c, 0x77, 0x01, 0x83, 0x94, 0xdb, 0x71, 0xe1, 0x1e, 0xa8, 0x4e, 0x94, 0x82, 0xb9,
	0x54, 0x79, 0x17, 0xb5, 0xf7, 0xb3, 0x28, 0xb4, 0xe6, 0x4f, 0x79, 0x27, 0x8c, 0x73, 0x45, 0x9f,
	0x4d, 0x55, 0x9b, 0xcc, 0xa5, 0x1d, 0x17, 0x3e, 0x07, 0xa5, 0x83, 0x11, 0x0d, 0x3e, 0x99, 0x46,
	0xbd, 0xd0, 0xa8, 0xac, 0xcc, 0xdb, 0x71, 0x7b, 0xed, 0xb4, 0xbd, 0xf6, 0xa6, 0x6e, 0x6f, 0xbb,
	0x1a, 0x85, 0xd6, 0xa5, 0xf8, 0x77, 0x35, 0x1f, 0xe1, 0x58, 0x07, 0x9f, 0x02, 0x43, 0xf0, 0x40,
	0x9a, 0xa5, 0xbf, 0xeb, 0xe7, 0xa2, 0xd0, 0xaa, 0xc4, 0x7a, 0x45, 0x47, 0x58, 0xab, 0xe0, 0x03,
	0x00, 0x7c, 0x1a, 0x0c, 0x98, 0x10, 0x8c, 0x0f, 0xcd, 0xe9, 0x7a, 0xb1, 0x31, 0xd3, 0xbe, 0x1a,
	0x85, 0xd6, 0x95, 0x98, 0x9a, 0x61, 0x08, 0xe7, 0x88, 0x70, 0x11, 0x18, 0x3e, 0xf1, 0xa8, 0x79,
	0xb1, 0x5e, 0x68, 0x94, 0xb4, 0x20, 0xf1, 0x56, 0x55, 0xd5, 0x87, 0xa9, 0xea, 0x05, 0xac, 0x29,
	0xf0, 0x21, 0x98, 0x51, 0xcf, 0xae, 0x60, 0x47, 0xd4, 0x2c, 0x6b, 0x7e, 0x2d, 0x0a, 0xad, 0x6a,
	0xc6, 0xd7, 0x50, 0x2a, 0x2a, 0xab, 0xca, 0xa6, 0x2a, 0x7c, 0x2e, 0x02, 0xf3, 0xf7, 0xab, 0x24,
	0x7c, 0x3e, 0x14, 0x14, 0xde, 0x06, 0x25, 0xc9, 0x25, 0xe9, 0xeb, 0x8b, 0x54, 0xca, 0x77, 0x47,
	0x97, 0x11, 0x8e, 0xe1, 0x49, 0xd0, 0xa9, 0xff, 0x0c, 0x5a, 0x3c, 0x7f, 0x50, 0xb8, 0x0e, 0x8c,
	0x3e, 0x13, 0xd2, 0x34, 0xea, 0xc5, 0x46, 0x65, 0xe5, 0x8e, 0x9d, 0x6e, 0xa4, 0x7d, 0x56, 0x7a,
	0x7b, 0x9d, 0x89, 0x5f, 0x26, 0xa2, 0xe4, 0x08, 0x6b, 0x97, 0xda, 0x97, 0x02, 0x30, 0x14, 0x0e,
	0x3b, 0x00, 0xa4, 0x4e, 0x93, 0x85, 0x59, 0xcc, 0x46, 0x93, 0x61, 0x2a, 0x51, 0x15, 0xcc, 0xee,
	0x24, 0xd7, 0x6d, 0xfb, 0x78, 0x79, 0xf5, 0x64, 0x01, 0xe7, 0xc4, 0xf0, 0x15, 0xa8, 0x76, 0xb3,
	0x4d, 0x10, 0xea, 0x4f, 0x44, 0x77, 0xa4, 0xdc, 0xbe, 0x9e, 0x5d, 0xe7, 0xd3, 0x0c, 0x84, 0x2f,
	0xa7, 0x07, 0xe8, 0x88, 0x0d, 0x32, 0x46, 0x3f, 0x0a, 0xc0, 0x3a, 0xeb, 0x48, 0xef, 0x02, 0xe2,
	0xfb, 0x34, 0x80, 0xb7, 0x80, 0xe1, 0x70, 0x97, 0x26, 0x63, 0xc9, 0x1d, 0x51, 0x55, 0x11, 0xd6,
	0x20, 0x7c, 0x04, 0x2a, 0xea, 0xf9, 0x7a, 0xec, 0xf7, 0x09, 0x1b, 0x26, 0x4b, 0x7b, 0x2d, 0x5b,
	0xda, 0x1c, 0x88, 0x70, 0x9e, 0xaa, 0xc6, 0x4e, 0x83, 0x80, 0x07, 0xc9, 0x32, 0xe6, 0xc6, 0xae,
	0xcb, 0x08, 0xc7, 0x30, 0x7c, 0x03, 0x0c, 0x97, 0x48, 0x92, 0x2c, 0x15, 0xfa, 0xf7, 0x48, 0xf2,
	0x51, 0x95, 0x12, 0x61, 0x6d, 0xd0, 0x9b, 0xd6, 0x7b, 0xb4, 0xfa, 0x33, 0x00, 0x00, 0xff, 0xff,
	0xba, 0x41, 0xd5, 0xb6, 0x81, 0x05, 0x00, 0x00,
}
