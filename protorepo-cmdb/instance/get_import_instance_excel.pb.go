// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: get_import_instance_excel.proto

package instance

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//GetImportInstanceExcel请求
type GetImportInstanceExcelRequest struct {
	//
	//模型对象ID
	ObjectId             string   `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id" form:"object_id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetImportInstanceExcelRequest) Reset()         { *m = GetImportInstanceExcelRequest{} }
func (m *GetImportInstanceExcelRequest) String() string { return proto.CompactTextString(m) }
func (*GetImportInstanceExcelRequest) ProtoMessage()    {}
func (*GetImportInstanceExcelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4568bbb6664c0b35, []int{0}
}
func (m *GetImportInstanceExcelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetImportInstanceExcelRequest.Unmarshal(m, b)
}
func (m *GetImportInstanceExcelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetImportInstanceExcelRequest.Marshal(b, m, deterministic)
}
func (m *GetImportInstanceExcelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetImportInstanceExcelRequest.Merge(m, src)
}
func (m *GetImportInstanceExcelRequest) XXX_Size() int {
	return xxx_messageInfo_GetImportInstanceExcelRequest.Size(m)
}
func (m *GetImportInstanceExcelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetImportInstanceExcelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetImportInstanceExcelRequest proto.InternalMessageInfo

func (m *GetImportInstanceExcelRequest) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func init() {
	proto.RegisterType((*GetImportInstanceExcelRequest)(nil), "instance.GetImportInstanceExcelRequest")
}

func init() { proto.RegisterFile("get_import_instance_excel.proto", fileDescriptor_4568bbb6664c0b35) }

var fileDescriptor_4568bbb6664c0b35 = []byte{
	// 238 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4f, 0x4f, 0x2d, 0x89,
	0xcf, 0xcc, 0x2d, 0xc8, 0x2f, 0x2a, 0x89, 0xcf, 0xcc, 0x2b, 0x2e, 0x49, 0xcc, 0x4b, 0x4e, 0x8d,
	0x4f, 0xad, 0x48, 0x4e, 0xcd, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0x89, 0x4a,
	0xe9, 0xa6, 0x67, 0x96, 0x64, 0x94, 0x26, 0xe9, 0x25, 0xe7, 0xe7, 0xea, 0xa7, 0xe7, 0xa7, 0xe7,
	0xeb, 0x83, 0x15, 0x24, 0x95, 0xa6, 0x81, 0x79, 0x60, 0x0e, 0x98, 0x05, 0xd1, 0x28, 0x65, 0x86,
	0xa4, 0x3c, 0xb7, 0x3c, 0xb3, 0x24, 0x3b, 0xbf, 0x5c, 0x3f, 0x3d, 0x5f, 0x17, 0x2c, 0xa9, 0x5b,
	0x96, 0x98, 0x93, 0x99, 0x92, 0x58, 0x92, 0x5f, 0x54, 0xac, 0x0f, 0x67, 0x42, 0xf5, 0x49, 0xa7,
	0xe7, 0xe7, 0xa7, 0xe7, 0xa4, 0x22, 0x4c, 0x4f, 0xcd, 0x2d, 0x28, 0xa9, 0x84, 0x48, 0x2a, 0x95,
	0x72, 0xc9, 0xba, 0xa7, 0x96, 0x78, 0x82, 0xdd, 0xeb, 0x09, 0x75, 0x98, 0x2b, 0xc8, 0xb5, 0x41,
	0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x21, 0x5c, 0x9c, 0xf9, 0x49, 0x59, 0xa9, 0xc9, 0x25,
	0xf1, 0x99, 0x29, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x4e, 0xe6, 0x9f, 0xee, 0xc9, 0x0b, 0xa4,
	0xe5, 0x17, 0xe5, 0x5a, 0x29, 0xc1, 0xa5, 0x94, 0x1e, 0xdd, 0x97, 0x97, 0xe7, 0x92, 0x8d, 0x8b,
	0x4e, 0xd4, 0xad, 0x72, 0xd4, 0x8d, 0x8a, 0x8f, 0x8d, 0x36, 0xd0, 0xb5, 0x84, 0xb1, 0xab, 0x0d,
	0x74, 0x8c, 0x0d, 0x6b, 0x55, 0x82, 0x38, 0x20, 0xca, 0x3d, 0x53, 0x92, 0xd8, 0xc0, 0xb6, 0x1b,
	0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x35, 0x72, 0x74, 0xe5, 0x2e, 0x01, 0x00, 0x00,
}
