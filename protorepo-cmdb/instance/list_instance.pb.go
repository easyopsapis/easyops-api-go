// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: list_instance.proto

package instance

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//ListInstance请求
type ListInstanceRequest struct {
	//
	//实例所属的模型ID
	ObjectId string `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id" form:"object_id"`
	//
	//页码
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page" form:"page"`
	//
	//页大小
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size" form:"page_size"`
	//
	//对于关联的实例数据是否只获取relation_view中指定的属性
	OnlyRelationView bool `protobuf:"varint,4,opt,name=only_relation_view,json=onlyRelationView,proto3" json:"only_relation_view" form:"only_relation_view"`
	//
	//需要返回的关系，多个用逗号分隔如`owner,tester`, 如果只需要属性字段传`*`就好
	SelectRelations      string   `protobuf:"bytes,5,opt,name=select_relations,json=selectRelations,proto3" json:"select_relations" form:"select_relations"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListInstanceRequest) Reset()         { *m = ListInstanceRequest{} }
func (m *ListInstanceRequest) String() string { return proto.CompactTextString(m) }
func (*ListInstanceRequest) ProtoMessage()    {}
func (*ListInstanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f7236325836c5ab, []int{0}
}
func (m *ListInstanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListInstanceRequest.Unmarshal(m, b)
}
func (m *ListInstanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListInstanceRequest.Marshal(b, m, deterministic)
}
func (m *ListInstanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListInstanceRequest.Merge(m, src)
}
func (m *ListInstanceRequest) XXX_Size() int {
	return xxx_messageInfo_ListInstanceRequest.Size(m)
}
func (m *ListInstanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListInstanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListInstanceRequest proto.InternalMessageInfo

func (m *ListInstanceRequest) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *ListInstanceRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListInstanceRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListInstanceRequest) GetOnlyRelationView() bool {
	if m != nil {
		return m.OnlyRelationView
	}
	return false
}

func (m *ListInstanceRequest) GetSelectRelations() string {
	if m != nil {
		return m.SelectRelations
	}
	return ""
}

//
//ListInstance返回
type ListInstanceResponse struct {
	//
	//instance list
	List []*types.Struct `protobuf:"bytes,1,rep,name=list,proto3" json:"list" form:"list"`
	//
	//实例总数
	Total int32 `protobuf:"varint,2,opt,name=total,proto3" json:"total" form:"total"`
	//
	//页码
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page" form:"page"`
	//
	//页大小
	PageSize             int32    `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size" form:"page_size"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListInstanceResponse) Reset()         { *m = ListInstanceResponse{} }
func (m *ListInstanceResponse) String() string { return proto.CompactTextString(m) }
func (*ListInstanceResponse) ProtoMessage()    {}
func (*ListInstanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f7236325836c5ab, []int{1}
}
func (m *ListInstanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListInstanceResponse.Unmarshal(m, b)
}
func (m *ListInstanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListInstanceResponse.Marshal(b, m, deterministic)
}
func (m *ListInstanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListInstanceResponse.Merge(m, src)
}
func (m *ListInstanceResponse) XXX_Size() int {
	return xxx_messageInfo_ListInstanceResponse.Size(m)
}
func (m *ListInstanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListInstanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListInstanceResponse proto.InternalMessageInfo

func (m *ListInstanceResponse) GetList() []*types.Struct {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *ListInstanceResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ListInstanceResponse) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListInstanceResponse) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

//
//ListInstanceApi返回
type ListInstanceResponseWrapper struct {
	//
	//返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code" form:"code"`
	//
	//返回码解释
	CodeExplain string `protobuf:"bytes,2,opt,name=codeExplain,proto3" json:"codeExplain" form:"codeExplain"`
	//
	//错误详情
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error" form:"error"`
	//
	//返回数据
	Data                 *ListInstanceResponse `protobuf:"bytes,4,opt,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ListInstanceResponseWrapper) Reset()         { *m = ListInstanceResponseWrapper{} }
func (m *ListInstanceResponseWrapper) String() string { return proto.CompactTextString(m) }
func (*ListInstanceResponseWrapper) ProtoMessage()    {}
func (*ListInstanceResponseWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f7236325836c5ab, []int{2}
}
func (m *ListInstanceResponseWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListInstanceResponseWrapper.Unmarshal(m, b)
}
func (m *ListInstanceResponseWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListInstanceResponseWrapper.Marshal(b, m, deterministic)
}
func (m *ListInstanceResponseWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListInstanceResponseWrapper.Merge(m, src)
}
func (m *ListInstanceResponseWrapper) XXX_Size() int {
	return xxx_messageInfo_ListInstanceResponseWrapper.Size(m)
}
func (m *ListInstanceResponseWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_ListInstanceResponseWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_ListInstanceResponseWrapper proto.InternalMessageInfo

func (m *ListInstanceResponseWrapper) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListInstanceResponseWrapper) GetCodeExplain() string {
	if m != nil {
		return m.CodeExplain
	}
	return ""
}

func (m *ListInstanceResponseWrapper) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *ListInstanceResponseWrapper) GetData() *ListInstanceResponse {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*ListInstanceRequest)(nil), "instance.ListInstanceRequest")
	proto.RegisterType((*ListInstanceResponse)(nil), "instance.ListInstanceResponse")
	proto.RegisterType((*ListInstanceResponseWrapper)(nil), "instance.ListInstanceResponseWrapper")
}

func init() { proto.RegisterFile("list_instance.proto", fileDescriptor_1f7236325836c5ab) }

var fileDescriptor_1f7236325836c5ab = []byte{
	// 529 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0x51, 0x6f, 0xd3, 0x3c,
	0x14, 0xfd, 0xd2, 0xa6, 0x9f, 0x5a, 0x17, 0x69, 0x95, 0x07, 0x2c, 0x74, 0x8c, 0x54, 0x06, 0xa1,
	0x22, 0x91, 0x74, 0x6c, 0x12, 0x03, 0xc4, 0x0b, 0x45, 0x20, 0x4d, 0xf0, 0xe4, 0x21, 0x90, 0x98,
	0x20, 0x72, 0x5b, 0x2f, 0x18, 0xd2, 0x38, 0xd8, 0xee, 0x0a, 0x45, 0xfc, 0xd5, 0x80, 0x10, 0x2f,
	0xbc, 0xe6, 0x17, 0x20, 0xdb, 0x69, 0x5a, 0x60, 0x0f, 0xf0, 0x14, 0xfb, 0x9c, 0x73, 0xaf, 0xee,
	0x39, 0xd7, 0x01, 0x9b, 0x09, 0x93, 0x2a, 0x62, 0xa9, 0x54, 0x24, 0x1d, 0xd3, 0x30, 0x13, 0x5c,
	0x71, 0xd8, 0x5c, 0xde, 0xbb, 0x41, 0xcc, 0xd4, 0x9b, 0xd9, 0x28, 0x1c, 0xf3, 0xe9, 0x20, 0xe6,
	0x31, 0x1f, 0x18, 0xc1, 0x68, 0x76, 0x62, 0x6e, 0xe6, 0x62, 0x4e, 0xb6, 0xb0, 0x7b, 0x7b, 0x4d,
	0x3e, 0x9d, 0x33, 0xf5, 0x8e, 0xcf, 0x07, 0x31, 0x0f, 0x0c, 0x19, 0x9c, 0x92, 0x84, 0x4d, 0x88,
	0xe2, 0x42, 0x0e, 0xaa, 0x63, 0x59, 0x77, 0x39, 0xe6, 0x3c, 0x4e, 0xe8, 0xaa, 0xbb, 0x54, 0x62,
	0x36, 0x56, 0x96, 0x45, 0xdf, 0x6b, 0x60, 0xf3, 0x29, 0x93, 0xea, 0xb0, 0x9c, 0x0a, 0xd3, 0xf7,
	0x33, 0x2a, 0x15, 0x7c, 0x06, 0x5a, 0x7c, 0xf4, 0x96, 0x8e, 0x55, 0xc4, 0x26, 0x9e, 0xd3, 0x73,
	0xfa, 0xad, 0xe1, 0x41, 0x91, 0xfb, 0x9d, 0x13, 0x2e, 0xa6, 0xf7, 0x50, 0x45, 0xa1, 0x6f, 0x5f,
	0x7c, 0x1f, 0xec, 0xbc, 0x3e, 0x26, 0xc1, 0xe2, 0x41, 0xf0, 0x32, 0x7a, 0x75, 0xbc, 0x1b, 0xdc,
	0x5d, 0x9e, 0x3f, 0xed, 0xde, 0xdc, 0xbf, 0xf5, 0xf9, 0x1a, 0x6e, 0x5a, 0xf9, 0xe1, 0x04, 0xde,
	0x00, 0x6e, 0x46, 0x62, 0xea, 0xd5, 0x7a, 0x4e, 0xbf, 0x31, 0xbc, 0x50, 0xe4, 0x7e, 0xdb, 0x36,
	0xd4, 0xa8, 0xee, 0x55, 0xeb, 0xfc, 0x87, 0x8d, 0x04, 0x1e, 0x80, 0x96, 0xfe, 0x46, 0x92, 0x2d,
	0xa8, 0x57, 0x37, 0xfa, 0xee, 0x6a, 0x80, 0x8a, 0x5a, 0x16, 0x35, 0x35, 0x72, 0xc4, 0x16, 0x14,
	0x3e, 0x01, 0x90, 0xa7, 0xc9, 0xc7, 0x48, 0xd0, 0x84, 0x28, 0xc6, 0xd3, 0xe8, 0x94, 0xd1, 0xb9,
	0xe7, 0xf6, 0x9c, 0x7e, 0x73, 0xb8, 0x53, 0xe4, 0xfe, 0xa5, 0xd2, 0xc2, 0x1f, 0x1a, 0x84, 0x3b,
	0x1a, 0xc4, 0x25, 0xf6, 0x9c, 0xd1, 0x39, 0x7c, 0x0c, 0x3a, 0x92, 0x26, 0xda, 0xeb, 0x52, 0x2a,
	0xbd, 0x86, 0x49, 0x63, 0xbb, 0xc8, 0xfd, 0x2d, 0xdb, 0xea, 0x77, 0x05, 0xc2, 0x1b, 0x16, 0xc2,
	0x15, 0xf2, 0xd5, 0x01, 0xe7, 0x7f, 0x8d, 0x59, 0x66, 0x3c, 0x95, 0x14, 0xde, 0x07, 0xae, 0x7e,
	0x25, 0x9e, 0xd3, 0xab, 0xf7, 0xdb, 0x7b, 0x5b, 0xa1, 0x5d, 0x56, 0xb8, 0x5c, 0x56, 0x78, 0x64,
	0x96, 0x35, 0xdc, 0x58, 0x45, 0xa5, 0xe5, 0x08, 0x9b, 0x2a, 0x78, 0x1d, 0x34, 0x14, 0x57, 0x24,
	0x29, 0x03, 0xed, 0x14, 0xb9, 0x7f, 0xce, 0xaa, 0x0c, 0x8c, 0xb0, 0xa5, 0xab, 0xdc, 0xeb, 0xff,
	0x98, 0xbb, 0xfb, 0xf7, 0xb9, 0xa3, 0x1f, 0x0e, 0xd8, 0x3e, 0xcb, 0xe2, 0x0b, 0x41, 0xb2, 0x8c,
	0x0a, 0x78, 0x15, 0xb8, 0x63, 0x3e, 0xa1, 0xe6, 0x31, 0x35, 0xd6, 0x0d, 0x69, 0x14, 0x61, 0x43,
	0xc2, 0x3b, 0xa0, 0xad, 0xbf, 0x8f, 0x3e, 0x64, 0x09, 0x61, 0xa9, 0xb1, 0xd5, 0x1a, 0x5e, 0x2c,
	0x72, 0x1f, 0xae, 0xb4, 0x25, 0x89, 0xf0, 0xba, 0x54, 0x47, 0x41, 0x85, 0xe0, 0xc2, 0x78, 0x6c,
	0xad, 0x47, 0x61, 0x60, 0x84, 0x2d, 0x0d, 0x1f, 0x02, 0x77, 0x42, 0x14, 0x31, 0xd6, 0xda, 0x7b,
	0x57, 0xc2, 0xea, 0xf7, 0x3c, 0x6b, 0xf6, 0xf5, 0x31, 0x75, 0x15, 0xc2, 0xa6, 0x78, 0xf4, 0xbf,
	0xd9, 0xcf, 0xfe, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xdb, 0x8a, 0x44, 0x04, 0xe2, 0x03, 0x00,
	0x00,
}
