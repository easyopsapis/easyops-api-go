// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: batch_search.proto

package instance

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//BatchSearch请求
type BatchSearchRequest struct {
	//
	//body
	Data                 []*BatchSearchRequest_Data `protobuf:"bytes,1,rep,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *BatchSearchRequest) Reset()         { *m = BatchSearchRequest{} }
func (m *BatchSearchRequest) String() string { return proto.CompactTextString(m) }
func (*BatchSearchRequest) ProtoMessage()    {}
func (*BatchSearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d194cf0e394e0e08, []int{0}
}
func (m *BatchSearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchSearchRequest.Unmarshal(m, b)
}
func (m *BatchSearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchSearchRequest.Marshal(b, m, deterministic)
}
func (m *BatchSearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchSearchRequest.Merge(m, src)
}
func (m *BatchSearchRequest) XXX_Size() int {
	return xxx_messageInfo_BatchSearchRequest.Size(m)
}
func (m *BatchSearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchSearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BatchSearchRequest proto.InternalMessageInfo

func (m *BatchSearchRequest) GetData() []*BatchSearchRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type BatchSearchRequest_Data struct {
	//
	//模型对象ID
	ObjectId string `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id" form:"object_id"`
	//
	//搜索条件
	Search               *BatchSearchRequest_Data_Search `protobuf:"bytes,2,opt,name=search,proto3" json:"search" form:"search"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *BatchSearchRequest_Data) Reset()         { *m = BatchSearchRequest_Data{} }
func (m *BatchSearchRequest_Data) String() string { return proto.CompactTextString(m) }
func (*BatchSearchRequest_Data) ProtoMessage()    {}
func (*BatchSearchRequest_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_d194cf0e394e0e08, []int{0, 0}
}
func (m *BatchSearchRequest_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchSearchRequest_Data.Unmarshal(m, b)
}
func (m *BatchSearchRequest_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchSearchRequest_Data.Marshal(b, m, deterministic)
}
func (m *BatchSearchRequest_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchSearchRequest_Data.Merge(m, src)
}
func (m *BatchSearchRequest_Data) XXX_Size() int {
	return xxx_messageInfo_BatchSearchRequest_Data.Size(m)
}
func (m *BatchSearchRequest_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchSearchRequest_Data.DiscardUnknown(m)
}

var xxx_messageInfo_BatchSearchRequest_Data proto.InternalMessageInfo

func (m *BatchSearchRequest_Data) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *BatchSearchRequest_Data) GetSearch() *BatchSearchRequest_Data_Search {
	if m != nil {
		return m.Search
	}
	return nil
}

type BatchSearchRequest_Data_Search struct {
	//
	//e.g.: { name: { $like: '%q%' } }, { $or: [{ name: { $like: '%q%' }}] }
	Query *types.Struct `protobuf:"bytes,1,opt,name=query,proto3" json:"query" form:"query"`
	//
	//e.g.: { instanceId: true, name: true }
	Fields *types.Struct `protobuf:"bytes,2,opt,name=fields,proto3" json:"fields" form:"fields"`
	//
	//当为 true 时，只搜索与我相关实例
	OnlyMyInstance bool `protobuf:"varint,3,opt,name=only_my_instance,json=onlyMyInstance,proto3" json:"only_my_instance" form:"only_my_instance"`
	//
	//对于关联的实例数据是否只获取 relation_view 中指定的属性, 这个字段为 true 时, 会覆盖 fields 字段中指定的二级字段设置
	OnlyRelationView bool `protobuf:"varint,4,opt,name=only_relation_view,json=onlyRelationView,proto3" json:"only_relation_view" form:"only_relation_view"`
	//
	//页码
	Page int32 `protobuf:"varint,5,opt,name=page,proto3" json:"page" form:"page"`
	//
	//页大小
	PageSize int32 `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3" json:"page_size" form:"page_size"`
	//
	//按字段排序, 留空默认按照实例ID降序排序(1表示升序, -1表示降序) e.g.: { instanceId: 1 }
	Sort *types.Struct `protobuf:"bytes,7,opt,name=sort,proto3" json:"sort" form:"sort"`
	//
	//按照权限过滤(通用实例都有 read, update, delete 权限控制, 主机实例在通用实例权限基础上有额外的 operate 权限, 应用实例在通用实例权限基础上有额外的 developClusterOperate, testClusterOperate, prereleaseClusterOperate, productionClusterOperate 权限) e.g.: [ "operate", "update" ]
	Permission           []string `protobuf:"bytes,8,rep,name=permission,proto3" json:"permission" form:"permission"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BatchSearchRequest_Data_Search) Reset()         { *m = BatchSearchRequest_Data_Search{} }
func (m *BatchSearchRequest_Data_Search) String() string { return proto.CompactTextString(m) }
func (*BatchSearchRequest_Data_Search) ProtoMessage()    {}
func (*BatchSearchRequest_Data_Search) Descriptor() ([]byte, []int) {
	return fileDescriptor_d194cf0e394e0e08, []int{0, 0, 0}
}
func (m *BatchSearchRequest_Data_Search) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchSearchRequest_Data_Search.Unmarshal(m, b)
}
func (m *BatchSearchRequest_Data_Search) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchSearchRequest_Data_Search.Marshal(b, m, deterministic)
}
func (m *BatchSearchRequest_Data_Search) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchSearchRequest_Data_Search.Merge(m, src)
}
func (m *BatchSearchRequest_Data_Search) XXX_Size() int {
	return xxx_messageInfo_BatchSearchRequest_Data_Search.Size(m)
}
func (m *BatchSearchRequest_Data_Search) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchSearchRequest_Data_Search.DiscardUnknown(m)
}

var xxx_messageInfo_BatchSearchRequest_Data_Search proto.InternalMessageInfo

func (m *BatchSearchRequest_Data_Search) GetQuery() *types.Struct {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *BatchSearchRequest_Data_Search) GetFields() *types.Struct {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *BatchSearchRequest_Data_Search) GetOnlyMyInstance() bool {
	if m != nil {
		return m.OnlyMyInstance
	}
	return false
}

func (m *BatchSearchRequest_Data_Search) GetOnlyRelationView() bool {
	if m != nil {
		return m.OnlyRelationView
	}
	return false
}

func (m *BatchSearchRequest_Data_Search) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *BatchSearchRequest_Data_Search) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *BatchSearchRequest_Data_Search) GetSort() *types.Struct {
	if m != nil {
		return m.Sort
	}
	return nil
}

func (m *BatchSearchRequest_Data_Search) GetPermission() []string {
	if m != nil {
		return m.Permission
	}
	return nil
}

//
//BatchSearch返回
type BatchSearchResponse struct {
	//
	//返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code" form:"code"`
	//
	//错误信息
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error" form:"error"`
	//
	//返回消息
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message" form:"message"`
	//
	//实例总数
	Data                 []*BatchSearchResponse_Data `protobuf:"bytes,4,rep,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *BatchSearchResponse) Reset()         { *m = BatchSearchResponse{} }
func (m *BatchSearchResponse) String() string { return proto.CompactTextString(m) }
func (*BatchSearchResponse) ProtoMessage()    {}
func (*BatchSearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d194cf0e394e0e08, []int{1}
}
func (m *BatchSearchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchSearchResponse.Unmarshal(m, b)
}
func (m *BatchSearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchSearchResponse.Marshal(b, m, deterministic)
}
func (m *BatchSearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchSearchResponse.Merge(m, src)
}
func (m *BatchSearchResponse) XXX_Size() int {
	return xxx_messageInfo_BatchSearchResponse.Size(m)
}
func (m *BatchSearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchSearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BatchSearchResponse proto.InternalMessageInfo

func (m *BatchSearchResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *BatchSearchResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *BatchSearchResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *BatchSearchResponse) GetData() []*BatchSearchResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type BatchSearchResponse_Data struct {
	//
	//instance list
	List []*types.Struct `protobuf:"bytes,1,rep,name=list,proto3" json:"list" form:"list"`
	//
	//实例总数
	Total int32 `protobuf:"varint,2,opt,name=total,proto3" json:"total" form:"total"`
	//
	//页码
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page" form:"page"`
	//
	//页大小
	PageSize             int32    `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size" form:"page_size"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BatchSearchResponse_Data) Reset()         { *m = BatchSearchResponse_Data{} }
func (m *BatchSearchResponse_Data) String() string { return proto.CompactTextString(m) }
func (*BatchSearchResponse_Data) ProtoMessage()    {}
func (*BatchSearchResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_d194cf0e394e0e08, []int{1, 0}
}
func (m *BatchSearchResponse_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchSearchResponse_Data.Unmarshal(m, b)
}
func (m *BatchSearchResponse_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchSearchResponse_Data.Marshal(b, m, deterministic)
}
func (m *BatchSearchResponse_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchSearchResponse_Data.Merge(m, src)
}
func (m *BatchSearchResponse_Data) XXX_Size() int {
	return xxx_messageInfo_BatchSearchResponse_Data.Size(m)
}
func (m *BatchSearchResponse_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchSearchResponse_Data.DiscardUnknown(m)
}

var xxx_messageInfo_BatchSearchResponse_Data proto.InternalMessageInfo

func (m *BatchSearchResponse_Data) GetList() []*types.Struct {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *BatchSearchResponse_Data) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *BatchSearchResponse_Data) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *BatchSearchResponse_Data) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

//
//BatchSearchApi返回
type BatchSearchResponseWrapper struct {
	//
	//返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code" form:"code"`
	//
	//返回码解释
	CodeExplain string `protobuf:"bytes,2,opt,name=codeExplain,proto3" json:"codeExplain" form:"codeExplain"`
	//
	//错误详情
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error" form:"error"`
	//
	//返回数据
	Data                 *BatchSearchResponse `protobuf:"bytes,4,opt,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *BatchSearchResponseWrapper) Reset()         { *m = BatchSearchResponseWrapper{} }
func (m *BatchSearchResponseWrapper) String() string { return proto.CompactTextString(m) }
func (*BatchSearchResponseWrapper) ProtoMessage()    {}
func (*BatchSearchResponseWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_d194cf0e394e0e08, []int{2}
}
func (m *BatchSearchResponseWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchSearchResponseWrapper.Unmarshal(m, b)
}
func (m *BatchSearchResponseWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchSearchResponseWrapper.Marshal(b, m, deterministic)
}
func (m *BatchSearchResponseWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchSearchResponseWrapper.Merge(m, src)
}
func (m *BatchSearchResponseWrapper) XXX_Size() int {
	return xxx_messageInfo_BatchSearchResponseWrapper.Size(m)
}
func (m *BatchSearchResponseWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchSearchResponseWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_BatchSearchResponseWrapper proto.InternalMessageInfo

func (m *BatchSearchResponseWrapper) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *BatchSearchResponseWrapper) GetCodeExplain() string {
	if m != nil {
		return m.CodeExplain
	}
	return ""
}

func (m *BatchSearchResponseWrapper) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *BatchSearchResponseWrapper) GetData() *BatchSearchResponse {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*BatchSearchRequest)(nil), "instance.BatchSearchRequest")
	proto.RegisterType((*BatchSearchRequest_Data)(nil), "instance.BatchSearchRequest.Data")
	proto.RegisterType((*BatchSearchRequest_Data_Search)(nil), "instance.BatchSearchRequest.Data.Search")
	proto.RegisterType((*BatchSearchResponse)(nil), "instance.BatchSearchResponse")
	proto.RegisterType((*BatchSearchResponse_Data)(nil), "instance.BatchSearchResponse.Data")
	proto.RegisterType((*BatchSearchResponseWrapper)(nil), "instance.BatchSearchResponseWrapper")
}

func init() { proto.RegisterFile("batch_search.proto", fileDescriptor_d194cf0e394e0e08) }

var fileDescriptor_d194cf0e394e0e08 = []byte{
	// 730 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0xd1, 0x6e, 0x13, 0x39,
	0x14, 0xdd, 0xe9, 0x4c, 0xd2, 0xc4, 0xd9, 0xed, 0xa6, 0x5e, 0xed, 0x76, 0x36, 0xbb, 0xd5, 0x64,
	0xbd, 0xab, 0x55, 0x90, 0x9a, 0x49, 0x69, 0x05, 0x05, 0x54, 0x09, 0x31, 0xa2, 0xa0, 0x0a, 0xf1,
	0xe2, 0x20, 0x90, 0xa8, 0x20, 0x72, 0x12, 0x37, 0x35, 0x4c, 0xe2, 0x74, 0xec, 0x34, 0xa4, 0x88,
	0x4f, 0xe0, 0x4f, 0x10, 0xdf, 0xc2, 0x17, 0x0c, 0x12, 0x2f, 0xbc, 0xcf, 0x23, 0x4f, 0xc8, 0xf6,
	0x24, 0x99, 0x02, 0x0d, 0xe5, 0x69, 0x3c, 0xf7, 0x9c, 0x73, 0x7d, 0x7d, 0xcf, 0xbd, 0x00, 0xb6,
	0x89, 0xec, 0x1c, 0xb5, 0x04, 0x25, 0x51, 0xe7, 0xc8, 0x1f, 0x46, 0x5c, 0x72, 0x58, 0x60, 0x03,
	0x21, 0xc9, 0xa0, 0x43, 0x2b, 0xf5, 0x1e, 0x93, 0x47, 0xa3, 0xb6, 0xdf, 0xe1, 0xfd, 0x46, 0x8f,
	0xf7, 0x78, 0x43, 0x13, 0xda, 0xa3, 0x43, 0xfd, 0xa7, 0x7f, 0xf4, 0xc9, 0x08, 0x2b, 0x57, 0x33,
	0xf4, 0xfe, 0x98, 0xc9, 0xe7, 0x7c, 0xdc, 0xe8, 0xf1, 0xba, 0x06, 0xeb, 0x27, 0x24, 0x64, 0x5d,
	0x22, 0x79, 0x24, 0x1a, 0xb3, 0x63, 0xaa, 0xfb, 0xbb, 0xc7, 0x79, 0x2f, 0xa4, 0xf3, 0xec, 0x42,
	0x46, 0xa3, 0x8e, 0x34, 0x28, 0x7a, 0x9d, 0x07, 0x30, 0x50, 0x55, 0x36, 0x75, 0x91, 0x98, 0x1e,
	0x8f, 0xa8, 0x90, 0xf0, 0x0e, 0x70, 0xba, 0x44, 0x12, 0xd7, 0xaa, 0xda, 0xb5, 0xd2, 0xd6, 0x3f,
	0xfe, 0xb4, 0x68, 0xff, 0x6b, 0xae, 0x7f, 0x9b, 0x48, 0x12, 0xfc, 0x9a, 0xc4, 0x5e, 0xe9, 0x90,
	0x47, 0xfd, 0x1b, 0x48, 0x09, 0x11, 0xd6, 0xfa, 0xca, 0xdb, 0x1c, 0x70, 0x14, 0x0e, 0x1f, 0x80,
	0x22, 0x6f, 0x3f, 0xa3, 0x1d, 0xd9, 0x62, 0x5d, 0xd7, 0xaa, 0x5a, 0xb5, 0x62, 0xb0, 0x93, 0xc4,
	0x5e, 0xd9, 0x48, 0x66, 0x10, 0xfa, 0xf0, 0xde, 0xf3, 0xc0, 0xfa, 0xd3, 0x03, 0x52, 0x3f, 0xbd,
	0x55, 0x7f, 0xdc, 0x7a, 0x72, 0xb0, 0x59, 0xbf, 0x3e, 0x3d, 0xbf, 0xdc, 0xdc, 0xd8, 0xbe, 0xfc,
	0xea, 0x3f, 0x5c, 0x30, 0xf4, 0xfd, 0x2e, 0x6c, 0x82, 0xbc, 0x69, 0xae, 0xbb, 0x54, 0xb5, 0x6a,
	0xa5, 0xad, 0xda, 0x77, 0x0b, 0xf5, 0x4d, 0x28, 0x58, 0x4d, 0x62, 0xef, 0x17, 0x73, 0xb9, 0xc9,
	0x80, 0x70, 0x9a, 0xaa, 0xf2, 0xc9, 0x06, 0x79, 0xc3, 0x82, 0x37, 0x41, 0xee, 0x78, 0x44, 0xa3,
	0x89, 0xae, 0xb8, 0xb4, 0xb5, 0xe6, 0x9b, 0x5e, 0xfa, 0xd3, 0x5e, 0xfa, 0x4d, 0xdd, 0xcb, 0xa0,
	0x9c, 0xc4, 0xde, 0xcf, 0x26, 0x9b, 0xe6, 0x23, 0x6c, 0x74, 0x30, 0x00, 0xf9, 0x43, 0x46, 0xc3,
	0xae, 0x48, 0x0b, 0x3c, 0x37, 0x43, 0xa6, 0x1e, 0x23, 0x40, 0x38, 0x55, 0xc2, 0x3d, 0x50, 0xe6,
	0x83, 0x70, 0xd2, 0xea, 0x4f, 0x5a, 0xd3, 0xd7, 0xb9, 0x76, 0xd5, 0xaa, 0x15, 0x82, 0xbf, 0x92,
	0xd8, 0x5b, 0x4b, 0x3b, 0xf8, 0x05, 0x03, 0xe1, 0x15, 0x15, 0xba, 0x3f, 0xd9, 0x4f, 0x03, 0xf0,
	0x1e, 0x80, 0x9a, 0x14, 0xd1, 0x90, 0x48, 0xc6, 0x07, 0xad, 0x13, 0x46, 0xc7, 0xae, 0xa3, 0x13,
	0xad, 0x27, 0xb1, 0xf7, 0x67, 0x26, 0xd1, 0x19, 0x0e, 0xc2, 0xfa, 0x7e, 0x9c, 0xc6, 0x1e, 0x32,
	0x3a, 0x86, 0x97, 0x80, 0x33, 0x24, 0x3d, 0xea, 0xe6, 0xaa, 0x56, 0x2d, 0x17, 0xfc, 0x3e, 0x37,
	0x5f, 0x45, 0x95, 0x89, 0x4b, 0xe5, 0x9f, 0xb0, 0xa6, 0xc0, 0x1d, 0x50, 0x54, 0xdf, 0x96, 0x60,
	0xa7, 0xd4, 0xcd, 0x6b, 0x7e, 0x65, 0xee, 0xfc, 0x0c, 0x9a, 0x8a, 0x0a, 0x2a, 0xd2, 0x64, 0xa7,
	0x14, 0xee, 0x02, 0x47, 0xf0, 0x48, 0xba, 0xcb, 0x8b, 0x3b, 0x97, 0x99, 0x3c, 0x45, 0x47, 0x58,
	0xab, 0xe0, 0x15, 0x00, 0x86, 0x34, 0xea, 0x33, 0x21, 0x18, 0x1f, 0xb8, 0x85, 0xaa, 0x5d, 0x2b,
	0xea, 0x3a, 0x57, 0xd3, 0x7b, 0x67, 0x18, 0xc2, 0x19, 0x22, 0x7a, 0x63, 0x83, 0xdf, 0xce, 0x8c,
	0x8e, 0x18, 0xf2, 0x81, 0xa0, 0xf0, 0x5f, 0xe0, 0x74, 0x78, 0x97, 0xea, 0x41, 0xc8, 0x65, 0xef,
	0x54, 0x51, 0x84, 0x35, 0x08, 0xff, 0x07, 0x39, 0x1a, 0x45, 0x3c, 0xd2, 0x66, 0x17, 0xb3, 0x53,
	0xa1, 0xc3, 0x08, 0x1b, 0x18, 0x6e, 0x80, 0xe5, 0x3e, 0x15, 0x42, 0x35, 0xd0, 0xd6, 0x4c, 0x98,
	0xc4, 0xde, 0x8a, 0x61, 0xa6, 0x00, 0xc2, 0x53, 0x0a, 0xbc, 0x9b, 0xee, 0xa2, 0xa3, 0x77, 0x11,
	0x9d, 0x33, 0xe2, 0xa6, 0xce, 0x85, 0xcb, 0xf8, 0xce, 0x4a, 0x97, 0x71, 0x17, 0x38, 0x21, 0x13,
	0x32, 0xdd, 0xee, 0x8b, 0x74, 0x56, 0xd1, 0x11, 0xd6, 0x2a, 0xf5, 0x4a, 0xc9, 0x25, 0x09, 0xf5,
	0x2b, 0x73, 0xd9, 0x57, 0xea, 0x30, 0xc2, 0x06, 0x9e, 0xcd, 0x88, 0xfd, 0x83, 0x33, 0xe2, 0x5c,
	0x7c, 0x46, 0xd0, 0x47, 0x0b, 0x54, 0xbe, 0xd1, 0x86, 0x47, 0x11, 0x19, 0x0e, 0x69, 0x74, 0x31,
	0xd7, 0xae, 0x81, 0x92, 0xfa, 0xee, 0xbd, 0x18, 0x86, 0x84, 0x0d, 0x52, 0xef, 0xfe, 0x48, 0x62,
	0x0f, 0xce, 0xb9, 0x29, 0x88, 0x70, 0x96, 0x3a, 0xf7, 0xdb, 0x5e, 0xec, 0x77, 0x30, 0x73, 0x50,
	0x4d, 0xf2, 0xfa, 0x42, 0x07, 0xcf, 0x31, 0xaf, 0x9d, 0xd7, 0xee, 0x6c, 0x7f, 0x0e, 0x00, 0x00,
	0xff, 0xff, 0xce, 0xb0, 0x5c, 0x6c, 0x54, 0x06, 0x00, 0x00,
}
