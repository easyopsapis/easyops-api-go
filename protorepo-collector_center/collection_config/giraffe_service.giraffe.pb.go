// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: giraffe_service.proto

package collection_config

import (
	context "context"
	fmt "fmt"
	giraffe_micro "github.com/easyops-cn/giraffe-micro"
	go_proto_giraffe "github.com/easyops-cn/go-proto-giraffe"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ = io.EOF
var _ context.Context
var _ giraffe_micro.Client
var _ go_proto_giraffe.Contract

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = giraffe_micro.SupportPackageIsVersion4 // please upgrade the giraffe_micro package

// Client is the client API for collection_config service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type Client interface {
	CreateCollectionConfig(ctx context.Context, in *CreateCollectionConfigRequest) (*CreateCollectionConfigResponse, error)
	DebugCollectionConfig(ctx context.Context, in *DebugCollectionConfigRequest) (*DebugCollectionConfigResponse, error)
	DebugCollectionConfigCallback(ctx context.Context, in *DebugCollectionConfigCallbackRequest) (*DebugCollectionConfigCallbackResponse, error)
	DeleteCollectionConfig(ctx context.Context, in *DeleteCollectionConfigRequest) (*DeleteCollectionConfigResponse, error)
	DetailCollectionConfig(ctx context.Context, in *DetailCollectionConfigRequest) (*DetailCollectionConfigResponse, error)
	DetailCollectionConfigDebug(ctx context.Context, in *DetailCollectionConfigDebugRequest) (*DetailCollectionConfigDebugResponse, error)
	DisableCollectionConfig(ctx context.Context, in *DisableCollectionConfigRequest) (*DisableCollectionConfigResponse, error)
	ListCollectionConfig(ctx context.Context, in *ListCollectionConfigRequest) (*ListCollectionConfigResponse, error)
	ListCollectionConfigJobs(ctx context.Context, in *ListCollectionConfigJobsRequest) (*ListCollectionConfigJobsResponse, error)
	MaintainCollectionConfigJob(ctx context.Context, in *MaintainCollectionConfigJobRequest) (*MaintainCollectionConfigJobResponse, error)
	UpdateCollectionConfig(ctx context.Context, in *UpdateCollectionConfigRequest) (*UpdateCollectionConfigResponse, error)
}

type client struct {
	c giraffe_micro.Client
}

func NewClient(c giraffe_micro.Client) Client {
	return &client{
		c: c,
	}
}

func (c *client) CreateCollectionConfig(ctx context.Context, in *CreateCollectionConfigRequest) (*CreateCollectionConfigResponse, error) {
	out := new(CreateCollectionConfigResponse)
	err := c.c.Invoke(ctx, _CreateCollectionConfigMethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) DebugCollectionConfig(ctx context.Context, in *DebugCollectionConfigRequest) (*DebugCollectionConfigResponse, error) {
	out := new(DebugCollectionConfigResponse)
	err := c.c.Invoke(ctx, _DebugCollectionConfigMethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) DebugCollectionConfigCallback(ctx context.Context, in *DebugCollectionConfigCallbackRequest) (*DebugCollectionConfigCallbackResponse, error) {
	out := new(DebugCollectionConfigCallbackResponse)
	err := c.c.Invoke(ctx, _DebugCollectionConfigCallbackMethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) DeleteCollectionConfig(ctx context.Context, in *DeleteCollectionConfigRequest) (*DeleteCollectionConfigResponse, error) {
	out := new(DeleteCollectionConfigResponse)
	err := c.c.Invoke(ctx, _DeleteCollectionConfigMethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) DetailCollectionConfig(ctx context.Context, in *DetailCollectionConfigRequest) (*DetailCollectionConfigResponse, error) {
	out := new(DetailCollectionConfigResponse)
	err := c.c.Invoke(ctx, _DetailCollectionConfigMethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) DetailCollectionConfigDebug(ctx context.Context, in *DetailCollectionConfigDebugRequest) (*DetailCollectionConfigDebugResponse, error) {
	out := new(DetailCollectionConfigDebugResponse)
	err := c.c.Invoke(ctx, _DetailCollectionConfigDebugMethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) DisableCollectionConfig(ctx context.Context, in *DisableCollectionConfigRequest) (*DisableCollectionConfigResponse, error) {
	out := new(DisableCollectionConfigResponse)
	err := c.c.Invoke(ctx, _DisableCollectionConfigMethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) ListCollectionConfig(ctx context.Context, in *ListCollectionConfigRequest) (*ListCollectionConfigResponse, error) {
	out := new(ListCollectionConfigResponse)
	err := c.c.Invoke(ctx, _ListCollectionConfigMethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) ListCollectionConfigJobs(ctx context.Context, in *ListCollectionConfigJobsRequest) (*ListCollectionConfigJobsResponse, error) {
	out := new(ListCollectionConfigJobsResponse)
	err := c.c.Invoke(ctx, _ListCollectionConfigJobsMethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) MaintainCollectionConfigJob(ctx context.Context, in *MaintainCollectionConfigJobRequest) (*MaintainCollectionConfigJobResponse, error) {
	out := new(MaintainCollectionConfigJobResponse)
	err := c.c.Invoke(ctx, _MaintainCollectionConfigJobMethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) UpdateCollectionConfig(ctx context.Context, in *UpdateCollectionConfigRequest) (*UpdateCollectionConfigResponse, error) {
	out := new(UpdateCollectionConfigResponse)
	err := c.c.Invoke(ctx, _UpdateCollectionConfigMethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Service is the server API for collection_config service.
type Service interface {
	CreateCollectionConfig(context.Context, *CreateCollectionConfigRequest) (*CreateCollectionConfigResponse, error)
	DebugCollectionConfig(context.Context, *DebugCollectionConfigRequest) (*DebugCollectionConfigResponse, error)
	DebugCollectionConfigCallback(context.Context, *DebugCollectionConfigCallbackRequest) (*DebugCollectionConfigCallbackResponse, error)
	DeleteCollectionConfig(context.Context, *DeleteCollectionConfigRequest) (*DeleteCollectionConfigResponse, error)
	DetailCollectionConfig(context.Context, *DetailCollectionConfigRequest) (*DetailCollectionConfigResponse, error)
	DetailCollectionConfigDebug(context.Context, *DetailCollectionConfigDebugRequest) (*DetailCollectionConfigDebugResponse, error)
	DisableCollectionConfig(context.Context, *DisableCollectionConfigRequest) (*DisableCollectionConfigResponse, error)
	ListCollectionConfig(context.Context, *ListCollectionConfigRequest) (*ListCollectionConfigResponse, error)
	ListCollectionConfigJobs(context.Context, *ListCollectionConfigJobsRequest) (*ListCollectionConfigJobsResponse, error)
	MaintainCollectionConfigJob(context.Context, *MaintainCollectionConfigJobRequest) (*MaintainCollectionConfigJobResponse, error)
	UpdateCollectionConfig(context.Context, *UpdateCollectionConfigRequest) (*UpdateCollectionConfigResponse, error)
}

func _CreateCollectionConfigEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.CreateCollectionConfig(ctx, req.(*CreateCollectionConfigRequest))
	}
}

func _DebugCollectionConfigEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.DebugCollectionConfig(ctx, req.(*DebugCollectionConfigRequest))
	}
}

func _DebugCollectionConfigCallbackEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.DebugCollectionConfigCallback(ctx, req.(*DebugCollectionConfigCallbackRequest))
	}
}

func _DeleteCollectionConfigEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.DeleteCollectionConfig(ctx, req.(*DeleteCollectionConfigRequest))
	}
}

func _DetailCollectionConfigEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.DetailCollectionConfig(ctx, req.(*DetailCollectionConfigRequest))
	}
}

func _DetailCollectionConfigDebugEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.DetailCollectionConfigDebug(ctx, req.(*DetailCollectionConfigDebugRequest))
	}
}

func _DisableCollectionConfigEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.DisableCollectionConfig(ctx, req.(*DisableCollectionConfigRequest))
	}
}

func _ListCollectionConfigEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.ListCollectionConfig(ctx, req.(*ListCollectionConfigRequest))
	}
}

func _ListCollectionConfigJobsEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.ListCollectionConfigJobs(ctx, req.(*ListCollectionConfigJobsRequest))
	}
}

func _MaintainCollectionConfigJobEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.MaintainCollectionConfigJob(ctx, req.(*MaintainCollectionConfigJobRequest))
	}
}

func _UpdateCollectionConfigEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.UpdateCollectionConfig(ctx, req.(*UpdateCollectionConfigRequest))
	}
}

func RegisterService(s giraffe_micro.Server, srv Service) {
	s.RegisterUnaryEndpoint(_CreateCollectionConfigMethodDesc, _CreateCollectionConfigEndpoint(srv))
	s.RegisterUnaryEndpoint(_DebugCollectionConfigMethodDesc, _DebugCollectionConfigEndpoint(srv))
	s.RegisterUnaryEndpoint(_DebugCollectionConfigCallbackMethodDesc, _DebugCollectionConfigCallbackEndpoint(srv))
	s.RegisterUnaryEndpoint(_DeleteCollectionConfigMethodDesc, _DeleteCollectionConfigEndpoint(srv))
	s.RegisterUnaryEndpoint(_DetailCollectionConfigMethodDesc, _DetailCollectionConfigEndpoint(srv))
	s.RegisterUnaryEndpoint(_DetailCollectionConfigDebugMethodDesc, _DetailCollectionConfigDebugEndpoint(srv))
	s.RegisterUnaryEndpoint(_DisableCollectionConfigMethodDesc, _DisableCollectionConfigEndpoint(srv))
	s.RegisterUnaryEndpoint(_ListCollectionConfigMethodDesc, _ListCollectionConfigEndpoint(srv))
	s.RegisterUnaryEndpoint(_ListCollectionConfigJobsMethodDesc, _ListCollectionConfigJobsEndpoint(srv))
	s.RegisterUnaryEndpoint(_MaintainCollectionConfigJobMethodDesc, _MaintainCollectionConfigJobEndpoint(srv))
	s.RegisterUnaryEndpoint(_UpdateCollectionConfigMethodDesc, _UpdateCollectionConfigEndpoint(srv))
}

// Method Description
var _CreateCollectionConfigMethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.collector_center.collection_config.CreateCollectionConfig",
		Version: "1.0",
	},
	ServiceName:  "collection_config.rpc",
	MethodName:   "CreateCollectionConfig",
	RequestType:  (*CreateCollectionConfigRequest)(nil),
	ResponseType: (*CreateCollectionConfigResponse)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Post{
			Post: "/api/v1/collection_config",
		},
		Body:         "",
		ResponseBody: "data",
	},
}

var _DebugCollectionConfigMethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.collector_center.collection_config.DebugCollectionConfig",
		Version: "1.0",
	},
	ServiceName:  "collection_config.rpc",
	MethodName:   "DebugCollectionConfig",
	RequestType:  (*DebugCollectionConfigRequest)(nil),
	ResponseType: (*DebugCollectionConfigResponse)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Post{
			Post: "/api/v1/collection_config/debug",
		},
		Body:         "",
		ResponseBody: "data",
	},
}

var _DebugCollectionConfigCallbackMethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.collector_center.collection_config.DebugCollectionConfigCallback",
		Version: "1.0",
	},
	ServiceName:  "collection_config.rpc",
	MethodName:   "DebugCollectionConfigCallback",
	RequestType:  (*DebugCollectionConfigCallbackRequest)(nil),
	ResponseType: (*DebugCollectionConfigCallbackResponse)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Post{
			Post: "/api/v1/debug/cmd/callback",
		},
		Body:         "",
		ResponseBody: "data",
	},
}

var _DeleteCollectionConfigMethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.collector_center.collection_config.DeleteCollectionConfig",
		Version: "1.0",
	},
	ServiceName:  "collection_config.rpc",
	MethodName:   "DeleteCollectionConfig",
	RequestType:  (*DeleteCollectionConfigRequest)(nil),
	ResponseType: (*DeleteCollectionConfigResponse)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Delete{
			Delete: "/api/v1/collection_config/:id",
		},
		Body:         "",
		ResponseBody: "data",
	},
}

var _DetailCollectionConfigMethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.collector_center.collection_config.DetailCollectionConfig",
		Version: "1.0",
	},
	ServiceName:  "collection_config.rpc",
	MethodName:   "DetailCollectionConfig",
	RequestType:  (*DetailCollectionConfigRequest)(nil),
	ResponseType: (*DetailCollectionConfigResponse)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Get{
			Get: "/api/v1/collection_config/:id",
		},
		Body:         "",
		ResponseBody: "data",
	},
}

var _DetailCollectionConfigDebugMethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.collector_center.collection_config.DetailCollectionConfigDebug",
		Version: "1.0",
	},
	ServiceName:  "collection_config.rpc",
	MethodName:   "DetailCollectionConfigDebug",
	RequestType:  (*DetailCollectionConfigDebugRequest)(nil),
	ResponseType: (*DetailCollectionConfigDebugResponse)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Get{
			Get: "/api/v1/debug/:id",
		},
		Body:         "",
		ResponseBody: "data",
	},
}

var _DisableCollectionConfigMethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.collector_center.collection_config.DisableCollectionConfig",
		Version: "1.0",
	},
	ServiceName:  "collection_config.rpc",
	MethodName:   "DisableCollectionConfig",
	RequestType:  (*DisableCollectionConfigRequest)(nil),
	ResponseType: (*DisableCollectionConfigResponse)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Put{
			Put: "/api/v1/collection_config/:id/disabled",
		},
		Body:         "",
		ResponseBody: "data",
	},
}

var _ListCollectionConfigMethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.collector_center.collection_config.ListCollectionConfig",
		Version: "1.0",
	},
	ServiceName:  "collection_config.rpc",
	MethodName:   "ListCollectionConfig",
	RequestType:  (*ListCollectionConfigRequest)(nil),
	ResponseType: (*ListCollectionConfigResponse)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Get{
			Get: "/api/v1/collection_config",
		},
		Body:         "",
		ResponseBody: "data",
	},
}

var _ListCollectionConfigJobsMethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.collector_center.collection_config.ListCollectionConfigJobs",
		Version: "1.0",
	},
	ServiceName:  "collection_config.rpc",
	MethodName:   "ListCollectionConfigJobs",
	RequestType:  (*ListCollectionConfigJobsRequest)(nil),
	ResponseType: (*ListCollectionConfigJobsResponse)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Get{
			Get: "/api/v1/collection_config/:confId/jobs",
		},
		Body:         "",
		ResponseBody: "data",
	},
}

var _MaintainCollectionConfigJobMethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.collector_center.collection_config.MaintainCollectionConfigJob",
		Version: "1.0",
	},
	ServiceName:  "collection_config.rpc",
	MethodName:   "MaintainCollectionConfigJob",
	RequestType:  (*MaintainCollectionConfigJobRequest)(nil),
	ResponseType: (*MaintainCollectionConfigJobResponse)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Post{
			Post: "/api/v1/collection_config/maintain_job",
		},
		Body:         "",
		ResponseBody: "data",
	},
}

var _UpdateCollectionConfigMethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.collector_center.collection_config.UpdateCollectionConfig",
		Version: "1.0",
	},
	ServiceName:  "collection_config.rpc",
	MethodName:   "UpdateCollectionConfig",
	RequestType:  (*UpdateCollectionConfigRequest)(nil),
	ResponseType: (*UpdateCollectionConfigResponse)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Put{
			Put: "/api/v1/collection_config/:id",
		},
		Body:         "",
		ResponseBody: "data",
	},
}
