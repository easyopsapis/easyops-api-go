// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: giraffe_service.proto

package template

import (
	context "context"
	fmt "fmt"
	giraffe_micro "github.com/easyops-cn/giraffe-micro"
	go_proto_giraffe "github.com/easyops-cn/go-proto-giraffe"
	proto "github.com/gogo/protobuf/proto"
	collector_center "github.com/easyopsapis/easyops-api-go/protorepo-models/easyops/model/collector_center"
	io "io"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ = io.EOF
var _ context.Context
var _ giraffe_micro.Client
var _ go_proto_giraffe.Contract

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = giraffe_micro.SupportPackageIsVersion4 // please upgrade the giraffe_micro package

// Client is the client API for template service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type Client interface {
	CreateConfigurationTemplate(ctx context.Context, in *CreateConfigurationTemplateRequest) (*CreateConfigurationTemplateResponse, error)
	DeleteConfigurationTemplate(ctx context.Context, in *DeleteConfigurationTemplateRequest) (*DeleteConfigurationTemplateResponse, error)
	DetailConfigurationTemplate(ctx context.Context, in *DetailConfigurationTemplateRequest) (*collector_center.ConfigurationTemplate, error)
	ListConfigurationTemplate(ctx context.Context, in *ListConfigurationTemplateRequest) (*ListConfigurationTemplateResponse, error)
	UpdateConfigurationTemplate(ctx context.Context, in *UpdateConfigurationTemplateRequest) (*UpdateConfigurationTemplateResponse, error)
}

type client struct {
	c giraffe_micro.Client
}

func NewClient(c giraffe_micro.Client) Client {
	return &client{
		c: c,
	}
}

func (c *client) CreateConfigurationTemplate(ctx context.Context, in *CreateConfigurationTemplateRequest) (*CreateConfigurationTemplateResponse, error) {
	out := new(CreateConfigurationTemplateResponse)
	err := c.c.Invoke(ctx, _CreateConfigurationTemplateMethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) DeleteConfigurationTemplate(ctx context.Context, in *DeleteConfigurationTemplateRequest) (*DeleteConfigurationTemplateResponse, error) {
	out := new(DeleteConfigurationTemplateResponse)
	err := c.c.Invoke(ctx, _DeleteConfigurationTemplateMethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) DetailConfigurationTemplate(ctx context.Context, in *DetailConfigurationTemplateRequest) (*collector_center.ConfigurationTemplate, error) {
	out := new(collector_center.ConfigurationTemplate)
	err := c.c.Invoke(ctx, _DetailConfigurationTemplateMethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) ListConfigurationTemplate(ctx context.Context, in *ListConfigurationTemplateRequest) (*ListConfigurationTemplateResponse, error) {
	out := new(ListConfigurationTemplateResponse)
	err := c.c.Invoke(ctx, _ListConfigurationTemplateMethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) UpdateConfigurationTemplate(ctx context.Context, in *UpdateConfigurationTemplateRequest) (*UpdateConfigurationTemplateResponse, error) {
	out := new(UpdateConfigurationTemplateResponse)
	err := c.c.Invoke(ctx, _UpdateConfigurationTemplateMethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Service is the server API for template service.
type Service interface {
	CreateConfigurationTemplate(context.Context, *CreateConfigurationTemplateRequest) (*CreateConfigurationTemplateResponse, error)
	DeleteConfigurationTemplate(context.Context, *DeleteConfigurationTemplateRequest) (*DeleteConfigurationTemplateResponse, error)
	DetailConfigurationTemplate(context.Context, *DetailConfigurationTemplateRequest) (*collector_center.ConfigurationTemplate, error)
	ListConfigurationTemplate(context.Context, *ListConfigurationTemplateRequest) (*ListConfigurationTemplateResponse, error)
	UpdateConfigurationTemplate(context.Context, *UpdateConfigurationTemplateRequest) (*UpdateConfigurationTemplateResponse, error)
}

func _CreateConfigurationTemplateEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.CreateConfigurationTemplate(ctx, req.(*CreateConfigurationTemplateRequest))
	}
}

func _DeleteConfigurationTemplateEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.DeleteConfigurationTemplate(ctx, req.(*DeleteConfigurationTemplateRequest))
	}
}

func _DetailConfigurationTemplateEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.DetailConfigurationTemplate(ctx, req.(*DetailConfigurationTemplateRequest))
	}
}

func _ListConfigurationTemplateEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.ListConfigurationTemplate(ctx, req.(*ListConfigurationTemplateRequest))
	}
}

func _UpdateConfigurationTemplateEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.UpdateConfigurationTemplate(ctx, req.(*UpdateConfigurationTemplateRequest))
	}
}

func RegisterService(s giraffe_micro.Server, srv Service) {
	s.RegisterUnaryEndpoint(_CreateConfigurationTemplateMethodDesc, _CreateConfigurationTemplateEndpoint(srv))
	s.RegisterUnaryEndpoint(_DeleteConfigurationTemplateMethodDesc, _DeleteConfigurationTemplateEndpoint(srv))
	s.RegisterUnaryEndpoint(_DetailConfigurationTemplateMethodDesc, _DetailConfigurationTemplateEndpoint(srv))
	s.RegisterUnaryEndpoint(_ListConfigurationTemplateMethodDesc, _ListConfigurationTemplateEndpoint(srv))
	s.RegisterUnaryEndpoint(_UpdateConfigurationTemplateMethodDesc, _UpdateConfigurationTemplateEndpoint(srv))
}

// Method Description
var _CreateConfigurationTemplateMethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.collector_center.template.CreateConfigurationTemplate",
		Version: "1.0",
	},
	ServiceName:  "template.rpc",
	MethodName:   "CreateConfigurationTemplate",
	RequestType:  (*CreateConfigurationTemplateRequest)(nil),
	ResponseType: (*CreateConfigurationTemplateResponse)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Post{
			Post: "/api/v1/configuration_template",
		},
		Body:         "",
		ResponseBody: "data",
	},
}

var _DeleteConfigurationTemplateMethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.collector_center.template.DeleteConfigurationTemplate",
		Version: "1.0",
	},
	ServiceName:  "template.rpc",
	MethodName:   "DeleteConfigurationTemplate",
	RequestType:  (*DeleteConfigurationTemplateRequest)(nil),
	ResponseType: (*DeleteConfigurationTemplateResponse)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Delete{
			Delete: "/api/v1/configuration_template/:id",
		},
		Body:         "",
		ResponseBody: "data",
	},
}

var _DetailConfigurationTemplateMethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.collector_center.template.DetailConfigurationTemplate",
		Version: "1.0",
	},
	ServiceName:  "template.rpc",
	MethodName:   "DetailConfigurationTemplate",
	RequestType:  (*DetailConfigurationTemplateRequest)(nil),
	ResponseType: (*collector_center.ConfigurationTemplate)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Get{
			Get: "/api/v1/configuration_template/:id",
		},
		Body:         "",
		ResponseBody: "data",
	},
}

var _ListConfigurationTemplateMethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.collector_center.template.ListConfigurationTemplate",
		Version: "1.0",
	},
	ServiceName:  "template.rpc",
	MethodName:   "ListConfigurationTemplate",
	RequestType:  (*ListConfigurationTemplateRequest)(nil),
	ResponseType: (*ListConfigurationTemplateResponse)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Get{
			Get: "/api/v1/configuration_template",
		},
		Body:         "",
		ResponseBody: "data",
	},
}

var _UpdateConfigurationTemplateMethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.collector_center.template.UpdateConfigurationTemplate",
		Version: "1.0",
	},
	ServiceName:  "template.rpc",
	MethodName:   "UpdateConfigurationTemplate",
	RequestType:  (*UpdateConfigurationTemplateRequest)(nil),
	ResponseType: (*UpdateConfigurationTemplateResponse)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Put{
			Put: "/api/v1/configuration_template/:id",
		},
		Body:         "",
		ResponseBody: "data",
	},
}
