// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: create_view.proto

package view

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "github.com/easyopsapis/easyops-api-go/protorepo-models/easyops/model/topology"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *CreateViewRequest) Validate() error {
	if this.RootNode != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.RootNode); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("RootNode", err)
		}
	}
	for _, item := range this.Nodes {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Nodes", err)
			}
		}
	}
	for _, item := range this.Links {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Links", err)
			}
		}
	}
	for _, item := range this.Areas {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Areas", err)
			}
		}
	}
	for _, item := range this.Notes {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Notes", err)
			}
		}
	}
	if this.Diff != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Diff); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Diff", err)
		}
	}
	return nil
}
func (this *CreateViewRequest_Diff) Validate() error {
	for _, item := range this.AddNodes {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("AddNodes", err)
			}
		}
	}
	for _, item := range this.RemoveNodes {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("RemoveNodes", err)
			}
		}
	}
	for _, item := range this.AddLinks {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("AddLinks", err)
			}
		}
	}
	for _, item := range this.RemoveLinks {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("RemoveLinks", err)
			}
		}
	}
	return nil
}
func (this *CreateViewResponse) Validate() error {
	return nil
}
func (this *CreateViewResponseWrapper) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
