// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: compare_workspace.proto

package workspace

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

//
//FileCompare请求
type FileCompareRequest struct {
	//
	//要比较的文件列表
	Items []*FileCompareRequest_Items `protobuf:"bytes,1,rep,name=items,proto3" json:"items" form:"items"`
	//
	//程序包Id
	PackageId            string   `protobuf:"bytes,2,opt,name=packageId,proto3" json:"packageId" form:"packageId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileCompareRequest) Reset()         { *m = FileCompareRequest{} }
func (m *FileCompareRequest) String() string { return proto.CompactTextString(m) }
func (*FileCompareRequest) ProtoMessage()    {}
func (*FileCompareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_15da7cec1331f218, []int{0}
}
func (m *FileCompareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileCompareRequest.Unmarshal(m, b)
}
func (m *FileCompareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileCompareRequest.Marshal(b, m, deterministic)
}
func (m *FileCompareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileCompareRequest.Merge(m, src)
}
func (m *FileCompareRequest) XXX_Size() int {
	return xxx_messageInfo_FileCompareRequest.Size(m)
}
func (m *FileCompareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FileCompareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FileCompareRequest proto.InternalMessageInfo

func (m *FileCompareRequest) GetItems() []*FileCompareRequest_Items {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *FileCompareRequest) GetPackageId() string {
	if m != nil {
		return m.PackageId
	}
	return ""
}

type FileCompareRequest_Items struct {
	//
	//文件旧名称
	OldName string `protobuf:"bytes,1,opt,name=oldName,proto3" json:"oldName" form:"oldName"`
	//
	//文件新名称
	NewName string `protobuf:"bytes,2,opt,name=newName,proto3" json:"newName" form:"newName"`
	//
	//要比较的文件路径
	Path                 string   `protobuf:"bytes,3,opt,name=path,proto3" json:"path" form:"path"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileCompareRequest_Items) Reset()         { *m = FileCompareRequest_Items{} }
func (m *FileCompareRequest_Items) String() string { return proto.CompactTextString(m) }
func (*FileCompareRequest_Items) ProtoMessage()    {}
func (*FileCompareRequest_Items) Descriptor() ([]byte, []int) {
	return fileDescriptor_15da7cec1331f218, []int{0, 0}
}
func (m *FileCompareRequest_Items) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileCompareRequest_Items.Unmarshal(m, b)
}
func (m *FileCompareRequest_Items) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileCompareRequest_Items.Marshal(b, m, deterministic)
}
func (m *FileCompareRequest_Items) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileCompareRequest_Items.Merge(m, src)
}
func (m *FileCompareRequest_Items) XXX_Size() int {
	return xxx_messageInfo_FileCompareRequest_Items.Size(m)
}
func (m *FileCompareRequest_Items) XXX_DiscardUnknown() {
	xxx_messageInfo_FileCompareRequest_Items.DiscardUnknown(m)
}

var xxx_messageInfo_FileCompareRequest_Items proto.InternalMessageInfo

func (m *FileCompareRequest_Items) GetOldName() string {
	if m != nil {
		return m.OldName
	}
	return ""
}

func (m *FileCompareRequest_Items) GetNewName() string {
	if m != nil {
		return m.NewName
	}
	return ""
}

func (m *FileCompareRequest_Items) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

//
//FileCompare返回
type FileCompareResponse struct {
	//
	//差异详情列表
	Datail               []*FileCompareResponse_Datail `protobuf:"bytes,1,rep,name=datail,proto3" json:"datail" form:"datail"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *FileCompareResponse) Reset()         { *m = FileCompareResponse{} }
func (m *FileCompareResponse) String() string { return proto.CompactTextString(m) }
func (*FileCompareResponse) ProtoMessage()    {}
func (*FileCompareResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_15da7cec1331f218, []int{1}
}
func (m *FileCompareResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileCompareResponse.Unmarshal(m, b)
}
func (m *FileCompareResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileCompareResponse.Marshal(b, m, deterministic)
}
func (m *FileCompareResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileCompareResponse.Merge(m, src)
}
func (m *FileCompareResponse) XXX_Size() int {
	return xxx_messageInfo_FileCompareResponse.Size(m)
}
func (m *FileCompareResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FileCompareResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FileCompareResponse proto.InternalMessageInfo

func (m *FileCompareResponse) GetDatail() []*FileCompareResponse_Datail {
	if m != nil {
		return m.Datail
	}
	return nil
}

type FileCompareResponse_Datail struct {
	//
	//差异信息
	Diff string `protobuf:"bytes,1,opt,name=diff,proto3" json:"diff" form:"diff"`
	//
	//文件路径
	File                 string   `protobuf:"bytes,2,opt,name=file,proto3" json:"file" form:"file"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileCompareResponse_Datail) Reset()         { *m = FileCompareResponse_Datail{} }
func (m *FileCompareResponse_Datail) String() string { return proto.CompactTextString(m) }
func (*FileCompareResponse_Datail) ProtoMessage()    {}
func (*FileCompareResponse_Datail) Descriptor() ([]byte, []int) {
	return fileDescriptor_15da7cec1331f218, []int{1, 0}
}
func (m *FileCompareResponse_Datail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileCompareResponse_Datail.Unmarshal(m, b)
}
func (m *FileCompareResponse_Datail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileCompareResponse_Datail.Marshal(b, m, deterministic)
}
func (m *FileCompareResponse_Datail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileCompareResponse_Datail.Merge(m, src)
}
func (m *FileCompareResponse_Datail) XXX_Size() int {
	return xxx_messageInfo_FileCompareResponse_Datail.Size(m)
}
func (m *FileCompareResponse_Datail) XXX_DiscardUnknown() {
	xxx_messageInfo_FileCompareResponse_Datail.DiscardUnknown(m)
}

var xxx_messageInfo_FileCompareResponse_Datail proto.InternalMessageInfo

func (m *FileCompareResponse_Datail) GetDiff() string {
	if m != nil {
		return m.Diff
	}
	return ""
}

func (m *FileCompareResponse_Datail) GetFile() string {
	if m != nil {
		return m.File
	}
	return ""
}

//
//FileCompareApi返回
type FileCompareResponseWrapper struct {
	//
	//返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code" form:"code"`
	//
	//返回码解释
	CodeExplain string `protobuf:"bytes,2,opt,name=codeExplain,proto3" json:"codeExplain" form:"codeExplain"`
	//
	//错误详情
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error" form:"error"`
	//
	//返回数据
	Data                 *FileCompareResponse `protobuf:"bytes,4,opt,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FileCompareResponseWrapper) Reset()         { *m = FileCompareResponseWrapper{} }
func (m *FileCompareResponseWrapper) String() string { return proto.CompactTextString(m) }
func (*FileCompareResponseWrapper) ProtoMessage()    {}
func (*FileCompareResponseWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_15da7cec1331f218, []int{2}
}
func (m *FileCompareResponseWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileCompareResponseWrapper.Unmarshal(m, b)
}
func (m *FileCompareResponseWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileCompareResponseWrapper.Marshal(b, m, deterministic)
}
func (m *FileCompareResponseWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileCompareResponseWrapper.Merge(m, src)
}
func (m *FileCompareResponseWrapper) XXX_Size() int {
	return xxx_messageInfo_FileCompareResponseWrapper.Size(m)
}
func (m *FileCompareResponseWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_FileCompareResponseWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_FileCompareResponseWrapper proto.InternalMessageInfo

func (m *FileCompareResponseWrapper) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *FileCompareResponseWrapper) GetCodeExplain() string {
	if m != nil {
		return m.CodeExplain
	}
	return ""
}

func (m *FileCompareResponseWrapper) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *FileCompareResponseWrapper) GetData() *FileCompareResponse {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*FileCompareRequest)(nil), "workspace.FileCompareRequest")
	proto.RegisterType((*FileCompareRequest_Items)(nil), "workspace.FileCompareRequest.Items")
	proto.RegisterType((*FileCompareResponse)(nil), "workspace.FileCompareResponse")
	proto.RegisterType((*FileCompareResponse_Datail)(nil), "workspace.FileCompareResponse.Datail")
	proto.RegisterType((*FileCompareResponseWrapper)(nil), "workspace.FileCompareResponseWrapper")
}

func init() { proto.RegisterFile("compare_workspace.proto", fileDescriptor_15da7cec1331f218) }

var fileDescriptor_15da7cec1331f218 = []byte{
	// 556 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0x5b, 0x8b, 0xd3, 0x40,
	0x14, 0xc7, 0x49, 0xb7, 0x5d, 0xd9, 0xa9, 0x97, 0x75, 0x04, 0x2d, 0x7d, 0x30, 0xcb, 0xec, 0x2a,
	0xe9, 0xae, 0x69, 0xb4, 0x8a, 0xac, 0x45, 0x5c, 0xec, 0x7a, 0xa1, 0x08, 0x22, 0x83, 0x20, 0xd8,
	0x69, 0x65, 0xda, 0x4c, 0xdb, 0xd0, 0xa4, 0x13, 0x93, 0xa9, 0x15, 0xed, 0xbe, 0xab, 0x5f, 0xc2,
	0x6f, 0x16, 0xc1, 0x27, 0x9f, 0xf3, 0xe6, 0x9b, 0xcc, 0x4c, 0x7a, 0x73, 0x55, 0xf0, 0xa9, 0x73,
	0xce, 0xff, 0x77, 0x66, 0xfe, 0xe7, 0x9c, 0x06, 0x5c, 0xe9, 0xf1, 0x20, 0xa4, 0x11, 0x7b, 0x33,
	0xe5, 0xd1, 0x28, 0x0e, 0x69, 0x8f, 0x55, 0xc3, 0x88, 0x0b, 0x0e, 0xb7, 0x16, 0x89, 0xb2, 0x3d,
	0xf0, 0xc4, 0x70, 0xd2, 0xad, 0xf6, 0x78, 0xe0, 0x0c, 0xf8, 0x80, 0x3b, 0x8a, 0xe8, 0x4e, 0xfa,
	0x2a, 0x52, 0x81, 0x3a, 0xe9, 0xca, 0xf2, 0xdd, 0x15, 0x3c, 0x98, 0x7a, 0x62, 0xc4, 0xa7, 0xce,
	0x80, 0xdb, 0x4a, 0xb4, 0xdf, 0x51, 0xdf, 0x73, 0xa9, 0xe0, 0x51, 0xec, 0x2c, 0x8e, 0xba, 0x0e,
	0xfd, 0xcc, 0x01, 0xf8, 0xc4, 0xf3, 0xd9, 0xb1, 0x76, 0x84, 0xd9, 0xdb, 0x09, 0x8b, 0x05, 0x7c,
	0x06, 0x0a, 0x9e, 0x60, 0x41, 0x5c, 0x32, 0x76, 0x36, 0xac, 0x62, 0x6d, 0xb7, 0xba, 0x74, 0x7a,
	0x9a, 0xae, 0x36, 0x25, 0xda, 0xd8, 0x4e, 0x13, 0xf3, 0x6c, 0x9f, 0x47, 0x41, 0x1d, 0xa9, 0x5a,
	0x84, 0xf5, 0x1d, 0xf0, 0x8b, 0x01, 0xb6, 0x42, 0xda, 0x1b, 0xd1, 0x01, 0x6b, 0xba, 0xa5, 0xdc,
	0x8e, 0x61, 0x6d, 0x35, 0xfc, 0x34, 0x31, 0xb7, 0x35, 0xbc, 0x90, 0xd0, 0xf7, 0x6f, 0xe6, 0x4b,
	0x80, 0x3b, 0xad, 0x23, 0x6a, 0x7f, 0x78, 0x68, 0xbf, 0xbe, 0x69, 0xdf, 0x6b, 0x7f, 0x3c, 0x3c,
	0xb1, 0xd7, 0xe2, 0x3b, 0xff, 0x19, 0xdf, 0xaa, 0x9d, 0xec, 0xe1, 0xe5, 0xf3, 0xe5, 0x4f, 0x06,
	0x28, 0x28, 0xbf, 0xf0, 0x06, 0x38, 0xc3, 0x7d, 0xf7, 0x39, 0x0d, 0x58, 0xc9, 0x50, 0x9e, 0x60,
	0x9a, 0x98, 0xe7, 0xb5, 0xa7, 0x4c, 0x40, 0x78, 0x8e, 0x48, 0x7a, 0xcc, 0xa6, 0x8a, 0xce, 0xfd,
	0x4e, 0x67, 0x02, 0xc2, 0x73, 0x04, 0xee, 0x82, 0x7c, 0x48, 0xc5, 0xb0, 0xb4, 0xa1, 0xd0, 0x0b,
	0x69, 0x62, 0x16, 0xe7, 0xcd, 0x8a, 0x21, 0xc2, 0x4a, 0x44, 0x9f, 0x73, 0xe0, 0xd2, 0xda, 0x34,
	0xe3, 0x90, 0x8f, 0x63, 0x06, 0x5f, 0x80, 0x4d, 0x97, 0x0a, 0xea, 0xf9, 0xd9, 0xf4, 0xaf, 0xfd,
	0x6d, 0xfa, 0x9a, 0xaf, 0x3e, 0x52, 0x70, 0xe3, 0x62, 0x9a, 0x98, 0xe7, 0xf4, 0x2b, 0xba, 0x1c,
	0xe1, 0xec, 0x9e, 0xf2, 0x57, 0x03, 0x6c, 0x6a, 0x4a, 0x3a, 0x73, 0xbd, 0x7e, 0x3f, 0x6b, 0x79,
	0xc5, 0x99, 0xcc, 0x22, 0xac, 0x44, 0x18, 0x82, 0x7c, 0xdf, 0xf3, 0xe7, 0x9d, 0x92, 0x25, 0x24,
	0xb3, 0x72, 0x4d, 0x4d, 0xf0, 0xb4, 0x63, 0x59, 0xc4, 0x69, 0x75, 0x88, 0x53, 0x27, 0xfb, 0xe4,
	0x08, 0xa1, 0xfb, 0x0f, 0xc8, 0x8c, 0x44, 0x64, 0xdc, 0x3e, 0xa8, 0x1c, 0x54, 0x66, 0x16, 0x71,
	0x2a, 0xb3, 0x96, 0xde, 0x43, 0xbb, 0x6e, 0x11, 0xd2, 0xea, 0x10, 0x72, 0x9a, 0xdc, 0xdf, 0xc3,
	0xea, 0x25, 0xf4, 0xc3, 0x00, 0xe5, 0x3f, 0xf4, 0xf6, 0x2a, 0xa2, 0x61, 0xc8, 0x22, 0xe9, 0xba,
	0xc7, 0x5d, 0xbd, 0xa8, 0xc2, 0xaa, 0x6b, 0x99, 0x45, 0x58, 0x89, 0xf0, 0x10, 0x14, 0xe5, 0xef,
	0xe3, 0xf7, 0xa1, 0x4f, 0xbd, 0x71, 0x66, 0xfe, 0x72, 0x9a, 0x98, 0x70, 0xc9, 0x66, 0x22, 0xc2,
	0xab, 0x28, 0xbc, 0x0e, 0x0a, 0x2c, 0x8a, 0x78, 0x94, 0xed, 0x6b, 0xe5, 0x9f, 0xac, 0xd2, 0x08,
	0x6b, 0x19, 0x1e, 0x83, 0xbc, 0x9c, 0x68, 0x29, 0xbf, 0x63, 0x58, 0xc5, 0xda, 0xd5, 0x7f, 0xef,
	0x65, 0x6d, 0xb8, 0x54, 0x50, 0x39, 0x5c, 0x2a, 0x68, 0x77, 0x53, 0x7d, 0x79, 0xb7, 0x7f, 0x05,
	0x00, 0x00, 0xff, 0xff, 0x8a, 0x41, 0x13, 0xeb, 0x06, 0x04, 0x00, 0x00,
}
