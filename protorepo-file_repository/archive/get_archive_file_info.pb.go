// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: get_archive_file_info.proto

package archive

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

//
//GetFileInfo请求
type GetFileInfoRequest struct {
	//
	//文件路径
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path" form:"path"`
	//
	//参数path的编码格式
	Encoding string `protobuf:"bytes,2,opt,name=encoding,proto3" json:"encoding" form:"encoding"`
	//
	//程序包Id
	PackageId string `protobuf:"bytes,3,opt,name=packageId,proto3" json:"packageId" form:"packageId"`
	//
	//版本Id
	VersionId            string   `protobuf:"bytes,4,opt,name=versionId,proto3" json:"versionId" form:"versionId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFileInfoRequest) Reset()         { *m = GetFileInfoRequest{} }
func (m *GetFileInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetFileInfoRequest) ProtoMessage()    {}
func (*GetFileInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2a3a773dd50da0, []int{0}
}
func (m *GetFileInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFileInfoRequest.Unmarshal(m, b)
}
func (m *GetFileInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFileInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetFileInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFileInfoRequest.Merge(m, src)
}
func (m *GetFileInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetFileInfoRequest.Size(m)
}
func (m *GetFileInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFileInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFileInfoRequest proto.InternalMessageInfo

func (m *GetFileInfoRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *GetFileInfoRequest) GetEncoding() string {
	if m != nil {
		return m.Encoding
	}
	return ""
}

func (m *GetFileInfoRequest) GetPackageId() string {
	if m != nil {
		return m.PackageId
	}
	return ""
}

func (m *GetFileInfoRequest) GetVersionId() string {
	if m != nil {
		return m.VersionId
	}
	return ""
}

//
//GetFileInfo返回
type GetFileInfoResponse struct {
	//
	//文件名
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name" form:"name"`
	//
	//文件类型
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type" form:"type"`
	//
	//文件大小
	Size_ int64 `protobuf:"varint,3,opt,name=size,proto3" json:"size" form:"size"`
	//
	//文件权限
	Perm string `protobuf:"bytes,4,opt,name=perm,proto3" json:"perm" form:"perm"`
	//
	//文件修改时间
	Mtime string `protobuf:"bytes,5,opt,name=mtime,proto3" json:"mtime" form:"mtime"`
	//
	//文件创建时间
	Ctime string `protobuf:"bytes,6,opt,name=ctime,proto3" json:"ctime" form:"ctime"`
	//
	//如果type=link，link为链接地址
	Link string `protobuf:"bytes,7,opt,name=link,proto3" json:"link" form:"link"`
	//
	//参数path的编码格式
	Encoding string `protobuf:"bytes,8,opt,name=encoding,proto3" json:"encoding" form:"encoding"`
	//
	//文件hash
	Md5                  string   `protobuf:"bytes,9,opt,name=md5,proto3" json:"md5" form:"md5"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFileInfoResponse) Reset()         { *m = GetFileInfoResponse{} }
func (m *GetFileInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetFileInfoResponse) ProtoMessage()    {}
func (*GetFileInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2a3a773dd50da0, []int{1}
}
func (m *GetFileInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFileInfoResponse.Unmarshal(m, b)
}
func (m *GetFileInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFileInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetFileInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFileInfoResponse.Merge(m, src)
}
func (m *GetFileInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetFileInfoResponse.Size(m)
}
func (m *GetFileInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFileInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetFileInfoResponse proto.InternalMessageInfo

func (m *GetFileInfoResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetFileInfoResponse) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *GetFileInfoResponse) GetSize_() int64 {
	if m != nil {
		return m.Size_
	}
	return 0
}

func (m *GetFileInfoResponse) GetPerm() string {
	if m != nil {
		return m.Perm
	}
	return ""
}

func (m *GetFileInfoResponse) GetMtime() string {
	if m != nil {
		return m.Mtime
	}
	return ""
}

func (m *GetFileInfoResponse) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

func (m *GetFileInfoResponse) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *GetFileInfoResponse) GetEncoding() string {
	if m != nil {
		return m.Encoding
	}
	return ""
}

func (m *GetFileInfoResponse) GetMd5() string {
	if m != nil {
		return m.Md5
	}
	return ""
}

//
//GetFileInfoApi返回
type GetFileInfoResponseWrapper struct {
	//
	//返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code" form:"code"`
	//
	//返回码解释
	CodeExplain string `protobuf:"bytes,2,opt,name=codeExplain,proto3" json:"codeExplain" form:"codeExplain"`
	//
	//错误详情
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error" form:"error"`
	//
	//返回数据
	Data                 *GetFileInfoResponse `protobuf:"bytes,4,opt,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetFileInfoResponseWrapper) Reset()         { *m = GetFileInfoResponseWrapper{} }
func (m *GetFileInfoResponseWrapper) String() string { return proto.CompactTextString(m) }
func (*GetFileInfoResponseWrapper) ProtoMessage()    {}
func (*GetFileInfoResponseWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2a3a773dd50da0, []int{2}
}
func (m *GetFileInfoResponseWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFileInfoResponseWrapper.Unmarshal(m, b)
}
func (m *GetFileInfoResponseWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFileInfoResponseWrapper.Marshal(b, m, deterministic)
}
func (m *GetFileInfoResponseWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFileInfoResponseWrapper.Merge(m, src)
}
func (m *GetFileInfoResponseWrapper) XXX_Size() int {
	return xxx_messageInfo_GetFileInfoResponseWrapper.Size(m)
}
func (m *GetFileInfoResponseWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFileInfoResponseWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_GetFileInfoResponseWrapper proto.InternalMessageInfo

func (m *GetFileInfoResponseWrapper) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetFileInfoResponseWrapper) GetCodeExplain() string {
	if m != nil {
		return m.CodeExplain
	}
	return ""
}

func (m *GetFileInfoResponseWrapper) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *GetFileInfoResponseWrapper) GetData() *GetFileInfoResponse {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*GetFileInfoRequest)(nil), "archive.GetFileInfoRequest")
	proto.RegisterType((*GetFileInfoResponse)(nil), "archive.GetFileInfoResponse")
	proto.RegisterType((*GetFileInfoResponseWrapper)(nil), "archive.GetFileInfoResponseWrapper")
}

func init() { proto.RegisterFile("get_archive_file_info.proto", fileDescriptor_5d2a3a773dd50da0) }

var fileDescriptor_5d2a3a773dd50da0 = []byte{
	// 707 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x54, 0xcd, 0x4e, 0xdb, 0x4a,
	0x14, 0x96, 0x6f, 0x12, 0x7e, 0x06, 0x74, 0xe1, 0x1a, 0xe9, 0x2a, 0xca, 0x45, 0x0a, 0xd7, 0xa5,
	0xd5, 0x18, 0x34, 0xb1, 0x93, 0x34, 0x05, 0xb2, 0x89, 0x68, 0x55, 0x2a, 0xb6, 0x23, 0xa4, 0x4a,
	0x4c, 0x1c, 0x64, 0xe2, 0x89, 0xb1, 0x88, 0x3d, 0xae, 0x63, 0xa0, 0x85, 0xb0, 0xe9, 0xb2, 0xcf,
	0xd1, 0x55, 0xa5, 0xbe, 0x44, 0xdf, 0xa2, 0x9b, 0x54, 0xea, 0xa2, 0x0f, 0x90, 0x27, 0xa8, 0xe6,
	0xd8, 0x21, 0x86, 0xb2, 0x68, 0x17, 0x5d, 0x74, 0xe5, 0x39, 0xe7, 0xfb, 0x3e, 0xcf, 0x37, 0xe7,
	0xcc, 0x19, 0xf4, 0x9f, 0xcb, 0xe3, 0x23, 0x3b, 0xea, 0x9e, 0x78, 0xe7, 0xfc, 0xa8, 0xe7, 0xf5,
	0xf9, 0x91, 0x17, 0xf4, 0x44, 0x25, 0x8c, 0x44, 0x2c, 0xd4, 0xd9, 0x14, 0x28, 0x11, 0xd7, 0x8b,
	0x4f, 0xce, 0x8e, 0x2b, 0x5d, 0xe1, 0x1b, 0xae, 0x70, 0x85, 0x01, 0xf8, 0xf1, 0x59, 0x0f, 0x22,
	0x08, 0x60, 0x95, 0xe8, 0x4a, 0x4f, 0x32, 0x74, 0xff, 0xc2, 0x8b, 0x4f, 0xc5, 0x85, 0xe1, 0x0a,
	0x02, 0x20, 0x39, 0xb7, 0xfb, 0x9e, 0x63, 0xc7, 0x22, 0x1a, 0x18, 0x37, 0xcb, 0x44, 0xa7, 0xbd,
	0xcf, 0x21, 0xf5, 0x05, 0x8f, 0xf7, 0xbc, 0x3e, 0xdf, 0x0f, 0x7a, 0x82, 0xf2, 0x57, 0x67, 0x7c,
	0x10, 0xab, 0xcf, 0x50, 0x3e, 0xb4, 0xe3, 0x93, 0xa2, 0xb2, 0xa6, 0xe0, 0xf9, 0xa7, 0xc6, 0x78,
	0x54, 0x5e, 0xe8, 0x89, 0xc8, 0x6f, 0x6a, 0x32, 0xab, 0x7d, 0xfd, 0x52, 0x5e, 0x45, 0xa5, 0x4e,
	0xdb, 0xc0, 0x98, 0x75, 0xda, 0x86, 0xb5, 0xa9, 0xe3, 0xb6, 0x91, 0xae, 0x36, 0xf4, 0xd6, 0x3a,
	0x05, 0xb1, 0x6a, 0xa0, 0x39, 0x1e, 0x74, 0x85, 0xe3, 0x05, 0x6e, 0xf1, 0x2f, 0xf8, 0xd1, 0xca,
	0x78, 0x54, 0x5e, 0x4a, 0x7e, 0x34, 0x41, 0x34, 0x7a, 0x43, 0x52, 0xdf, 0x29, 0x68, 0x3e, 0xb4,
	0xbb, 0xa7, 0xb6, 0xcb, 0xf7, 0x9d, 0x62, 0x0e, 0x24, 0xfd, 0xf1, 0xa8, 0xbc, 0x3c, 0xd9, 0x3b,
	0x85, 0xa4, 0x81, 0x03, 0x44, 0x3b, 0xac, 0x65, 0x93, 0xcb, 0x5d, 0x72, 0x68, 0x92, 0x1d, 0xeb,
	0x6a, 0xfb, 0x9a, 0xdc, 0x8a, 0x1f, 0xff, 0x62, 0x5c, 0xad, 0x5d, 0xaf, 0xd3, 0xe9, 0xf6, 0x60,
	0xe6, 0x9c, 0x47, 0x03, 0x4f, 0x04, 0xfb, 0x4e, 0x31, 0x7f, 0xd7, 0xcc, 0x0d, 0xf4, 0x1b, 0xcd,
	0x4c, 0xf7, 0x78, 0x3b, 0x83, 0x56, 0x6e, 0xb5, 0x69, 0x10, 0x8a, 0x60, 0xc0, 0xd5, 0x07, 0x28,
	0x1f, 0xd8, 0x3e, 0x4f, 0xfb, 0xb4, 0x34, 0xed, 0x93, 0xcc, 0x6a, 0x14, 0x40, 0x49, 0x8a, 0xdf,
	0x84, 0x3c, 0xed, 0x41, 0x86, 0x24, 0xb3, 0x1a, 0x05, 0x50, 0x92, 0x06, 0xde, 0x25, 0x87, 0xaa,
	0xe7, 0xb2, 0x24, 0x99, 0xd5, 0x28, 0x80, 0x6a, 0x03, 0xe5, 0x43, 0x1e, 0xf9, 0x69, 0x35, 0xfe,
	0xcf, 0x5c, 0x0b, 0x1e, 0xf9, 0xb2, 0x10, 0x7f, 0xa3, 0xc5, 0x0e, 0x36, 0x99, 0x49, 0xb6, 0xac,
	0xab, 0xfa, 0xb5, 0x4e, 0x81, 0xae, 0x7e, 0x56, 0x50, 0xc1, 0x8f, 0x3d, 0x9f, 0x17, 0x0b, 0x20,
	0xfc, 0xa4, 0x8c, 0x47, 0xe5, 0xc5, 0x44, 0x09, 0x79, 0x29, 0xfd, 0xa8, 0xa0, 0x0f, 0x4a, 0x07,
	0xe3, 0x56, 0x93, 0x55, 0xc9, 0x8e, 0xc5, 0x64, 0x1d, 0x36, 0xf4, 0x16, 0x4b, 0xeb, 0xa3, 0x13,
	0x5c, 0x65, 0x26, 0xa9, 0x59, 0x43, 0x13, 0x70, 0x9d, 0xe0, 0x3a, 0x33, 0x49, 0x75, 0x12, 0x0f,
	0x59, 0x95, 0xd4, 0x12, 0x95, 0xce, 0x0e, 0xd6, 0x2c, 0x5c, 0x63, 0x26, 0xa9, 0x5b, 0x43, 0xe0,
	0x24, 0xe9, 0x26, 0x66, 0x26, 0x69, 0x4c, 0x82, 0xe9, 0x1a, 0xb7, 0x2b, 0xf0, 0xdd, 0xd4, 0x5b,
	0xf8, 0x70, 0xc8, 0x36, 0x89, 0x85, 0x5b, 0xcd, 0x7b, 0xe4, 0x19, 0x75, 0x6b, 0x9d, 0x26, 0x27,
	0x82, 0xb3, 0x75, 0xe1, 0x6c, 0x33, 0x3f, 0x9c, 0xad, 0xfb, 0xc7, 0x9e, 0x0d, 0x9c, 0xcb, 0x3b,
	0xd1, 0xf7, 0x82, 0xd3, 0xe2, 0xec, 0xdd, 0x8b, 0x23, 0xb3, 0x1a, 0x05, 0xf0, 0xd6, 0x94, 0xcf,
	0xfd, 0xcc, 0x94, 0x6f, 0xa1, 0x9c, 0xef, 0x34, 0x8a, 0xf3, 0xc0, 0x7d, 0x38, 0x1e, 0x95, 0x51,
	0x7a, 0x13, 0x9c, 0x86, 0xac, 0xd5, 0x0a, 0xfa, 0xa7, 0xc3, 0x6c, 0xd2, 0xdb, 0x25, 0x7b, 0x50,
	0x9e, 0xba, 0x1c, 0x05, 0xa9, 0xd0, 0xbe, 0x29, 0xa8, 0x74, 0xcf, 0x10, 0xbc, 0x8c, 0xec, 0x30,
	0xe4, 0x91, 0x74, 0xdb, 0x15, 0x4e, 0x32, 0x0b, 0x85, 0xac, 0x5b, 0x99, 0xd5, 0x28, 0x80, 0xea,
	0x36, 0x5a, 0x90, 0xdf, 0xe7, 0xaf, 0xc3, 0xbe, 0xed, 0x05, 0xe9, 0x48, 0xfc, 0x3b, 0x1e, 0x95,
	0xd5, 0x29, 0x37, 0x05, 0x35, 0x9a, 0xa5, 0xaa, 0x8f, 0x50, 0x81, 0x47, 0x91, 0x88, 0xd2, 0x77,
	0x69, 0x79, 0xda, 0x66, 0x48, 0x6b, 0x34, 0x81, 0xd5, 0x5d, 0x94, 0x77, 0xec, 0xd8, 0x86, 0x19,
	0x59, 0xa8, 0xad, 0x56, 0xd2, 0x07, 0xbd, 0x72, 0x8f, 0xf3, 0xac, 0x49, 0xa9, 0xd1, 0x28, 0x48,
	0x8f, 0x67, 0xe0, 0x6d, 0xae, 0x7f, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x10, 0x70, 0x82, 0x17, 0x2a,
	0x06, 0x00, 0x00,
}
