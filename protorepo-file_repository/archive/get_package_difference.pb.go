// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: get_package_difference.proto

package archive

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	file_repository "github.com/easyopsapis/easyops-api-go/protorepo-models/easyops/model/file_repository"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//GetPackageDifference请求
type GetPackageDifferenceRequest struct {
	//
	//源包Id
	PackageFrom string `protobuf:"bytes,1,opt,name=package_from,json=packageFrom,proto3" json:"package_from" form:"package_from"`
	//
	//目标包Id
	PackageTo string `protobuf:"bytes,2,opt,name=package_to,json=packageTo,proto3" json:"package_to" form:"package_to"`
	//
	//源版本Id
	VerFrom string `protobuf:"bytes,3,opt,name=ver_from,json=verFrom,proto3" json:"ver_from" form:"ver_from"`
	//
	//目标版本Id
	VerTo string `protobuf:"bytes,4,opt,name=ver_to,json=verTo,proto3" json:"ver_to" form:"ver_to"`
	//
	//是否要获取文件内容差异(true,false)
	DiffFile string `protobuf:"bytes,5,opt,name=diff_file,json=diffFile,proto3" json:"diff_file" form:"diff_file"`
	//
	//只查看指定的文件内容差异
	Path string `protobuf:"bytes,6,opt,name=path,proto3" json:"path" form:"path"`
	//
	//参数patn的编码格式
	Enconing             string   `protobuf:"bytes,7,opt,name=enconing,proto3" json:"enconing" form:"enconing"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPackageDifferenceRequest) Reset()         { *m = GetPackageDifferenceRequest{} }
func (m *GetPackageDifferenceRequest) String() string { return proto.CompactTextString(m) }
func (*GetPackageDifferenceRequest) ProtoMessage()    {}
func (*GetPackageDifferenceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_904613b103257d0d, []int{0}
}
func (m *GetPackageDifferenceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPackageDifferenceRequest.Unmarshal(m, b)
}
func (m *GetPackageDifferenceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPackageDifferenceRequest.Marshal(b, m, deterministic)
}
func (m *GetPackageDifferenceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPackageDifferenceRequest.Merge(m, src)
}
func (m *GetPackageDifferenceRequest) XXX_Size() int {
	return xxx_messageInfo_GetPackageDifferenceRequest.Size(m)
}
func (m *GetPackageDifferenceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPackageDifferenceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPackageDifferenceRequest proto.InternalMessageInfo

func (m *GetPackageDifferenceRequest) GetPackageFrom() string {
	if m != nil {
		return m.PackageFrom
	}
	return ""
}

func (m *GetPackageDifferenceRequest) GetPackageTo() string {
	if m != nil {
		return m.PackageTo
	}
	return ""
}

func (m *GetPackageDifferenceRequest) GetVerFrom() string {
	if m != nil {
		return m.VerFrom
	}
	return ""
}

func (m *GetPackageDifferenceRequest) GetVerTo() string {
	if m != nil {
		return m.VerTo
	}
	return ""
}

func (m *GetPackageDifferenceRequest) GetDiffFile() string {
	if m != nil {
		return m.DiffFile
	}
	return ""
}

func (m *GetPackageDifferenceRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *GetPackageDifferenceRequest) GetEnconing() string {
	if m != nil {
		return m.Enconing
	}
	return ""
}

//
//GetPackageDifferenceApi返回
type GetPackageDifferenceResponseWrapper struct {
	//
	//返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code" form:"code"`
	//
	//返回码解释
	CodeExplain string `protobuf:"bytes,2,opt,name=codeExplain,proto3" json:"codeExplain" form:"codeExplain"`
	//
	//错误详情
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error" form:"error"`
	//
	//返回数据
	Data                 *file_repository.Diff `protobuf:"bytes,4,opt,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GetPackageDifferenceResponseWrapper) Reset()         { *m = GetPackageDifferenceResponseWrapper{} }
func (m *GetPackageDifferenceResponseWrapper) String() string { return proto.CompactTextString(m) }
func (*GetPackageDifferenceResponseWrapper) ProtoMessage()    {}
func (*GetPackageDifferenceResponseWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_904613b103257d0d, []int{1}
}
func (m *GetPackageDifferenceResponseWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPackageDifferenceResponseWrapper.Unmarshal(m, b)
}
func (m *GetPackageDifferenceResponseWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPackageDifferenceResponseWrapper.Marshal(b, m, deterministic)
}
func (m *GetPackageDifferenceResponseWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPackageDifferenceResponseWrapper.Merge(m, src)
}
func (m *GetPackageDifferenceResponseWrapper) XXX_Size() int {
	return xxx_messageInfo_GetPackageDifferenceResponseWrapper.Size(m)
}
func (m *GetPackageDifferenceResponseWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPackageDifferenceResponseWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_GetPackageDifferenceResponseWrapper proto.InternalMessageInfo

func (m *GetPackageDifferenceResponseWrapper) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetPackageDifferenceResponseWrapper) GetCodeExplain() string {
	if m != nil {
		return m.CodeExplain
	}
	return ""
}

func (m *GetPackageDifferenceResponseWrapper) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *GetPackageDifferenceResponseWrapper) GetData() *file_repository.Diff {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*GetPackageDifferenceRequest)(nil), "archive.GetPackageDifferenceRequest")
	proto.RegisterType((*GetPackageDifferenceResponseWrapper)(nil), "archive.GetPackageDifferenceResponseWrapper")
}

func init() { proto.RegisterFile("get_package_difference.proto", fileDescriptor_904613b103257d0d) }

var fileDescriptor_904613b103257d0d = []byte{
	// 610 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x94, 0x4d, 0x6f, 0xd3, 0x4c,
	0x10, 0xc7, 0x95, 0xe7, 0x49, 0xd2, 0x76, 0x53, 0xd4, 0xe2, 0x02, 0x8a, 0x0a, 0x92, 0xd1, 0xb6,
	0x42, 0x69, 0x2b, 0x67, 0x69, 0x41, 0xa8, 0x44, 0x88, 0xaa, 0x15, 0xb4, 0xe2, 0x06, 0xa6, 0x12,
	0x12, 0xd9, 0x26, 0xda, 0x3a, 0x6b, 0xc7, 0xd4, 0xf6, 0x98, 0xf5, 0x36, 0xa5, 0xd0, 0x8a, 0x13,
	0x27, 0x4e, 0x7c, 0x01, 0x3e, 0x9a, 0x91, 0x38, 0x71, 0xf6, 0x27, 0x40, 0xbb, 0x76, 0x5e, 0x78,
	0xb9, 0x70, 0xc8, 0xc9, 0x3b, 0xfb, 0x9f, 0xf1, 0xfc, 0x66, 0x76, 0x76, 0xd1, 0x2d, 0x8f, 0xcb,
	0x6e, 0xcc, 0x9c, 0x13, 0xe6, 0xf1, 0x6e, 0xcf, 0x77, 0x5d, 0x2e, 0x78, 0xe4, 0xf0, 0x66, 0x2c,
	0x40, 0x82, 0x31, 0xc3, 0x84, 0xd3, 0xf7, 0x07, 0x7c, 0xd9, 0xf2, 0x7c, 0xd9, 0x3f, 0x3d, 0x6e,
	0x3a, 0x10, 0x12, 0x0f, 0x3c, 0x20, 0x5a, 0x3f, 0x3e, 0x75, 0xb5, 0xa5, 0x0d, 0xbd, 0xca, 0xe3,
	0x96, 0x0f, 0x3d, 0x68, 0x72, 0x96, 0x9c, 0x43, 0x9c, 0x34, 0x03, 0x70, 0x58, 0x40, 0x1c, 0x88,
	0xa4, 0x60, 0x8e, 0x4c, 0xf2, 0x48, 0xc1, 0x63, 0xb0, 0x42, 0xe8, 0xf1, 0x20, 0x21, 0x85, 0x23,
	0xd1, 0x26, 0x71, 0xfd, 0x80, 0x77, 0x95, 0x9c, 0xf8, 0x12, 0xc4, 0x39, 0x51, 0x4c, 0xc5, 0x5f,
	0x1f, 0x4c, 0x40, 0x84, 0x67, 0xbe, 0x3c, 0x81, 0x33, 0xe2, 0x81, 0xa5, 0x45, 0x6b, 0xc0, 0x02,
	0xbf, 0xc7, 0x24, 0x88, 0x84, 0x8c, 0x96, 0x79, 0x1c, 0xfe, 0x5a, 0x45, 0x37, 0x0f, 0xb8, 0x7c,
	0x9e, 0x57, 0xf9, 0x64, 0x54, 0xa4, 0xcd, 0xdf, 0x9e, 0xf2, 0x44, 0x1a, 0x5f, 0x4a, 0x68, 0x7e,
	0xd8, 0x02, 0x57, 0x40, 0x58, 0x2f, 0xdd, 0x2e, 0x35, 0xe6, 0xf6, 0xa2, 0x2c, 0x35, 0x97, 0x5c,
	0x10, 0x61, 0x0b, 0x4f, 0xaa, 0xf8, 0xfb, 0x37, 0xf3, 0x25, 0x7a, 0xd1, 0x69, 0x33, 0xcb, 0xdd,
	0xb5, 0xf6, 0xef, 0x5a, 0x0f, 0x8f, 0x3e, 0x6c, 0x5f, 0x5a, 0x3b, 0x93, 0xf6, 0xfd, 0x7f, 0xb4,
	0x37, 0xb7, 0x2e, 0x57, 0xed, 0x5a, 0x91, 0x65, 0x5f, 0x40, 0x68, 0x7c, 0x2e, 0x21, 0x34, 0xcc,
	0x2a, 0xa1, 0xfe, 0x9f, 0x26, 0x0a, 0xb2, 0xd4, 0xbc, 0xfa, 0x2b, 0x91, 0x84, 0xa9, 0xf1, 0xcc,
	0x15, 0x39, 0x0e, 0xc1, 0xf8, 0x54, 0x42, 0xb3, 0x03, 0x2e, 0xf2, 0xee, 0xfc, 0xaf, 0x59, 0xde,
	0x64, 0xa9, 0xb9, 0x90, 0xb3, 0x0c, 0x95, 0xa9, 0x91, 0xcc, 0x0c, 0xb8, 0xd0, 0x5d, 0xf9, 0x88,
	0xaa, 0x2a, 0x99, 0x84, 0x7a, 0x59, 0x43, 0xf4, 0xb3, 0xd4, 0xbc, 0x32, 0x86, 0x98, 0x62, 0x33,
	0x2a, 0x03, 0x2e, 0x0e, 0xc1, 0xd8, 0x44, 0x73, 0x6a, 0x20, 0xbb, 0x6a, 0x4a, 0xeb, 0x15, 0xcd,
	0x70, 0x2d, 0x4b, 0xcd, 0xc5, 0x9c, 0x61, 0x24, 0x61, 0x7b, 0x56, 0xad, 0xf7, 0xfd, 0x80, 0x1b,
	0x31, 0x2a, 0xc7, 0x4c, 0xf6, 0xeb, 0x55, 0xed, 0x4d, 0xb3, 0xd4, 0xac, 0x0d, 0x8f, 0x50, 0xf6,
	0x15, 0xef, 0x33, 0x74, 0xd0, 0x69, 0x34, 0x28, 0x69, 0x77, 0x28, 0x69, 0xd1, 0x75, 0xba, 0x83,
	0xf1, 0xa3, 0xc7, 0xf4, 0x82, 0x0a, 0x1a, 0x1d, 0x6d, 0xac, 0x6d, 0xac, 0x5d, 0x34, 0x28, 0x59,
	0xbb, 0x68, 0x33, 0xeb, 0xfd, 0xae, 0xf5, 0xfa, 0xa8, 0xd5, 0xa0, 0xb4, 0xdd, 0xa1, 0xf4, 0x4f,
	0xcf, 0xf5, 0x55, 0x5b, 0x67, 0x32, 0x08, 0x9a, 0xe5, 0x91, 0x03, 0x91, 0x1f, 0x79, 0xf5, 0x19,
	0x9d, 0x75, 0x69, 0x7c, 0x58, 0x43, 0x05, 0xdb, 0x23, 0x27, 0xfc, 0xa3, 0x84, 0x56, 0xfe, 0x7e,
	0x41, 0x92, 0x18, 0xa2, 0x84, 0xbf, 0x12, 0x2c, 0x8e, 0xb9, 0x30, 0x56, 0x50, 0xd9, 0x81, 0x1e,
	0xd7, 0xf7, 0xa3, 0xb2, 0xb7, 0x30, 0x2e, 0x45, 0xed, 0x62, 0x5b, 0x8b, 0xc6, 0x36, 0xaa, 0xa9,
	0xef, 0xd3, 0x77, 0x71, 0xc0, 0xfc, 0xa8, 0x98, 0xdc, 0x1b, 0x59, 0x6a, 0x1a, 0x63, 0xdf, 0x42,
	0xc4, 0xf6, 0xa4, 0xab, 0x71, 0x07, 0x55, 0xb8, 0x10, 0x20, 0x8a, 0x09, 0x5b, 0xcc, 0x52, 0x73,
	0xbe, 0x80, 0x56, 0xdb, 0xd8, 0xce, 0x65, 0xa3, 0x85, 0xca, 0x3d, 0x26, 0x99, 0x9e, 0x81, 0xda,
	0xd6, 0xf5, 0xe6, 0x6f, 0x4f, 0x46, 0x53, 0x15, 0x30, 0x49, 0xa7, 0x9c, 0xb1, 0xad, 0x63, 0x8e,
	0xab, 0xfa, 0x49, 0xb8, 0xf7, 0x33, 0x00, 0x00, 0xff, 0xff, 0x53, 0xc4, 0x42, 0x52, 0xf8, 0x04,
	0x00, 0x00,
}
