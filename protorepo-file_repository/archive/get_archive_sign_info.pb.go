// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: get_archive_sign_info.proto

package archive

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//GetSign请求
type GetSignRequest struct {
	//
	//程序包Id
	PackageId string `protobuf:"bytes,1,opt,name=packageId,proto3" json:"packageId" form:"packageId"`
	//
	//版本Id
	VersionId            string   `protobuf:"bytes,2,opt,name=versionId,proto3" json:"versionId" form:"versionId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSignRequest) Reset()         { *m = GetSignRequest{} }
func (m *GetSignRequest) String() string { return proto.CompactTextString(m) }
func (*GetSignRequest) ProtoMessage()    {}
func (*GetSignRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0dc29b8d40031bc6, []int{0}
}
func (m *GetSignRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSignRequest.Unmarshal(m, b)
}
func (m *GetSignRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSignRequest.Marshal(b, m, deterministic)
}
func (m *GetSignRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSignRequest.Merge(m, src)
}
func (m *GetSignRequest) XXX_Size() int {
	return xxx_messageInfo_GetSignRequest.Size(m)
}
func (m *GetSignRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSignRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSignRequest proto.InternalMessageInfo

func (m *GetSignRequest) GetPackageId() string {
	if m != nil {
		return m.PackageId
	}
	return ""
}

func (m *GetSignRequest) GetVersionId() string {
	if m != nil {
		return m.VersionId
	}
	return ""
}

//
//GetSign返回
type GetSignResponse struct {
	//
	//包文件的md5检验值
	Sign                 string   `protobuf:"bytes,1,opt,name=sign,proto3" json:"sign" form:"sign"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSignResponse) Reset()         { *m = GetSignResponse{} }
func (m *GetSignResponse) String() string { return proto.CompactTextString(m) }
func (*GetSignResponse) ProtoMessage()    {}
func (*GetSignResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0dc29b8d40031bc6, []int{1}
}
func (m *GetSignResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSignResponse.Unmarshal(m, b)
}
func (m *GetSignResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSignResponse.Marshal(b, m, deterministic)
}
func (m *GetSignResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSignResponse.Merge(m, src)
}
func (m *GetSignResponse) XXX_Size() int {
	return xxx_messageInfo_GetSignResponse.Size(m)
}
func (m *GetSignResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSignResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSignResponse proto.InternalMessageInfo

func (m *GetSignResponse) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

//
//GetSignApi返回
type GetSignResponseWrapper struct {
	//
	//返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code" form:"code"`
	//
	//返回码解释
	CodeExplain string `protobuf:"bytes,2,opt,name=codeExplain,proto3" json:"codeExplain" form:"codeExplain"`
	//
	//错误详情
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error" form:"error"`
	//
	//返回数据
	Data                 *GetSignResponse `protobuf:"bytes,4,opt,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetSignResponseWrapper) Reset()         { *m = GetSignResponseWrapper{} }
func (m *GetSignResponseWrapper) String() string { return proto.CompactTextString(m) }
func (*GetSignResponseWrapper) ProtoMessage()    {}
func (*GetSignResponseWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_0dc29b8d40031bc6, []int{2}
}
func (m *GetSignResponseWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSignResponseWrapper.Unmarshal(m, b)
}
func (m *GetSignResponseWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSignResponseWrapper.Marshal(b, m, deterministic)
}
func (m *GetSignResponseWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSignResponseWrapper.Merge(m, src)
}
func (m *GetSignResponseWrapper) XXX_Size() int {
	return xxx_messageInfo_GetSignResponseWrapper.Size(m)
}
func (m *GetSignResponseWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSignResponseWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_GetSignResponseWrapper proto.InternalMessageInfo

func (m *GetSignResponseWrapper) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetSignResponseWrapper) GetCodeExplain() string {
	if m != nil {
		return m.CodeExplain
	}
	return ""
}

func (m *GetSignResponseWrapper) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *GetSignResponseWrapper) GetData() *GetSignResponse {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*GetSignRequest)(nil), "archive.GetSignRequest")
	proto.RegisterType((*GetSignResponse)(nil), "archive.GetSignResponse")
	proto.RegisterType((*GetSignResponseWrapper)(nil), "archive.GetSignResponseWrapper")
}

func init() { proto.RegisterFile("get_archive_sign_info.proto", fileDescriptor_0dc29b8d40031bc6) }

var fileDescriptor_0dc29b8d40031bc6 = []byte{
	// 380 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x92, 0x41, 0x4a, 0xf3, 0x40,
	0x14, 0xc7, 0x49, 0xbf, 0xf6, 0x93, 0x4e, 0xc5, 0x96, 0x2c, 0x4a, 0xa8, 0x8b, 0x94, 0x51, 0xa4,
	0x9b, 0x24, 0x5a, 0xa5, 0x54, 0x41, 0x44, 0x41, 0xa5, 0x4b, 0xd3, 0x85, 0x0b, 0xd1, 0x32, 0x4d,
	0x26, 0xd3, 0xa1, 0x6d, 0x26, 0x4e, 0xa6, 0xad, 0x20, 0x3d, 0x80, 0x37, 0xf1, 0x54, 0x11, 0x3c,
	0x42, 0x4e, 0x20, 0x99, 0x84, 0x34, 0x74, 0xe7, 0xc2, 0x55, 0xe6, 0xbd, 0xdf, 0xfb, 0x31, 0x7f,
	0x5e, 0x06, 0xec, 0x13, 0x2c, 0x46, 0x88, 0x3b, 0x13, 0xba, 0xc4, 0xa3, 0x90, 0x12, 0x7f, 0x44,
	0x7d, 0x8f, 0x99, 0x01, 0x67, 0x82, 0xa9, 0x3b, 0x19, 0x68, 0x19, 0x84, 0x8a, 0xc9, 0x62, 0x6c,
	0x3a, 0x6c, 0x6e, 0x11, 0x46, 0x98, 0x25, 0xf9, 0x78, 0xe1, 0xc9, 0x4a, 0x16, 0xf2, 0x94, 0x7a,
	0xad, 0x5e, 0x61, 0x7c, 0xbe, 0xa2, 0x62, 0xca, 0x56, 0x16, 0x61, 0x86, 0x84, 0xc6, 0x12, 0xcd,
	0xa8, 0x8b, 0x04, 0xe3, 0xa1, 0x95, 0x1f, 0x53, 0x0f, 0x7e, 0x96, 0xc0, 0xde, 0x3d, 0x16, 0x43,
	0x4a, 0x7c, 0x1b, 0xbf, 0x2e, 0x70, 0x28, 0xd4, 0x0f, 0x05, 0x54, 0x03, 0xe4, 0x4c, 0x11, 0xc1,
	0x03, 0x57, 0x53, 0xda, 0x4a, 0xa7, 0x7a, 0x33, 0x8d, 0x23, 0xbd, 0xe1, 0x31, 0x3e, 0xbf, 0x80,
	0x39, 0x82, 0xdf, 0x5f, 0xfa, 0x10, 0x3c, 0xbc, 0x3c, 0x21, 0xc3, 0xbb, 0x36, 0xee, 0x8e, 0x8d,
	0xf3, 0xe7, 0xf7, 0xfe, 0xda, 0xb8, 0x2a, 0xd6, 0x67, 0xbf, 0xac, 0x4f, 0xba, 0xeb, 0x43, 0x7b,
	0x73, 0xbb, 0xcc, 0xb2, 0xc4, 0x3c, 0xa4, 0xcc, 0x1f, 0xb8, 0x5a, 0x69, 0x3b, 0x4b, 0x8e, 0xfe,
	0x2e, 0xcb, 0xe6, 0x8a, 0x1e, 0xa8, 0xe7, 0x9b, 0x0a, 0x03, 0xe6, 0x87, 0x58, 0x3d, 0x00, 0xe5,
	0xe4, 0x07, 0x66, 0x4b, 0xaa, 0xc7, 0x91, 0x5e, 0x4b, 0x83, 0x25, 0x5d, 0x68, 0x4b, 0x08, 0x23,
	0x05, 0x34, 0xb7, 0xc4, 0x47, 0x8e, 0x82, 0x00, 0xf3, 0xc4, 0x77, 0x98, 0x8b, 0xa5, 0x5f, 0x29,
	0xfa, 0x49, 0x17, 0xda, 0x12, 0xaa, 0x7d, 0x50, 0x4b, 0xbe, 0xb7, 0x6f, 0xc1, 0x0c, 0x51, 0x3f,
	0x5b, 0x42, 0x33, 0x8e, 0x74, 0x75, 0x33, 0x9b, 0x41, 0x68, 0x17, 0x47, 0xd5, 0x23, 0x50, 0xc1,
	0x9c, 0x33, 0xae, 0xfd, 0x93, 0x4e, 0x23, 0x8e, 0xf4, 0xdd, 0xd4, 0x91, 0x6d, 0x68, 0xa7, 0x58,
	0xbd, 0x04, 0x65, 0x17, 0x09, 0xa4, 0x95, 0xdb, 0x4a, 0xa7, 0xd6, 0xd5, 0xcc, 0xec, 0x0d, 0x9a,
	0x5b, 0xa9, 0x8b, 0x01, 0x93, 0x79, 0x68, 0x4b, 0x6d, 0xfc, 0x5f, 0x3e, 0xa5, 0xd3, 0x9f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x24, 0xdd, 0xb5, 0xbb, 0xd9, 0x02, 0x00, 0x00,
}
