// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: get_archive_list.proto

package archive

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//Listdir请求
type ListdirRequest struct {
	//
	//目录路径,相当于ls path
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path" form:"path"`
	//
	//程序包Id
	PackageId string `protobuf:"bytes,2,opt,name=packageId,proto3" json:"packageId" form:"packageId"`
	//
	//版本Id
	VersionId            string   `protobuf:"bytes,3,opt,name=versionId,proto3" json:"versionId" form:"versionId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListdirRequest) Reset()         { *m = ListdirRequest{} }
func (m *ListdirRequest) String() string { return proto.CompactTextString(m) }
func (*ListdirRequest) ProtoMessage()    {}
func (*ListdirRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc0ff0881afafaab, []int{0}
}
func (m *ListdirRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListdirRequest.Unmarshal(m, b)
}
func (m *ListdirRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListdirRequest.Marshal(b, m, deterministic)
}
func (m *ListdirRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListdirRequest.Merge(m, src)
}
func (m *ListdirRequest) XXX_Size() int {
	return xxx_messageInfo_ListdirRequest.Size(m)
}
func (m *ListdirRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListdirRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListdirRequest proto.InternalMessageInfo

func (m *ListdirRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *ListdirRequest) GetPackageId() string {
	if m != nil {
		return m.PackageId
	}
	return ""
}

func (m *ListdirRequest) GetVersionId() string {
	if m != nil {
		return m.VersionId
	}
	return ""
}

//
//Listdir返回
type ListdirResponse struct {
	//
	//页数
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page" form:"page"`
	//
	//页大小
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size" form:"page_size"`
	//
	//总数
	Total int32 `protobuf:"varint,3,opt,name=total,proto3" json:"total" form:"total"`
	//
	//数据列表
	List                 []*ListdirResponse_List `protobuf:"bytes,4,rep,name=list,proto3" json:"list" form:"list"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ListdirResponse) Reset()         { *m = ListdirResponse{} }
func (m *ListdirResponse) String() string { return proto.CompactTextString(m) }
func (*ListdirResponse) ProtoMessage()    {}
func (*ListdirResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc0ff0881afafaab, []int{1}
}
func (m *ListdirResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListdirResponse.Unmarshal(m, b)
}
func (m *ListdirResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListdirResponse.Marshal(b, m, deterministic)
}
func (m *ListdirResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListdirResponse.Merge(m, src)
}
func (m *ListdirResponse) XXX_Size() int {
	return xxx_messageInfo_ListdirResponse.Size(m)
}
func (m *ListdirResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListdirResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListdirResponse proto.InternalMessageInfo

func (m *ListdirResponse) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListdirResponse) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListdirResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ListdirResponse) GetList() []*ListdirResponse_List {
	if m != nil {
		return m.List
	}
	return nil
}

type ListdirResponse_List struct {
	//
	//文件名
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name" form:"name"`
	//
	//文件类型
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type" form:"type"`
	//
	//文件大小
	Size_ int64 `protobuf:"varint,3,opt,name=size,proto3" json:"size" form:"size"`
	//
	//文件权限
	Perm string `protobuf:"bytes,4,opt,name=perm,proto3" json:"perm" form:"perm"`
	//
	//文件修改时间
	Mtime string `protobuf:"bytes,5,opt,name=mtime,proto3" json:"mtime" form:"mtime"`
	//
	//文件创建时间
	Ctime string `protobuf:"bytes,6,opt,name=ctime,proto3" json:"ctime" form:"ctime"`
	//
	//如果type=link，link为链接地址
	Link string `protobuf:"bytes,7,opt,name=link,proto3" json:"link" form:"link"`
	//
	//参数path的编码格式
	Encoding string `protobuf:"bytes,8,opt,name=encoding,proto3" json:"encoding" form:"encoding"`
	//
	//文件hash
	Md5                  string   `protobuf:"bytes,9,opt,name=md5,proto3" json:"md5" form:"md5"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListdirResponse_List) Reset()         { *m = ListdirResponse_List{} }
func (m *ListdirResponse_List) String() string { return proto.CompactTextString(m) }
func (*ListdirResponse_List) ProtoMessage()    {}
func (*ListdirResponse_List) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc0ff0881afafaab, []int{1, 0}
}
func (m *ListdirResponse_List) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListdirResponse_List.Unmarshal(m, b)
}
func (m *ListdirResponse_List) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListdirResponse_List.Marshal(b, m, deterministic)
}
func (m *ListdirResponse_List) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListdirResponse_List.Merge(m, src)
}
func (m *ListdirResponse_List) XXX_Size() int {
	return xxx_messageInfo_ListdirResponse_List.Size(m)
}
func (m *ListdirResponse_List) XXX_DiscardUnknown() {
	xxx_messageInfo_ListdirResponse_List.DiscardUnknown(m)
}

var xxx_messageInfo_ListdirResponse_List proto.InternalMessageInfo

func (m *ListdirResponse_List) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListdirResponse_List) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ListdirResponse_List) GetSize_() int64 {
	if m != nil {
		return m.Size_
	}
	return 0
}

func (m *ListdirResponse_List) GetPerm() string {
	if m != nil {
		return m.Perm
	}
	return ""
}

func (m *ListdirResponse_List) GetMtime() string {
	if m != nil {
		return m.Mtime
	}
	return ""
}

func (m *ListdirResponse_List) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

func (m *ListdirResponse_List) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *ListdirResponse_List) GetEncoding() string {
	if m != nil {
		return m.Encoding
	}
	return ""
}

func (m *ListdirResponse_List) GetMd5() string {
	if m != nil {
		return m.Md5
	}
	return ""
}

//
//ListdirApi返回
type ListdirResponseWrapper struct {
	//
	//返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code" form:"code"`
	//
	//返回码解释
	CodeExplain string `protobuf:"bytes,2,opt,name=codeExplain,proto3" json:"codeExplain" form:"codeExplain"`
	//
	//错误详情
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error" form:"error"`
	//
	//返回数据
	Data                 *ListdirResponse `protobuf:"bytes,4,opt,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListdirResponseWrapper) Reset()         { *m = ListdirResponseWrapper{} }
func (m *ListdirResponseWrapper) String() string { return proto.CompactTextString(m) }
func (*ListdirResponseWrapper) ProtoMessage()    {}
func (*ListdirResponseWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc0ff0881afafaab, []int{2}
}
func (m *ListdirResponseWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListdirResponseWrapper.Unmarshal(m, b)
}
func (m *ListdirResponseWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListdirResponseWrapper.Marshal(b, m, deterministic)
}
func (m *ListdirResponseWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListdirResponseWrapper.Merge(m, src)
}
func (m *ListdirResponseWrapper) XXX_Size() int {
	return xxx_messageInfo_ListdirResponseWrapper.Size(m)
}
func (m *ListdirResponseWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_ListdirResponseWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_ListdirResponseWrapper proto.InternalMessageInfo

func (m *ListdirResponseWrapper) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListdirResponseWrapper) GetCodeExplain() string {
	if m != nil {
		return m.CodeExplain
	}
	return ""
}

func (m *ListdirResponseWrapper) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *ListdirResponseWrapper) GetData() *ListdirResponse {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*ListdirRequest)(nil), "archive.ListdirRequest")
	proto.RegisterType((*ListdirResponse)(nil), "archive.ListdirResponse")
	proto.RegisterType((*ListdirResponse_List)(nil), "archive.ListdirResponse.List")
	proto.RegisterType((*ListdirResponseWrapper)(nil), "archive.ListdirResponseWrapper")
}

func init() { proto.RegisterFile("get_archive_list.proto", fileDescriptor_fc0ff0881afafaab) }

var fileDescriptor_fc0ff0881afafaab = []byte{
	// 779 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x55, 0xcd, 0x6e, 0xd3, 0x4a,
	0x14, 0xbe, 0x6e, 0x9c, 0xfe, 0x4c, 0xaa, 0xb6, 0xd7, 0xd5, 0xad, 0xac, 0xe8, 0xa2, 0x14, 0x53,
	0x90, 0xdd, 0x6a, 0x62, 0x27, 0x21, 0xb4, 0x8d, 0x84, 0x22, 0x82, 0x40, 0xaa, 0xc4, 0x86, 0x29,
	0x12, 0x12, 0x8e, 0x53, 0xb9, 0xf1, 0xd4, 0xb5, 0x12, 0xff, 0x60, 0xbb, 0x2d, 0xb4, 0xe9, 0x03,
	0xf0, 0x2a, 0x48, 0xbc, 0x04, 0x2f, 0x81, 0xd8, 0x04, 0x89, 0x3d, 0x9b, 0xf0, 0x02, 0x68, 0x8e,
	0x9d, 0xc4, 0x04, 0x58, 0xb0, 0x60, 0xc1, 0x2a, 0x73, 0xce, 0xf7, 0x7d, 0xe3, 0x73, 0x3e, 0x9f,
	0xe3, 0xa0, 0x0d, 0x9b, 0xc6, 0x47, 0x66, 0xd8, 0x3d, 0x75, 0xce, 0xe9, 0x51, 0xdf, 0x89, 0xe2,
	0x72, 0x10, 0xfa, 0xb1, 0x2f, 0x2c, 0xa4, 0xb9, 0x22, 0xb6, 0x9d, 0xf8, 0xf4, 0xec, 0xb8, 0xdc,
	0xf5, 0x5d, 0xd5, 0xf6, 0x6d, 0x5f, 0x05, 0xfc, 0xf8, 0xec, 0x04, 0x22, 0x08, 0xe0, 0x94, 0xe8,
	0x8a, 0xf7, 0x32, 0x74, 0xf7, 0xc2, 0x89, 0x7b, 0xfe, 0x85, 0x6a, 0xfb, 0x18, 0x40, 0x7c, 0x6e,
	0xf6, 0x1d, 0xcb, 0x8c, 0xfd, 0x30, 0x52, 0x27, 0xc7, 0x44, 0x27, 0x7d, 0x99, 0x43, 0x2b, 0x4f,
	0x9c, 0x28, 0xb6, 0x9c, 0x90, 0xd0, 0x97, 0x67, 0x34, 0x8a, 0x85, 0x87, 0x88, 0x0f, 0xcc, 0xf8,
	0x54, 0xe4, 0x36, 0x39, 0x79, 0xa9, 0xa5, 0x8e, 0x86, 0xa5, 0xc2, 0x89, 0x1f, 0xba, 0x0d, 0x89,
	0x65, 0xa5, 0xcf, 0x9f, 0x4a, 0xff, 0xa3, 0x62, 0xa7, 0xad, 0xca, 0xb2, 0xde, 0x69, 0xab, 0xc6,
	0x8e, 0x22, 0xb7, 0xd5, 0xf4, 0xb4, 0xad, 0x34, 0xb7, 0x08, 0x88, 0x85, 0x37, 0x1c, 0x5a, 0x0a,
	0xcc, 0x6e, 0xcf, 0xb4, 0xe9, 0x81, 0x25, 0xce, 0xc1, 0x55, 0xbd, 0xd1, 0xb0, 0xb4, 0x36, 0xbe,
	0x2a, 0x85, 0xd8, 0x7d, 0x87, 0xe8, 0x69, 0x47, 0x37, 0xf1, 0xc9, 0x03, 0xfc, 0x58, 0xc3, 0xfb,
	0xc6, 0xd5, 0xde, 0x35, 0x6e, 0x66, 0xe3, 0xbb, 0xbf, 0x19, 0x57, 0xaa, 0xd7, 0x5b, 0x64, 0xfa,
	0x74, 0xa8, 0xe5, 0x9c, 0x86, 0x91, 0xe3, 0x7b, 0x07, 0x96, 0x98, 0x9b, 0xad, 0x65, 0x02, 0xfd,
	0xb9, 0x5a, 0xa6, 0x8f, 0xf8, 0xb0, 0x80, 0x56, 0x27, 0x7e, 0x47, 0x81, 0xef, 0x45, 0x54, 0x50,
	0x98, 0xe1, 0x36, 0x05, 0xc3, 0xf3, 0xad, 0xff, 0xb2, 0x86, 0xdb, 0x94, 0x15, 0x35, 0xb7, 0xf6,
	0x0f, 0x01, 0x8a, 0xb0, 0xcb, 0x5c, 0xb5, 0xe9, 0x51, 0xe4, 0x5c, 0x52, 0x70, 0x35, 0xdf, 0x2a,
	0x66, 0x5d, 0x4d, 0xa1, 0xb1, 0x68, 0x91, 0x65, 0x0e, 0x9d, 0x4b, 0x2a, 0xdc, 0x41, 0xf9, 0xd8,
	0x8f, 0xcd, 0x3e, 0xb4, 0x9f, 0x6f, 0xad, 0x8d, 0x86, 0xa5, 0xe5, 0x44, 0x04, 0x69, 0x89, 0x24,
	0xb0, 0xd0, 0x42, 0x3c, 0x9b, 0x46, 0x91, 0xdf, 0xcc, 0xc9, 0x85, 0xea, 0x8d, 0x72, 0x3a, 0x8e,
	0xe5, 0x99, 0x9a, 0x21, 0x6e, 0xad, 0x4e, 0x4b, 0x65, 0x22, 0x89, 0x80, 0xb6, 0xf8, 0x35, 0x8f,
	0x78, 0x86, 0x0b, 0xb7, 0x10, 0xef, 0x99, 0x2e, 0x4d, 0x27, 0x29, 0xc3, 0x66, 0x59, 0x89, 0x00,
	0xc8, 0x48, 0xf1, 0xeb, 0x80, 0xa6, 0x33, 0x92, 0x21, 0xb1, 0xac, 0x44, 0x00, 0x64, 0x24, 0x68,
	0x99, 0x55, 0x9f, 0xcb, 0x92, 0xa0, 0x5b, 0x02, 0xa0, 0x50, 0x47, 0x7c, 0x40, 0x43, 0x57, 0xe4,
	0xe1, 0xa6, 0x9b, 0x19, 0x1f, 0x69, 0xe8, 0x32, 0x4b, 0x56, 0xd0, 0x72, 0x47, 0xd6, 0x74, 0x0d,
	0xef, 0x1a, 0x57, 0xb5, 0x6b, 0x85, 0x00, 0x5d, 0xf8, 0xc8, 0xa1, 0xbc, 0x1b, 0x3b, 0x2e, 0x15,
	0xf3, 0x20, 0x7c, 0xcf, 0x4d, 0xcd, 0x81, 0x3c, 0x93, 0xbe, 0xe3, 0xd0, 0x5b, 0xae, 0x23, 0xcb,
	0xcd, 0x86, 0x5e, 0xc1, 0xfb, 0x86, 0xce, 0x5e, 0xee, 0xb6, 0xd2, 0xd4, 0xd3, 0x97, 0xae, 0x60,
	0xb9, 0xa2, 0x6b, 0xb8, 0x6a, 0x0c, 0x34, 0xc0, 0x15, 0x2c, 0xd7, 0x74, 0x0d, 0x57, 0xc6, 0xf1,
	0x40, 0xaf, 0xe0, 0x6a, 0xa2, 0x52, 0xf4, 0x67, 0x9b, 0x86, 0x5c, 0xd5, 0x35, 0x5c, 0x33, 0x06,
	0xc0, 0x49, 0xd2, 0x0d, 0x59, 0xd7, 0x70, 0x7d, 0x1c, 0x4c, 0xcf, 0x72, 0xbb, 0x0c, 0xbf, 0x3b,
	0x4a, 0x53, 0x7e, 0x31, 0xd0, 0x77, 0xb0, 0x21, 0x37, 0x1b, 0x3f, 0x91, 0x67, 0xd4, 0xcd, 0x2d,
	0x92, 0x74, 0x04, 0xbd, 0x75, 0xa1, 0xb7, 0xf9, 0x1f, 0x7a, 0xeb, 0xfe, 0xb5, 0xbd, 0x41, 0xe5,
	0x6c, 0x26, 0xfa, 0x8e, 0xd7, 0x13, 0x17, 0x66, 0x07, 0x87, 0x65, 0x61, 0x16, 0xbd, 0x9e, 0xa0,
	0xa2, 0x45, 0xea, 0x75, 0x7d, 0xcb, 0xf1, 0x6c, 0x71, 0x11, 0x88, 0xeb, 0xa3, 0x61, 0x69, 0x35,
	0x21, 0x8e, 0x11, 0x89, 0x4c, 0x48, 0xc2, 0x2e, 0xca, 0xb9, 0x56, 0x5d, 0x5c, 0x02, 0xee, 0xed,
	0xd1, 0xb0, 0x84, 0xd2, 0x49, 0xb0, 0xea, 0xcc, 0xab, 0x75, 0xf4, 0xef, 0x77, 0xdf, 0x87, 0x1a,
	0xdb, 0x6f, 0xa6, 0x90, 0x86, 0x1c, 0xda, 0x98, 0xd9, 0x92, 0xe7, 0xa1, 0x19, 0x04, 0x34, 0x64,
	0x95, 0x76, 0x7d, 0x6b, 0xbc, 0xe0, 0x99, 0x4a, 0x59, 0x56, 0x22, 0x00, 0x0a, 0x7b, 0xa8, 0xc0,
	0x7e, 0x1f, 0xbd, 0x0a, 0xfa, 0xa6, 0xe3, 0xa5, 0xeb, 0xb0, 0x31, 0x1a, 0x96, 0x84, 0x29, 0x37,
	0x05, 0x25, 0x92, 0xa5, 0xb2, 0xdd, 0xa6, 0x61, 0xe8, 0x87, 0xe9, 0xa7, 0x2d, 0xb3, 0xdb, 0x90,
	0x96, 0x48, 0x02, 0x0b, 0xf7, 0x11, 0x6f, 0x99, 0xb1, 0x09, 0xfb, 0x51, 0xa8, 0x8a, 0xbf, 0xda,
	0xed, 0x6c, 0x81, 0x8c, 0x2f, 0x11, 0x90, 0x1d, 0xcf, 0xc3, 0x3f, 0x46, 0xed, 0x5b, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x58, 0x04, 0x3f, 0x5b, 0xbb, 0x06, 0x00, 0x00,
}
