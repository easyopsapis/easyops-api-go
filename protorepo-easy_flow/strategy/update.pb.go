// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: update.proto

package strategy

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	cmdb "github.com/easyopsapis/easyops-api-go/protorepo-models/easyops/model/cmdb"
	easy_flow "github.com/easyopsapis/easyops-api-go/protorepo-models/easyops/model/easy_flow"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//Update请求
type UpdateRequest struct {
	//
	//策略ID
	StrategyID string `protobuf:"bytes,1,opt,name=strategyID,proto3" json:"strategyID" form:"strategyID"`
	//
	//策略名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name" form:"name"`
	//
	//api版本
	ApiVersion string `protobuf:"bytes,3,opt,name=apiVersion,proto3" json:"apiVersion" form:"apiVersion"`
	//
	//集群列表
	Clusters []*cmdb.ClusterInfo `protobuf:"bytes,4,rep,name=clusters,proto3" json:"clusters" form:"clusters"`
	//
	//部署包信息
	PackageList          *UpdateRequest_PackageList `protobuf:"bytes,5,opt,name=packageList,proto3" json:"packageList" form:"packageList"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *UpdateRequest) Reset()         { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()    {}
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f0fa214029f1c21, []int{0}
}
func (m *UpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRequest.Unmarshal(m, b)
}
func (m *UpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRequest.Merge(m, src)
}
func (m *UpdateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRequest.Size(m)
}
func (m *UpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRequest proto.InternalMessageInfo

func (m *UpdateRequest) GetStrategyID() string {
	if m != nil {
		return m.StrategyID
	}
	return ""
}

func (m *UpdateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateRequest) GetApiVersion() string {
	if m != nil {
		return m.ApiVersion
	}
	return ""
}

func (m *UpdateRequest) GetClusters() []*cmdb.ClusterInfo {
	if m != nil {
		return m.Clusters
	}
	return nil
}

func (m *UpdateRequest) GetPackageList() *UpdateRequest_PackageList {
	if m != nil {
		return m.PackageList
	}
	return nil
}

type UpdateRequest_PackageList struct {
	//
	//集群
	Cluster *cmdb.ClusterInfo `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster" form:"cluster"`
	//
	//目标版本
	TargetVersion string `protobuf:"bytes,2,opt,name=targetVersion,proto3" json:"targetVersion" form:"targetVersion"`
	//
	//是否提前暂停
	PreStop string `protobuf:"bytes,3,opt,name=preStop,proto3" json:"preStop" form:"preStop"`
	//
	//是否发布重启
	PostRestart string `protobuf:"bytes,4,opt,name=postRestart,proto3" json:"postRestart" form:"postRestart"`
	//
	//是否自动运行
	AutoStart string `protobuf:"bytes,5,opt,name=autoStart,proto3" json:"autoStart" form:"autoStart"`
	//
	//是否需要用户检查
	UserCheck string `protobuf:"bytes,6,opt,name=userCheck,proto3" json:"userCheck" form:"userCheck"`
	//
	//是否完全更新
	FullUpdate string `protobuf:"bytes,7,opt,name=fullUpdate,proto3" json:"fullUpdate" form:"fullUpdate"`
	//
	//强制更新
	Force string `protobuf:"bytes,8,opt,name=force,proto3" json:"force" form:"force"`
	//
	//强制安装
	ForceInstall string `protobuf:"bytes,9,opt,name=forceInstall,proto3" json:"forceInstall" form:"forceInstall"`
	//
	//包Id
	PackageId string `protobuf:"bytes,10,opt,name=packageId,proto3" json:"packageId" form:"packageId"`
	//
	//包名称
	Name string `protobuf:"bytes,11,opt,name=name,proto3" json:"name" form:"name"`
	//
	//安装路径
	InstallPath string `protobuf:"bytes,12,opt,name=installPath,proto3" json:"installPath" form:"installPath"`
	//
	//版本类型 1 程序包,  2 配置包,  4 文件包
	Type int32 `protobuf:"varint,13,opt,name=type,proto3" json:"type" form:"type"`
	//
	//平台
	Platform             string   `protobuf:"bytes,14,opt,name=platform,proto3" json:"platform" form:"platform"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRequest_PackageList) Reset()         { *m = UpdateRequest_PackageList{} }
func (m *UpdateRequest_PackageList) String() string { return proto.CompactTextString(m) }
func (*UpdateRequest_PackageList) ProtoMessage()    {}
func (*UpdateRequest_PackageList) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f0fa214029f1c21, []int{0, 0}
}
func (m *UpdateRequest_PackageList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRequest_PackageList.Unmarshal(m, b)
}
func (m *UpdateRequest_PackageList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRequest_PackageList.Marshal(b, m, deterministic)
}
func (m *UpdateRequest_PackageList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRequest_PackageList.Merge(m, src)
}
func (m *UpdateRequest_PackageList) XXX_Size() int {
	return xxx_messageInfo_UpdateRequest_PackageList.Size(m)
}
func (m *UpdateRequest_PackageList) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRequest_PackageList.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRequest_PackageList proto.InternalMessageInfo

func (m *UpdateRequest_PackageList) GetCluster() *cmdb.ClusterInfo {
	if m != nil {
		return m.Cluster
	}
	return nil
}

func (m *UpdateRequest_PackageList) GetTargetVersion() string {
	if m != nil {
		return m.TargetVersion
	}
	return ""
}

func (m *UpdateRequest_PackageList) GetPreStop() string {
	if m != nil {
		return m.PreStop
	}
	return ""
}

func (m *UpdateRequest_PackageList) GetPostRestart() string {
	if m != nil {
		return m.PostRestart
	}
	return ""
}

func (m *UpdateRequest_PackageList) GetAutoStart() string {
	if m != nil {
		return m.AutoStart
	}
	return ""
}

func (m *UpdateRequest_PackageList) GetUserCheck() string {
	if m != nil {
		return m.UserCheck
	}
	return ""
}

func (m *UpdateRequest_PackageList) GetFullUpdate() string {
	if m != nil {
		return m.FullUpdate
	}
	return ""
}

func (m *UpdateRequest_PackageList) GetForce() string {
	if m != nil {
		return m.Force
	}
	return ""
}

func (m *UpdateRequest_PackageList) GetForceInstall() string {
	if m != nil {
		return m.ForceInstall
	}
	return ""
}

func (m *UpdateRequest_PackageList) GetPackageId() string {
	if m != nil {
		return m.PackageId
	}
	return ""
}

func (m *UpdateRequest_PackageList) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateRequest_PackageList) GetInstallPath() string {
	if m != nil {
		return m.InstallPath
	}
	return ""
}

func (m *UpdateRequest_PackageList) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *UpdateRequest_PackageList) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

//
//UpdateApi返回
type UpdateResponseWrapper struct {
	//
	//返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code" form:"code"`
	//
	//返回码解释
	CodeExplain string `protobuf:"bytes,2,opt,name=codeExplain,proto3" json:"codeExplain" form:"codeExplain"`
	//
	//错误详情
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error" form:"error"`
	//
	//返回数据
	Data                 *easy_flow.DeployStrategy `protobuf:"bytes,4,opt,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *UpdateResponseWrapper) Reset()         { *m = UpdateResponseWrapper{} }
func (m *UpdateResponseWrapper) String() string { return proto.CompactTextString(m) }
func (*UpdateResponseWrapper) ProtoMessage()    {}
func (*UpdateResponseWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f0fa214029f1c21, []int{1}
}
func (m *UpdateResponseWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateResponseWrapper.Unmarshal(m, b)
}
func (m *UpdateResponseWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateResponseWrapper.Marshal(b, m, deterministic)
}
func (m *UpdateResponseWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResponseWrapper.Merge(m, src)
}
func (m *UpdateResponseWrapper) XXX_Size() int {
	return xxx_messageInfo_UpdateResponseWrapper.Size(m)
}
func (m *UpdateResponseWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResponseWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResponseWrapper proto.InternalMessageInfo

func (m *UpdateResponseWrapper) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateResponseWrapper) GetCodeExplain() string {
	if m != nil {
		return m.CodeExplain
	}
	return ""
}

func (m *UpdateResponseWrapper) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *UpdateResponseWrapper) GetData() *easy_flow.DeployStrategy {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*UpdateRequest)(nil), "strategy.UpdateRequest")
	proto.RegisterType((*UpdateRequest_PackageList)(nil), "strategy.UpdateRequest.PackageList")
	proto.RegisterType((*UpdateResponseWrapper)(nil), "strategy.UpdateResponseWrapper")
}

func init() { proto.RegisterFile("update.proto", fileDescriptor_3f0fa214029f1c21) }

var fileDescriptor_3f0fa214029f1c21 = []byte{
	// 881 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0xdd, 0x6e, 0xdc, 0x44,
	0x14, 0x66, 0xe9, 0xa6, 0x49, 0xc6, 0x49, 0x7f, 0xa6, 0x2d, 0x98, 0xdc, 0x38, 0x9a, 0x56, 0x68,
	0xd3, 0x60, 0x1b, 0x96, 0x1f, 0x95, 0x80, 0x12, 0x35, 0x2d, 0xa0, 0x95, 0xb8, 0x68, 0x27, 0x2a,
	0x08, 0xe2, 0x4d, 0x34, 0xeb, 0x9d, 0xdd, 0x58, 0xf1, 0xee, 0x0c, 0x33, 0x63, 0xd2, 0x40, 0x7a,
	0xc9, 0x05, 0x12, 0x37, 0x3c, 0x0a, 0x2f, 0xe4, 0x4a, 0x7d, 0x04, 0x3f, 0x01, 0x9a, 0xf1, 0xdf,
	0x6c, 0xe1, 0x06, 0x94, 0x5e, 0xd9, 0xe7, 0x7c, 0xdf, 0x77, 0xce, 0x99, 0x39, 0xe7, 0xd8, 0x60,
	0x2d, 0xe3, 0x63, 0xa2, 0x68, 0xc0, 0x05, 0x53, 0x0c, 0xae, 0x48, 0x25, 0x88, 0xa2, 0xd3, 0xf3,
	0x0d, 0x7f, 0x9a, 0xa8, 0x93, 0x6c, 0x14, 0xc4, 0x6c, 0x16, 0x4e, 0xd9, 0x94, 0x85, 0x86, 0x30,
	0xca, 0x26, 0xc6, 0x32, 0x86, 0x79, 0x2b, 0x85, 0x1b, 0x4f, 0xa7, 0x2c, 0xa0, 0x44, 0x9e, 0x33,
	0x2e, 0x83, 0x94, 0xc5, 0x24, 0x0d, 0x63, 0x36, 0x57, 0x82, 0xc4, 0x4a, 0x96, 0x4a, 0x41, 0x39,
	0xf3, 0x67, 0x6c, 0x4c, 0x53, 0x19, 0x56, 0xc4, 0xd0, 0x98, 0x61, 0x3c, 0x1b, 0x8f, 0xc2, 0x38,
	0xcd, 0xa4, 0xa2, 0xe2, 0x38, 0x99, 0x4f, 0xea, 0x90, 0xc3, 0xff, 0x1f, 0x52, 0x5b, 0xc7, 0x93,
	0x94, 0x9d, 0x85, 0x63, 0xca, 0x53, 0x76, 0x7e, 0x3c, 0x22, 0x2a, 0x3e, 0x39, 0x56, 0x44, 0x4c,
	0xa9, 0xaa, 0xc2, 0x3f, 0xbb, 0x8c, 0xf0, 0x65, 0x44, 0xbb, 0xea, 0x1f, 0x2e, 0xb1, 0xea, 0xba,
	0x19, 0x55, 0xe8, 0xcf, 0xac, 0x96, 0xcc, 0xce, 0x12, 0x75, 0xca, 0xce, 0xc2, 0x29, 0xf3, 0x0d,
	0xe8, 0xff, 0x4c, 0xd2, 0x64, 0x4c, 0x14, 0x13, 0x32, 0x6c, 0x5e, 0x4b, 0x1d, 0xfa, 0x0b, 0x80,
	0xf5, 0x67, 0xa6, 0xcb, 0x98, 0xfe, 0x94, 0x51, 0xa9, 0xe0, 0x1f, 0x1d, 0x00, 0xea, 0xe0, 0x83,
	0xc7, 0x6e, 0x67, 0xb3, 0xd3, 0x5b, 0xdd, 0x4f, 0x8b, 0xdc, 0xbb, 0x39, 0x61, 0x62, 0xb6, 0x83,
	0x5a, 0x0c, 0xbd, 0x7a, 0xe9, 0x1d, 0x80, 0xa7, 0x47, 0x87, 0xc4, 0x9f, 0x3c, 0xf4, 0xbf, 0xfe,
	0xd0, 0xff, 0x7c, 0xf8, 0xeb, 0x83, 0x17, 0xfe, 0x9e, 0x6d, 0x7f, 0xf2, 0x1f, 0xed, 0x8f, 0xfa,
	0x2f, 0xee, 0x61, 0x2b, 0x3f, 0xbc, 0x0b, 0xba, 0x73, 0x32, 0xa3, 0xee, 0xdb, 0xa6, 0x8e, 0xeb,
	0x45, 0xee, 0x39, 0x65, 0x1d, 0xda, 0x8b, 0xb0, 0x01, 0xe1, 0xa7, 0x00, 0x10, 0x9e, 0x7c, 0x47,
	0x85, 0x4c, 0xd8, 0xdc, 0xbd, 0x62, 0xa8, 0x77, 0xda, 0x92, 0x5b, 0x0c, 0x61, 0x8b, 0x08, 0xf7,
	0xc1, 0x4a, 0x35, 0x5b, 0xd2, 0xed, 0x6e, 0x5e, 0xe9, 0x39, 0xfd, 0x9b, 0x81, 0x9e, 0xb8, 0xe0,
	0x51, 0xe9, 0x1d, 0xcc, 0x27, 0x6c, 0xff, 0x56, 0x91, 0x7b, 0xd7, 0xcb, 0x38, 0x35, 0x19, 0xe1,
	0x46, 0x07, 0x87, 0xc0, 0xe1, 0x24, 0x3e, 0x25, 0x53, 0xfa, 0x6d, 0x22, 0x95, 0xbb, 0xb4, 0xd9,
	0xe9, 0x39, 0xfd, 0xbb, 0x41, 0xd3, 0x9e, 0x85, 0xcb, 0x0d, 0x9e, 0xb4, 0xd4, 0xfd, 0x77, 0x8a,
	0xdc, 0x83, 0x65, 0x60, 0x2b, 0x02, 0xc2, 0x76, 0xbc, 0x8d, 0x3f, 0x97, 0x81, 0x63, 0x89, 0xe0,
	0x1e, 0x58, 0xae, 0x52, 0x9b, 0xce, 0xfc, 0x6b, 0xc5, 0xb0, 0xc8, 0xbd, 0x6b, 0x0b, 0x15, 0x23,
	0x5c, 0xab, 0xe0, 0x2e, 0x58, 0x2f, 0x07, 0xb3, 0xbe, 0xad, 0xf2, 0x62, 0xdd, 0x22, 0xf7, 0x6e,
	0x97, 0x9a, 0x05, 0x18, 0xe1, 0x45, 0x3a, 0xfc, 0x00, 0x2c, 0x73, 0x41, 0x0f, 0x14, 0xe3, 0xd5,
	0x3d, 0x5b, 0xd9, 0x2a, 0x00, 0xe1, 0x9a, 0x02, 0x1f, 0x00, 0x87, 0x33, 0xa9, 0x30, 0x95, 0x8a,
	0x08, 0xe5, 0x76, 0x8d, 0xc2, 0x3e, 0x78, 0x0b, 0xea, 0x83, 0xb7, 0x16, 0xec, 0x83, 0x55, 0x92,
	0x29, 0x76, 0x60, 0x74, 0x4b, 0x46, 0x77, 0xbb, 0xc8, 0xbd, 0x1b, 0x55, 0x47, 0x6b, 0x08, 0xe1,
	0x96, 0xa6, 0x35, 0x99, 0xa4, 0xe2, 0xd1, 0x09, 0x8d, 0x4f, 0xdd, 0xab, 0xaf, 0x6b, 0x1a, 0x08,
	0xe1, 0x96, 0xa6, 0x47, 0x67, 0x92, 0xa5, 0x69, 0xd9, 0x26, 0x77, 0xf9, 0xf5, 0xd1, 0x69, 0x31,
	0x84, 0x2d, 0x22, 0x7c, 0x1f, 0x2c, 0x4d, 0x98, 0x88, 0xa9, 0xbb, 0x62, 0x14, 0x37, 0x8a, 0xdc,
	0x5b, 0xab, 0x14, 0xda, 0x8d, 0x70, 0x09, 0xc3, 0x2f, 0xc0, 0x9a, 0x79, 0x19, 0xcc, 0xa5, 0x22,
	0x69, 0xea, 0xae, 0x1a, 0xfa, 0xbb, 0x45, 0xee, 0xdd, 0xb2, 0xe8, 0x15, 0x8a, 0xf0, 0x02, 0x19,
	0xfe, 0xde, 0x01, 0xab, 0xd5, 0x30, 0x0c, 0xc6, 0x2e, 0x30, 0xd2, 0xd3, 0xf6, 0x40, 0x0d, 0xf4,
	0xc6, 0x16, 0xb1, 0xcd, 0x0e, 0xb7, 0xab, 0x3d, 0x74, 0x9a, 0x03, 0xd8, 0x7b, 0xf8, 0xea, 0xa5,
	0xd7, 0xe5, 0x6f, 0x3d, 0x0f, 0xaa, 0x7d, 0xfc, 0xad, 0x03, 0x9c, 0xa4, 0x3c, 0xc4, 0x13, 0xa2,
	0x4e, 0xdc, 0x35, 0x23, 0x8a, 0xdb, 0xbe, 0x5b, 0xa0, 0xd6, 0x0e, 0xc0, 0x37, 0x47, 0xbd, 0x5e,
	0x14, 0x1e, 0x1e, 0x45, 0xe1, 0x4e, 0x74, 0x3f, 0xda, 0x43, 0xe8, 0xcb, 0xdd, 0xe8, 0x22, 0x12,
	0xd1, 0x7c, 0xb8, 0xbd, 0xb5, 0xbd, 0x75, 0xd1, 0x8b, 0xc2, 0xad, 0x8b, 0x43, 0xe2, 0xff, 0xf2,
	0xd0, 0xff, 0x71, 0xb8, 0xd3, 0x8b, 0xa2, 0xc3, 0xa3, 0x28, 0xfa, 0x27, 0xf3, 0xfe, 0x3d, 0x6c,
	0xe7, 0xd5, 0x1f, 0x0f, 0x75, 0xce, 0xa9, 0xbb, 0xbe, 0xd9, 0xe9, 0x2d, 0xd9, 0x1f, 0x0f, 0xed,
	0x45, 0xd8, 0x80, 0x30, 0x04, 0x2b, 0x3c, 0x25, 0x4a, 0x03, 0xee, 0x35, 0x53, 0xa8, 0xb5, 0xf2,
	0x35, 0x82, 0x70, 0x43, 0x42, 0x79, 0x07, 0xdc, 0xa9, 0xd7, 0x5a, 0x72, 0x36, 0x97, 0xf4, 0x7b,
	0x41, 0x38, 0xa7, 0x42, 0xe7, 0x8b, 0xd9, 0x98, 0x9a, 0xd5, 0x5c, 0xc8, 0xa7, 0xbd, 0x08, 0x1b,
	0x50, 0xef, 0x84, 0x7e, 0x7e, 0xf5, 0x9c, 0xa7, 0x24, 0xa9, 0xf7, 0xcf, 0xda, 0x09, 0x0b, 0x44,
	0xd8, 0xa6, 0xea, 0xa1, 0xa3, 0x42, 0x30, 0x51, 0x6d, 0x9e, 0x35, 0x74, 0xc6, 0x8d, 0x70, 0x09,
	0xc3, 0x5d, 0xd0, 0x1d, 0x13, 0x45, 0xcc, 0xba, 0x39, 0xfd, 0xf7, 0x82, 0xe6, 0xe7, 0x11, 0x3c,
	0x36, 0x3f, 0x8f, 0x83, 0xea, 0xe3, 0x64, 0x57, 0xa8, 0x05, 0x08, 0x1b, 0xdd, 0xe8, 0xaa, 0xf9,
	0x37, 0x7c, 0xfc, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xad, 0x4e, 0x55, 0x3d, 0x00, 0x08, 0x00,
	0x00,
}
