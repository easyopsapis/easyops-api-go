// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: create.proto

package deploy

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	_ "github.com/mwitkow/go-proto-validators"
	cmdb "github.com/easyopsapis/easyops-api-go/protorepo-models/easyops/model/cmdb"
	easy_flow "github.com/easyopsapis/easyops-api-go/protorepo-models/easyops/model/easy_flow"
	file_repository "github.com/easyopsapis/easyops-api-go/protorepo-models/easyops/model/file_repository"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

//
//Create请求
type CreateRequest struct {
	//
	//是否需要通知
	NeedNotify string `protobuf:"bytes,1,opt,name=needNotify,proto3" json:"needNotify" form:"needNotify"`
	//
	//标签
	Labels *easy_flow.DeployLabel `protobuf:"bytes,2,opt,name=labels,proto3" json:"labels" form:"labels"`
	//
	//应用Id
	AppId string `protobuf:"bytes,3,opt,name=appId,proto3" json:"appId" form:"appId"`
	//
	//应用名称
	AppName string `protobuf:"bytes,4,opt,name=appName,proto3" json:"appName" form:"appName"`
	//
	//集群Id
	ClusterId string `protobuf:"bytes,5,opt,name=clusterId,proto3" json:"clusterId" form:"clusterId"`
	//
	//集群类型
	ClusterType string `protobuf:"bytes,6,opt,name=clusterType,proto3" json:"clusterType" form:"clusterType"`
	//
	//自动分批:每批次部署机器数;手动分批:部署总共批次
	BatchNum int32 `protobuf:"varint,7,opt,name=batchNum,proto3" json:"batchNum" form:"batchNum"`
	//
	//部署间隔时长(s)
	BatchInterval int32 `protobuf:"varint,8,opt,name=batchInterval,proto3" json:"batchInterval" form:"batchInterval"`
	//
	//分批详情
	Batches []*CreateRequest_Batches `protobuf:"bytes,9,rep,name=batches,proto3" json:"batches" form:"batches"`
	//
	//是否失败暂停
	FailedStop string `protobuf:"bytes,10,opt,name=failedStop,proto3" json:"failedStop" form:"failedStop"`
	//
	//目标设备Id
	TargetId string `protobuf:"bytes,11,opt,name=targetId,proto3" json:"targetId" form:"targetId"`
	//
	//目标设备名称
	TargetName string `protobuf:"bytes,12,opt,name=targetName,proto3" json:"targetName" form:"targetName"`
	//
	//实例Id
	InstanceId string `protobuf:"bytes,13,opt,name=instanceId,proto3" json:"instanceId" form:"instanceId"`
	//
	//集群列表
	Cluster *cmdb.ClusterInfo `protobuf:"bytes,14,opt,name=cluster,proto3" json:"cluster" form:"cluster"`
	//
	//目标设备上次成功部署的实例信息
	InstanceInfo []*CreateRequest_InstanceInfo `protobuf:"bytes,15,rep,name=instanceInfo,proto3" json:"instanceInfo" form:"instanceInfo"`
	//
	//包版本信息
	VersionInfo *CreateRequest_VersionInfo `protobuf:"bytes,16,opt,name=versionInfo,proto3" json:"versionInfo" form:"versionInfo"`
	//
	//部署包信息
	PackageList          *CreateRequest_PackageList `protobuf:"bytes,17,opt,name=packageList,proto3" json:"packageList" form:"packageList"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4d26d5dcda09a78, []int{0}
}
func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetNeedNotify() string {
	if m != nil {
		return m.NeedNotify
	}
	return ""
}

func (m *CreateRequest) GetLabels() *easy_flow.DeployLabel {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreateRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *CreateRequest) GetAppName() string {
	if m != nil {
		return m.AppName
	}
	return ""
}

func (m *CreateRequest) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *CreateRequest) GetClusterType() string {
	if m != nil {
		return m.ClusterType
	}
	return ""
}

func (m *CreateRequest) GetBatchNum() int32 {
	if m != nil {
		return m.BatchNum
	}
	return 0
}

func (m *CreateRequest) GetBatchInterval() int32 {
	if m != nil {
		return m.BatchInterval
	}
	return 0
}

func (m *CreateRequest) GetBatches() []*CreateRequest_Batches {
	if m != nil {
		return m.Batches
	}
	return nil
}

func (m *CreateRequest) GetFailedStop() string {
	if m != nil {
		return m.FailedStop
	}
	return ""
}

func (m *CreateRequest) GetTargetId() string {
	if m != nil {
		return m.TargetId
	}
	return ""
}

func (m *CreateRequest) GetTargetName() string {
	if m != nil {
		return m.TargetName
	}
	return ""
}

func (m *CreateRequest) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *CreateRequest) GetCluster() *cmdb.ClusterInfo {
	if m != nil {
		return m.Cluster
	}
	return nil
}

func (m *CreateRequest) GetInstanceInfo() []*CreateRequest_InstanceInfo {
	if m != nil {
		return m.InstanceInfo
	}
	return nil
}

func (m *CreateRequest) GetVersionInfo() *CreateRequest_VersionInfo {
	if m != nil {
		return m.VersionInfo
	}
	return nil
}

func (m *CreateRequest) GetPackageList() *CreateRequest_PackageList {
	if m != nil {
		return m.PackageList
	}
	return nil
}

type CreateRequest_Batches struct {
	//
	//批次主机列表
	Targets              []*easy_flow.DeployBatchTarget `protobuf:"bytes,1,rep,name=targets,proto3" json:"targets" form:"targets"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *CreateRequest_Batches) Reset()         { *m = CreateRequest_Batches{} }
func (m *CreateRequest_Batches) String() string { return proto.CompactTextString(m) }
func (*CreateRequest_Batches) ProtoMessage()    {}
func (*CreateRequest_Batches) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4d26d5dcda09a78, []int{0, 0}
}
func (m *CreateRequest_Batches) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest_Batches.Unmarshal(m, b)
}
func (m *CreateRequest_Batches) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest_Batches.Marshal(b, m, deterministic)
}
func (m *CreateRequest_Batches) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest_Batches.Merge(m, src)
}
func (m *CreateRequest_Batches) XXX_Size() int {
	return xxx_messageInfo_CreateRequest_Batches.Size(m)
}
func (m *CreateRequest_Batches) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest_Batches.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest_Batches proto.InternalMessageInfo

func (m *CreateRequest_Batches) GetTargets() []*easy_flow.DeployBatchTarget {
	if m != nil {
		return m.Targets
	}
	return nil
}

type CreateRequest_InstanceInfo struct {
	//
	//版本名
	VersionName string `protobuf:"bytes,1,opt,name=versionName,proto3" json:"versionName" form:"versionName"`
	//
	//包Id
	PackageId string `protobuf:"bytes,2,opt,name=packageId,proto3" json:"packageId" form:"packageId"`
	//
	//安装路径
	InstallPath string `protobuf:"bytes,3,opt,name=installPath,proto3" json:"installPath" form:"installPath"`
	//
	//版本Id
	VersionId            string   `protobuf:"bytes,4,opt,name=versionId,proto3" json:"versionId" form:"versionId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRequest_InstanceInfo) Reset()         { *m = CreateRequest_InstanceInfo{} }
func (m *CreateRequest_InstanceInfo) String() string { return proto.CompactTextString(m) }
func (*CreateRequest_InstanceInfo) ProtoMessage()    {}
func (*CreateRequest_InstanceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4d26d5dcda09a78, []int{0, 1}
}
func (m *CreateRequest_InstanceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest_InstanceInfo.Unmarshal(m, b)
}
func (m *CreateRequest_InstanceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest_InstanceInfo.Marshal(b, m, deterministic)
}
func (m *CreateRequest_InstanceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest_InstanceInfo.Merge(m, src)
}
func (m *CreateRequest_InstanceInfo) XXX_Size() int {
	return xxx_messageInfo_CreateRequest_InstanceInfo.Size(m)
}
func (m *CreateRequest_InstanceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest_InstanceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest_InstanceInfo proto.InternalMessageInfo

func (m *CreateRequest_InstanceInfo) GetVersionName() string {
	if m != nil {
		return m.VersionName
	}
	return ""
}

func (m *CreateRequest_InstanceInfo) GetPackageId() string {
	if m != nil {
		return m.PackageId
	}
	return ""
}

func (m *CreateRequest_InstanceInfo) GetInstallPath() string {
	if m != nil {
		return m.InstallPath
	}
	return ""
}

func (m *CreateRequest_InstanceInfo) GetVersionId() string {
	if m != nil {
		return m.VersionId
	}
	return ""
}

type CreateRequest_VersionInfo struct {
	//
	//包存储源信息
	SourceDecode *CreateRequest_VersionInfo_SourceDecode `protobuf:"bytes,1,opt,name=sourceDecode,proto3" json:"sourceDecode" form:"sourceDecode"`
	//
	//包存储源序列化信息
	Source string `protobuf:"bytes,2,opt,name=source,proto3" json:"source" form:"source"`
	//
	//包diff信息
	Diff []*file_repository.Diff `protobuf:"bytes,3,rep,name=diff,proto3" json:"diff" form:"diff"`
	//
	//包名称
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name" form:"name"`
	//
	//版本Id
	VersionId string `protobuf:"bytes,5,opt,name=versionId,proto3" json:"versionId" form:"versionId"`
	//
	//包Id
	PackageId string `protobuf:"bytes,6,opt,name=packageId,proto3" json:"packageId" form:"packageId"`
	//
	//组织id
	Org int32 `protobuf:"varint,7,opt,name=org,proto3" json:"org" form:"org"`
	//
	//创建者
	Creator string `protobuf:"bytes,8,opt,name=creator,proto3" json:"creator" form:"creator"`
	//
	//版本备注
	Memo string `protobuf:"bytes,9,opt,name=memo,proto3" json:"memo" form:"memo"`
	//
	//创建时间
	Ctime string `protobuf:"bytes,10,opt,name=ctime,proto3" json:"ctime" form:"ctime"`
	//
	//修改时间
	Mtime string `protobuf:"bytes,11,opt,name=mtime,proto3" json:"mtime" form:"mtime"`
	//
	//包文件的md5检验值
	Sign *types.Struct `protobuf:"bytes,12,opt,name=sign,proto3" json:"sign" form:"sign"`
	//
	//包存储服务版本
	SourceType string `protobuf:"bytes,13,opt,name=sourceType,proto3" json:"sourceType" form:"sourceType"`
	//
	//版本的进程及启停、安装、升级脚本, package.conf.yaml
	Conf string `protobuf:"bytes,14,opt,name=conf,proto3" json:"conf" form:"conf"`
	//
	//版本类型 1 开发, 3 测试, 7 预发布, 15 生产
	EnvType              int32    `protobuf:"varint,15,opt,name=env_type,json=envType,proto3" json:"env_type" form:"env_type"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRequest_VersionInfo) Reset()         { *m = CreateRequest_VersionInfo{} }
func (m *CreateRequest_VersionInfo) String() string { return proto.CompactTextString(m) }
func (*CreateRequest_VersionInfo) ProtoMessage()    {}
func (*CreateRequest_VersionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4d26d5dcda09a78, []int{0, 2}
}
func (m *CreateRequest_VersionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest_VersionInfo.Unmarshal(m, b)
}
func (m *CreateRequest_VersionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest_VersionInfo.Marshal(b, m, deterministic)
}
func (m *CreateRequest_VersionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest_VersionInfo.Merge(m, src)
}
func (m *CreateRequest_VersionInfo) XXX_Size() int {
	return xxx_messageInfo_CreateRequest_VersionInfo.Size(m)
}
func (m *CreateRequest_VersionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest_VersionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest_VersionInfo proto.InternalMessageInfo

func (m *CreateRequest_VersionInfo) GetSourceDecode() *CreateRequest_VersionInfo_SourceDecode {
	if m != nil {
		return m.SourceDecode
	}
	return nil
}

func (m *CreateRequest_VersionInfo) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *CreateRequest_VersionInfo) GetDiff() []*file_repository.Diff {
	if m != nil {
		return m.Diff
	}
	return nil
}

func (m *CreateRequest_VersionInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateRequest_VersionInfo) GetVersionId() string {
	if m != nil {
		return m.VersionId
	}
	return ""
}

func (m *CreateRequest_VersionInfo) GetPackageId() string {
	if m != nil {
		return m.PackageId
	}
	return ""
}

func (m *CreateRequest_VersionInfo) GetOrg() int32 {
	if m != nil {
		return m.Org
	}
	return 0
}

func (m *CreateRequest_VersionInfo) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *CreateRequest_VersionInfo) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *CreateRequest_VersionInfo) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

func (m *CreateRequest_VersionInfo) GetMtime() string {
	if m != nil {
		return m.Mtime
	}
	return ""
}

func (m *CreateRequest_VersionInfo) GetSign() *types.Struct {
	if m != nil {
		return m.Sign
	}
	return nil
}

func (m *CreateRequest_VersionInfo) GetSourceType() string {
	if m != nil {
		return m.SourceType
	}
	return ""
}

func (m *CreateRequest_VersionInfo) GetConf() string {
	if m != nil {
		return m.Conf
	}
	return ""
}

func (m *CreateRequest_VersionInfo) GetEnvType() int32 {
	if m != nil {
		return m.EnvType
	}
	return 0
}

type CreateRequest_VersionInfo_SourceDecode struct {
	//
	//源服务名字
	EnsName string `protobuf:"bytes,1,opt,name=ensName,proto3" json:"ensName" form:"ensName"`
	//
	//源域名
	Host string `protobuf:"bytes,2,opt,name=host,proto3" json:"host" form:"host"`
	//
	//源类型
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type" form:"type"`
	//
	//http源的ip
	Ip string `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip" form:"ip"`
	//
	//http源的port
	Port                 int32    `protobuf:"varint,5,opt,name=port,proto3" json:"port" form:"port"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRequest_VersionInfo_SourceDecode) Reset() {
	*m = CreateRequest_VersionInfo_SourceDecode{}
}
func (m *CreateRequest_VersionInfo_SourceDecode) String() string { return proto.CompactTextString(m) }
func (*CreateRequest_VersionInfo_SourceDecode) ProtoMessage()    {}
func (*CreateRequest_VersionInfo_SourceDecode) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4d26d5dcda09a78, []int{0, 2, 0}
}
func (m *CreateRequest_VersionInfo_SourceDecode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest_VersionInfo_SourceDecode.Unmarshal(m, b)
}
func (m *CreateRequest_VersionInfo_SourceDecode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest_VersionInfo_SourceDecode.Marshal(b, m, deterministic)
}
func (m *CreateRequest_VersionInfo_SourceDecode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest_VersionInfo_SourceDecode.Merge(m, src)
}
func (m *CreateRequest_VersionInfo_SourceDecode) XXX_Size() int {
	return xxx_messageInfo_CreateRequest_VersionInfo_SourceDecode.Size(m)
}
func (m *CreateRequest_VersionInfo_SourceDecode) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest_VersionInfo_SourceDecode.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest_VersionInfo_SourceDecode proto.InternalMessageInfo

func (m *CreateRequest_VersionInfo_SourceDecode) GetEnsName() string {
	if m != nil {
		return m.EnsName
	}
	return ""
}

func (m *CreateRequest_VersionInfo_SourceDecode) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *CreateRequest_VersionInfo_SourceDecode) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *CreateRequest_VersionInfo_SourceDecode) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *CreateRequest_VersionInfo_SourceDecode) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type CreateRequest_PackageList struct {
	//
	//集群
	Cluster *cmdb.ClusterInfo `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster" form:"cluster"`
	//
	//目标版本
	TargetVersion string `protobuf:"bytes,2,opt,name=targetVersion,proto3" json:"targetVersion" form:"targetVersion"`
	//
	//是否提前暂停
	PreStop string `protobuf:"bytes,3,opt,name=preStop,proto3" json:"preStop" form:"preStop"`
	//
	//是否发布重启
	PostRestart string `protobuf:"bytes,4,opt,name=postRestart,proto3" json:"postRestart" form:"postRestart"`
	//
	//是否自动运行
	AutoStart string `protobuf:"bytes,5,opt,name=autoStart,proto3" json:"autoStart" form:"autoStart"`
	//
	//是否需要用户检查
	UserCheck string `protobuf:"bytes,6,opt,name=userCheck,proto3" json:"userCheck" form:"userCheck"`
	//
	//是否完全更新
	FullUpdate string `protobuf:"bytes,7,opt,name=fullUpdate,proto3" json:"fullUpdate" form:"fullUpdate"`
	//
	//强制更新
	Force string `protobuf:"bytes,8,opt,name=force,proto3" json:"force" form:"force"`
	//
	//强制安装
	ForceInstall string `protobuf:"bytes,9,opt,name=forceInstall,proto3" json:"forceInstall" form:"forceInstall"`
	//
	//包Id
	PackageId string `protobuf:"bytes,10,opt,name=packageId,proto3" json:"packageId" form:"packageId"`
	//
	//包名称
	Name string `protobuf:"bytes,11,opt,name=name,proto3" json:"name" form:"name"`
	//
	//安装路径
	InstallPath string `protobuf:"bytes,12,opt,name=installPath,proto3" json:"installPath" form:"installPath"`
	//
	//版本类型 1 程序包,  2 配置包,  4 文件包
	Type int32 `protobuf:"varint,13,opt,name=type,proto3" json:"type" form:"type"`
	//
	//平台
	Platform             string   `protobuf:"bytes,14,opt,name=platform,proto3" json:"platform" form:"platform"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRequest_PackageList) Reset()         { *m = CreateRequest_PackageList{} }
func (m *CreateRequest_PackageList) String() string { return proto.CompactTextString(m) }
func (*CreateRequest_PackageList) ProtoMessage()    {}
func (*CreateRequest_PackageList) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4d26d5dcda09a78, []int{0, 3}
}
func (m *CreateRequest_PackageList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest_PackageList.Unmarshal(m, b)
}
func (m *CreateRequest_PackageList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest_PackageList.Marshal(b, m, deterministic)
}
func (m *CreateRequest_PackageList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest_PackageList.Merge(m, src)
}
func (m *CreateRequest_PackageList) XXX_Size() int {
	return xxx_messageInfo_CreateRequest_PackageList.Size(m)
}
func (m *CreateRequest_PackageList) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest_PackageList.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest_PackageList proto.InternalMessageInfo

func (m *CreateRequest_PackageList) GetCluster() *cmdb.ClusterInfo {
	if m != nil {
		return m.Cluster
	}
	return nil
}

func (m *CreateRequest_PackageList) GetTargetVersion() string {
	if m != nil {
		return m.TargetVersion
	}
	return ""
}

func (m *CreateRequest_PackageList) GetPreStop() string {
	if m != nil {
		return m.PreStop
	}
	return ""
}

func (m *CreateRequest_PackageList) GetPostRestart() string {
	if m != nil {
		return m.PostRestart
	}
	return ""
}

func (m *CreateRequest_PackageList) GetAutoStart() string {
	if m != nil {
		return m.AutoStart
	}
	return ""
}

func (m *CreateRequest_PackageList) GetUserCheck() string {
	if m != nil {
		return m.UserCheck
	}
	return ""
}

func (m *CreateRequest_PackageList) GetFullUpdate() string {
	if m != nil {
		return m.FullUpdate
	}
	return ""
}

func (m *CreateRequest_PackageList) GetForce() string {
	if m != nil {
		return m.Force
	}
	return ""
}

func (m *CreateRequest_PackageList) GetForceInstall() string {
	if m != nil {
		return m.ForceInstall
	}
	return ""
}

func (m *CreateRequest_PackageList) GetPackageId() string {
	if m != nil {
		return m.PackageId
	}
	return ""
}

func (m *CreateRequest_PackageList) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateRequest_PackageList) GetInstallPath() string {
	if m != nil {
		return m.InstallPath
	}
	return ""
}

func (m *CreateRequest_PackageList) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *CreateRequest_PackageList) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

//
//Create返回
type CreateResponse struct {
	//
	//任务Id
	TaskId               string   `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId" form:"taskId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateResponse) Reset()         { *m = CreateResponse{} }
func (m *CreateResponse) String() string { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()    {}
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4d26d5dcda09a78, []int{1}
}
func (m *CreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponse.Unmarshal(m, b)
}
func (m *CreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponse.Marshal(b, m, deterministic)
}
func (m *CreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponse.Merge(m, src)
}
func (m *CreateResponse) XXX_Size() int {
	return xxx_messageInfo_CreateResponse.Size(m)
}
func (m *CreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponse proto.InternalMessageInfo

func (m *CreateResponse) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

//
//CreateApi返回
type CreateResponseWrapper struct {
	//
	//返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code" form:"code"`
	//
	//返回码解释
	CodeExplain string `protobuf:"bytes,2,opt,name=codeExplain,proto3" json:"codeExplain" form:"codeExplain"`
	//
	//错误详情
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error" form:"error"`
	//
	//返回数据
	Data                 *CreateResponse `protobuf:"bytes,4,opt,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CreateResponseWrapper) Reset()         { *m = CreateResponseWrapper{} }
func (m *CreateResponseWrapper) String() string { return proto.CompactTextString(m) }
func (*CreateResponseWrapper) ProtoMessage()    {}
func (*CreateResponseWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4d26d5dcda09a78, []int{2}
}
func (m *CreateResponseWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponseWrapper.Unmarshal(m, b)
}
func (m *CreateResponseWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponseWrapper.Marshal(b, m, deterministic)
}
func (m *CreateResponseWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponseWrapper.Merge(m, src)
}
func (m *CreateResponseWrapper) XXX_Size() int {
	return xxx_messageInfo_CreateResponseWrapper.Size(m)
}
func (m *CreateResponseWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponseWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponseWrapper proto.InternalMessageInfo

func (m *CreateResponseWrapper) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateResponseWrapper) GetCodeExplain() string {
	if m != nil {
		return m.CodeExplain
	}
	return ""
}

func (m *CreateResponseWrapper) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *CreateResponseWrapper) GetData() *CreateResponse {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateRequest)(nil), "deploy.CreateRequest")
	proto.RegisterType((*CreateRequest_Batches)(nil), "deploy.CreateRequest.Batches")
	proto.RegisterType((*CreateRequest_InstanceInfo)(nil), "deploy.CreateRequest.InstanceInfo")
	proto.RegisterType((*CreateRequest_VersionInfo)(nil), "deploy.CreateRequest.VersionInfo")
	proto.RegisterType((*CreateRequest_VersionInfo_SourceDecode)(nil), "deploy.CreateRequest.VersionInfo.SourceDecode")
	proto.RegisterType((*CreateRequest_PackageList)(nil), "deploy.CreateRequest.PackageList")
	proto.RegisterType((*CreateResponse)(nil), "deploy.CreateResponse")
	proto.RegisterType((*CreateResponseWrapper)(nil), "deploy.CreateResponseWrapper")
}

func init() { proto.RegisterFile("create.proto", fileDescriptor_a4d26d5dcda09a78) }

var fileDescriptor_a4d26d5dcda09a78 = []byte{
	// 1741 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x58, 0xdb, 0x6e, 0x1b, 0xc7,
	0x19, 0x36, 0xad, 0xf3, 0x90, 0xb2, 0xe5, 0x89, 0x0f, 0x0b, 0x21, 0x01, 0xd5, 0xa9, 0x10, 0x90,
	0x96, 0x77, 0x29, 0x51, 0x49, 0x10, 0xcb, 0x81, 0x05, 0xcb, 0x6e, 0x0b, 0xb6, 0x81, 0x91, 0x8e,
	0x95, 0x14, 0x30, 0x49, 0x09, 0x23, 0xee, 0x90, 0x5a, 0x68, 0xb9, 0xb3, 0xdd, 0x1d, 0xca, 0x91,
	0x2d, 0x5f, 0x06, 0x05, 0x7a, 0x99, 0xc7, 0x28, 0xd0, 0x97, 0xe8, 0x65, 0xdf, 0xa0, 0x28, 0xc0,
	0x02, 0xbd, 0xec, 0x25, 0x9f, 0xa0, 0x98, 0x7f, 0x66, 0x77, 0x87, 0xb4, 0xd1, 0x83, 0x51, 0xc3,
	0xe8, 0x95, 0x76, 0xe6, 0xfb, 0xbe, 0x7f, 0x4e, 0xff, 0x89, 0x42, 0x95, 0x5e, 0xc2, 0x99, 0xe4,
	0x5e, 0x9c, 0x08, 0x29, 0xf0, 0xa2, 0xcf, 0xe3, 0x50, 0x5c, 0xac, 0xbb, 0x83, 0x40, 0x9e, 0x8e,
	0x4e, 0xbc, 0x9e, 0x18, 0x36, 0x06, 0x62, 0x20, 0x1a, 0x00, 0x9f, 0x8c, 0xfa, 0x30, 0x82, 0x01,
	0x7c, 0x69, 0xd9, 0xfa, 0x77, 0x03, 0xe1, 0x71, 0x96, 0x5e, 0x88, 0x38, 0xf5, 0x42, 0xd1, 0x63,
	0x61, 0xa3, 0x27, 0x22, 0x99, 0xb0, 0x9e, 0x4c, 0xb5, 0x32, 0xe1, 0xb1, 0x70, 0x87, 0xc2, 0xe7,
	0x61, 0xda, 0x30, 0xc4, 0x06, 0x0c, 0x61, 0x74, 0xdc, 0x0f, 0xc5, 0x8b, 0x86, 0x5e, 0xfa, 0x38,
	0x64, 0x27, 0x3c, 0x34, 0x76, 0xbb, 0xff, 0x43, 0xbb, 0x27, 0x4c, 0xf6, 0x4e, 0x8f, 0x25, 0x4b,
	0x06, 0x5c, 0x1a, 0xf3, 0xbf, 0x7e, 0x77, 0xf3, 0xbd, 0xa1, 0x7f, 0xd2, 0xe8, 0x85, 0xa3, 0x54,
	0xf2, 0xe4, 0x38, 0x88, 0xfa, 0xd9, 0x4d, 0x1c, 0xbe, 0xbb, 0xc9, 0x7e, 0x10, 0xf2, 0x63, 0x05,
	0xa7, 0x81, 0x14, 0xc9, 0x45, 0xc3, 0x0f, 0xfa, 0x7d, 0x63, 0xf5, 0x0b, 0xeb, 0x39, 0x86, 0x2f,
	0x02, 0x79, 0x26, 0x5e, 0x34, 0x06, 0xc2, 0x05, 0xd0, 0x3d, 0x67, 0x61, 0xe0, 0x33, 0x29, 0x92,
	0xb4, 0x91, 0x7f, 0x1a, 0xdd, 0xc7, 0x03, 0x21, 0x06, 0x21, 0x2f, 0x5e, 0x2f, 0x95, 0xc9, 0xa8,
	0x67, 0x8e, 0x4f, 0x7e, 0x20, 0x68, 0xf5, 0x31, 0xbc, 0x3e, 0xe5, 0xbf, 0x1d, 0xf1, 0x54, 0xe2,
	0xcf, 0x11, 0x8a, 0x38, 0xf7, 0x9f, 0x0a, 0x19, 0xf4, 0x2f, 0x9c, 0xd2, 0x46, 0xa9, 0xb6, 0x72,
	0x70, 0x6b, 0x32, 0xae, 0xde, 0xe8, 0x8b, 0x64, 0xb8, 0x47, 0x0a, 0x8c, 0x50, 0x8b, 0x88, 0x1f,
	0xa1, 0x45, 0x78, 0xb5, 0xd4, 0xb9, 0xba, 0x51, 0xaa, 0x95, 0x9b, 0xb7, 0xbd, 0xfc, 0xf6, 0xbd,
	0x27, 0x70, 0xfb, 0x5f, 0x2b, 0xf8, 0xe0, 0xc6, 0x64, 0x5c, 0x5d, 0xd5, 0xa6, 0x34, 0x9f, 0x50,
	0x23, 0xc4, 0x7b, 0x68, 0x81, 0xc5, 0x71, 0xcb, 0x77, 0xe6, 0x60, 0xd1, 0xcd, 0xc9, 0xb8, 0x5a,
	0xd1, 0x4c, 0x98, 0x26, 0x7f, 0xff, 0x5b, 0x75, 0x0d, 0x5d, 0x3b, 0x6a, 0x6f, 0xbb, 0xf7, 0x99,
	0xfb, 0xb2, 0xfb, 0x6a, 0x67, 0xf7, 0xf5, 0x26, 0xd5, 0x12, 0x7c, 0x0f, 0x2d, 0xb1, 0x38, 0x7e,
	0xca, 0x86, 0xdc, 0x99, 0x07, 0x35, 0x9e, 0x8c, 0xab, 0xd7, 0x72, 0xb5, 0x02, 0x08, 0xcd, 0x28,
	0xf8, 0xf7, 0x25, 0xb4, 0x62, 0x1e, 0xae, 0xe5, 0x3b, 0x0b, 0x20, 0x08, 0x27, 0xe3, 0xea, 0x9a,
	0x16, 0xe4, 0x90, 0x5a, 0xf2, 0x10, 0xd1, 0xa3, 0xf6, 0x3e, 0x73, 0x5f, 0x3e, 0x72, 0x9f, 0x6f,
	0xbb, 0xf7, 0xbb, 0xaf, 0xbe, 0x7c, 0xed, 0x4e, 0x8d, 0x3f, 0xfb, 0x2f, 0xc7, 0x3b, 0xcd, 0xd7,
	0x9b, 0xb4, 0x58, 0x1e, 0x7f, 0x89, 0xca, 0x66, 0x70, 0x78, 0x11, 0x73, 0x67, 0x11, 0x76, 0x73,
	0x7b, 0x32, 0xae, 0xe2, 0xa9, 0xdd, 0x28, 0x90, 0x50, 0x9b, 0x8a, 0x1b, 0x68, 0x19, 0x3c, 0xfa,
	0xe9, 0x68, 0xe8, 0x2c, 0x6d, 0x94, 0x6a, 0x0b, 0x07, 0x1f, 0x4d, 0xc6, 0xd5, 0xeb, 0x5a, 0x96,
	0x21, 0x84, 0xe6, 0x24, 0xfc, 0x10, 0xad, 0xc2, 0x77, 0x2b, 0x92, 0x3c, 0x39, 0x67, 0xa1, 0xb3,
	0x0c, 0x2a, 0x67, 0x32, 0xae, 0xde, 0xb4, 0x54, 0x19, 0x4c, 0xe8, 0x34, 0x1d, 0xff, 0x0a, 0x2d,
	0xc1, 0x04, 0x4f, 0x9d, 0x95, 0x8d, 0xb9, 0x5a, 0xb9, 0xf9, 0x89, 0xa7, 0x23, 0xcb, 0x9b, 0xf2,
	0x21, 0xef, 0x40, 0x93, 0xec, 0x47, 0x30, 0x3a, 0x42, 0x33, 0x0b, 0xca, 0xd1, 0xfa, 0x2c, 0x08,
	0xb9, 0xff, 0x4c, 0x8a, 0xd8, 0x41, 0xb3, 0x8e, 0x56, 0x60, 0x84, 0x5a, 0x44, 0xfc, 0xbb, 0x12,
	0x5a, 0xd6, 0x11, 0xdc, 0xf2, 0x9d, 0x32, 0xa8, 0xce, 0x8a, 0x53, 0x67, 0xc8, 0xfb, 0x7b, 0xb9,
	0x7c, 0x71, 0x75, 0x00, 0xfd, 0x0d, 0x6e, 0x57, 0x99, 0x3d, 0x40, 0x81, 0x11, 0x6a, 0x11, 0x71,
	0x0b, 0xa1, 0x20, 0x4a, 0x25, 0x8b, 0x7a, 0xbc, 0xe5, 0x3b, 0xab, 0x20, 0xab, 0x17, 0xb2, 0x02,
	0x7b, 0xbb, 0xc3, 0x5b, 0x62, 0xbc, 0x8f, 0x96, 0x8c, 0x3f, 0x38, 0xd7, 0x20, 0xea, 0x6e, 0x78,
	0x2a, 0x29, 0x79, 0x8f, 0x8d, 0x73, 0x45, 0x7d, 0x61, 0xbf, 0x81, 0xe1, 0x12, 0x9a, 0xa9, 0xf0,
	0x31, 0xaa, 0xe4, 0xe6, 0xa2, 0xbe, 0x70, 0xae, 0xc3, 0xab, 0x92, 0xb7, 0xbf, 0x6a, 0xcb, 0x62,
	0x1e, 0xdc, 0x99, 0x8c, 0xab, 0x1f, 0xcd, 0xec, 0x38, 0xea, 0x0b, 0x42, 0xa7, 0x0c, 0xe2, 0x36,
	0x2a, 0x9f, 0xf3, 0x24, 0x0d, 0x44, 0x04, 0xf6, 0xd7, 0x60, 0x97, 0x3f, 0x79, 0xbb, 0xfd, 0xef,
	0x0a, 0xa2, 0xed, 0xff, 0x96, 0x9e, 0x50, 0xdb, 0x9a, 0x32, 0x1e, 0xb3, 0xde, 0x19, 0x1b, 0xf0,
	0xaf, 0x83, 0x54, 0x3a, 0x37, 0xfe, 0x95, 0xf1, 0x6f, 0x0a, 0xa2, 0x6d, 0xdc, 0xd2, 0x13, 0x6a,
	0x5b, 0x5b, 0xff, 0x16, 0x2d, 0x19, 0x37, 0xc6, 0xbf, 0x44, 0x4b, 0xfa, 0xfd, 0x52, 0xa7, 0x04,
	0x17, 0xf4, 0xf1, 0x1b, 0xc9, 0x0d, 0xa8, 0x87, 0x40, 0xb2, 0x6f, 0xdc, 0xc8, 0x08, 0xcd, 0x0c,
	0xac, 0xff, 0x63, 0x0e, 0x55, 0xec, 0x8b, 0x54, 0xe1, 0x6f, 0xce, 0x04, 0x6e, 0x54, 0x9a, 0x0d,
	0x7f, 0x0b, 0x2c, 0x8e, 0x9f, 0x67, 0x31, 0xb3, 0xe3, 0x96, 0x0f, 0x69, 0x77, 0x2a, 0x8b, 0xe5,
	0xd0, 0x7b, 0xcc, 0x62, 0xf9, 0x1a, 0xf8, 0x87, 0x12, 0x2a, 0xc3, 0xcb, 0x87, 0xe1, 0x37, 0x4c,
	0x9e, 0x9a, 0x1c, 0xde, 0x2b, 0xce, 0x61, 0x81, 0x6a, 0x43, 0x2d, 0xf4, 0x8b, 0xa3, 0x5a, 0xad,
	0xd3, 0x68, 0x1f, 0x75, 0x1a, 0x7b, 0x9d, 0xbb, 0x9d, 0x7d, 0x42, 0xbe, 0x7a, 0xd8, 0xb9, 0xec,
	0x24, 0x9d, 0xa8, 0xbb, 0x55, 0xdf, 0xaa, 0x5f, 0xd6, 0x3a, 0x8d, 0xfa, 0x65, 0x5b, 0xaf, 0xd8,
	0xdd, 0xab, 0x75, 0x3a, 0xed, 0xa3, 0x4e, 0xe7, 0x4d, 0xe6, 0xdd, 0x4d, 0x6a, 0xaf, 0x0b, 0x97,
	0x92, 0xf9, 0x88, 0x6f, 0x6a, 0x81, 0x75, 0x29, 0x39, 0xf4, 0x1e, 0x2f, 0x25, 0x5f, 0x63, 0xfd,
	0xc7, 0x0a, 0x2a, 0x5b, 0x5e, 0x8d, 0xcf, 0x50, 0x25, 0x15, 0xa3, 0xa4, 0xc7, 0x9f, 0xf0, 0x9e,
	0xf0, 0xf5, 0x63, 0x97, 0x9b, 0xde, 0xbf, 0x0d, 0x07, 0xef, 0x99, 0xa5, 0xb2, 0x43, 0xcf, 0xb6,
	0x46, 0xe8, 0x94, 0x71, 0x5c, 0x47, 0x8b, 0x7a, 0x6c, 0x5c, 0xc3, 0xaa, 0xbc, 0x7a, 0x9e, 0x50,
	0x43, 0xc0, 0x7b, 0x68, 0x5e, 0x75, 0x1a, 0xce, 0x1c, 0x78, 0xf7, 0x2d, 0x6f, 0xa6, 0x0d, 0xf1,
	0x9e, 0x04, 0xfd, 0xfe, 0xc1, 0xf5, 0xc9, 0xb8, 0x5a, 0xd6, 0x7a, 0x45, 0x26, 0x14, 0x34, 0x78,
	0x0b, 0xcd, 0x47, 0x45, 0xd9, 0xbd, 0x53, 0x90, 0xd4, 0xac, 0xba, 0xe5, 0xf9, 0xf8, 0xca, 0xf7,
	0x1e, 0x05, 0xd2, 0xcc, 0xeb, 0x2c, 0x7c, 0xd0, 0xd7, 0x99, 0x89, 0x9f, 0xc5, 0x0f, 0x1b, 0x3f,
	0x9f, 0xa2, 0x39, 0x91, 0x0c, 0x4c, 0x19, 0xbf, 0x39, 0x19, 0x57, 0x91, 0xde, 0x85, 0x48, 0x06,
	0x6a, 0xfd, 0xab, 0x6b, 0x57, 0xa8, 0x22, 0xe0, 0x9f, 0xa3, 0x25, 0xe8, 0xd6, 0x45, 0x02, 0xc5,
	0x7b, 0xe5, 0xe0, 0x9e, 0x95, 0xdf, 0x35, 0xa0, 0xf8, 0xb7, 0xd1, 0xcd, 0xa3, 0xf6, 0x23, 0xf7,
	0x39, 0x73, 0x5f, 0x1e, 0xbb, 0xdd, 0xce, 0x8b, 0x57, 0xbb, 0xf7, 0xbe, 0xf8, 0xec, 0xf5, 0x26,
	0xcd, 0xc4, 0xb8, 0x8e, 0xe6, 0x87, 0x7c, 0x28, 0x9c, 0x95, 0xbc, 0x6c, 0x99, 0x67, 0x53, 0xb3,
	0xb0, 0x62, 0x7c, 0x85, 0x02, 0x05, 0xff, 0xa5, 0x84, 0x16, 0x7a, 0x32, 0x18, 0x72, 0x53, 0xa4,
	0xff, 0x54, 0x2a, 0x3a, 0x33, 0x98, 0x57, 0xf4, 0x3f, 0x96, 0xd0, 0x1f, 0x4a, 0x47, 0xb5, 0xda,
	0xfe, 0x5e, 0x7b, 0xc7, 0xbd, 0xdf, 0x55, 0x35, 0xab, 0x7b, 0xb7, 0xbe, 0xdf, 0x36, 0x87, 0xaf,
	0xbb, 0xb5, 0x9d, 0xf6, 0xb6, 0xdb, 0xec, 0x5e, 0x6e, 0x03, 0x5e, 0x77, 0x6b, 0xbb, 0xed, 0x6d,
	0x77, 0x27, 0x1b, 0x5f, 0xb6, 0x77, 0xdc, 0xa6, 0x56, 0xd5, 0xdb, 0x87, 0x1b, 0xdd, 0x5a, 0xb3,
	0xbd, 0xed, 0xee, 0x76, 0x2f, 0x81, 0xa3, 0xa7, 0xf7, 0x6a, 0xed, 0x6d, 0xf7, 0xf3, 0x6c, 0x50,
	0x7c, 0xd7, 0x3a, 0x1e, 0xfc, 0xdd, 0xaa, 0xef, 0xd7, 0x9e, 0x5f, 0xb6, 0xb7, 0xdc, 0x6e, 0x6d,
	0x7f, 0xef, 0x2d, 0x72, 0x4b, 0xbd, 0xbf, 0x49, 0xf5, 0x89, 0xe0, 0x6c, 0x43, 0x38, 0x5b, 0xf9,
	0x8d, 0xb3, 0x0d, 0xff, 0x6f, 0xcf, 0x06, 0x3b, 0xc7, 0x5f, 0xa1, 0xf9, 0x34, 0x18, 0x44, 0xd0,
	0x99, 0x94, 0x9b, 0x77, 0x3c, 0xfd, 0x43, 0xc0, 0xcb, 0x7e, 0x08, 0x78, 0xcf, 0xe0, 0x87, 0x80,
	0x1d, 0xd7, 0x8a, 0x4e, 0x28, 0xa8, 0x54, 0x77, 0xa3, 0xb3, 0x03, 0x74, 0xa5, 0xab, 0xb3, 0xdd,
	0x4d, 0x81, 0x11, 0x6a, 0x11, 0xf1, 0x4f, 0xd1, 0x7c, 0x4f, 0x44, 0x7d, 0xe8, 0x47, 0x56, 0x6c,
	0xdb, 0x6a, 0x96, 0x50, 0x00, 0xb1, 0x87, 0x96, 0x79, 0x74, 0x7e, 0x2c, 0x95, 0xe5, 0xeb, 0xb3,
	0x8d, 0x6b, 0x86, 0x10, 0xba, 0xc4, 0xa3, 0x73, 0x65, 0x74, 0xfd, 0xcf, 0x25, 0x54, 0xb1, 0x53,
	0xa0, 0x6a, 0xf7, 0x79, 0x94, 0x5a, 0x05, 0xd3, 0xaa, 0xb9, 0x06, 0x00, 0x39, 0x7c, 0xa9, 0x3d,
	0x9d, 0x8a, 0x54, 0x9a, 0x3c, 0x68, 0xed, 0x49, 0xcd, 0x12, 0x0a, 0xa0, 0x22, 0xc1, 0x7e, 0xe6,
	0x66, 0x49, 0x7a, 0x2f, 0x00, 0xe2, 0x4f, 0xd0, 0xd5, 0x20, 0x36, 0xa9, 0x6e, 0x75, 0x32, 0xae,
	0xae, 0x98, 0xda, 0x16, 0x13, 0x7a, 0x35, 0x88, 0x95, 0x8d, 0x58, 0x24, 0x12, 0x12, 0xdb, 0x82,
	0x6d, 0x43, 0xcd, 0x12, 0x0a, 0xe0, 0xfa, 0x8f, 0x4b, 0xa8, 0x6c, 0x75, 0x23, 0x76, 0x13, 0x57,
	0x7a, 0xa7, 0x26, 0xee, 0x21, 0x5a, 0xd5, 0xdd, 0x85, 0xa9, 0x18, 0xe6, 0x9c, 0x56, 0x57, 0x3f,
	0x05, 0x13, 0x3a, 0x4d, 0x57, 0x97, 0x19, 0x27, 0x1c, 0xba, 0xf0, 0xb9, 0xd9, 0xcb, 0x34, 0x00,
	0xa1, 0x19, 0x45, 0xf5, 0x2b, 0xb1, 0x48, 0x25, 0xe5, 0xa9, 0x64, 0x89, 0x34, 0x77, 0x61, 0x77,
	0x54, 0x05, 0xa8, 0x3a, 0xaa, 0x62, 0x84, 0x9b, 0x68, 0x85, 0x8d, 0xa4, 0x78, 0x06, 0x3a, 0x9d,
	0xfb, 0x6f, 0x16, 0xe9, 0x36, 0x87, 0x08, 0x2d, 0x68, 0x4a, 0x33, 0x4a, 0x79, 0xf2, 0xf8, 0x94,
	0xf7, 0xce, 0x4c, 0x8a, 0xb6, 0x34, 0x39, 0x44, 0x68, 0x41, 0x83, 0x1f, 0x16, 0xa3, 0x30, 0xfc,
	0x36, 0xf6, 0x99, 0xe4, 0x90, 0x51, 0xa7, 0x7f, 0x58, 0xe4, 0x98, 0xfa, 0x61, 0x91, 0x0f, 0xf0,
	0xa7, 0x68, 0xa1, 0x2f, 0x54, 0xb9, 0xd4, 0x79, 0x75, 0xad, 0x48, 0x04, 0x30, 0x4d, 0xa8, 0x86,
	0xf1, 0x03, 0x54, 0x81, 0x8f, 0x96, 0xee, 0x3a, 0x4c, 0x06, 0xb5, 0x8a, 0xb2, 0x8d, 0x12, 0x3a,
	0x45, 0x9e, 0xa9, 0x39, 0xe8, 0xc3, 0xd6, 0x9c, 0xac, 0x74, 0x97, 0xff, 0x93, 0xd2, 0x3d, 0xdb,
	0xe0, 0x55, 0x3e, 0x50, 0x83, 0x97, 0xc5, 0xe9, 0xea, 0x6c, 0x8c, 0xd9, 0x71, 0xda, 0x40, 0xcb,
	0x71, 0xc8, 0xa4, 0x02, 0x4c, 0x26, 0xb2, 0x12, 0x4c, 0x86, 0x10, 0x9a, 0x93, 0xc8, 0x03, 0x74,
	0x2d, 0xeb, 0xbe, 0xd2, 0x58, 0x44, 0x29, 0xb4, 0x4f, 0x92, 0xa5, 0x67, 0x2d, 0xdf, 0x64, 0x18,
	0xab, 0x7d, 0xd2, 0xf3, 0x84, 0x1a, 0x02, 0xf9, 0x6b, 0x09, 0xdd, 0x9a, 0x56, 0xff, 0x26, 0x61,
	0x71, 0xcc, 0x13, 0x9d, 0x0d, 0x4d, 0xa3, 0xb7, 0x30, 0x9d, 0x0d, 0x55, 0xc3, 0x06, 0x20, 0xfc,
	0x03, 0x40, 0xf8, 0xfc, 0x67, 0xdf, 0xc7, 0x21, 0x0b, 0xb2, 0xe8, 0xb5, 0xff, 0x01, 0x50, 0x80,
	0x84, 0xda, 0x54, 0xe5, 0xb2, 0x3c, 0x49, 0x44, 0x62, 0xe2, 0xd6, 0x72, 0x59, 0x98, 0x26, 0x54,
	0xc3, 0xf8, 0x01, 0x9a, 0xf7, 0x99, 0x64, 0x10, 0xac, 0xe5, 0xe6, 0xed, 0xd9, 0x7e, 0x53, 0xef,
	0x79, 0xaa, 0xc1, 0x63, 0x92, 0xa9, 0x06, 0x8f, 0x49, 0x76, 0xb2, 0x08, 0x05, 0x63, 0xf7, 0x9f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0xfe, 0x04, 0xf2, 0xb1, 0x26, 0x14, 0x00, 0x00,
}
