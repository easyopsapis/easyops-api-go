// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: giraffe_service.proto

package cmdb_approve

import (
	context "context"
	fmt "fmt"
	giraffe_micro "github.com/easyops-cn/giraffe-micro"
	go_proto_giraffe "github.com/easyops-cn/go-proto-giraffe"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	notify "github.com/easyopsapis/easyops-api-go/protorepo-models/easyops/model/notify"
	io "io"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ = io.EOF
var _ context.Context
var _ giraffe_micro.Client
var _ go_proto_giraffe.Contract

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = giraffe_micro.SupportPackageIsVersion4 // please upgrade the giraffe_micro package

// Client is the client API for cmdb_approve service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type Client interface {
	CreateInstanceApplyPermission(ctx context.Context, in *notify.OperationLogWithMeta) (*types.Empty, error)
	GetApproveCount(ctx context.Context, in *GetApproveCountRequest) (*GetApproveCountResponse, error)
	GetApproveObjectList(ctx context.Context, in *GetApproveObjectListRequest) (*GetApproveObjectListResponse, error)
	GetHistoryApproverList(ctx context.Context, in *GetHistoryApproverListRequest) (*GetHistoryApproverListResponse, error)
	GetHistoryObjectList(ctx context.Context, in *GetHistoryObjectListRequest) (*GetHistoryObjectListResponse, error)
	InstanceRelationEdit(ctx context.Context, in *InstanceRelationEditRequest) (*types.Empty, error)
	RelationDiscoveryV2(ctx context.Context, in *RelationDiscoveryV2Request) (*RelationDiscoveryV2Response, error)
}

type client struct {
	c giraffe_micro.Client
}

func NewClient(c giraffe_micro.Client) Client {
	return &client{
		c: c,
	}
}

func (c *client) CreateInstanceApplyPermission(ctx context.Context, in *notify.OperationLogWithMeta) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.c.Invoke(ctx, _CreateInstanceApplyPermissionMethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) GetApproveCount(ctx context.Context, in *GetApproveCountRequest) (*GetApproveCountResponse, error) {
	out := new(GetApproveCountResponse)
	err := c.c.Invoke(ctx, _GetApproveCountMethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) GetApproveObjectList(ctx context.Context, in *GetApproveObjectListRequest) (*GetApproveObjectListResponse, error) {
	out := new(GetApproveObjectListResponse)
	err := c.c.Invoke(ctx, _GetApproveObjectListMethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) GetHistoryApproverList(ctx context.Context, in *GetHistoryApproverListRequest) (*GetHistoryApproverListResponse, error) {
	out := new(GetHistoryApproverListResponse)
	err := c.c.Invoke(ctx, _GetHistoryApproverListMethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) GetHistoryObjectList(ctx context.Context, in *GetHistoryObjectListRequest) (*GetHistoryObjectListResponse, error) {
	out := new(GetHistoryObjectListResponse)
	err := c.c.Invoke(ctx, _GetHistoryObjectListMethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) InstanceRelationEdit(ctx context.Context, in *InstanceRelationEditRequest) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.c.Invoke(ctx, _InstanceRelationEditMethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) RelationDiscoveryV2(ctx context.Context, in *RelationDiscoveryV2Request) (*RelationDiscoveryV2Response, error) {
	out := new(RelationDiscoveryV2Response)
	err := c.c.Invoke(ctx, _RelationDiscoveryV2MethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Service is the server API for cmdb_approve service.
type Service interface {
	CreateInstanceApplyPermission(context.Context, *notify.OperationLogWithMeta) (*types.Empty, error)
	GetApproveCount(context.Context, *GetApproveCountRequest) (*GetApproveCountResponse, error)
	GetApproveObjectList(context.Context, *GetApproveObjectListRequest) (*GetApproveObjectListResponse, error)
	GetHistoryApproverList(context.Context, *GetHistoryApproverListRequest) (*GetHistoryApproverListResponse, error)
	GetHistoryObjectList(context.Context, *GetHistoryObjectListRequest) (*GetHistoryObjectListResponse, error)
	InstanceRelationEdit(context.Context, *InstanceRelationEditRequest) (*types.Empty, error)
	RelationDiscoveryV2(context.Context, *RelationDiscoveryV2Request) (*RelationDiscoveryV2Response, error)
}

func _CreateInstanceApplyPermissionEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.CreateInstanceApplyPermission(ctx, req.(*notify.OperationLogWithMeta))
	}
}

func _GetApproveCountEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.GetApproveCount(ctx, req.(*GetApproveCountRequest))
	}
}

func _GetApproveObjectListEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.GetApproveObjectList(ctx, req.(*GetApproveObjectListRequest))
	}
}

func _GetHistoryApproverListEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.GetHistoryApproverList(ctx, req.(*GetHistoryApproverListRequest))
	}
}

func _GetHistoryObjectListEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.GetHistoryObjectList(ctx, req.(*GetHistoryObjectListRequest))
	}
}

func _InstanceRelationEditEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.InstanceRelationEdit(ctx, req.(*InstanceRelationEditRequest))
	}
}

func _RelationDiscoveryV2Endpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.RelationDiscoveryV2(ctx, req.(*RelationDiscoveryV2Request))
	}
}

func RegisterService(s giraffe_micro.Server, srv Service) {
	s.RegisterUnaryEndpoint(_CreateInstanceApplyPermissionMethodDesc, _CreateInstanceApplyPermissionEndpoint(srv))
	s.RegisterUnaryEndpoint(_GetApproveCountMethodDesc, _GetApproveCountEndpoint(srv))
	s.RegisterUnaryEndpoint(_GetApproveObjectListMethodDesc, _GetApproveObjectListEndpoint(srv))
	s.RegisterUnaryEndpoint(_GetHistoryApproverListMethodDesc, _GetHistoryApproverListEndpoint(srv))
	s.RegisterUnaryEndpoint(_GetHistoryObjectListMethodDesc, _GetHistoryObjectListEndpoint(srv))
	s.RegisterUnaryEndpoint(_InstanceRelationEditMethodDesc, _InstanceRelationEditEndpoint(srv))
	s.RegisterUnaryEndpoint(_RelationDiscoveryV2MethodDesc, _RelationDiscoveryV2Endpoint(srv))
}

// Method Description
var _CreateInstanceApplyPermissionMethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.resource_manage.cmdb_approve.CreateInstanceApplyPermission",
		Version: "1.0",
	},
	ServiceName:  "cmdb_approve.rpc",
	MethodName:   "CreateInstanceApplyPermission",
	RequestType:  (*notify.OperationLogWithMeta)(nil),
	ResponseType: (*types.Empty)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Post{
			Post: "/instance/apply/permission/add",
		},
		Body:         "",
		ResponseBody: "data",
	},
}

var _GetApproveCountMethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.resource_manage.cmdb_approve.GetApproveCount",
		Version: "1.0",
	},
	ServiceName:  "cmdb_approve.rpc",
	MethodName:   "GetApproveCount",
	RequestType:  (*GetApproveCountRequest)(nil),
	ResponseType: (*GetApproveCountResponse)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Get{
			Get: "/api/v1/approve/count",
		},
		Body:         "",
		ResponseBody: "data",
	},
}

var _GetApproveObjectListMethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.resource_manage.cmdb_approve.GetApproveObjectList",
		Version: "1.0",
	},
	ServiceName:  "cmdb_approve.rpc",
	MethodName:   "GetApproveObjectList",
	RequestType:  (*GetApproveObjectListRequest)(nil),
	ResponseType: (*GetApproveObjectListResponse)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Post{
			Post: "/api/v1/approve/object/list",
		},
		Body:         "",
		ResponseBody: "data",
	},
}

var _GetHistoryApproverListMethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.resource_manage.cmdb_approve.GetHistoryApproverList",
		Version: "1.0",
	},
	ServiceName:  "cmdb_approve.rpc",
	MethodName:   "GetHistoryApproverList",
	RequestType:  (*GetHistoryApproverListRequest)(nil),
	ResponseType: (*GetHistoryApproverListResponse)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Post{
			Post: "/api/v1/history/approver/list",
		},
		Body:         "",
		ResponseBody: "data",
	},
}

var _GetHistoryObjectListMethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.resource_manage.cmdb_approve.GetHistoryObjectList",
		Version: "1.0",
	},
	ServiceName:  "cmdb_approve.rpc",
	MethodName:   "GetHistoryObjectList",
	RequestType:  (*GetHistoryObjectListRequest)(nil),
	ResponseType: (*GetHistoryObjectListResponse)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Post{
			Post: "/api/v1/history/object/list",
		},
		Body:         "",
		ResponseBody: "data",
	},
}

var _InstanceRelationEditMethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.resource_manage.cmdb_approve.InstanceRelationEdit",
		Version: "1.0",
	},
	ServiceName:  "cmdb_approve.rpc",
	MethodName:   "InstanceRelationEdit",
	RequestType:  (*InstanceRelationEditRequest)(nil),
	ResponseType: (*types.Empty)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Post{
			Post: "/object/:object_id/relation/:relation_side_id/:operation",
		},
		Body:         "",
		ResponseBody: "data",
	},
}

var _RelationDiscoveryV2MethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.resource_manage.cmdb_approve.RelationDiscoveryV2",
		Version: "1.0",
	},
	ServiceName:  "cmdb_approve.rpc",
	MethodName:   "RelationDiscoveryV2",
	RequestType:  (*RelationDiscoveryV2Request)(nil),
	ResponseType: (*RelationDiscoveryV2Response)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Post{
			Post: "/v2/object_relation/:relationId/_autodiscovery/multi",
		},
		Body:         "",
		ResponseBody: "",
	},
}
