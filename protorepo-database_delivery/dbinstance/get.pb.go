// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: get.proto

package dbinstance

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//GetDBInstance请求
type GetDBInstanceRequest struct {
	//
	//数据库服务ID
	DbServiceId string `protobuf:"bytes,1,opt,name=dbServiceId,proto3" json:"dbServiceId" form:"dbServiceId"`
	//
	//数据库实例ID
	DbInstanceId         string   `protobuf:"bytes,2,opt,name=dbInstanceId,proto3" json:"dbInstanceId" form:"dbInstanceId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDBInstanceRequest) Reset()         { *m = GetDBInstanceRequest{} }
func (m *GetDBInstanceRequest) String() string { return proto.CompactTextString(m) }
func (*GetDBInstanceRequest) ProtoMessage()    {}
func (*GetDBInstanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_21b2a6be0e6d8388, []int{0}
}
func (m *GetDBInstanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDBInstanceRequest.Unmarshal(m, b)
}
func (m *GetDBInstanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDBInstanceRequest.Marshal(b, m, deterministic)
}
func (m *GetDBInstanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDBInstanceRequest.Merge(m, src)
}
func (m *GetDBInstanceRequest) XXX_Size() int {
	return xxx_messageInfo_GetDBInstanceRequest.Size(m)
}
func (m *GetDBInstanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDBInstanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDBInstanceRequest proto.InternalMessageInfo

func (m *GetDBInstanceRequest) GetDbServiceId() string {
	if m != nil {
		return m.DbServiceId
	}
	return ""
}

func (m *GetDBInstanceRequest) GetDbInstanceId() string {
	if m != nil {
		return m.DbInstanceId
	}
	return ""
}

//
//GetDBInstance返回
type GetDBInstanceResponse struct {
	//
	//数据库服务关系
	DbService []*GetDBInstanceResponse_DbService `protobuf:"bytes,1,rep,name=dbService,proto3" json:"dbService" form:"dbService"`
	//
	//客户端关系
	Client *GetDBInstanceResponse_Client `protobuf:"bytes,2,opt,name=client,proto3" json:"client" form:"client"`
	//
	//数据库实例ID,自动生成
	InstanceId string `protobuf:"bytes,3,opt,name=instanceId,proto3" json:"instanceId" form:"instanceId"`
	//
	//名称
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name" form:"name"`
	//
	//数据库名/服务名
	DbName string `protobuf:"bytes,5,opt,name=dbName,proto3" json:"dbName" form:"dbName"`
	//
	//ip
	Ip string `protobuf:"bytes,6,opt,name=ip,proto3" json:"ip" form:"ip"`
	//
	//端口
	Port int32 `protobuf:"varint,7,opt,name=port,proto3" json:"port" form:"port"`
	//
	//连接串
	ConnURL string `protobuf:"bytes,8,opt,name=connURL,proto3" json:"connURL" form:"connURL"`
	//
	//默认用户
	UserName string `protobuf:"bytes,9,opt,name=userName,proto3" json:"userName" form:"userName"`
	//
	//默认密码
	Password string `protobuf:"bytes,10,opt,name=password,proto3" json:"password" form:"password"`
	//
	//是否有效
	IsValid              string   `protobuf:"bytes,11,opt,name=isValid,proto3" json:"isValid" form:"isValid"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDBInstanceResponse) Reset()         { *m = GetDBInstanceResponse{} }
func (m *GetDBInstanceResponse) String() string { return proto.CompactTextString(m) }
func (*GetDBInstanceResponse) ProtoMessage()    {}
func (*GetDBInstanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_21b2a6be0e6d8388, []int{1}
}
func (m *GetDBInstanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDBInstanceResponse.Unmarshal(m, b)
}
func (m *GetDBInstanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDBInstanceResponse.Marshal(b, m, deterministic)
}
func (m *GetDBInstanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDBInstanceResponse.Merge(m, src)
}
func (m *GetDBInstanceResponse) XXX_Size() int {
	return xxx_messageInfo_GetDBInstanceResponse.Size(m)
}
func (m *GetDBInstanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDBInstanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDBInstanceResponse proto.InternalMessageInfo

func (m *GetDBInstanceResponse) GetDbService() []*GetDBInstanceResponse_DbService {
	if m != nil {
		return m.DbService
	}
	return nil
}

func (m *GetDBInstanceResponse) GetClient() *GetDBInstanceResponse_Client {
	if m != nil {
		return m.Client
	}
	return nil
}

func (m *GetDBInstanceResponse) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *GetDBInstanceResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetDBInstanceResponse) GetDbName() string {
	if m != nil {
		return m.DbName
	}
	return ""
}

func (m *GetDBInstanceResponse) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *GetDBInstanceResponse) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *GetDBInstanceResponse) GetConnURL() string {
	if m != nil {
		return m.ConnURL
	}
	return ""
}

func (m *GetDBInstanceResponse) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *GetDBInstanceResponse) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *GetDBInstanceResponse) GetIsValid() string {
	if m != nil {
		return m.IsValid
	}
	return ""
}

type GetDBInstanceResponse_DbService struct {
	//
	//数据库服务ID
	InstanceId string `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId" form:"instanceId"`
	//
	//名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name" form:"name"`
	//
	//数据库类型
	DbType string `protobuf:"bytes,3,opt,name=dbType,proto3" json:"dbType" form:"dbType"`
	//
	//描述
	Desc                 string   `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc" form:"desc"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDBInstanceResponse_DbService) Reset()         { *m = GetDBInstanceResponse_DbService{} }
func (m *GetDBInstanceResponse_DbService) String() string { return proto.CompactTextString(m) }
func (*GetDBInstanceResponse_DbService) ProtoMessage()    {}
func (*GetDBInstanceResponse_DbService) Descriptor() ([]byte, []int) {
	return fileDescriptor_21b2a6be0e6d8388, []int{1, 0}
}
func (m *GetDBInstanceResponse_DbService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDBInstanceResponse_DbService.Unmarshal(m, b)
}
func (m *GetDBInstanceResponse_DbService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDBInstanceResponse_DbService.Marshal(b, m, deterministic)
}
func (m *GetDBInstanceResponse_DbService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDBInstanceResponse_DbService.Merge(m, src)
}
func (m *GetDBInstanceResponse_DbService) XXX_Size() int {
	return xxx_messageInfo_GetDBInstanceResponse_DbService.Size(m)
}
func (m *GetDBInstanceResponse_DbService) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDBInstanceResponse_DbService.DiscardUnknown(m)
}

var xxx_messageInfo_GetDBInstanceResponse_DbService proto.InternalMessageInfo

func (m *GetDBInstanceResponse_DbService) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *GetDBInstanceResponse_DbService) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetDBInstanceResponse_DbService) GetDbType() string {
	if m != nil {
		return m.DbType
	}
	return ""
}

func (m *GetDBInstanceResponse_DbService) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

type GetDBInstanceResponse_Client struct {
	//
	//客户端ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" form:"id"`
	//
	//客户端IP
	Ip                   string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip" form:"ip"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDBInstanceResponse_Client) Reset()         { *m = GetDBInstanceResponse_Client{} }
func (m *GetDBInstanceResponse_Client) String() string { return proto.CompactTextString(m) }
func (*GetDBInstanceResponse_Client) ProtoMessage()    {}
func (*GetDBInstanceResponse_Client) Descriptor() ([]byte, []int) {
	return fileDescriptor_21b2a6be0e6d8388, []int{1, 1}
}
func (m *GetDBInstanceResponse_Client) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDBInstanceResponse_Client.Unmarshal(m, b)
}
func (m *GetDBInstanceResponse_Client) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDBInstanceResponse_Client.Marshal(b, m, deterministic)
}
func (m *GetDBInstanceResponse_Client) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDBInstanceResponse_Client.Merge(m, src)
}
func (m *GetDBInstanceResponse_Client) XXX_Size() int {
	return xxx_messageInfo_GetDBInstanceResponse_Client.Size(m)
}
func (m *GetDBInstanceResponse_Client) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDBInstanceResponse_Client.DiscardUnknown(m)
}

var xxx_messageInfo_GetDBInstanceResponse_Client proto.InternalMessageInfo

func (m *GetDBInstanceResponse_Client) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetDBInstanceResponse_Client) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

//
//GetDBInstanceApi返回
type GetDBInstanceResponseWrapper struct {
	//
	//返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code" form:"code"`
	//
	//返回码解释
	CodeExplain string `protobuf:"bytes,2,opt,name=codeExplain,proto3" json:"codeExplain" form:"codeExplain"`
	//
	//错误详情
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error" form:"error"`
	//
	//返回数据
	Data                 *GetDBInstanceResponse `protobuf:"bytes,4,opt,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetDBInstanceResponseWrapper) Reset()         { *m = GetDBInstanceResponseWrapper{} }
func (m *GetDBInstanceResponseWrapper) String() string { return proto.CompactTextString(m) }
func (*GetDBInstanceResponseWrapper) ProtoMessage()    {}
func (*GetDBInstanceResponseWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_21b2a6be0e6d8388, []int{2}
}
func (m *GetDBInstanceResponseWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDBInstanceResponseWrapper.Unmarshal(m, b)
}
func (m *GetDBInstanceResponseWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDBInstanceResponseWrapper.Marshal(b, m, deterministic)
}
func (m *GetDBInstanceResponseWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDBInstanceResponseWrapper.Merge(m, src)
}
func (m *GetDBInstanceResponseWrapper) XXX_Size() int {
	return xxx_messageInfo_GetDBInstanceResponseWrapper.Size(m)
}
func (m *GetDBInstanceResponseWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDBInstanceResponseWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_GetDBInstanceResponseWrapper proto.InternalMessageInfo

func (m *GetDBInstanceResponseWrapper) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetDBInstanceResponseWrapper) GetCodeExplain() string {
	if m != nil {
		return m.CodeExplain
	}
	return ""
}

func (m *GetDBInstanceResponseWrapper) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *GetDBInstanceResponseWrapper) GetData() *GetDBInstanceResponse {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*GetDBInstanceRequest)(nil), "dbinstance.GetDBInstanceRequest")
	proto.RegisterType((*GetDBInstanceResponse)(nil), "dbinstance.GetDBInstanceResponse")
	proto.RegisterType((*GetDBInstanceResponse_DbService)(nil), "dbinstance.GetDBInstanceResponse.DbService")
	proto.RegisterType((*GetDBInstanceResponse_Client)(nil), "dbinstance.GetDBInstanceResponse.Client")
	proto.RegisterType((*GetDBInstanceResponseWrapper)(nil), "dbinstance.GetDBInstanceResponseWrapper")
}

func init() { proto.RegisterFile("get.proto", fileDescriptor_21b2a6be0e6d8388) }

var fileDescriptor_21b2a6be0e6d8388 = []byte{
	// 938 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x97, 0xdf, 0x6e, 0xdb, 0x36,
	0x14, 0xc6, 0x21, 0xd7, 0x71, 0x23, 0xba, 0x6b, 0x52, 0xb6, 0x1b, 0xb4, 0x60, 0x80, 0x12, 0x36,
	0x2d, 0xa8, 0xc4, 0xb2, 0x2d, 0xf9, 0x4f, 0x1b, 0xdf, 0x64, 0xf5, 0xba, 0x0e, 0x01, 0x8a, 0x0d,
	0x60, 0xbb, 0x0d, 0x98, 0xed, 0x0c, 0xb2, 0xa5, 0x78, 0xc2, 0x12, 0x4b, 0x93, 0x94, 0x66, 0xab,
	0x2d, 0xa0, 0x6f, 0x30, 0x60, 0xcf, 0xb0, 0x57, 0xe8, 0x53, 0xec, 0x1d, 0x34, 0x60, 0xf7, 0xbb,
	0xd1, 0x1e, 0xa0, 0x03, 0x29, 0xc9, 0x56, 0x12, 0x6b, 0xde, 0x45, 0x16, 0x60, 0x80, 0x7d, 0x63,
	0xea, 0x9c, 0xef, 0x1c, 0xfe, 0xc8, 0x8b, 0xf3, 0x81, 0x80, 0x1f, 0x1a, 0x5e, 0xd9, 0x76, 0x2c,
	0xcf, 0x82, 0x40, 0xef, 0x9b, 0x23, 0xd7, 0xd3, 0x46, 0x03, 0x63, 0x43, 0x1e, 0x9a, 0xde, 0x77,
	0xa7, 0xfd, 0xf2, 0xc0, 0x3a, 0xa9, 0x0c, 0xad, 0xa1, 0x55, 0x61, 0x92, 0xfe, 0xe9, 0x11, 0xfb,
	0x62, 0x1f, 0x6c, 0x15, 0x95, 0x6e, 0x34, 0x53, 0xf2, 0x93, 0x33, 0xd3, 0xfb, 0xde, 0x3a, 0xab,
	0x0c, 0x2d, 0x99, 0x25, 0xe5, 0x57, 0xda, 0xb1, 0xa9, 0x6b, 0x9e, 0xe5, 0xb8, 0x95, 0xe9, 0x32,
	0xaa, 0x43, 0x6f, 0x39, 0x70, 0xef, 0x33, 0xc3, 0x7b, 0xda, 0x3e, 0x88, 0x37, 0x26, 0xc6, 0x0f,
	0xa7, 0x86, 0xeb, 0xc1, 0xe7, 0xa0, 0xa8, 0xf7, 0x5f, 0x18, 0xce, 0x2b, 0x73, 0x60, 0x1c, 0xe8,
	0x02, 0xb7, 0xc9, 0x61, 0xbe, 0xbd, 0x13, 0x06, 0x22, 0x3c, 0xb2, 0x9c, 0x93, 0x16, 0x4a, 0x25,
	0xd1, 0x1f, 0xbf, 0x8b, 0xeb, 0xe0, 0xf6, 0x61, 0xa7, 0x2a, 0xef, 0x69, 0xf2, 0xeb, 0xde, 0x58,
	0xa9, 0xf9, 0xdb, 0x24, 0x5d, 0x0e, 0xbf, 0x00, 0xb7, 0xf4, 0x7e, 0xb2, 0xc5, 0x81, 0x2e, 0xe4,
	0x58, 0xbb, 0xdd, 0x30, 0x10, 0xef, 0x26, 0xed, 0x66, 0xd9, 0xf9, 0xfd, 0xce, 0x35, 0x40, 0xef,
	0x3e, 0x04, 0xef, 0x5f, 0xe0, 0x76, 0x6d, 0x6b, 0xe4, 0x1a, 0xf0, 0x5b, 0xc0, 0x4f, 0x77, 0x16,
	0xb8, 0xcd, 0x1b, 0xb8, 0xa8, 0xee, 0x96, 0x67, 0x17, 0x5b, 0x9e, 0x5b, 0x55, 0x7e, 0x9a, 0x94,
	0xb4, 0xef, 0x85, 0x81, 0xb8, 0x7e, 0xe1, 0x8c, 0x88, 0xcc, 0x7a, 0xc2, 0x17, 0xa0, 0x30, 0x38,
	0x36, 0x8d, 0x91, 0xc7, 0x4e, 0x51, 0x54, 0xf1, 0xe2, 0xee, 0x9f, 0x30, 0x7d, 0xfb, 0x4e, 0x18,
	0x88, 0xef, 0x45, 0xad, 0xa3, 0x0e, 0x88, 0xc4, 0xad, 0xe0, 0x01, 0x00, 0xe6, 0xec, 0x7a, 0x6e,
	0xb0, 0xeb, 0x91, 0xc2, 0x40, 0xbc, 0x13, 0xc9, 0xcd, 0x05, 0x97, 0x93, 0x2a, 0x86, 0xf7, 0x41,
	0x7e, 0xa4, 0x9d, 0x18, 0x42, 0x9e, 0x35, 0x59, 0x0b, 0x03, 0xb1, 0x18, 0x35, 0xa1, 0x51, 0x44,
	0x58, 0x12, 0x4a, 0xa0, 0xa0, 0xf7, 0x3f, 0xa7, 0xb2, 0x15, 0x26, 0x4b, 0xa1, 0x45, 0x71, 0x44,
	0x62, 0x01, 0x7c, 0xcb, 0x83, 0x9c, 0x69, 0x0b, 0x05, 0xa6, 0xfb, 0x95, 0x0f, 0x03, 0x91, 0x8f,
	0xa1, 0x6c, 0x0a, 0xf3, 0x0b, 0x0f, 0x7e, 0xe6, 0x0f, 0x31, 0x56, 0x71, 0xa3, 0x53, 0x95, 0x1b,
	0xbd, 0xb1, 0xe2, 0x4f, 0x3a, 0x55, 0xb9, 0xde, 0xeb, 0xea, 0x63, 0xc5, 0x97, 0xe8, 0x5a, 0xe9,
	0xed, 0xd3, 0x8f, 0x92, 0xea, 0x4b, 0xb8, 0x5b, 0xfe, 0x97, 0x4a, 0x69, 0x5c, 0xf3, 0xa5, 0x49,
	0xd7, 0xdd, 0xc1, 0x18, 0xd3, 0xc3, 0x3e, 0x91, 0x9f, 0x69, 0xf2, 0x51, 0x6f, 0xac, 0x94, 0xea,
	0x7e, 0x4b, 0x1a, 0x3f, 0xf2, 0x2f, 0x45, 0x27, 0x2d, 0x49, 0x9a, 0xcc, 0x15, 0x37, 0x7d, 0xdc,
	0xba, 0xa4, 0xc6, 0x58, 0x8d, 0x38, 0x26, 0x6a, 0x4c, 0x31, 0x51, 0xba, 0x7a, 0x57, 0x9f, 0x74,
	0x14, 0x79, 0x8f, 0x72, 0x44, 0xb0, 0x0b, 0x34, 0x11, 0x66, 0xe6, 0xce, 0x0d, 0x1f, 0xe3, 0xcb,
	0x7b, 0x4b, 0xd1, 0x11, 0x27, 0xad, 0x6b, 0x61, 0xa8, 0x67, 0x32, 0xd0, 0xb2, 0x79, 0xa9, 0xfd,
	0xab, 0x04, 0xfb, 0x07, 0xb2, 0x5a, 0x26, 0x59, 0x3d, 0x83, 0x6c, 0x5c, 0x2d, 0xa9, 0xfe, 0x35,
	0xd1, 0xa9, 0x99, 0x74, 0x8d, 0x6c, 0xba, 0xda, 0x75, 0xd1, 0x29, 0x99, 0x74, 0xcd, 0x6c, 0xba,
	0xfa, 0x7f, 0x41, 0xd7, 0xca, 0x02, 0x79, 0x94, 0x0d, 0xd2, 0xb8, 0x7a, 0x10, 0x09, 0x3f, 0x28,
	0xef, 0x4a, 0xfb, 0x5d, 0x77, 0x67, 0x9b, 0xe4, 0x4c, 0x1b, 0x36, 0x41, 0xde, 0xb6, 0x1c, 0x4f,
	0xb8, 0xb9, 0xc9, 0xe1, 0x95, 0x36, 0x9a, 0xcd, 0x41, 0x1a, 0xa5, 0x93, 0x6b, 0x6d, 0xfd, 0x5d,
	0xf2, 0xe3, 0x84, 0x37, 0x6f, 0xf2, 0x84, 0xe9, 0x61, 0x09, 0xdc, 0x1c, 0x58, 0xa3, 0xd1, 0x97,
	0xe4, 0xb9, 0xb0, 0xca, 0x66, 0x1e, 0x0c, 0x03, 0xf1, 0x76, 0x3c, 0xb6, 0xa3, 0x04, 0x22, 0x89,
	0x04, 0x56, 0xc0, 0xea, 0xa9, 0x6b, 0x38, 0x6c, 0x94, 0xf2, 0x4c, 0x7e, 0x37, 0x0c, 0xc4, 0xb5,
	0x48, 0x9e, 0x64, 0x10, 0x99, 0x8a, 0xe0, 0x4b, 0xb0, 0x6a, 0x6b, 0xae, 0x7b, 0x66, 0x39, 0xba,
	0x00, 0x58, 0xc1, 0xe3, 0x59, 0x41, 0x92, 0xa1, 0x78, 0x5b, 0x40, 0x3c, 0xc4, 0x1d, 0x4d, 0x7e,
	0xfd, 0x44, 0xfe, 0xa6, 0x2a, 0xef, 0x6d, 0x7d, 0x7c, 0x7f, 0xfb, 0xc1, 0xe1, 0xc3, 0xf2, 0x7e,
	0xa5, 0x27, 0x8d, 0x9b, 0xa5, 0x46, 0xd5, 0xdf, 0x26, 0xd3, 0x4e, 0x14, 0xda, 0x74, 0xbf, 0xa2,
	0xe6, 0x2e, 0x14, 0x2f, 0x42, 0xc7, 0x09, 0x44, 0x12, 0xc9, 0xc6, 0x6f, 0x1c, 0xe0, 0xa7, 0x8e,
	0x77, 0xc1, 0x7b, 0xb8, 0xab, 0xf0, 0x9e, 0xdc, 0x42, 0xef, 0x79, 0xf9, 0x93, 0x6d, 0xc4, 0x3e,
	0x77, 0xce, 0x7b, 0x68, 0x9c, 0x79, 0x0f, 0x5d, 0xd0, 0x7e, 0xba, 0xe1, 0x0e, 0x2e, 0x7b, 0x19,
	0x8d, 0x22, 0xc2, 0x92, 0x1b, 0x7f, 0xf1, 0xa0, 0x10, 0x39, 0x2c, 0x54, 0x40, 0xce, 0x4c, 0x8e,
	0xb0, 0x95, 0x72, 0xaa, 0x0c, 0xf4, 0x9c, 0xa9, 0x27, 0xf6, 0x96, 0x5b, 0xda, 0xdb, 0xd2, 0xde,
	0x96, 0xf6, 0xb6, 0xb4, 0xb7, 0xff, 0x89, 0xbd, 0xa1, 0x3f, 0x39, 0xf0, 0xd1, 0xdc, 0xd7, 0xc6,
	0xd7, 0x8e, 0x66, 0xdb, 0x86, 0x43, 0x67, 0xe7, 0xc0, 0xd2, 0x0d, 0x36, 0x0d, 0x57, 0xd2, 0xb3,
	0x93, 0x46, 0x11, 0x61, 0x49, 0xf8, 0x18, 0x14, 0xe9, 0xff, 0xa7, 0x3f, 0xda, 0xc7, 0x9a, 0x39,
	0x8a, 0xa7, 0xe0, 0x07, 0xb3, 0x67, 0x5e, 0x2a, 0x89, 0x48, 0x5a, 0x0a, 0x1f, 0x82, 0x15, 0xc3,
	0x71, 0x2c, 0x27, 0x1e, 0xe2, 0xeb, 0x61, 0x20, 0xde, 0x8a, 0x6a, 0x58, 0x18, 0x91, 0x28, 0x0d,
	0x9f, 0x81, 0xbc, 0xae, 0x79, 0x1a, 0x1b, 0xe1, 0x45, 0x75, 0x6b, 0xe1, 0x63, 0xe9, 0xdc, 0x94,
	0xd7, 0x3c, 0x8d, 0x4e, 0x79, 0xcd, 0xd3, 0xfa, 0x05, 0xf6, 0x60, 0xad, 0xfd, 0x1d, 0x00, 0x00,
	0xff, 0xff, 0x95, 0xd3, 0x58, 0x32, 0x30, 0x0f, 0x00, 0x00,
}
