// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: create_custom_dbtask.proto

package dbtask

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	math "math"
	regexp "regexp"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *CreateCustomDBTaskRequest) Validate() error {
	if this.DbTask != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.DbTask); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("DbTask", err)
		}
	}
	return nil
}

var _regex_CreateCustomDBTaskRequest_DbTask_DbServiceId = regexp.MustCompile(`^[0-9a-z]{13}$`)

func (this *CreateCustomDBTaskRequest_DbTask) Validate() error {
	if !_regex_CreateCustomDBTaskRequest_DbTask_DbServiceId.MatchString(this.DbServiceId) {
		return github_com_mwitkow_go_proto_validators.FieldError("DbServiceId", fmt.Errorf(`value '%v' must be a string conforming to regex "^[0-9a-z]{13}$"`, this.DbServiceId))
	}
	for _, item := range this.ChangeCfg {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("ChangeCfg", err)
			}
		}
	}
	return nil
}

var _regex_CreateCustomDBTaskRequest_DbTask_ChangeCfg_DbInstanceId = regexp.MustCompile(`^[0-9a-z]{13}$`)

func (this *CreateCustomDBTaskRequest_DbTask_ChangeCfg) Validate() error {
	if !_regex_CreateCustomDBTaskRequest_DbTask_ChangeCfg_DbInstanceId.MatchString(this.DbInstanceId) {
		return github_com_mwitkow_go_proto_validators.FieldError("DbInstanceId", fmt.Errorf(`value '%v' must be a string conforming to regex "^[0-9a-z]{13}$"`, this.DbInstanceId))
	}
	return nil
}
func (this *CreateCustomDBTaskResponse) Validate() error {
	return nil
}
func (this *CreateCustomDBTaskResponseWrapper) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
