// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: update.proto

package subscriber_manager

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	notify "github.com/easyopsapis/easyops-api-go/protorepo-models/easyops/model/notify"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//PubSubscriberUpdate请求
type PubSubscriberUpdateRequest struct {
	//
	//订阅id
	SubscriberId string `protobuf:"bytes,1,opt,name=subscriberId,proto3" json:"subscriberId" form:"subscriberId"`
	//
	//订阅的事件id列表
	Topics []string `protobuf:"bytes,2,rep,name=topics,proto3" json:"topics" form:"topics"`
	//
	//订阅名称，可以为中文
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name" form:"name"`
	//
	//回调url. 处理成功时需要返回 status 2xx
	Callback string `protobuf:"bytes,4,opt,name=callback,proto3" json:"callback" form:"callback"`
	//
	//回调名字服务名。非空时，callback url的域名解析会先经ens
	EnsName string `protobuf:"bytes,5,opt,name=ensName,proto3" json:"ensName" form:"ensName"`
	//
	//retry 为 0 时调用 callback 出错不会重试，否则会无限重试。
	Retry int32 `protobuf:"varint,6,opt,name=retry,proto3" json:"retry" form:"retry"`
	//
	//订阅的事件的版本，隐藏字段，因为_version不会反应关系的修改
	TopicVersion         int32    `protobuf:"varint,7,opt,name=topicVersion,proto3" json:"topicVersion" form:"topicVersion"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PubSubscriberUpdateRequest) Reset()         { *m = PubSubscriberUpdateRequest{} }
func (m *PubSubscriberUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*PubSubscriberUpdateRequest) ProtoMessage()    {}
func (*PubSubscriberUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f0fa214029f1c21, []int{0}
}
func (m *PubSubscriberUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PubSubscriberUpdateRequest.Unmarshal(m, b)
}
func (m *PubSubscriberUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PubSubscriberUpdateRequest.Marshal(b, m, deterministic)
}
func (m *PubSubscriberUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PubSubscriberUpdateRequest.Merge(m, src)
}
func (m *PubSubscriberUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_PubSubscriberUpdateRequest.Size(m)
}
func (m *PubSubscriberUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PubSubscriberUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PubSubscriberUpdateRequest proto.InternalMessageInfo

func (m *PubSubscriberUpdateRequest) GetSubscriberId() string {
	if m != nil {
		return m.SubscriberId
	}
	return ""
}

func (m *PubSubscriberUpdateRequest) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

func (m *PubSubscriberUpdateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PubSubscriberUpdateRequest) GetCallback() string {
	if m != nil {
		return m.Callback
	}
	return ""
}

func (m *PubSubscriberUpdateRequest) GetEnsName() string {
	if m != nil {
		return m.EnsName
	}
	return ""
}

func (m *PubSubscriberUpdateRequest) GetRetry() int32 {
	if m != nil {
		return m.Retry
	}
	return 0
}

func (m *PubSubscriberUpdateRequest) GetTopicVersion() int32 {
	if m != nil {
		return m.TopicVersion
	}
	return 0
}

//
//PubSubscriberUpdate返回
type PubSubscriberUpdateResponse struct {
	//
	//订阅的事件列表
	Topics []*notify.Topic `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics" form:"topics"`
	//
	//订阅ID
	InstanceId string `protobuf:"bytes,2,opt,name=instanceId,proto3" json:"instanceId" form:"instanceId"`
	//
	//订阅名称，可以为中文
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name" form:"name"`
	//
	//订阅负责人。如 linus
	Admin string `protobuf:"bytes,4,opt,name=admin,proto3" json:"admin" form:"admin"`
	//
	//回调url. 处理成功时需要返回 status 2xx
	Callback string `protobuf:"bytes,5,opt,name=callback,proto3" json:"callback" form:"callback"`
	//
	//回调名字服务名。非空时，callback url的域名解析会先经ens
	EnsName string `protobuf:"bytes,6,opt,name=ensName,proto3" json:"ensName" form:"ensName"`
	//
	//retry 为 0 时调用 callback 出错不会重试，否则会无限重试。
	Retry int32 `protobuf:"varint,7,opt,name=retry,proto3" json:"retry" form:"retry"`
	//
	//模型修改时间
	Mtime string `protobuf:"bytes,8,opt,name=mtime,proto3" json:"mtime" form:"mtime"`
	//
	//模型版本
	XVersion int32 `protobuf:"varint,9,opt,name=_version,json=Version,proto3" json:"_version" form:"_version"`
	//
	//订阅的事件的版本，隐藏字段，因为_version不会反应关系的修改
	TopicVersion         int32    `protobuf:"varint,10,opt,name=topicVersion,proto3" json:"topicVersion" form:"topicVersion"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PubSubscriberUpdateResponse) Reset()         { *m = PubSubscriberUpdateResponse{} }
func (m *PubSubscriberUpdateResponse) String() string { return proto.CompactTextString(m) }
func (*PubSubscriberUpdateResponse) ProtoMessage()    {}
func (*PubSubscriberUpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f0fa214029f1c21, []int{1}
}
func (m *PubSubscriberUpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PubSubscriberUpdateResponse.Unmarshal(m, b)
}
func (m *PubSubscriberUpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PubSubscriberUpdateResponse.Marshal(b, m, deterministic)
}
func (m *PubSubscriberUpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PubSubscriberUpdateResponse.Merge(m, src)
}
func (m *PubSubscriberUpdateResponse) XXX_Size() int {
	return xxx_messageInfo_PubSubscriberUpdateResponse.Size(m)
}
func (m *PubSubscriberUpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PubSubscriberUpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PubSubscriberUpdateResponse proto.InternalMessageInfo

func (m *PubSubscriberUpdateResponse) GetTopics() []*notify.Topic {
	if m != nil {
		return m.Topics
	}
	return nil
}

func (m *PubSubscriberUpdateResponse) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *PubSubscriberUpdateResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PubSubscriberUpdateResponse) GetAdmin() string {
	if m != nil {
		return m.Admin
	}
	return ""
}

func (m *PubSubscriberUpdateResponse) GetCallback() string {
	if m != nil {
		return m.Callback
	}
	return ""
}

func (m *PubSubscriberUpdateResponse) GetEnsName() string {
	if m != nil {
		return m.EnsName
	}
	return ""
}

func (m *PubSubscriberUpdateResponse) GetRetry() int32 {
	if m != nil {
		return m.Retry
	}
	return 0
}

func (m *PubSubscriberUpdateResponse) GetMtime() string {
	if m != nil {
		return m.Mtime
	}
	return ""
}

func (m *PubSubscriberUpdateResponse) GetXVersion() int32 {
	if m != nil {
		return m.XVersion
	}
	return 0
}

func (m *PubSubscriberUpdateResponse) GetTopicVersion() int32 {
	if m != nil {
		return m.TopicVersion
	}
	return 0
}

//
//PubSubscriberUpdateApi返回
type PubSubscriberUpdateResponseWrapper struct {
	//
	//返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code" form:"code"`
	//
	//返回码解释
	CodeExplain string `protobuf:"bytes,2,opt,name=codeExplain,proto3" json:"codeExplain" form:"codeExplain"`
	//
	//错误详情
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error" form:"error"`
	//
	//返回数据
	Data                 *PubSubscriberUpdateResponse `protobuf:"bytes,4,opt,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *PubSubscriberUpdateResponseWrapper) Reset()         { *m = PubSubscriberUpdateResponseWrapper{} }
func (m *PubSubscriberUpdateResponseWrapper) String() string { return proto.CompactTextString(m) }
func (*PubSubscriberUpdateResponseWrapper) ProtoMessage()    {}
func (*PubSubscriberUpdateResponseWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f0fa214029f1c21, []int{2}
}
func (m *PubSubscriberUpdateResponseWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PubSubscriberUpdateResponseWrapper.Unmarshal(m, b)
}
func (m *PubSubscriberUpdateResponseWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PubSubscriberUpdateResponseWrapper.Marshal(b, m, deterministic)
}
func (m *PubSubscriberUpdateResponseWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PubSubscriberUpdateResponseWrapper.Merge(m, src)
}
func (m *PubSubscriberUpdateResponseWrapper) XXX_Size() int {
	return xxx_messageInfo_PubSubscriberUpdateResponseWrapper.Size(m)
}
func (m *PubSubscriberUpdateResponseWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_PubSubscriberUpdateResponseWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_PubSubscriberUpdateResponseWrapper proto.InternalMessageInfo

func (m *PubSubscriberUpdateResponseWrapper) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *PubSubscriberUpdateResponseWrapper) GetCodeExplain() string {
	if m != nil {
		return m.CodeExplain
	}
	return ""
}

func (m *PubSubscriberUpdateResponseWrapper) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *PubSubscriberUpdateResponseWrapper) GetData() *PubSubscriberUpdateResponse {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*PubSubscriberUpdateRequest)(nil), "subscriber_manager.PubSubscriberUpdateRequest")
	proto.RegisterType((*PubSubscriberUpdateResponse)(nil), "subscriber_manager.PubSubscriberUpdateResponse")
	proto.RegisterType((*PubSubscriberUpdateResponseWrapper)(nil), "subscriber_manager.PubSubscriberUpdateResponseWrapper")
}

func init() { proto.RegisterFile("update.proto", fileDescriptor_3f0fa214029f1c21) }

var fileDescriptor_3f0fa214029f1c21 = []byte{
	// 807 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x55, 0xdd, 0x6e, 0xdc, 0x44,
	0x14, 0x96, 0x93, 0xec, 0x26, 0x99, 0xa4, 0x7f, 0xae, 0x04, 0x56, 0xb8, 0xf0, 0x32, 0x2d, 0x91,
	0xcd, 0x76, 0xec, 0xdd, 0x0d, 0xa0, 0x66, 0x2b, 0x64, 0x88, 0xc4, 0x45, 0xa4, 0xaa, 0x20, 0x13,
	0x40, 0xaa, 0xeb, 0x46, 0x63, 0x7b, 0x76, 0x6b, 0xd5, 0xf6, 0x98, 0xf1, 0x6c, 0x4b, 0xda, 0x2d,
	0x52, 0x5f, 0x81, 0xc7, 0x40, 0xe2, 0x25, 0x78, 0x06, 0x6e, 0xb8, 0x31, 0x12, 0x8f, 0xe0, 0x27,
	0x40, 0x9e, 0xf1, 0x66, 0x1d, 0x25, 0x5a, 0xd1, 0xab, 0x5e, 0xcd, 0xcc, 0xf9, 0xbe, 0x73, 0xe6,
	0xfc, 0x7c, 0x63, 0x83, 0xdd, 0x59, 0x1e, 0x61, 0x4e, 0xac, 0x9c, 0x51, 0x4e, 0x55, 0xb5, 0x98,
	0x05, 0x45, 0xc8, 0xe2, 0x80, 0xb0, 0xd3, 0x14, 0x67, 0x78, 0x4a, 0xd8, 0x1e, 0x9a, 0xc6, 0xfc,
	0xd9, 0x2c, 0xb0, 0x42, 0x9a, 0xda, 0x53, 0x3a, 0xa5, 0xb6, 0xa0, 0x06, 0xb3, 0x89, 0x38, 0x89,
	0x83, 0xd8, 0xc9, 0x10, 0x7b, 0x0f, 0xa7, 0xd4, 0x22, 0xb8, 0x38, 0xa3, 0x79, 0x61, 0x25, 0x34,
	0xc4, 0x89, 0x1d, 0xd2, 0x8c, 0x33, 0x1c, 0xf2, 0x42, 0x7a, 0x32, 0x92, 0x53, 0x94, 0xd2, 0x88,
	0x24, 0x85, 0xdd, 0x10, 0x6d, 0x71, 0xb4, 0x33, 0xca, 0xe3, 0xc9, 0x99, 0xcd, 0x69, 0x1e, 0x87,
	0x4d, 0xb4, 0x2f, 0x5a, 0x97, 0xa7, 0x2f, 0x63, 0xfe, 0x9c, 0xbe, 0xb4, 0xa7, 0x14, 0x09, 0x10,
	0xbd, 0xc0, 0x49, 0x1c, 0x61, 0x4e, 0x59, 0x61, 0x9f, 0x6f, 0xa5, 0x1f, 0xfc, 0x6b, 0x1d, 0xec,
	0x7d, 0x37, 0x0b, 0xbe, 0x3f, 0x2f, 0xe7, 0x07, 0x51, 0xa6, 0x4b, 0x7e, 0x9e, 0x91, 0x82, 0xab,
	0xdf, 0x82, 0xdd, 0x65, 0xa5, 0xc7, 0x91, 0xa6, 0xf4, 0x14, 0x63, 0xfb, 0xa8, 0x5f, 0x95, 0xfa,
	0xed, 0x09, 0x65, 0xe9, 0x18, 0xb6, 0x51, 0xf8, 0xef, 0x3f, 0xfa, 0x4d, 0x70, 0xfd, 0xa9, 0x37,
	0x40, 0x87, 0x18, 0xbd, 0xf2, 0x5f, 0x0f, 0x0f, 0xde, 0xdc, 0x75, 0x2f, 0x04, 0x50, 0x4d, 0xd0,
	0x15, 0x69, 0x17, 0xda, 0x5a, 0x6f, 0xdd, 0xd8, 0x3e, 0xba, 0x55, 0x95, 0xfa, 0x35, 0x19, 0x4a,
	0xda, 0xa1, 0xdb, 0x10, 0xd4, 0x3b, 0x60, 0x23, 0xc3, 0x29, 0xd1, 0xd6, 0xc5, 0x9d, 0x37, 0xaa,
	0x52, 0xdf, 0x91, 0xc4, 0xda, 0x0a, 0x5d, 0x01, 0xaa, 0x6f, 0x15, 0xb0, 0x15, 0xe2, 0x24, 0x09,
	0x70, 0xf8, 0x5c, 0xdb, 0x10, 0x4c, 0x52, 0x95, 0xfa, 0x0d, 0xc9, 0x5c, 0x20, 0x75, 0x66, 0x8f,
	0xc0, 0x43, 0xe3, 0x49, 0x60, 0x3c, 0xe3, 0x3c, 0x2f, 0x9c, 0xf9, 0x84, 0xe7, 0xf3, 0x49, 0x9c,
	0x10, 0x73, 0x6c, 0xdb, 0xa6, 0xe3, 0xa1, 0xaf, 0xd1, 0x63, 0x8c, 0x5e, 0x0d, 0xd0, 0x61, 0x7f,
	0xff, 0xab, 0x3b, 0xf6, 0x27, 0xce, 0x97, 0xbf, 0x9e, 0xce, 0x3f, 0x1e, 0xdf, 0xb3, 0x1e, 0xf8,
	0xfd, 0x4b, 0x60, 0x8d, 0xf9, 0xee, 0xf9, 0xb5, 0xea, 0x3d, 0xb0, 0x49, 0xb2, 0xe2, 0x51, 0x9d,
	0x6b, 0x47, 0x64, 0xa0, 0x56, 0xa5, 0x7e, 0x5d, 0x66, 0xd0, 0x00, 0xd0, 0x5d, 0x50, 0xd4, 0x7d,
	0xd0, 0x61, 0x84, 0xb3, 0x33, 0xad, 0xdb, 0x53, 0x8c, 0xce, 0xd1, 0xcd, 0xaa, 0xd4, 0x77, 0x25,
	0x57, 0x98, 0xa1, 0x2b, 0x61, 0xf5, 0x01, 0xd8, 0x15, 0x8d, 0xf8, 0x91, 0xb0, 0x22, 0xa6, 0x99,
	0xb6, 0x29, 0xe8, 0x1f, 0x2e, 0x5b, 0xdf, 0x46, 0xa1, 0x7b, 0x81, 0x0c, 0x7f, 0xeb, 0x82, 0x8f,
	0xae, 0x1c, 0x6b, 0x91, 0xd3, 0xac, 0x20, 0xea, 0xfd, 0xf3, 0x31, 0x28, 0xbd, 0x75, 0x63, 0x67,
	0x74, 0xcd, 0x92, 0x9a, 0xb2, 0x4e, 0x6a, 0xeb, 0xaa, 0xa9, 0x1c, 0x03, 0x10, 0x67, 0x05, 0xc7,
	0x59, 0x48, 0x8e, 0x23, 0x6d, 0x4d, 0xd4, 0x6b, 0x56, 0xa5, 0x7e, 0x4b, 0xd2, 0x97, 0xd8, 0xd5,
	0x6a, 0x68, 0x39, 0xff, 0xbf, 0x01, 0xef, 0x83, 0x0e, 0x8e, 0xd2, 0x38, 0x6b, 0x86, 0xdb, 0x6a,
	0x97, 0x30, 0x43, 0x57, 0xc2, 0x17, 0x85, 0xd0, 0x79, 0xef, 0x42, 0xe8, 0xbe, 0x83, 0x10, 0x36,
	0x57, 0x0b, 0xe1, 0x6f, 0x05, 0x74, 0x52, 0x1e, 0xa7, 0x44, 0xdb, 0x12, 0x41, 0xff, 0x54, 0x96,
	0x4c, 0x61, 0xaf, 0x8b, 0xfa, 0x43, 0x01, 0xbf, 0x2b, 0x4f, 0x0d, 0xc3, 0x19, 0x7b, 0x43, 0x74,
	0xe8, 0xd7, 0x4d, 0xf7, 0x3f, 0x35, 0x1d, 0xb1, 0xbe, 0xfe, 0xec, 0x8d, 0x89, 0x8c, 0xa1, 0x37,
	0x40, 0x23, 0x7f, 0x3e, 0x10, 0xb8, 0x89, 0x8c, 0x03, 0x6f, 0x80, 0x86, 0x8b, 0xf3, 0xdc, 0x1b,
	0xa2, 0x91, 0xf4, 0x32, 0xbd, 0x93, 0x9e, 0x6f, 0x8c, 0xbc, 0x01, 0x3a, 0xf0, 0xe7, 0x82, 0x23,
	0xcd, 0x63, 0xc3, 0x1b, 0xa0, 0xcf, 0x17, 0x87, 0xe5, 0xde, 0x78, 0x62, 0x89, 0xb5, 0x6f, 0x3a,
	0xc6, 0xe3, 0xb9, 0xd7, 0x47, 0xbe, 0xe1, 0x8c, 0xaf, 0x70, 0x6f, 0x79, 0x3b, 0x77, 0x5d, 0x59,
	0x91, 0x6a, 0x81, 0xad, 0xd3, 0x17, 0x8d, 0xc0, 0xb7, 0x45, 0x1b, 0x6e, 0x2f, 0x87, 0xb6, 0x40,
	0xa0, 0xbb, 0xd9, 0xe8, 0xfa, 0xd2, 0xa3, 0x00, 0xef, 0xf2, 0x28, 0xde, 0xae, 0x01, 0xb8, 0xe2,
	0x51, 0xfc, 0xc4, 0x70, 0x9e, 0x13, 0x56, 0xcb, 0x32, 0xa4, 0x11, 0x11, 0xdf, 0xba, 0x4e, 0x5b,
	0x96, 0xb5, 0x15, 0xba, 0x02, 0x54, 0xef, 0x83, 0x9d, 0x7a, 0xfd, 0xe6, 0x97, 0x3c, 0xc1, 0x71,
	0xd6, 0xbc, 0x83, 0x0f, 0xaa, 0x52, 0x57, 0x97, 0xdc, 0x06, 0x84, 0x6e, 0x9b, 0x5a, 0x8f, 0x9d,
	0x30, 0x46, 0x59, 0x23, 0xfb, 0xd6, 0xd8, 0x85, 0x19, 0xba, 0x12, 0x56, 0x4f, 0xc0, 0x46, 0x84,
	0x39, 0x16, 0xba, 0xdf, 0x19, 0xd9, 0xd6, 0xe5, 0x3f, 0x8e, 0xb5, 0xa2, 0x98, 0x76, 0xde, 0x75,
	0x18, 0xe8, 0x8a, 0x68, 0x41, 0x57, 0x7c, 0xf6, 0x0f, 0xfe, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x6f,
	0x08, 0x8c, 0x75, 0xcf, 0x06, 0x00, 0x00,
}
