// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: list.proto

package subscriber_manager

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	notify "github.com/easyopsapis/easyops-api-go/protorepo-models/easyops/model/notify"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//PubSubscriberList请求
type PubSubscriberListRequest struct {
	//
	//页码
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page" form:"page"`
	//
	//每页大小
	PageSize             int32    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size" form:"page_size"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PubSubscriberListRequest) Reset()         { *m = PubSubscriberListRequest{} }
func (m *PubSubscriberListRequest) String() string { return proto.CompactTextString(m) }
func (*PubSubscriberListRequest) ProtoMessage()    {}
func (*PubSubscriberListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_af793ce248ee1bf0, []int{0}
}
func (m *PubSubscriberListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PubSubscriberListRequest.Unmarshal(m, b)
}
func (m *PubSubscriberListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PubSubscriberListRequest.Marshal(b, m, deterministic)
}
func (m *PubSubscriberListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PubSubscriberListRequest.Merge(m, src)
}
func (m *PubSubscriberListRequest) XXX_Size() int {
	return xxx_messageInfo_PubSubscriberListRequest.Size(m)
}
func (m *PubSubscriberListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PubSubscriberListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PubSubscriberListRequest proto.InternalMessageInfo

func (m *PubSubscriberListRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *PubSubscriberListRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

//
//PubSubscriberList返回
type PubSubscriberListResponse struct {
	//
	//页数
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page" form:"page"`
	//
	//页大小
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size" form:"page_size"`
	//
	//总数
	Total int32 `protobuf:"varint,3,opt,name=total,proto3" json:"total" form:"total"`
	//
	//数据列表
	List                 []*PubSubscriberListResponse_List `protobuf:"bytes,4,rep,name=list,proto3" json:"list" form:"list"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *PubSubscriberListResponse) Reset()         { *m = PubSubscriberListResponse{} }
func (m *PubSubscriberListResponse) String() string { return proto.CompactTextString(m) }
func (*PubSubscriberListResponse) ProtoMessage()    {}
func (*PubSubscriberListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_af793ce248ee1bf0, []int{1}
}
func (m *PubSubscriberListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PubSubscriberListResponse.Unmarshal(m, b)
}
func (m *PubSubscriberListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PubSubscriberListResponse.Marshal(b, m, deterministic)
}
func (m *PubSubscriberListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PubSubscriberListResponse.Merge(m, src)
}
func (m *PubSubscriberListResponse) XXX_Size() int {
	return xxx_messageInfo_PubSubscriberListResponse.Size(m)
}
func (m *PubSubscriberListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PubSubscriberListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PubSubscriberListResponse proto.InternalMessageInfo

func (m *PubSubscriberListResponse) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *PubSubscriberListResponse) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *PubSubscriberListResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *PubSubscriberListResponse) GetList() []*PubSubscriberListResponse_List {
	if m != nil {
		return m.List
	}
	return nil
}

type PubSubscriberListResponse_List struct {
	//
	//订阅的事件列表
	Topics []*notify.Topic `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics" form:"topics"`
	//
	//订阅ID
	InstanceId string `protobuf:"bytes,2,opt,name=instanceId,proto3" json:"instanceId" form:"instanceId"`
	//
	//订阅名称，可以为中文
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name" form:"name"`
	//
	//订阅负责人。如 linus
	Admin string `protobuf:"bytes,4,opt,name=admin,proto3" json:"admin" form:"admin"`
	//
	//回调url. 处理成功时需要返回 status 2xx
	Callback string `protobuf:"bytes,5,opt,name=callback,proto3" json:"callback" form:"callback"`
	//
	//回调名字服务名。非空时，callback url的域名解析会先经ens
	EnsName string `protobuf:"bytes,6,opt,name=ensName,proto3" json:"ensName" form:"ensName"`
	//
	//retry 为 0 时调用 callback 出错不会重试，否则会无限重试。
	Retry int32 `protobuf:"varint,7,opt,name=retry,proto3" json:"retry" form:"retry"`
	//
	//模型修改时间
	Mtime string `protobuf:"bytes,8,opt,name=mtime,proto3" json:"mtime" form:"mtime"`
	//
	//模型版本
	XVersion int32 `protobuf:"varint,9,opt,name=_version,json=Version,proto3" json:"_version" form:"_version"`
	//
	//订阅的事件的版本，隐藏字段，因为_version不会反应关系的修改
	TopicVersion         int32    `protobuf:"varint,10,opt,name=topicVersion,proto3" json:"topicVersion" form:"topicVersion"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PubSubscriberListResponse_List) Reset()         { *m = PubSubscriberListResponse_List{} }
func (m *PubSubscriberListResponse_List) String() string { return proto.CompactTextString(m) }
func (*PubSubscriberListResponse_List) ProtoMessage()    {}
func (*PubSubscriberListResponse_List) Descriptor() ([]byte, []int) {
	return fileDescriptor_af793ce248ee1bf0, []int{1, 0}
}
func (m *PubSubscriberListResponse_List) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PubSubscriberListResponse_List.Unmarshal(m, b)
}
func (m *PubSubscriberListResponse_List) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PubSubscriberListResponse_List.Marshal(b, m, deterministic)
}
func (m *PubSubscriberListResponse_List) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PubSubscriberListResponse_List.Merge(m, src)
}
func (m *PubSubscriberListResponse_List) XXX_Size() int {
	return xxx_messageInfo_PubSubscriberListResponse_List.Size(m)
}
func (m *PubSubscriberListResponse_List) XXX_DiscardUnknown() {
	xxx_messageInfo_PubSubscriberListResponse_List.DiscardUnknown(m)
}

var xxx_messageInfo_PubSubscriberListResponse_List proto.InternalMessageInfo

func (m *PubSubscriberListResponse_List) GetTopics() []*notify.Topic {
	if m != nil {
		return m.Topics
	}
	return nil
}

func (m *PubSubscriberListResponse_List) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *PubSubscriberListResponse_List) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PubSubscriberListResponse_List) GetAdmin() string {
	if m != nil {
		return m.Admin
	}
	return ""
}

func (m *PubSubscriberListResponse_List) GetCallback() string {
	if m != nil {
		return m.Callback
	}
	return ""
}

func (m *PubSubscriberListResponse_List) GetEnsName() string {
	if m != nil {
		return m.EnsName
	}
	return ""
}

func (m *PubSubscriberListResponse_List) GetRetry() int32 {
	if m != nil {
		return m.Retry
	}
	return 0
}

func (m *PubSubscriberListResponse_List) GetMtime() string {
	if m != nil {
		return m.Mtime
	}
	return ""
}

func (m *PubSubscriberListResponse_List) GetXVersion() int32 {
	if m != nil {
		return m.XVersion
	}
	return 0
}

func (m *PubSubscriberListResponse_List) GetTopicVersion() int32 {
	if m != nil {
		return m.TopicVersion
	}
	return 0
}

//
//PubSubscriberListApi返回
type PubSubscriberListResponseWrapper struct {
	//
	//返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code" form:"code"`
	//
	//返回码解释
	CodeExplain string `protobuf:"bytes,2,opt,name=codeExplain,proto3" json:"codeExplain" form:"codeExplain"`
	//
	//错误详情
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error" form:"error"`
	//
	//返回数据
	Data                 *PubSubscriberListResponse `protobuf:"bytes,4,opt,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *PubSubscriberListResponseWrapper) Reset()         { *m = PubSubscriberListResponseWrapper{} }
func (m *PubSubscriberListResponseWrapper) String() string { return proto.CompactTextString(m) }
func (*PubSubscriberListResponseWrapper) ProtoMessage()    {}
func (*PubSubscriberListResponseWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_af793ce248ee1bf0, []int{2}
}
func (m *PubSubscriberListResponseWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PubSubscriberListResponseWrapper.Unmarshal(m, b)
}
func (m *PubSubscriberListResponseWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PubSubscriberListResponseWrapper.Marshal(b, m, deterministic)
}
func (m *PubSubscriberListResponseWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PubSubscriberListResponseWrapper.Merge(m, src)
}
func (m *PubSubscriberListResponseWrapper) XXX_Size() int {
	return xxx_messageInfo_PubSubscriberListResponseWrapper.Size(m)
}
func (m *PubSubscriberListResponseWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_PubSubscriberListResponseWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_PubSubscriberListResponseWrapper proto.InternalMessageInfo

func (m *PubSubscriberListResponseWrapper) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *PubSubscriberListResponseWrapper) GetCodeExplain() string {
	if m != nil {
		return m.CodeExplain
	}
	return ""
}

func (m *PubSubscriberListResponseWrapper) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *PubSubscriberListResponseWrapper) GetData() *PubSubscriberListResponse {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*PubSubscriberListRequest)(nil), "subscriber_manager.PubSubscriberListRequest")
	proto.RegisterType((*PubSubscriberListResponse)(nil), "subscriber_manager.PubSubscriberListResponse")
	proto.RegisterType((*PubSubscriberListResponse_List)(nil), "subscriber_manager.PubSubscriberListResponse.List")
	proto.RegisterType((*PubSubscriberListResponseWrapper)(nil), "subscriber_manager.PubSubscriberListResponseWrapper")
}

func init() { proto.RegisterFile("list.proto", fileDescriptor_af793ce248ee1bf0) }

var fileDescriptor_af793ce248ee1bf0 = []byte{
	// 836 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x54, 0xdd, 0x8e, 0xdb, 0x44,
	0x14, 0xc6, 0x6d, 0xb2, 0x3f, 0xb3, 0xfd, 0xd9, 0x4e, 0x05, 0x98, 0xbd, 0xf1, 0xe2, 0x96, 0xca,
	0x66, 0x3b, 0x76, 0x92, 0xe5, 0xa7, 0x9b, 0x0a, 0x05, 0x56, 0xe2, 0xa2, 0xd2, 0xaa, 0x42, 0xd3,
	0xaa, 0x95, 0xea, 0xba, 0xab, 0x89, 0x33, 0x49, 0xad, 0xda, 0x1e, 0xe3, 0x99, 0xb4, 0xec, 0x36,
	0xad, 0xc4, 0xeb, 0x20, 0xf1, 0x12, 0xbc, 0x05, 0x37, 0x46, 0xe2, 0x11, 0x7c, 0x8b, 0x40, 0x68,
	0x8e, 0xe3, 0x8d, 0xa1, 0xed, 0x05, 0x37, 0x5c, 0xcd, 0x9c, 0xef, 0xe7, 0xf8, 0x9c, 0x99, 0xe3,
	0x41, 0x28, 0x89, 0xa5, 0xf2, 0xf2, 0x42, 0x28, 0x81, 0xb1, 0x9c, 0x8f, 0x65, 0x54, 0xc4, 0x63,
	0x5e, 0x1c, 0xa7, 0x2c, 0x63, 0x33, 0x5e, 0xec, 0x90, 0x59, 0xac, 0x9e, 0xce, 0xc7, 0x5e, 0x24,
	0x52, 0x7f, 0x26, 0x66, 0xc2, 0x07, 0xe9, 0x78, 0x3e, 0x85, 0x08, 0x02, 0xd8, 0xd5, 0x29, 0x76,
	0x8e, 0x66, 0xc2, 0xe3, 0x4c, 0x9e, 0x88, 0x5c, 0x7a, 0x89, 0x88, 0x58, 0xe2, 0x47, 0x22, 0x53,
	0x05, 0x8b, 0x94, 0xac, 0x9d, 0x05, 0xcf, 0x05, 0x49, 0xc5, 0x84, 0x27, 0xd2, 0x5f, 0x0a, 0x7d,
	0x08, 0xfd, 0x4c, 0xa8, 0x78, 0x7a, 0xe2, 0x2b, 0x91, 0xc7, 0xd1, 0x32, 0xdb, 0x17, 0xad, 0x8f,
	0xa7, 0x2f, 0x62, 0xf5, 0x4c, 0xbc, 0xf0, 0x67, 0x82, 0x00, 0x49, 0x9e, 0xb3, 0x24, 0x9e, 0x30,
	0x25, 0x0a, 0xe9, 0x9f, 0x6d, 0x6b, 0x9f, 0xfd, 0x1a, 0x99, 0xdf, 0xcd, 0xc7, 0xf7, 0xce, 0xba,
	0x39, 0x8a, 0xa5, 0xa2, 0xfc, 0xfb, 0x39, 0x97, 0x0a, 0xbb, 0xa8, 0x93, 0xb3, 0x19, 0x37, 0x8d,
	0x5d, 0xc3, 0xe9, 0x1e, 0xbe, 0x5f, 0x95, 0xd6, 0xd6, 0x54, 0x14, 0xe9, 0xd0, 0xd6, 0xa8, 0xfd,
	0xfb, 0x6f, 0xd6, 0xb9, 0xed, 0xf7, 0x28, 0x48, 0xf0, 0x97, 0x68, 0x53, 0xaf, 0xc7, 0x32, 0x3e,
	0xe5, 0xe6, 0x39, 0xd0, 0xef, 0x54, 0xa5, 0xb5, 0xbd, 0xd2, 0x03, 0xd5, 0x98, 0x36, 0x34, 0x72,
	0x4f, 0x03, 0x7f, 0xad, 0xa3, 0x8f, 0xde, 0x52, 0x80, 0xcc, 0x45, 0x26, 0xf9, 0xff, 0x51, 0x01,
	0xbe, 0x81, 0xba, 0x4a, 0x28, 0x96, 0x98, 0xe7, 0xc1, 0xb4, 0x5d, 0x95, 0xd6, 0x85, 0xda, 0x04,
	0xb0, 0x4d, 0x6b, 0x1a, 0x3f, 0x44, 0x1d, 0x3d, 0x00, 0x66, 0x67, 0xf7, 0xbc, 0xb3, 0x35, 0x18,
	0x78, 0x6f, 0x4e, 0x80, 0xf7, 0xce, 0x46, 0x3c, 0x1d, 0x1c, 0x5e, 0x5e, 0xd5, 0xaf, 0x33, 0xd9,
	0x14, 0x12, 0xee, 0xfc, 0xd1, 0x45, 0x1d, 0xcd, 0xe3, 0x5b, 0x68, 0x0d, 0xae, 0x54, 0x9a, 0x06,
	0x7c, 0xe3, 0xa2, 0x57, 0x5f, 0xb4, 0x77, 0x5f, 0xa3, 0x87, 0x57, 0xaa, 0xd2, 0xba, 0xd8, 0x54,
	0xa6, 0x65, 0x36, 0x5d, 0xea, 0xf1, 0x1d, 0x84, 0xe2, 0x4c, 0x2a, 0x96, 0x45, 0xfc, 0xce, 0x04,
	0xba, 0xdf, 0x3c, 0x74, 0xab, 0xd2, 0xba, 0x52, 0xcb, 0x57, 0x9c, 0x6e, 0x7f, 0x1b, 0x5d, 0x7a,
	0x12, 0xf4, 0xc8, 0x01, 0x23, 0xa7, 0xe1, 0xcb, 0xfe, 0xfe, 0xab, 0xeb, 0xb4, 0x65, 0xc6, 0xd7,
	0x50, 0x27, 0x63, 0x29, 0x87, 0xd3, 0xd8, 0x6c, 0x97, 0xac, 0x51, 0x9b, 0x02, 0xa9, 0xcf, 0x8c,
	0x4d, 0xd2, 0x38, 0x33, 0x3b, 0xa0, 0x6a, 0x9d, 0x19, 0xc0, 0x36, 0xad, 0x69, 0xfc, 0xa3, 0x81,
	0x36, 0x22, 0x96, 0x24, 0x63, 0x16, 0x3d, 0x33, 0xbb, 0xa0, 0xe5, 0x55, 0x69, 0x5d, 0xae, 0xb5,
	0x0d, 0xa3, 0x8b, 0xba, 0x8b, 0x8e, 0x9c, 0xc7, 0x63, 0xe7, 0xa9, 0x52, 0xb9, 0x1c, 0x2d, 0xa6,
	0x2a, 0x5f, 0x4c, 0xe3, 0x84, 0xbb, 0x43, 0xdf, 0x77, 0x47, 0x01, 0xf9, 0x86, 0x3c, 0x62, 0xe4,
	0xb4, 0x47, 0x0e, 0xf6, 0x6e, 0x7c, 0x7d, 0xcd, 0xff, 0x64, 0xf4, 0xd5, 0xeb, 0xe3, 0xc5, 0xc7,
	0xc3, 0x9b, 0xde, 0xed, 0x70, 0xef, 0x0d, 0x52, 0x73, 0x21, 0x3d, 0xfb, 0x2c, 0xbe, 0x89, 0xd6,
	0x79, 0x26, 0xef, 0xea, 0x9e, 0xd6, 0xa0, 0x02, 0x5c, 0x95, 0xd6, 0xa5, 0xba, 0x82, 0x25, 0x61,
	0xd3, 0x46, 0xa2, 0x3b, 0x2b, 0xb8, 0x2a, 0x4e, 0xcc, 0xf5, 0x7f, 0x4f, 0x03, 0xc0, 0x36, 0xad,
	0x69, 0xfc, 0xab, 0x81, 0xba, 0xa9, 0x8a, 0x53, 0x6e, 0x6e, 0x40, 0xd2, 0x5f, 0x8c, 0x95, 0x12,
	0x70, 0xdd, 0xd4, 0xcf, 0x06, 0xfa, 0xc9, 0x78, 0xe2, 0x38, 0xa3, 0x61, 0xd0, 0x27, 0x07, 0xa1,
	0x3e, 0xf4, 0xf0, 0x53, 0x77, 0x04, 0xeb, 0xcb, 0xcf, 0x5e, 0xb9, 0xc4, 0xe9, 0x07, 0x3d, 0x32,
	0x08, 0x17, 0x3d, 0xe0, 0x5d, 0xe2, 0xec, 0x07, 0x3d, 0xd2, 0x6f, 0xe2, 0x45, 0xd0, 0x27, 0x83,
	0xda, 0xe5, 0x06, 0xf7, 0x77, 0x43, 0x67, 0x10, 0xf4, 0xc8, 0x7e, 0xb8, 0x00, 0x4d, 0x0d, 0x0f,
	0x9d, 0xa0, 0x47, 0x3e, 0x6f, 0x82, 0xd5, 0xde, 0x79, 0xec, 0xc1, 0xba, 0xe7, 0x8e, 0x9c, 0x47,
	0x8b, 0x60, 0x8f, 0x84, 0xce, 0x68, 0xf8, 0x16, 0x7b, 0xcb, 0x3d, 0xba, 0x4e, 0xeb, 0x8e, 0xb0,
	0x87, 0x36, 0x8e, 0x9f, 0xf3, 0x42, 0xc6, 0x22, 0x33, 0x37, 0xe1, 0x18, 0xae, 0xae, 0x2e, 0xad,
	0x61, 0x6c, 0xba, 0xfe, 0xa0, 0xde, 0xe1, 0xdb, 0xe8, 0x02, 0xcc, 0xe1, 0x32, 0x36, 0x11, 0x78,
	0x3e, 0xac, 0x4a, 0xeb, 0x6a, 0x6b, 0x5c, 0x1f, 0x34, 0xbe, 0x7f, 0x88, 0xed, 0x3f, 0x0d, 0xb4,
	0xfb, 0xce, 0xff, 0xe6, 0x61, 0xc1, 0xf2, 0x9c, 0x17, 0x7a, 0x28, 0x23, 0x31, 0x69, 0xde, 0x81,
	0xd6, 0x50, 0x6a, 0xd4, 0xa6, 0x40, 0xe2, 0x5b, 0x68, 0x4b, 0xaf, 0xdf, 0xfe, 0x90, 0x27, 0x2c,
	0xce, 0x96, 0x7f, 0xc1, 0x07, 0x55, 0x69, 0xe1, 0x95, 0x76, 0x49, 0xda, 0xb4, 0x2d, 0xd5, 0x97,
	0xce, 0x8b, 0x42, 0x14, 0xcb, 0xa1, 0x6f, 0x5d, 0x3a, 0xc0, 0x36, 0xad, 0x69, 0x4c, 0x51, 0x67,
	0xc2, 0x14, 0x83, 0xa9, 0xdf, 0x1a, 0x90, 0xff, 0xf4, 0x04, 0xb4, 0xab, 0xd6, 0x49, 0x6c, 0x0a,
	0xb9, 0xc6, 0x6b, 0xf0, 0x0e, 0xef, 0xff, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x51, 0x5a, 0xa1, 0x2a,
	0x5e, 0x06, 0x00, 0x00,
}
