// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: app_health_config_metrics.proto

package monitor_config

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *AppHealthConfigMetrics) Validate() error {
	for _, item := range this.Filters {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Filters", err)
			}
		}
	}
	for _, item := range this.Ranges {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Ranges", err)
			}
		}
	}
	return nil
}
func (this *AppHealthConfigMetrics_Filters) Validate() error {
	return nil
}
func (this *AppHealthConfigMetrics_Ranges) Validate() error {
	if this.MinValue != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.MinValue); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("MinValue", err)
		}
	}
	if this.MaxValue != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.MaxValue); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("MaxValue", err)
		}
	}
	return nil
}
