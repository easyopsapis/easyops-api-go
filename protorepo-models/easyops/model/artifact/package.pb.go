// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: package.proto

package artifact

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

//
//包模型
type Package struct {
	//
	//包Id
	PackageId string `protobuf:"bytes,1,opt,name=packageId,proto3" json:"packageId" form:"packageId"`
	//
	//包名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name" form:"name"`
	//
	//版本类型 1 程序包,  2 配置包,  4 文件包
	Type int32 `protobuf:"varint,3,opt,name=type,proto3" json:"type" form:"type"`
	//
	//包分类
	CId int32 `protobuf:"varint,4,opt,name=cId,proto3" json:"cId" form:"cId"`
	//
	//包文件源
	Source string `protobuf:"bytes,5,opt,name=source,proto3" json:"source" form:"source"`
	//
	//repoId
	RepoId string `protobuf:"bytes,6,opt,name=repoId,proto3" json:"repoId" form:"repoId"`
	//
	//repoPath
	RepoPath string `protobuf:"bytes,7,opt,name=repoPath,proto3" json:"repoPath" form:"repoPath"`
	//
	//备注说明
	Memo string `protobuf:"bytes,8,opt,name=memo,proto3" json:"memo" form:"memo"`
	//
	//创建者
	Creator string `protobuf:"bytes,9,opt,name=creator,proto3" json:"creator" form:"creator"`
	//
	//客户唯一编号
	Org int32 `protobuf:"varint,10,opt,name=org,proto3" json:"org" form:"org"`
	//
	//包分类标签
	Category string `protobuf:"bytes,11,opt,name=category,proto3" json:"category" form:"category"`
	//
	//包图标
	Icon string `protobuf:"bytes,12,opt,name=icon,proto3" json:"icon" form:"icon"`
	//
	//包图标样式(颜色)
	Style string `protobuf:"bytes,13,opt,name=style,proto3" json:"style" form:"style"`
	//
	//ctime
	Ctime string `protobuf:"bytes,14,opt,name=ctime,proto3" json:"ctime" form:"ctime"`
	//
	//mtime
	Mtime string `protobuf:"bytes,15,opt,name=mtime,proto3" json:"mtime" form:"mtime"`
	//
	//authUsers
	AuthUsers string `protobuf:"bytes,16,opt,name=authUsers,proto3" json:"authUsers" form:"authUsers"`
	//
	//安装路径
	InstallPath string `protobuf:"bytes,17,opt,name=installPath,proto3" json:"installPath" form:"installPath"`
	//
	//平台
	Platform             string   `protobuf:"bytes,18,opt,name=platform,proto3" json:"platform" form:"platform"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Package) Reset()         { *m = Package{} }
func (m *Package) String() string { return proto.CompactTextString(m) }
func (*Package) ProtoMessage()    {}
func (*Package) Descriptor() ([]byte, []int) {
	return fileDescriptor_ae8103ff0e06fb71, []int{0}
}
func (m *Package) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Package.Unmarshal(m, b)
}
func (m *Package) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Package.Marshal(b, m, deterministic)
}
func (m *Package) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Package.Merge(m, src)
}
func (m *Package) XXX_Size() int {
	return xxx_messageInfo_Package.Size(m)
}
func (m *Package) XXX_DiscardUnknown() {
	xxx_messageInfo_Package.DiscardUnknown(m)
}

var xxx_messageInfo_Package proto.InternalMessageInfo

func (m *Package) GetPackageId() string {
	if m != nil {
		return m.PackageId
	}
	return ""
}

func (m *Package) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Package) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Package) GetCId() int32 {
	if m != nil {
		return m.CId
	}
	return 0
}

func (m *Package) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Package) GetRepoId() string {
	if m != nil {
		return m.RepoId
	}
	return ""
}

func (m *Package) GetRepoPath() string {
	if m != nil {
		return m.RepoPath
	}
	return ""
}

func (m *Package) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *Package) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *Package) GetOrg() int32 {
	if m != nil {
		return m.Org
	}
	return 0
}

func (m *Package) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *Package) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *Package) GetStyle() string {
	if m != nil {
		return m.Style
	}
	return ""
}

func (m *Package) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

func (m *Package) GetMtime() string {
	if m != nil {
		return m.Mtime
	}
	return ""
}

func (m *Package) GetAuthUsers() string {
	if m != nil {
		return m.AuthUsers
	}
	return ""
}

func (m *Package) GetInstallPath() string {
	if m != nil {
		return m.InstallPath
	}
	return ""
}

func (m *Package) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func init() {
	proto.RegisterType((*Package)(nil), "artifact.Package")
}

func init() { proto.RegisterFile("package.proto", fileDescriptor_ae8103ff0e06fb71) }

var fileDescriptor_ae8103ff0e06fb71 = []byte{
	// 790 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x95, 0xdd, 0x6e, 0xdc, 0x44,
	0x14, 0xc7, 0xe3, 0x66, 0xf3, 0x35, 0x69, 0x3e, 0x3a, 0x14, 0x18, 0xf5, 0xc6, 0x91, 0x89, 0x2a,
	0x3b, 0xdb, 0x59, 0xef, 0x26, 0xa5, 0xa2, 0x2b, 0xc4, 0xaa, 0x11, 0x02, 0xad, 0xc4, 0x45, 0x35,
	0x2a, 0x37, 0xb1, 0xbd, 0x30, 0xf1, 0x3a, 0xce, 0xaa, 0xf6, 0x8e, 0x65, 0xcf, 0x12, 0xb6, 0x75,
	0x2e, 0xb9, 0xe1, 0x51, 0x90, 0xb8, 0xe5, 0x01, 0x78, 0x0b, 0x6e, 0x8c, 0xc4, 0x23, 0xf8, 0x09,
	0xd0, 0x1c, 0x7b, 0xd7, 0x4b, 0x83, 0x90, 0x90, 0xb8, 0xe1, 0xca, 0x73, 0xce, 0xff, 0x77, 0x7c,
	0x3e, 0x66, 0xc6, 0x46, 0x7b, 0x09, 0xf7, 0x5f, 0xf3, 0x30, 0xe8, 0x24, 0xa9, 0x90, 0x02, 0x6f,
	0xf3, 0x54, 0x4e, 0xae, 0xb8, 0x2f, 0x1f, 0xd1, 0x70, 0x22, 0xaf, 0x67, 0x97, 0x1d, 0x5f, 0xc4,
	0x76, 0x28, 0x42, 0x61, 0x03, 0x70, 0x39, 0xbb, 0x02, 0x0b, 0x0c, 0x58, 0x55, 0x81, 0x8f, 0x9e,
	0xad, 0xe0, 0xf1, 0xcd, 0x44, 0xbe, 0x16, 0x37, 0x76, 0x28, 0x28, 0x88, 0xf4, 0x3b, 0x1e, 0x4d,
	0xc6, 0x5c, 0x8a, 0x34, 0xb3, 0x97, 0xcb, 0x2a, 0xce, 0xf8, 0x65, 0x17, 0x6d, 0xbd, 0xac, 0x4a,
	0xc0, 0x3f, 0x6a, 0x68, 0xa7, 0x2e, 0x67, 0x38, 0x26, 0xda, 0x91, 0x66, 0xee, 0x9c, 0x47, 0x65,
	0xa1, 0x1f, 0x5e, 0x89, 0x34, 0xee, 0x1b, 0x4b, 0xc9, 0xf8, 0xe3, 0x77, 0xfd, 0x15, 0x62, 0x23,
	0x67, 0xc0, 0xe9, 0x9b, 0x17, 0xf4, 0xa2, 0x4b, 0x9f, 0x7b, 0x6f, 0x3f, 0xb9, 0xa5, 0x7f, 0xb1,
	0x9f, 0xfe, 0x4b, 0xbb, 0x77, 0x7a, 0x7b, 0xcc, 0x9a, 0xf4, 0xb8, 0x8d, 0x5a, 0x53, 0x1e, 0x07,
	0xe4, 0x1e, 0x94, 0xf1, 0x61, 0x59, 0xe8, 0xbb, 0x55, 0x19, 0xca, 0xab, 0x2a, 0x68, 0x25, 0x6b,
	0xdf, 0x77, 0x18, 0x40, 0xf8, 0x23, 0xd4, 0x92, 0xf3, 0x24, 0x20, 0xeb, 0x47, 0x9a, 0xb9, 0x71,
	0x7e, 0xd0, 0xc0, 0xca, 0x6b, 0x30, 0x10, 0xf1, 0x11, 0x5a, 0xf7, 0x87, 0x63, 0xd2, 0x02, 0x66,
	0xbf, 0x2c, 0x74, 0x54, 0x31, 0xfe, 0x70, 0x6c, 0x30, 0x25, 0x61, 0x0b, 0x6d, 0x66, 0x62, 0x96,
	0xfa, 0x01, 0xd9, 0x80, 0xac, 0x0f, 0xca, 0x42, 0xdf, 0xab, 0xa0, 0xca, 0x6f, 0xb0, 0x1a, 0x50,
	0x68, 0x1a, 0x24, 0x62, 0x38, 0x26, 0x9b, 0xef, 0xa2, 0x95, 0xdf, 0x60, 0x35, 0x80, 0x73, 0xb4,
	0xad, 0x56, 0x2f, 0xb9, 0xbc, 0x26, 0x5b, 0x00, 0x7f, 0x5b, 0x16, 0xfa, 0x41, 0x03, 0x2b, 0x45,
	0x75, 0x34, 0x44, 0x5f, 0x8e, 0x4c, 0xd3, 0xb5, 0x9d, 0x91, 0x6b, 0xf7, 0xdd, 0x13, 0x77, 0x60,
	0x18, 0x9f, 0x7e, 0xe6, 0xe6, 0x6e, 0xea, 0x4e, 0xbd, 0xb6, 0xd5, 0xb6, 0x72, 0xd3, 0xb5, 0xad,
	0xdc, 0xa9, 0x86, 0xe6, 0xf5, 0x4d, 0xd7, 0x75, 0x46, 0xae, 0x7b, 0x97, 0x3c, 0x39, 0x66, 0xcb,
	0x8c, 0xd8, 0x42, 0xad, 0x38, 0x88, 0x05, 0xd9, 0x86, 0xcc, 0xef, 0x37, 0xa3, 0x51, 0x5e, 0x95,
	0xf5, 0x5e, 0xb2, 0xc6, 0x00, 0xc1, 0x5f, 0xa0, 0x2d, 0x3f, 0x0d, 0xd4, 0xe1, 0x20, 0x3b, 0x40,
	0x3f, 0x29, 0x0b, 0x7d, 0xbf, 0x1e, 0x52, 0x25, 0xa8, 0x80, 0x0f, 0xd0, 0xc3, 0x91, 0xf3, 0x82,
	0x5e, 0x70, 0xfa, 0xe6, 0x1b, 0xea, 0xb9, 0x37, 0x6f, 0xcf, 0x9e, 0x3c, 0x7b, 0x7a, 0x7b, 0xcc,
	0x16, 0xc1, 0xf8, 0x31, 0x5a, 0x17, 0x69, 0x48, 0x10, 0x0c, 0xfa, 0x61, 0x33, 0x68, 0x91, 0x86,
	0x90, 0xf0, 0x70, 0x8d, 0x29, 0x00, 0xdb, 0x68, 0xdb, 0xe7, 0x32, 0x08, 0x45, 0x3a, 0x27, 0xbb,
	0x90, 0xf0, 0xbd, 0x66, 0x30, 0x0b, 0xc5, 0x60, 0x4b, 0x48, 0x6d, 0xf3, 0xc4, 0x17, 0x53, 0x72,
	0x1f, 0xe0, 0x95, 0x6d, 0x56, 0x5e, 0x83, 0x81, 0x88, 0x1f, 0xa3, 0x8d, 0x4c, 0xce, 0xa3, 0x80,
	0xec, 0x01, 0x75, 0x58, 0x16, 0xfa, 0xfd, 0x7a, 0x0f, 0x95, 0xdb, 0x60, 0x95, 0x8c, 0x7f, 0xd3,
	0xd0, 0x86, 0x2f, 0x27, 0x71, 0x40, 0xf6, 0x01, 0xfc, 0x55, 0x6b, 0x48, 0xf0, 0xab, 0x5a, 0x7f,
	0xd6, 0xd0, 0x4f, 0xda, 0xc8, 0x34, 0x07, 0x7d, 0xa7, 0x47, 0x9f, 0x7b, 0x8e, 0x3a, 0xaa, 0x27,
	0xd6, 0xc0, 0xa9, 0x8f, 0xb0, 0x45, 0xcd, 0x9e, 0xd3, 0xa5, 0xa7, 0x5e, 0xde, 0x05, 0xdd, 0xa2,
	0xe6, 0x99, 0xd3, 0xa5, 0xbd, 0x85, 0x9d, 0x3b, 0x3d, 0x7a, 0x5a, 0x45, 0x59, 0xce, 0xab, 0x23,
	0xcf, 0x3c, 0x75, 0xba, 0xf4, 0xcc, 0xcb, 0x81, 0xa9, 0xdc, 0x7d, 0xd3, 0xe9, 0xd2, 0x8f, 0x17,
	0x46, 0xb3, 0x36, 0xdd, 0x0e, 0x3c, 0xdb, 0xd6, 0xc0, 0xbc, 0xc8, 0x9d, 0x36, 0xf5, 0xcc, 0x41,
	0xff, 0x6f, 0xc2, 0x57, 0xa2, 0x07, 0xc7, 0xac, 0xea, 0x08, 0x7a, 0x8b, 0xa1, 0xb7, 0x83, 0x3b,
	0xbd, 0xc5, 0xff, 0xdb, 0xde, 0xa0, 0x72, 0xfc, 0x15, 0xda, 0xe1, 0x33, 0x79, 0xfd, 0x75, 0x16,
	0xa4, 0x19, 0x39, 0x84, 0xf6, 0x3a, 0xcd, 0x47, 0x6a, 0x29, 0xfd, 0xd3, 0x49, 0x6d, 0x5e, 0x80,
	0x7f, 0xd0, 0xd0, 0xee, 0x64, 0x9a, 0x49, 0x1e, 0x45, 0x70, 0x41, 0x1f, 0xc0, 0x0b, 0xfd, 0xb2,
	0xd0, 0x71, 0x7d, 0xb4, 0x1a, 0xf1, 0x3f, 0xbe, 0xa3, 0xab, 0x79, 0xd5, 0x5d, 0x48, 0x22, 0x2e,
	0x55, 0x4e, 0x82, 0xdf, 0xbd, 0x0b, 0x0b, 0xc5, 0x60, 0x4b, 0xe8, 0xfc, 0xf3, 0x8b, 0xf3, 0x50,
	0x74, 0x02, 0x9e, 0xcd, 0x45, 0x92, 0x75, 0x22, 0xe1, 0xf3, 0xc8, 0xf6, 0xc5, 0x54, 0xa6, 0xdc,
	0x97, 0x59, 0xf5, 0xb3, 0x50, 0xdf, 0x00, 0x1a, 0x8b, 0x71, 0x10, 0x65, 0x76, 0x0d, 0xda, 0x60,
	0xda, 0x8b, 0xbf, 0xcc, 0xe5, 0x26, 0x80, 0x67, 0x7f, 0x06, 0x00, 0x00, 0xff, 0xff, 0xa1, 0xee,
	0x6c, 0xf0, 0x87, 0x06, 0x00, 0x00,
}
