// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: instance.proto

package artifact

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//程序包实例
type Instance struct {
	//
	//所属应用Id
	AppId string `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId" form:"appId"`
	//
	//所属集群Id
	ClusterId string `protobuf:"bytes,2,opt,name=clusterId,proto3" json:"clusterId" form:"clusterId"`
	//
	//创建者
	Creator string `protobuf:"bytes,3,opt,name=creator,proto3" json:"creator" form:"creator"`
	//
	//创建时间
	Ctime string `protobuf:"bytes,4,opt,name=ctime,proto3" json:"ctime" form:"ctime"`
	//
	//设备Id
	DeviceId string `protobuf:"bytes,5,opt,name=deviceId,proto3" json:"deviceId" form:"deviceId"`
	//
	//设备IP
	DeviceIp string `protobuf:"bytes,6,opt,name=deviceIp,proto3" json:"deviceIp" form:"deviceIp"`
	//
	//安装路径
	InstallPath string `protobuf:"bytes,7,opt,name=installPath,proto3" json:"installPath" form:"installPath"`
	//
	//安装时间
	InstallTime string `protobuf:"bytes,8,opt,name=installTime,proto3" json:"installTime" form:"installTime"`
	//
	//实例Id
	InstanceId string `protobuf:"bytes,9,opt,name=instanceId,proto3" json:"instanceId" form:"instanceId"`
	//
	//最近一次操作时间
	LastOperation string `protobuf:"bytes,10,opt,name=lastOperation,proto3" json:"lastOperation" form:"lastOperation"`
	//
	//修改时间
	Mtime string `protobuf:"bytes,11,opt,name=mtime,proto3" json:"mtime" form:"mtime"`
	//
	//组织Id
	Org int32 `protobuf:"varint,12,opt,name=org,proto3" json:"org" form:"org"`
	//
	//所属程序包Id
	PackageId string `protobuf:"bytes,13,opt,name=packageId,proto3" json:"packageId" form:"packageId"`
	//
	//所属包名称
	PackageName string `protobuf:"bytes,14,opt,name=packageName,proto3" json:"packageName" form:"packageName"`
	//
	//包类型
	PackageType string `protobuf:"bytes,15,opt,name=packageType,proto3" json:"packageType" form:"packageType"`
	//
	//更新时间
	UpdateTime string `protobuf:"bytes,16,opt,name=updateTime,proto3" json:"updateTime" form:"updateTime"`
	//
	//所属版本Id
	VersionId string `protobuf:"bytes,17,opt,name=versionId,proto3" json:"versionId" form:"versionId"`
	//
	//所属版本名
	VersionName          string   `protobuf:"bytes,18,opt,name=versionName,proto3" json:"versionName" form:"versionName"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Instance) Reset()         { *m = Instance{} }
func (m *Instance) String() string { return proto.CompactTextString(m) }
func (*Instance) ProtoMessage()    {}
func (*Instance) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd22322185b2070b, []int{0}
}
func (m *Instance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Instance.Unmarshal(m, b)
}
func (m *Instance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Instance.Marshal(b, m, deterministic)
}
func (m *Instance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Instance.Merge(m, src)
}
func (m *Instance) XXX_Size() int {
	return xxx_messageInfo_Instance.Size(m)
}
func (m *Instance) XXX_DiscardUnknown() {
	xxx_messageInfo_Instance.DiscardUnknown(m)
}

var xxx_messageInfo_Instance proto.InternalMessageInfo

func (m *Instance) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *Instance) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *Instance) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *Instance) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

func (m *Instance) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *Instance) GetDeviceIp() string {
	if m != nil {
		return m.DeviceIp
	}
	return ""
}

func (m *Instance) GetInstallPath() string {
	if m != nil {
		return m.InstallPath
	}
	return ""
}

func (m *Instance) GetInstallTime() string {
	if m != nil {
		return m.InstallTime
	}
	return ""
}

func (m *Instance) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *Instance) GetLastOperation() string {
	if m != nil {
		return m.LastOperation
	}
	return ""
}

func (m *Instance) GetMtime() string {
	if m != nil {
		return m.Mtime
	}
	return ""
}

func (m *Instance) GetOrg() int32 {
	if m != nil {
		return m.Org
	}
	return 0
}

func (m *Instance) GetPackageId() string {
	if m != nil {
		return m.PackageId
	}
	return ""
}

func (m *Instance) GetPackageName() string {
	if m != nil {
		return m.PackageName
	}
	return ""
}

func (m *Instance) GetPackageType() string {
	if m != nil {
		return m.PackageType
	}
	return ""
}

func (m *Instance) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

func (m *Instance) GetVersionId() string {
	if m != nil {
		return m.VersionId
	}
	return ""
}

func (m *Instance) GetVersionName() string {
	if m != nil {
		return m.VersionName
	}
	return ""
}

func init() {
	proto.RegisterType((*Instance)(nil), "artifact.Instance")
}

func init() { proto.RegisterFile("instance.proto", fileDescriptor_fd22322185b2070b) }

var fileDescriptor_fd22322185b2070b = []byte{
	// 1033 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x97, 0x5f, 0x6b, 0xdb, 0x56,
	0x14, 0xc0, 0xa7, 0x76, 0x69, 0xe3, 0x9b, 0x36, 0x7f, 0x44, 0x19, 0x22, 0x2f, 0xce, 0x3c, 0x6f,
	0x5c, 0xc5, 0xb9, 0x96, 0x25, 0x3b, 0x69, 0x23, 0x46, 0x45, 0xc2, 0xe8, 0xf0, 0xc3, 0xfe, 0xb9,
	0x79, 0x8a, 0xae, 0x3c, 0x6e, 0x24, 0xc5, 0xf5, 0x62, 0xfb, 0x0a, 0x49, 0x49, 0x69, 0x2d, 0x3d,
	0x6e, 0x30, 0x18, 0x0c, 0xf6, 0x31, 0x0a, 0xfb, 0x12, 0x7b, 0xe9, 0xbe, 0xc2, 0x5e, 0x3c, 0x18,
	0x0c, 0x06, 0x7b, 0xf3, 0x27, 0x18, 0xf7, 0xca, 0xb6, 0xd4, 0x3a, 0xda, 0x56, 0xa8, 0x03, 0x79,
	0x49, 0xee, 0xb9, 0xe7, 0xdf, 0xef, 0xf8, 0x48, 0xf7, 0x1e, 0x81, 0xd5, 0xee, 0x20, 0x08, 0xc9,
	0xc0, 0x76, 0xab, 0x9e, 0x4f, 0x43, 0x2a, 0x2e, 0x13, 0x3f, 0xec, 0x9e, 0x12, 0x3b, 0xdc, 0x44,
	0x9d, 0x6e, 0xf8, 0xe4, 0xfc, 0xa4, 0x6a, 0xd3, 0xbe, 0xd2, 0xa1, 0x1d, 0xaa, 0x70, 0x83, 0x93,
	0xf3, 0x53, 0x2e, 0x71, 0x81, 0xaf, 0x12, 0xc7, 0xcd, 0xbd, 0x8c, 0x79, 0xff, 0x69, 0x37, 0x3c,
	0xa3, 0x4f, 0x95, 0x0e, 0x45, 0x5c, 0x89, 0x2e, 0x48, 0xaf, 0xeb, 0x90, 0x90, 0xfa, 0x81, 0x32,
	0x5b, 0x26, 0x7e, 0xa5, 0x3f, 0x37, 0xc1, 0x72, 0x73, 0xc2, 0x20, 0xea, 0x60, 0x89, 0x78, 0x5e,
	0xd3, 0x91, 0x84, 0x2d, 0x01, 0x16, 0x0e, 0xcb, 0xe3, 0x51, 0xf1, 0xce, 0x29, 0xf5, 0xfb, 0x7a,
	0x89, 0x6f, 0x97, 0xfe, 0xf8, 0xbd, 0xb8, 0x0e, 0x56, 0xdb, 0x66, 0x0d, 0xed, 0x13, 0xf4, 0xdc,
	0x1a, 0xaa, 0xf5, 0xb8, 0xdc, 0x4a, 0x5c, 0xc4, 0xef, 0x05, 0x50, 0xb0, 0x7b, 0xe7, 0x41, 0xe8,
	0xfa, 0x4d, 0x47, 0xba, 0xc1, 0x03, 0x9c, 0x8d, 0x47, 0xc5, 0xf5, 0x24, 0xc0, 0x4c, 0xc5, 0x82,
	0x3c, 0x06, 0x5f, 0xb5, 0x4d, 0x82, 0x4e, 0x0f, 0xd0, 0xa3, 0x1a, 0xda, 0xb7, 0x86, 0x0f, 0x62,
	0x64, 0x64, 0xe5, 0xc6, 0x1b, 0xca, 0xaa, 0x16, 0x97, 0x5b, 0x69, 0x76, 0xf1, 0x31, 0xb8, 0x6d,
	0xfb, 0x2e, 0xab, 0x52, 0xba, 0xc9, 0x41, 0xf6, 0xc7, 0xa3, 0xe2, 0xea, 0x04, 0x24, 0x51, 0x30,
	0x8c, 0x0f, 0xc0, 0xfb, 0x0c, 0xe3, 0xf9, 0x01, 0x3a, 0x66, 0x61, 0xcc, 0xea, 0x6c, 0xfd, 0x35,
	0xb2, 0x86, 0xda, 0x4e, 0x5d, 0x8d, 0xcb, 0xad, 0x69, 0x24, 0xf1, 0x37, 0x01, 0x2c, 0xd9, 0x61,
	0xb7, 0xef, 0x4a, 0xef, 0xf2, 0x98, 0xbf, 0x08, 0xe9, 0xcf, 0xc3, 0xf7, 0x59, 0xc8, 0x9f, 0x05,
	0xf0, 0x42, 0x68, 0x43, 0x68, 0xe8, 0xa6, 0xca, 0x42, 0xb2, 0xb8, 0xdb, 0xb2, 0x61, 0x4e, 0xb0,
	0x65, 0x04, 0x55, 0xb3, 0x86, 0x34, 0x2b, 0xaa, 0x71, 0xbd, 0x8c, 0x60, 0xdd, 0xac, 0x21, 0x75,
	0x2a, 0x47, 0xa6, 0x8a, 0xb4, 0xc4, 0x4b, 0x36, 0x8f, 0xb6, 0x2c, 0xa8, 0x99, 0x35, 0x54, 0xb7,
	0x22, 0x6e, 0x93, 0x6c, 0xeb, 0xd0, 0xac, 0xa1, 0xdd, 0xa9, 0x90, 0xae, 0x21, 0xae, 0xf2, 0xff,
	0x15, 0xd9, 0x80, 0xc7, 0x91, 0x59, 0x41, 0x16, 0x34, 0xf4, 0x4b, 0xdc, 0x33, 0xde, 0x46, 0xb9,
	0x95, 0x54, 0x24, 0x7e, 0x27, 0x80, 0x65, 0xc7, 0xbd, 0xe8, 0xda, 0x6e, 0xd3, 0x91, 0x96, 0x78,
	0x79, 0xdf, 0x8c, 0x47, 0xc5, 0xb5, 0xa4, 0xba, 0xa9, 0x66, 0x61, 0xad, 0x9b, 0xe5, 0x16, 0x5f,
	0x16, 0x66, 0x20, 0x9e, 0x74, 0x8b, 0x83, 0xbc, 0x28, 0xcc, 0x91, 0x78, 0x8c, 0xe4, 0xa7, 0x02,
	0xf8, 0xb1, 0xd0, 0x86, 0x50, 0x83, 0xbb, 0xbc, 0xa6, 0xa1, 0x1a, 0xb3, 0x42, 0x1b, 0x16, 0x76,
	0x86, 0x6a, 0x2c, 0x27, 0x45, 0x1b, 0x4c, 0xd8, 0xd1, 0x62, 0x19, 0xe2, 0xea, 0xff, 0xb4, 0x94,
	0x87, 0xf5, 0x58, 0x8e, 0x70, 0xb0, 0x0d, 0x21, 0xfb, 0xa9, 0xf7, 0x0f, 0xd0, 0x23, 0x82, 0x4e,
	0xad, 0xa1, 0xba, 0xd3, 0x88, 0x75, 0x79, 0x78, 0x3f, 0x9e, 0xdb, 0x8d, 0x74, 0x59, 0x8e, 0x2e,
	0x35, 0xde, 0x8b, 0xa1, 0x3e, 0x67, 0x0d, 0xa1, 0x96, 0x70, 0x44, 0xda, 0x84, 0x22, 0x52, 0xb1,
	0x83, 0x9d, 0x88, 0x3f, 0x02, 0x06, 0x76, 0x12, 0xd8, 0xff, 0xb0, 0x49, 0x30, 0x73, 0x33, 0xef,
	0xc6, 0x10, 0xce, 0xe7, 0x96, 0x93, 0x12, 0x23, 0xfd, 0x4a, 0x18, 0x1a, 0xb9, 0x0c, 0xcc, 0xed,
	0x32, 0x95, 0xf1, 0x36, 0xc1, 0xfe, 0x85, 0xac, 0x9e, 0x4b, 0xd6, 0xc8, 0x21, 0x1b, 0xd6, 0x76,
	0xb4, 0xf8, 0x8a, 0xe8, 0xb4, 0x5c, 0xba, 0xdd, 0x7c, 0xba, 0xfa, 0x55, 0xd1, 0xa9, 0xb9, 0x74,
	0x7b, 0xf9, 0x74, 0x8d, 0x45, 0xd0, 0xe9, 0x79, 0x20, 0xf7, 0xf3, 0x41, 0x76, 0xdf, 0x3e, 0x88,
	0x0c, 0x3f, 0xac, 0x56, 0x64, 0x03, 0x07, 0xdb, 0xe9, 0x49, 0xe6, 0x89, 0xdf, 0x0a, 0x60, 0x85,
	0x5f, 0xee, 0xbd, 0xde, 0x97, 0x24, 0x7c, 0x22, 0xdd, 0xe6, 0x87, 0x99, 0x3d, 0x1e, 0x15, 0xc5,
	0xe4, 0x2c, 0xcb, 0x28, 0xd9, 0x71, 0xd6, 0x04, 0x9f, 0xb6, 0x21, 0xc4, 0x8a, 0xd9, 0xc6, 0x8a,
	0x8e, 0xb7, 0xb1, 0x51, 0x2a, 0x7d, 0xfc, 0x10, 0x47, 0xd8, 0xc7, 0x03, 0xab, 0x22, 0x57, 0xe4,
	0x08, 0x62, 0x45, 0x8e, 0x26, 0xd7, 0x95, 0xa5, 0x43, 0x8c, 0xcd, 0x36, 0xc6, 0xf3, 0x96, 0xdb,
	0xe5, 0x56, 0x36, 0xaf, 0xf8, 0x77, 0xca, 0x71, 0xc4, 0x2e, 0xaf, 0x65, 0xce, 0xf1, 0xab, 0x30,
	0x07, 0x72, 0x74, 0x4d, 0xaf, 0xb0, 0x6c, 0x75, 0xe2, 0x0f, 0x02, 0x00, 0xd3, 0x91, 0xaa, 0xe9,
	0x48, 0x05, 0x5e, 0x6c, 0x6f, 0x3c, 0x2a, 0x6e, 0x64, 0x6a, 0x1d, 0x2c, 0xf4, 0x32, 0xcb, 0xe4,
	0x17, 0x1f, 0x82, 0xbb, 0x3d, 0x12, 0x84, 0x5f, 0x78, 0xae, 0x4f, 0xc2, 0x2e, 0x1d, 0x48, 0x80,
	0x03, 0x49, 0xe3, 0x51, 0xf1, 0x5e, 0x02, 0xf4, 0x8a, 0xba, 0xd4, 0x7a, 0xd5, 0x9c, 0xcf, 0x1c,
	0x7d, 0x3e, 0x73, 0xac, 0xcc, 0xcd, 0x1c, 0xfd, 0x6b, 0x3b, 0x73, 0x70, 0x72, 0xf1, 0x23, 0x70,
	0x93, 0xfa, 0x1d, 0xe9, 0xce, 0x96, 0x00, 0x97, 0x0e, 0xef, 0x8d, 0x47, 0x45, 0x90, 0xd4, 0x45,
	0xfd, 0x0e, 0xab, 0xea, 0xc6, 0xfa, 0x3b, 0x2d, 0x66, 0xc0, 0x07, 0x4b, 0x8f, 0xd8, 0x67, 0xa4,
	0xc3, 0x3a, 0x7a, 0xf7, 0xf5, 0xc1, 0x72, 0xa6, 0x5a, 0xdc, 0x60, 0x39, 0x4b, 0x21, 0x3e, 0x00,
	0x2b, 0x13, 0xe1, 0x73, 0xd2, 0x77, 0xa5, 0x55, 0x0e, 0xf3, 0x5e, 0xfa, 0x2a, 0x65, 0x94, 0xa5,
	0x56, 0xd6, 0x34, 0xe3, 0x79, 0xf4, 0xcc, 0x73, 0xa5, 0xb5, 0x1c, 0x4f, 0xa6, 0x4c, 0x3d, 0x99,
	0x24, 0xfe, 0x25, 0x00, 0x70, 0xee, 0x39, 0x24, 0x74, 0xf9, 0xfb, 0xbb, 0xce, 0x3d, 0x5f, 0x0a,
	0xe9, 0x33, 0x9d, 0x2a, 0xaf, 0xe3, 0xd3, 0x90, 0xa9, 0x8d, 0xb7, 0xfa, 0xc2, 0xf5, 0x83, 0x2e,
	0x1d, 0x34, 0x1d, 0x69, 0xe3, 0xf5, 0x56, 0xcf, 0x54, 0x8b, 0x6b, 0xf5, 0x2c, 0x85, 0xf8, 0x19,
	0x58, 0x99, 0x08, 0xbc, 0xd5, 0x22, 0x87, 0xa9, 0xa4, 0x0d, 0xcb, 0x28, 0x19, 0xce, 0x06, 0x58,
	0x6b, 0x63, 0xa7, 0x82, 0xab, 0xd3, 0x3f, 0xe5, 0x56, 0xd6, 0xff, 0xf0, 0x93, 0xe3, 0xc3, 0x0e,
	0xad, 0xba, 0x24, 0x78, 0x46, 0xbd, 0xa0, 0xda, 0xa3, 0x36, 0xe9, 0x29, 0x36, 0x1d, 0x84, 0x3e,
	0xb1, 0xc3, 0x20, 0xf9, 0xb6, 0xf3, 0x5d, 0x8f, 0xa2, 0x3e, 0x75, 0xdc, 0x5e, 0xa0, 0x4c, 0x0c,
	0x15, 0x2e, 0x2a, 0xd3, 0x8f, 0xc2, 0x93, 0x5b, 0xdc, 0xb0, 0xfe, 0x4f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xf5, 0xc0, 0x3b, 0x8d, 0x37, 0x0e, 0x00, 0x00,
}
