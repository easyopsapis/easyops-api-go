// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: arch_host.proto

package architecture_view

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//架构图应用部署主机信息
type ArchitectureHost struct {
	//
	//防火墙ID
	InstanceId string `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId" form:"instanceId"`
	//
	//防火墙名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name" form:"name"`
	//
	//管理IP
	Ip string `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip" form:"ip"`
	//
	//备注
	Memo string `protobuf:"bytes,4,opt,name=memo,proto3" json:"memo" form:"memo"`
	//
	//创建时间
	Ctime string `protobuf:"bytes,5,opt,name=ctime,proto3" json:"ctime" form:"ctime"`
	//
	//创建人
	Creator              string   `protobuf:"bytes,6,opt,name=creator,proto3" json:"creator" form:"creator"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArchitectureHost) Reset()         { *m = ArchitectureHost{} }
func (m *ArchitectureHost) String() string { return proto.CompactTextString(m) }
func (*ArchitectureHost) ProtoMessage()    {}
func (*ArchitectureHost) Descriptor() ([]byte, []int) {
	return fileDescriptor_c95a8daa27e685d5, []int{0}
}
func (m *ArchitectureHost) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArchitectureHost.Unmarshal(m, b)
}
func (m *ArchitectureHost) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArchitectureHost.Marshal(b, m, deterministic)
}
func (m *ArchitectureHost) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArchitectureHost.Merge(m, src)
}
func (m *ArchitectureHost) XXX_Size() int {
	return xxx_messageInfo_ArchitectureHost.Size(m)
}
func (m *ArchitectureHost) XXX_DiscardUnknown() {
	xxx_messageInfo_ArchitectureHost.DiscardUnknown(m)
}

var xxx_messageInfo_ArchitectureHost proto.InternalMessageInfo

func (m *ArchitectureHost) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *ArchitectureHost) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ArchitectureHost) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *ArchitectureHost) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *ArchitectureHost) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

func (m *ArchitectureHost) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func init() {
	proto.RegisterType((*ArchitectureHost)(nil), "architecture_view.ArchitectureHost")
}

func init() { proto.RegisterFile("arch_host.proto", fileDescriptor_c95a8daa27e685d5) }

var fileDescriptor_c95a8daa27e685d5 = []byte{
	// 556 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x95, 0x4f, 0x6e, 0xd3, 0x40,
	0x14, 0x87, 0xd5, 0xd2, 0x16, 0xd9, 0x45, 0xfd, 0xe3, 0x95, 0xd5, 0x8d, 0x91, 0x29, 0x68, 0xa6,
	0x64, 0xec, 0xd8, 0x49, 0x5a, 0xd5, 0x9b, 0xa8, 0x5d, 0x20, 0x2a, 0xc4, 0xc6, 0x4b, 0xe2, 0xb4,
	0x72, 0xec, 0x49, 0x62, 0x11, 0x67, 0x2c, 0x7b, 0xd2, 0x08, 0x6c, 0x9f, 0x01, 0x89, 0x33, 0x70,
	0x85, 0x5e, 0x27, 0x48, 0x1c, 0x21, 0x27, 0x40, 0x33, 0x13, 0x20, 0x22, 0x35, 0xb0, 0x28, 0xd9,
	0xcd, 0x7b, 0xbf, 0xef, 0xcd, 0xfb, 0xbc, 0x19, 0xcb, 0xfb, 0x7e, 0x1a, 0x0c, 0x6f, 0x86, 0x24,
	0xa3, 0x46, 0x92, 0x12, 0x4a, 0x94, 0x43, 0xd6, 0x88, 0x28, 0x0e, 0xe8, 0x24, 0xc5, 0x37, 0xb7,
	0x11, 0x9e, 0x1e, 0xa1, 0x41, 0x44, 0x87, 0x93, 0x9e, 0x11, 0x90, 0xd8, 0x1c, 0x90, 0x01, 0x31,
	0x39, 0xd9, 0x9b, 0xf4, 0x79, 0xc5, 0x0b, 0x7e, 0x12, 0x37, 0x1c, 0x9d, 0x2e, 0xe1, 0xf1, 0x34,
	0xa2, 0xef, 0xc9, 0xd4, 0x1c, 0x10, 0xc4, 0x43, 0x74, 0xeb, 0x8f, 0xa2, 0xd0, 0xa7, 0x24, 0xcd,
	0xcc, 0x9f, 0x47, 0x31, 0xa7, 0xdf, 0xed, 0xca, 0x07, 0x17, 0x4b, 0xcb, 0x5f, 0x93, 0x8c, 0x2a,
	0x57, 0xb2, 0x1c, 0x8d, 0x33, 0xea, 0x8f, 0x03, 0x7c, 0x15, 0xaa, 0x1b, 0x4f, 0x37, 0x80, 0x74,
	0x09, 0xe7, 0x33, 0xed, 0xb0, 0x4f, 0xd2, 0xd8, 0xd1, 0x7f, 0x65, 0xfa, 0xb7, 0xaf, 0xda, 0x81,
	0xbc, 0x77, 0xdd, 0xa9, 0xa3, 0x73, 0x1f, 0x7d, 0xec, 0xe6, 0x56, 0xa3, 0x3c, 0x76, 0x97, 0x86,
	0x95, 0x67, 0xf2, 0xd6, 0xd8, 0x8f, 0xb1, 0xba, 0xc9, 0x2f, 0xd9, 0x9f, 0xcf, 0xb4, 0x5d, 0x71,
	0x09, 0xeb, 0xea, 0x2e, 0x0f, 0x95, 0x3b, 0x49, 0xde, 0x8c, 0x12, 0xf5, 0x11, 0x67, 0xbe, 0x48,
	0xf3, 0x99, 0x26, 0x2d, 0x36, 0x25, 0x6c, 0xc3, 0x67, 0x49, 0xfe, 0x24, 0x5d, 0x03, 0x60, 0x83,
	0x56, 0xa7, 0x8e, 0x5a, 0xdd, 0xdc, 0x2a, 0x8b, 0x4e, 0x1d, 0x35, 0xbb, 0x5e, 0x98, 0x5b, 0x25,
	0x64, 0x67, 0xab, 0xdb, 0x66, 0x45, 0xcd, 0x2e, 0x21, 0xf0, 0x8c, 0x7f, 0x24, 0x61, 0xde, 0x28,
	0x61, 0xe1, 0x65, 0x27, 0x00, 0x00, 0xf6, 0x05, 0x17, 0xe8, 0x95, 0x8f, 0xfa, 0xdd, 0xdc, 0xaa,
	0x35, 0x4b, 0x07, 0xe6, 0x67, 0xe5, 0x4a, 0xb7, 0x70, 0x20, 0x2c, 0xee, 0x85, 0x4f, 0x4b, 0xe0,
	0xac, 0xd0, 0x00, 0xd8, 0xc2, 0xa3, 0xb0, 0x17, 0x16, 0x85, 0xe5, 0x85, 0x5e, 0x58, 0x74, 0x2c,
	0x74, 0xce, 0x3c, 0x84, 0xec, 0x5f, 0x18, 0xa1, 0x59, 0xb9, 0xb9, 0x55, 0x02, 0xb0, 0xba, 0x1b,
	0x8a, 0x4f, 0x2c, 0x9c, 0xb5, 0x38, 0x34, 0x2b, 0x1d, 0xd8, 0xd8, 0x7d, 0x51, 0xfb, 0x21, 0xc5,
	0xfe, 0x60, 0xd6, 0xa8, 0x34, 0x6b, 0x56, 0x98, 0xe5, 0xf5, 0x9a, 0x5d, 0xae, 0xc9, 0xce, 0xae,
	0xb4, 0x6b, 0x55, 0xdb, 0x35, 0xd6, 0x65, 0x67, 0x55, 0xda, 0x9d, 0x56, 0xdb, 0x35, 0xff, 0x87,
	0x9d, 0x53, 0x25, 0x72, 0x56, 0x2d, 0xd2, 0x7a, 0x78, 0x11, 0x08, 0x9e, 0x1b, 0x2f, 0x61, 0xdb,
	0xcb, 0x4e, 0x8e, 0xdd, 0xcd, 0x28, 0x61, 0x8f, 0x5b, 0x8c, 0x63, 0xa2, 0x6e, 0xfd, 0xfe, 0xb8,
	0xb1, 0xae, 0xee, 0xf2, 0x50, 0x79, 0x21, 0x6f, 0x07, 0x34, 0x8a, 0xb1, 0xba, 0xcd, 0xa9, 0x83,
	0xf9, 0x4c, 0x7b, 0x22, 0x28, 0xde, 0xd6, 0x5d, 0x11, 0x2b, 0x35, 0xf9, 0x71, 0x90, 0x62, 0xf6,
	0x34, 0xab, 0x3b, 0x9c, 0x54, 0xe6, 0x33, 0x6d, 0x6f, 0x41, 0x8a, 0x40, 0x77, 0x7f, 0x20, 0x97,
	0x6f, 0xdf, 0xbd, 0x19, 0x10, 0x03, 0xfb, 0xd9, 0x07, 0x92, 0x64, 0xc6, 0x88, 0x04, 0xfe, 0xc8,
	0x0c, 0xc8, 0x98, 0xa6, 0x7e, 0x40, 0x33, 0xf1, 0xaf, 0x48, 0x71, 0x42, 0x50, 0x4c, 0x42, 0x3c,
	0xca, 0xcc, 0x05, 0x68, 0xf2, 0xd2, 0x5c, 0xf9, 0xdb, 0xf4, 0x76, 0xf8, 0x44, 0xe3, 0x7b, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x75, 0x88, 0x6a, 0x99, 0x9a, 0x06, 0x00, 0x00,
}
