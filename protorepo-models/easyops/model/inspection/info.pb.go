// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: info.proto

package inspection

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//套件信息
type InspectionInfo struct {
	//
	//套件Id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" form:"id"`
	//
	//套件名
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name" form:"name"`
	//
	//备注
	Memo string `protobuf:"bytes,3,opt,name=memo,proto3" json:"memo" form:"memo"`
	//
	//套件索引
	Index int32 `protobuf:"varint,4,opt,name=index,proto3" json:"index" form:"index"`
	//
	//CMDB模型ID
	ObjectId string `protobuf:"bytes,5,opt,name=objectId,proto3" json:"objectId" form:"objectId"`
	//
	//CMDB模型名称
	ObjectName string `protobuf:"bytes,6,opt,name=objectName,proto3" json:"objectName" form:"objectName"`
	//
	//唯一键列表(CMDB模型的属性)
	Keys []string `protobuf:"bytes,7,rep,name=keys,proto3" json:"keys" form:"keys"`
	//
	//CMDB模型与主机的关系ID
	RelationIdWithHost string `protobuf:"bytes,8,opt,name=relationIdWithHost,proto3" json:"relationIdWithHost" form:"relationIdWithHost"`
	//
	//对端主机Id(不一定是Host)
	CounterSideId string `protobuf:"bytes,9,opt,name=counterSideId,proto3" json:"counterSideId" form:"counterSideId"`
	//
	//套件的状态
	//ok: 正常
	//object_deleted: CMDB模型被删除
	//keys_deleted: 唯一键被删除
	//keys_not_unique: 唯一键不唯一
	//object_relation_not_ok: CMDB模型与主机的关系ID不符合要求
	//
	Status string `protobuf:"bytes,10,opt,name=status,proto3" json:"status" form:"status"`
	//
	//执行巡检的方式
	//agent: 通过agent执行
	//
	Method string `protobuf:"bytes,11,opt,name=method,proto3" json:"method" form:"method"`
	//
	//创建时间
	Ctime                string   `protobuf:"bytes,12,opt,name=ctime,proto3" json:"ctime" form:"ctime"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InspectionInfo) Reset()         { *m = InspectionInfo{} }
func (m *InspectionInfo) String() string { return proto.CompactTextString(m) }
func (*InspectionInfo) ProtoMessage()    {}
func (*InspectionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f140d5b28dddb141, []int{0}
}
func (m *InspectionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InspectionInfo.Unmarshal(m, b)
}
func (m *InspectionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InspectionInfo.Marshal(b, m, deterministic)
}
func (m *InspectionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InspectionInfo.Merge(m, src)
}
func (m *InspectionInfo) XXX_Size() int {
	return xxx_messageInfo_InspectionInfo.Size(m)
}
func (m *InspectionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_InspectionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_InspectionInfo proto.InternalMessageInfo

func (m *InspectionInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *InspectionInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InspectionInfo) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *InspectionInfo) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *InspectionInfo) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *InspectionInfo) GetObjectName() string {
	if m != nil {
		return m.ObjectName
	}
	return ""
}

func (m *InspectionInfo) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *InspectionInfo) GetRelationIdWithHost() string {
	if m != nil {
		return m.RelationIdWithHost
	}
	return ""
}

func (m *InspectionInfo) GetCounterSideId() string {
	if m != nil {
		return m.CounterSideId
	}
	return ""
}

func (m *InspectionInfo) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *InspectionInfo) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *InspectionInfo) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

func init() {
	proto.RegisterType((*InspectionInfo)(nil), "inspection.InspectionInfo")
}

func init() { proto.RegisterFile("info.proto", fileDescriptor_f140d5b28dddb141) }

var fileDescriptor_f140d5b28dddb141 = []byte{
	// 618 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x94, 0x5f, 0x4f, 0xd3, 0x50,
	0x18, 0xc6, 0x53, 0x60, 0xc0, 0x0e, 0x20, 0xd2, 0x68, 0x52, 0x31, 0xa4, 0x4b, 0xdd, 0xc5, 0x19,
	0x78, 0xd6, 0x6e, 0x13, 0x12, 0x76, 0xc1, 0x74, 0x31, 0xc4, 0xdd, 0x70, 0x51, 0x4d, 0x4c, 0xa8,
	0xc3, 0x74, 0xed, 0xd9, 0x38, 0xb2, 0xf6, 0x2c, 0xed, 0x99, 0x88, 0x8c, 0x7b, 0x3f, 0x8b, 0x89,
	0x5f, 0xc2, 0x6f, 0xe1, 0x4d, 0x4d, 0xfc, 0x08, 0xfd, 0x02, 0x9a, 0xbe, 0x67, 0x63, 0x03, 0xb9,
	0x60, 0x37, 0x7d, 0xff, 0xfc, 0x9e, 0xe7, 0x7d, 0xdf, 0x6c, 0x2b, 0x42, 0x2c, 0xec, 0xf2, 0xf2,
	0x20, 0xe2, 0x82, 0xab, 0x88, 0x85, 0xf1, 0x80, 0x7a, 0x82, 0xf1, 0x70, 0x93, 0xf4, 0x98, 0x38,
	0x1d, 0x76, 0xca, 0x1e, 0x0f, 0xcc, 0x1e, 0xef, 0x71, 0x13, 0x90, 0xce, 0xb0, 0x0b, 0x19, 0x24,
	0x10, 0x49, 0xe9, 0xe6, 0xde, 0x0c, 0x1e, 0x9c, 0x33, 0x71, 0xc6, 0xcf, 0xcd, 0x1e, 0x27, 0xd0,
	0x24, 0x9f, 0xdd, 0x3e, 0xf3, 0x5d, 0xc1, 0xa3, 0xd8, 0xbc, 0x0e, 0xa5, 0xce, 0xf8, 0xb6, 0x84,
	0x1e, 0xb4, 0xae, 0xa7, 0xb6, 0xc2, 0x2e, 0x57, 0x5f, 0xa2, 0x39, 0xe6, 0x6b, 0x4a, 0x41, 0xc1,
	0xf9, 0xa6, 0x95, 0x26, 0x7a, 0xbe, 0xcb, 0xa3, 0xa0, 0x6e, 0x30, 0xdf, 0xf8, 0xf3, 0x5b, 0xd7,
	0xd1, 0xd6, 0x89, 0xe3, 0x92, 0xaf, 0xaf, 0xc8, 0xf1, 0xc7, 0xb6, 0x63, 0x91, 0xfd, 0x49, 0x7c,
	0x69, 0x3d, 0xaf, 0x55, 0xae, 0x8a, 0xf6, 0x1c, 0xf3, 0xd5, 0x67, 0x68, 0x21, 0x74, 0x03, 0xaa,
	0xcd, 0x81, 0xc7, 0x7a, 0x9a, 0xe8, 0x2b, 0xd2, 0x23, 0xab, 0x1a, 0x36, 0x34, 0x33, 0x28, 0xa0,
	0x01, 0xd7, 0xe6, 0x6f, 0x43, 0x59, 0xd5, 0xb0, 0xa1, 0xa9, 0xee, 0xa2, 0x1c, 0x0b, 0x7d, 0xfa,
	0x45, 0x5b, 0x28, 0x28, 0x38, 0xd7, 0xd4, 0xd3, 0x44, 0x5f, 0x1d, 0xaf, 0x93, 0x95, 0xb3, 0x8d,
	0x56, 0x1e, 0xfe, 0x9d, 0x7c, 0x14, 0x5b, 0xd2, 0xaa, 0x8d, 0x96, 0x79, 0xe7, 0x13, 0xf5, 0x44,
	0xcb, 0xd7, 0x72, 0xe0, 0xbf, 0x97, 0x26, 0xfa, 0xba, 0x54, 0x4e, 0x3a, 0xf7, 0x3a, 0xe7, 0xda,
	0x47, 0xdd, 0x45, 0x48, 0xc6, 0x47, 0xd9, 0x69, 0x8b, 0xe0, 0xfa, 0x38, 0x4d, 0xf4, 0x8d, 0x59,
	0xd7, 0x23, 0x38, 0x70, 0x06, 0x54, 0x0f, 0xd1, 0xc2, 0x19, 0xbd, 0x88, 0xb5, 0xa5, 0xc2, 0x3c,
	0xce, 0x37, 0xab, 0xd3, 0x33, 0xb3, 0xea, 0xbd, 0x56, 0x00, 0xbd, 0x1a, 0x22, 0x35, 0xa2, 0x7d,
	0x17, 0xbe, 0x25, 0xff, 0x3d, 0x13, 0xa7, 0x6f, 0x78, 0x2c, 0xb4, 0x65, 0x58, 0xe3, 0x20, 0x4d,
	0xf4, 0x27, 0xd2, 0xf5, 0x7f, 0x26, 0x9b, 0xb1, 0x85, 0x9e, 0xde, 0x3d, 0x63, 0xbb, 0x38, 0x3a,
	0x29, 0xda, 0x77, 0x38, 0xab, 0x07, 0x68, 0xcd, 0xe3, 0xc3, 0x50, 0xd0, 0xe8, 0x2d, 0xf3, 0x69,
	0xcb, 0xd7, 0xf2, 0x30, 0x4a, 0x4b, 0x13, 0xfd, 0x91, 0x1c, 0x75, 0xa3, 0x6d, 0xd8, 0x37, 0x71,
	0xb5, 0x84, 0x16, 0x63, 0xe1, 0x8a, 0x61, 0xac, 0x21, 0x10, 0x6e, 0xa4, 0x89, 0xbe, 0x26, 0x85,
	0xb2, 0x6e, 0xd8, 0x63, 0x20, 0x43, 0x03, 0x2a, 0x4e, 0xb9, 0xaf, 0xad, 0xdc, 0x46, 0x65, 0xdd,
	0xb0, 0xc7, 0x80, 0xfa, 0x4b, 0x41, 0x39, 0x4f, 0xb0, 0x80, 0x6a, 0xab, 0x80, 0xfe, 0x54, 0xa6,
	0xbf, 0x08, 0xa8, 0x67, 0xd7, 0xfe, 0x50, 0xd0, 0x77, 0xe5, 0x04, 0xe3, 0x46, 0xdd, 0xa9, 0x90,
	0x7d, 0xb8, 0xb7, 0xbd, 0x5d, 0x6a, 0xc0, 0xf3, 0xf2, 0xc5, 0x55, 0x89, 0xe0, 0x8a, 0x63, 0x91,
	0x6a, 0x7b, 0x64, 0x41, 0xbf, 0x44, 0x70, 0xcd, 0xb1, 0x48, 0x65, 0x92, 0x8f, 0x9c, 0x0a, 0xa9,
	0x4a, 0x55, 0xc9, 0x79, 0x57, 0x68, 0xe3, 0xaa, 0x63, 0x91, 0x5a, 0x7b, 0x04, 0x8c, 0x2c, 0xd7,
	0xb1, 0x63, 0x91, 0xdd, 0x49, 0x32, 0x8d, 0xf1, 0x87, 0x32, 0x3c, 0x77, 0x4a, 0x0d, 0x7c, 0x3c,
	0x72, 0x76, 0x48, 0x1b, 0x37, 0xea, 0x77, 0xc8, 0x67, 0xd4, 0x8d, 0xa2, 0x2d, 0x2f, 0x6a, 0x1e,
	0x1e, 0xbf, 0xee, 0xf1, 0x32, 0x75, 0xe3, 0x0b, 0x3e, 0x88, 0xcb, 0x7d, 0xee, 0xb9, 0x7d, 0xd3,
	0xe3, 0xa1, 0x88, 0x5c, 0x4f, 0xc4, 0xf2, 0xef, 0x1f, 0xd1, 0x01, 0x27, 0x01, 0xf7, 0x69, 0x3f,
	0x36, 0xc7, 0xa0, 0x09, 0xa9, 0x39, 0x7d, 0x73, 0x74, 0x16, 0x01, 0xad, 0xfd, 0x0b, 0x00, 0x00,
	0xff, 0xff, 0x52, 0xda, 0xa7, 0x3d, 0x5a, 0x04, 0x00, 0x00,
}
