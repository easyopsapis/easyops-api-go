// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: task.proto

package inspection

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//巡检任务
type InspectionTask struct {
	//
	//巡检任务Id
	InspectionTaskId string `protobuf:"bytes,1,opt,name=inspectionTaskId,proto3" json:"inspectionTaskId" form:"inspectionTaskId"`
	//
	//巡检任务名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name" form:"name"`
	//
	//是否全部通知
	IsAllNotify bool `protobuf:"varint,3,opt,name=isAllNotify,proto3" json:"isAllNotify" form:"isAllNotify"`
	//
	//邮件通知限制
	NotifyPassComparator string `protobuf:"bytes,4,opt,name=notifyPassComparator,proto3" json:"notifyPassComparator" form:"notifyPassComparator"`
	//
	//邮件通知评分限制
	NotifyScore float32 `protobuf:"fixed32,5,opt,name=notifyScore,proto3" json:"notifyScore" form:"notifyScore"`
	//
	//采集时需要的参数
	Args []*InspectionTask_Args `protobuf:"bytes,6,rep,name=args,proto3" json:"args" form:"args"`
	//
	//通知的用户
	NotifyUser *InspectionUserOrUserGroup `protobuf:"bytes,7,opt,name=notifyUser,proto3" json:"notifyUser" form:"notifyUser"`
	//
	//通知的用户组
	NotifyUserGroup *InspectionUserOrUserGroup `protobuf:"bytes,8,opt,name=notifyUserGroup,proto3" json:"notifyUserGroup" form:"notifyUserGroup"`
	//
	//巡检策略(once单次,crontab周期)
	TaskType string `protobuf:"bytes,9,opt,name=taskType,proto3" json:"taskType" form:"taskType"`
	//
	//执行目标(指定实例,指定查询策略)
	PerformanceTargets string `protobuf:"bytes,10,opt,name=performanceTargets,proto3" json:"performanceTargets" form:"performanceTargets"`
	//
	//仅当执行目标为指定查询策略时该参数有效
	QueryStrategyId string `protobuf:"bytes,11,opt,name=queryStrategyId,proto3" json:"queryStrategyId" form:"queryStrategyId"`
	//
	//任务调度时间
	TaskScheduler string `protobuf:"bytes,12,opt,name=taskScheduler,proto3" json:"taskScheduler" form:"taskScheduler"`
	//
	//仅当执行目标为指定实例时该参数有效
	Targets []*InspectionTask_Targets `protobuf:"bytes,13,rep,name=targets,proto3" json:"targets" form:"targets"`
	//
	//备注
	Memo string `protobuf:"bytes,14,opt,name=memo,proto3" json:"memo" form:"memo"`
	//
	//报告模板ID
	TemplateId string `protobuf:"bytes,15,opt,name=templateId,proto3" json:"templateId" form:"templateId"`
	//
	//报告模板名
	TemplateName         string   `protobuf:"bytes,16,opt,name=templateName,proto3" json:"templateName" form:"templateName"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InspectionTask) Reset()         { *m = InspectionTask{} }
func (m *InspectionTask) String() string { return proto.CompactTextString(m) }
func (*InspectionTask) ProtoMessage()    {}
func (*InspectionTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{0}
}
func (m *InspectionTask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InspectionTask.Unmarshal(m, b)
}
func (m *InspectionTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InspectionTask.Marshal(b, m, deterministic)
}
func (m *InspectionTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InspectionTask.Merge(m, src)
}
func (m *InspectionTask) XXX_Size() int {
	return xxx_messageInfo_InspectionTask.Size(m)
}
func (m *InspectionTask) XXX_DiscardUnknown() {
	xxx_messageInfo_InspectionTask.DiscardUnknown(m)
}

var xxx_messageInfo_InspectionTask proto.InternalMessageInfo

func (m *InspectionTask) GetInspectionTaskId() string {
	if m != nil {
		return m.InspectionTaskId
	}
	return ""
}

func (m *InspectionTask) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InspectionTask) GetIsAllNotify() bool {
	if m != nil {
		return m.IsAllNotify
	}
	return false
}

func (m *InspectionTask) GetNotifyPassComparator() string {
	if m != nil {
		return m.NotifyPassComparator
	}
	return ""
}

func (m *InspectionTask) GetNotifyScore() float32 {
	if m != nil {
		return m.NotifyScore
	}
	return 0
}

func (m *InspectionTask) GetArgs() []*InspectionTask_Args {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *InspectionTask) GetNotifyUser() *InspectionUserOrUserGroup {
	if m != nil {
		return m.NotifyUser
	}
	return nil
}

func (m *InspectionTask) GetNotifyUserGroup() *InspectionUserOrUserGroup {
	if m != nil {
		return m.NotifyUserGroup
	}
	return nil
}

func (m *InspectionTask) GetTaskType() string {
	if m != nil {
		return m.TaskType
	}
	return ""
}

func (m *InspectionTask) GetPerformanceTargets() string {
	if m != nil {
		return m.PerformanceTargets
	}
	return ""
}

func (m *InspectionTask) GetQueryStrategyId() string {
	if m != nil {
		return m.QueryStrategyId
	}
	return ""
}

func (m *InspectionTask) GetTaskScheduler() string {
	if m != nil {
		return m.TaskScheduler
	}
	return ""
}

func (m *InspectionTask) GetTargets() []*InspectionTask_Targets {
	if m != nil {
		return m.Targets
	}
	return nil
}

func (m *InspectionTask) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *InspectionTask) GetTemplateId() string {
	if m != nil {
		return m.TemplateId
	}
	return ""
}

func (m *InspectionTask) GetTemplateName() string {
	if m != nil {
		return m.TemplateName
	}
	return ""
}

type InspectionTask_Args struct {
	//
	//参数ID
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key" form:"key"`
	//
	//参数的值
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value" form:"value"`
	//
	//参数的来源
	//attr_id: CMDB模型的属性
	//custom: 自定义
	//
	Source               string   `protobuf:"bytes,3,opt,name=source,proto3" json:"source" form:"source"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InspectionTask_Args) Reset()         { *m = InspectionTask_Args{} }
func (m *InspectionTask_Args) String() string { return proto.CompactTextString(m) }
func (*InspectionTask_Args) ProtoMessage()    {}
func (*InspectionTask_Args) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{0, 0}
}
func (m *InspectionTask_Args) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InspectionTask_Args.Unmarshal(m, b)
}
func (m *InspectionTask_Args) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InspectionTask_Args.Marshal(b, m, deterministic)
}
func (m *InspectionTask_Args) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InspectionTask_Args.Merge(m, src)
}
func (m *InspectionTask_Args) XXX_Size() int {
	return xxx_messageInfo_InspectionTask_Args.Size(m)
}
func (m *InspectionTask_Args) XXX_DiscardUnknown() {
	xxx_messageInfo_InspectionTask_Args.DiscardUnknown(m)
}

var xxx_messageInfo_InspectionTask_Args proto.InternalMessageInfo

func (m *InspectionTask_Args) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *InspectionTask_Args) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *InspectionTask_Args) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

type InspectionTask_Targets struct {
	//
	//巡检对象实例ID
	InstanceId           string   `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId" form:"instanceId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InspectionTask_Targets) Reset()         { *m = InspectionTask_Targets{} }
func (m *InspectionTask_Targets) String() string { return proto.CompactTextString(m) }
func (*InspectionTask_Targets) ProtoMessage()    {}
func (*InspectionTask_Targets) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{0, 1}
}
func (m *InspectionTask_Targets) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InspectionTask_Targets.Unmarshal(m, b)
}
func (m *InspectionTask_Targets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InspectionTask_Targets.Marshal(b, m, deterministic)
}
func (m *InspectionTask_Targets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InspectionTask_Targets.Merge(m, src)
}
func (m *InspectionTask_Targets) XXX_Size() int {
	return xxx_messageInfo_InspectionTask_Targets.Size(m)
}
func (m *InspectionTask_Targets) XXX_DiscardUnknown() {
	xxx_messageInfo_InspectionTask_Targets.DiscardUnknown(m)
}

var xxx_messageInfo_InspectionTask_Targets proto.InternalMessageInfo

func (m *InspectionTask_Targets) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func init() {
	proto.RegisterType((*InspectionTask)(nil), "inspection.InspectionTask")
	proto.RegisterType((*InspectionTask_Args)(nil), "inspection.InspectionTask.Args")
	proto.RegisterType((*InspectionTask_Targets)(nil), "inspection.InspectionTask.Targets")
}

func init() { proto.RegisterFile("task.proto", fileDescriptor_ce5d8dd45b4a91ff) }

var fileDescriptor_ce5d8dd45b4a91ff = []byte{
	// 795 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xff, 0x6b, 0x1b, 0x37,
	0x14, 0xc7, 0x4d, 0x9a, 0x2f, 0xcf, 0x89, 0x9d, 0xaa, 0x5d, 0x7b, 0x73, 0x29, 0x32, 0x5a, 0x36,
	0x1c, 0x3a, 0xdf, 0xb5, 0x0d, 0x8c, 0x6e, 0x83, 0x8d, 0x78, 0x65, 0xc5, 0x8c, 0x65, 0x45, 0xc9,
	0xa0, 0xb4, 0x4e, 0x82, 0x72, 0x56, 0xae, 0xc6, 0x77, 0xd6, 0x4d, 0xd2, 0xb5, 0xb8, 0xa1, 0xff,
	0xea, 0x0d, 0xf6, 0xc3, 0xfe, 0x80, 0xfb, 0x0b, 0x86, 0x74, 0x67, 0xdf, 0xd9, 0x31, 0x83, 0xc1,
	0x7e, 0x49, 0x24, 0x7d, 0xbe, 0x3c, 0xbd, 0x77, 0x4f, 0xcf, 0x00, 0x9a, 0xa9, 0xb1, 0x1b, 0x4b,
	0xa1, 0x05, 0x82, 0xd1, 0x44, 0xc5, 0xdc, 0xd7, 0x23, 0x31, 0x69, 0x75, 0x83, 0x91, 0x7e, 0x97,
	0x5c, 0xba, 0xbe, 0x88, 0xbc, 0x40, 0x04, 0xc2, 0xb3, 0x94, 0xcb, 0xe4, 0xca, 0xee, 0xec, 0xc6,
	0xae, 0x72, 0x69, 0xeb, 0x2c, 0x10, 0x2e, 0x67, 0x6a, 0x2a, 0x62, 0xe5, 0x86, 0xc2, 0x67, 0xa1,
	0xe7, 0x8b, 0x89, 0x96, 0xcc, 0xd7, 0x2a, 0x57, 0x4a, 0x1e, 0x8b, 0x6e, 0x24, 0x86, 0x3c, 0x54,
	0x5e, 0x41, 0xf4, 0xec, 0xd6, 0x2b, 0x83, 0x7a, 0x89, 0xe2, 0xf2, 0x42, 0xc8, 0x0b, 0xfb, 0x3f,
	0x90, 0x22, 0x89, 0x0b, 0xfb, 0x6f, 0x2a, 0xb7, 0x89, 0x3e, 0x8c, 0xf4, 0x58, 0x7c, 0xf0, 0x02,
	0xd1, 0xb5, 0x60, 0xf7, 0x3d, 0x0b, 0x47, 0x43, 0xa6, 0x85, 0x54, 0xde, 0x7c, 0x99, 0xeb, 0xc8,
	0xdf, 0x00, 0x8d, 0xfe, 0xdc, 0xff, 0x94, 0xa9, 0x31, 0x7a, 0x09, 0x7b, 0xa3, 0x85, 0x93, 0xfe,
	0xd0, 0xa9, 0xb5, 0x6b, 0x9d, 0xed, 0xde, 0xc3, 0x2c, 0xc5, 0x0f, 0xae, 0x84, 0x8c, 0xbe, 0x23,
	0xcb, 0x0c, 0x42, 0x6f, 0x88, 0xd0, 0x17, 0xb0, 0x3e, 0x61, 0x11, 0x77, 0x6e, 0x59, 0x71, 0x33,
	0x4b, 0x71, 0x3d, 0x17, 0x9b, 0x53, 0x42, 0x2d, 0x88, 0x9e, 0x43, 0x7d, 0xa4, 0x8e, 0xc2, 0xf0,
	0x58, 0xe8, 0xd1, 0xd5, 0xd4, 0x59, 0x6b, 0xd7, 0x3a, 0x5b, 0xbd, 0xfb, 0x59, 0x8a, 0x51, 0x11,
	0xa8, 0x04, 0x09, 0xad, 0x52, 0xd1, 0x09, 0xdc, 0x9b, 0xd8, 0xd5, 0x2b, 0xa6, 0xd4, 0x4f, 0x22,
	0x8a, 0x99, 0x34, 0x89, 0x39, 0xeb, 0x36, 0x1c, 0xce, 0x52, 0xfc, 0xb0, 0x08, 0xb7, 0x82, 0x45,
	0xe8, 0x4a, 0x31, 0xfa, 0x05, 0xea, 0xf9, 0xf9, 0x89, 0x2f, 0x24, 0x77, 0x6e, 0xb7, 0x6b, 0x9d,
	0x5b, 0xbd, 0x83, 0xf2, 0x3a, 0x15, 0x90, 0xfc, 0xf5, 0x27, 0x6e, 0xc2, 0xee, 0xf9, 0x60, 0xf8,
	0xb8, 0x33, 0x70, 0x07, 0xc3, 0xc7, 0x07, 0x3f, 0xee, 0xd3, 0xaa, 0x1a, 0xbd, 0x80, 0x75, 0x26,
	0x03, 0xe5, 0x6c, 0xb4, 0xd7, 0x3a, 0xf5, 0x67, 0xd8, 0x2d, 0x2b, 0xe4, 0x2e, 0xd6, 0xdc, 0x3d,
	0x92, 0x81, 0xaa, 0x56, 0xc8, 0xc8, 0x08, 0xb5, 0x6a, 0x34, 0x00, 0xc8, 0x4d, 0x7f, 0x57, 0x5c,
	0x3a, 0x9b, 0xed, 0x5a, 0xa7, 0xfe, 0xec, 0xcb, 0xd5, 0x5e, 0x86, 0xf1, 0x9b, 0x34, 0x7f, 0x5f,
	0x9a, 0xde, 0xe8, 0x7d, 0x96, 0xa5, 0xf8, 0x4e, 0xf5, 0xe2, 0x06, 0x22, 0xb4, 0xe2, 0x87, 0xc6,
	0xd0, 0x2c, 0x77, 0x56, 0xe5, 0x6c, 0xfd, 0x97, 0x10, 0xad, 0x2c, 0xc5, 0xf7, 0x97, 0x43, 0x58,
	0x88, 0xd0, 0x65, 0x67, 0xe4, 0xc1, 0x96, 0x79, 0x4d, 0xa7, 0xd3, 0x98, 0x3b, 0xdb, 0xf6, 0x33,
	0xdd, 0xcd, 0x52, 0xdc, 0xcc, 0xe5, 0x33, 0x84, 0xd0, 0x39, 0x09, 0xfd, 0x0a, 0x28, 0xe6, 0xd2,
	0xe0, 0x6c, 0xe2, 0xf3, 0x53, 0x26, 0x03, 0xae, 0x95, 0x03, 0x56, 0xfa, 0x28, 0x4b, 0xf1, 0xe7,
	0xb9, 0xf4, 0x26, 0x87, 0xd0, 0x15, 0x42, 0xf4, 0x1a, 0x9a, 0x7f, 0x24, 0x5c, 0x4e, 0x4f, 0xb4,
	0x64, 0x9a, 0x07, 0xd3, 0xfe, 0xd0, 0xa9, 0x5b, 0x2f, 0xb7, 0xcc, 0x62, 0x89, 0x60, 0xbe, 0xf2,
	0x1e, 0x34, 0xce, 0xdf, 0x3e, 0xe9, 0x7e, 0xcb, 0xba, 0x1f, 0xcf, 0xae, 0x9f, 0x1e, 0x7e, 0xda,
	0xa7, 0xcb, 0x36, 0xe8, 0x07, 0xd8, 0x35, 0x97, 0x3e, 0xf1, 0xdf, 0xf1, 0x61, 0x12, 0x72, 0xe9,
	0xec, 0x58, 0x5f, 0x27, 0x4b, 0xf1, 0xbd, 0x32, 0xbd, 0x39, 0x4c, 0xe8, 0x22, 0x1d, 0xbd, 0x82,
	0x4d, 0x5d, 0x64, 0xb7, 0x6b, 0xbb, 0x85, 0xfc, 0x4b, 0xb7, 0x14, 0xe9, 0xf4, 0x50, 0x96, 0xe2,
	0xc6, 0xcc, 0xbd, 0x48, 0x7b, 0x66, 0x63, 0x5e, 0x5f, 0xc4, 0x23, 0xe1, 0x34, 0x96, 0x5f, 0x9f,
	0x39, 0x25, 0xd4, 0x82, 0xe8, 0x35, 0x80, 0xe6, 0x51, 0x1c, 0x32, 0xcd, 0xfb, 0x43, 0xa7, 0x69,
	0xa9, 0xcf, 0xcb, 0xa6, 0x29, 0x31, 0x53, 0x06, 0x0c, 0x8f, 0xce, 0xdf, 0xb2, 0xee, 0xc7, 0xa3,
	0xee, 0x9b, 0x8b, 0xb3, 0xa2, 0x1e, 0x76, 0x7d, 0xfd, 0xe4, 0xeb, 0xc3, 0xa7, 0x9f, 0xf6, 0x69,
	0xc5, 0x0b, 0x7d, 0x0f, 0x3b, 0xb3, 0xdd, 0xb1, 0x19, 0x02, 0x7b, 0xd6, 0xfb, 0x41, 0x96, 0xe2,
	0xbb, 0x8b, 0xde, 0xc7, 0x76, 0x18, 0x2c, 0x90, 0x5b, 0xd7, 0xb0, 0x6e, 0x5e, 0x04, 0x6a, 0xc3,
	0xda, 0x98, 0x4f, 0x8b, 0xe9, 0xd3, 0xc8, 0x52, 0x0c, 0xb9, 0x76, 0xcc, 0xa7, 0x84, 0x1a, 0x08,
	0x7d, 0x05, 0xb7, 0xdf, 0xb3, 0x30, 0x99, 0x0d, 0x99, 0xbd, 0x2c, 0xc5, 0x3b, 0x39, 0xc7, 0x1e,
	0x13, 0x9a, 0xc3, 0xe8, 0x00, 0x36, 0x94, 0x48, 0xa4, 0xcf, 0xed, 0x84, 0xd9, 0xee, 0xdd, 0xc9,
	0x52, 0xbc, 0x9b, 0x13, 0xf3, 0x73, 0x42, 0x0b, 0x42, 0xeb, 0x14, 0x36, 0x67, 0xfd, 0xd2, 0x07,
	0x33, 0xf1, 0xb5, 0x69, 0xa1, 0xf9, 0x10, 0x3c, 0x28, 0xcb, 0x53, 0x62, 0xab, 0xbb, 0xa4, 0x22,
	0xee, 0xfd, 0xfc, 0xe6, 0xc5, 0xff, 0xf1, 0x0b, 0x70, 0xb9, 0x61, 0xa9, 0x87, 0xff, 0x04, 0x00,
	0x00, 0xff, 0xff, 0xc0, 0xac, 0x4a, 0x39, 0x97, 0x06, 0x00, 0x00,
}
