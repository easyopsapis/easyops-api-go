// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: history.proto

package inspection

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//巡检历史
type InspectionHistory struct {
	//
	//巡检作业Id
	JobId string `protobuf:"bytes,1,opt,name=jobId,proto3" json:"jobId" form:"jobId"`
	//
	//巡检任务Id
	TaskId string `protobuf:"bytes,2,opt,name=taskId,proto3" json:"taskId" form:"taskId"`
	//
	//巡检任务名
	TaskName string `protobuf:"bytes,3,opt,name=taskName,proto3" json:"taskName" form:"taskName"`
	//
	//开始时间(unix时间戳)
	StartTime int32 `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime" form:"startTime"`
	//
	//结束时间(unix时间戳)
	EndTime int32 `protobuf:"varint,5,opt,name=endTime,proto3" json:"endTime" form:"endTime"`
	//
	//耗时(秒)
	UsedTime int32 `protobuf:"varint,6,opt,name=usedTime,proto3" json:"usedTime" form:"usedTime"`
	//
	//状态
	Status string `protobuf:"bytes,7,opt,name=status,proto3" json:"status" form:"status"`
	//
	//成功率(精确到小数点后2位)
	PassingRate float32 `protobuf:"fixed32,8,opt,name=passingRate,proto3" json:"passingRate" form:"passingRate"`
	//
	//分数(精确到小数点后2位)
	Score float32 `protobuf:"fixed32,9,opt,name=score,proto3" json:"score" form:"score"`
	//
	//巡检对象列表
	Targets              []*InspectionTarget `protobuf:"bytes,10,rep,name=targets,proto3" json:"targets" form:"targets"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *InspectionHistory) Reset()         { *m = InspectionHistory{} }
func (m *InspectionHistory) String() string { return proto.CompactTextString(m) }
func (*InspectionHistory) ProtoMessage()    {}
func (*InspectionHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_454388b49b309873, []int{0}
}
func (m *InspectionHistory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InspectionHistory.Unmarshal(m, b)
}
func (m *InspectionHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InspectionHistory.Marshal(b, m, deterministic)
}
func (m *InspectionHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InspectionHistory.Merge(m, src)
}
func (m *InspectionHistory) XXX_Size() int {
	return xxx_messageInfo_InspectionHistory.Size(m)
}
func (m *InspectionHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_InspectionHistory.DiscardUnknown(m)
}

var xxx_messageInfo_InspectionHistory proto.InternalMessageInfo

func (m *InspectionHistory) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

func (m *InspectionHistory) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *InspectionHistory) GetTaskName() string {
	if m != nil {
		return m.TaskName
	}
	return ""
}

func (m *InspectionHistory) GetStartTime() int32 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *InspectionHistory) GetEndTime() int32 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *InspectionHistory) GetUsedTime() int32 {
	if m != nil {
		return m.UsedTime
	}
	return 0
}

func (m *InspectionHistory) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *InspectionHistory) GetPassingRate() float32 {
	if m != nil {
		return m.PassingRate
	}
	return 0
}

func (m *InspectionHistory) GetScore() float32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *InspectionHistory) GetTargets() []*InspectionTarget {
	if m != nil {
		return m.Targets
	}
	return nil
}

func init() {
	proto.RegisterType((*InspectionHistory)(nil), "inspection.InspectionHistory")
}

func init() { proto.RegisterFile("history.proto", fileDescriptor_454388b49b309873) }

var fileDescriptor_454388b49b309873 = []byte{
	// 456 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0x51, 0x8b, 0xd3, 0x40,
	0x10, 0xc7, 0xe9, 0xdd, 0xb5, 0xbd, 0xee, 0x59, 0xef, 0x6e, 0xf5, 0x21, 0x1c, 0x42, 0xca, 0x2a,
	0x92, 0x72, 0x36, 0x0b, 0x27, 0x08, 0xfa, 0x22, 0x14, 0x11, 0xab, 0x20, 0xb8, 0xdc, 0x93, 0x14,
	0x61, 0x9b, 0xec, 0xe5, 0xe2, 0x35, 0x99, 0xb0, 0xbb, 0xf5, 0xe8, 0x47, 0xf2, 0x4b, 0x45, 0xf0,
	0x23, 0xe4, 0x13, 0x48, 0x67, 0xd3, 0x24, 0x88, 0x8f, 0xbe, 0xcd, 0xcc, 0xff, 0xf7, 0x9f, 0xcc,
	0x64, 0x87, 0x8c, 0x6f, 0x53, 0x63, 0x41, 0x6f, 0xc3, 0x42, 0x83, 0x05, 0x4a, 0xd2, 0xdc, 0x14,
	0x2a, 0xb2, 0x29, 0xe4, 0x17, 0xb3, 0x24, 0xb5, 0xb7, 0x9b, 0x55, 0x18, 0x41, 0xc6, 0x13, 0x48,
	0x80, 0x23, 0xb2, 0xda, 0xdc, 0x60, 0x86, 0x09, 0x46, 0xce, 0x7a, 0xf1, 0x25, 0x81, 0x50, 0x49,
	0xb3, 0x85, 0xc2, 0x84, 0x6b, 0x88, 0xe4, 0x9a, 0x47, 0x90, 0x5b, 0x2d, 0x23, 0x6b, 0x9c, 0x53,
	0xab, 0x02, 0x66, 0x19, 0xc4, 0x6a, 0x6d, 0x78, 0x0d, 0x72, 0x4c, 0x79, 0xfb, 0x51, 0x6e, 0xa5,
	0x4e, 0x94, 0xad, 0x5b, 0xbe, 0xea, 0x4c, 0x90, 0xdd, 0xa7, 0xf6, 0x0e, 0xee, 0x79, 0x02, 0x33,
	0x14, 0x67, 0x3f, 0xe4, 0x3a, 0x8d, 0xa5, 0x05, 0x6d, 0x78, 0x13, 0x3a, 0x1f, 0xfb, 0x79, 0x44,
	0xce, 0x17, 0x4d, 0xcf, 0x0f, 0x6e, 0x43, 0xfa, 0x9c, 0xf4, 0xbf, 0xc3, 0x6a, 0x11, 0x7b, 0xbd,
	0x49, 0x2f, 0x18, 0xcd, 0xcf, 0xaa, 0xd2, 0x7f, 0x70, 0x03, 0x3a, 0x7b, 0xc3, 0xb0, 0xcc, 0x84,
	0x93, 0xe9, 0x94, 0x0c, 0xac, 0x34, 0x77, 0x8b, 0xd8, 0x3b, 0x40, 0xf0, 0xbc, 0x2a, 0xfd, 0xb1,
	0x03, 0x5d, 0x9d, 0x89, 0x1a, 0xa0, 0x9c, 0x1c, 0xef, 0xa2, 0xcf, 0x32, 0x53, 0xde, 0x21, 0xc2,
	0x8f, 0xaa, 0xd2, 0x3f, 0x6d, 0xe1, 0x9d, 0xc2, 0x44, 0x03, 0xd1, 0x2b, 0x32, 0x32, 0x56, 0x6a,
	0x7b, 0x9d, 0x66, 0xca, 0x3b, 0x9a, 0xf4, 0x82, 0xfe, 0xfc, 0x71, 0x55, 0xfa, 0x67, 0xce, 0xd1,
	0x48, 0x4c, 0xb4, 0x18, 0x7d, 0x41, 0x86, 0x2a, 0x8f, 0xd1, 0xd1, 0x47, 0x07, 0xad, 0x4a, 0xff,
	0xa1, 0x73, 0xd4, 0x02, 0x13, 0x7b, 0x64, 0x37, 0xd2, 0xc6, 0x28, 0x87, 0x0f, 0x10, 0xef, 0x8c,
	0xb4, 0x57, 0x98, 0x68, 0xa0, 0xdd, 0xba, 0xc6, 0x4a, 0xbb, 0x31, 0xde, 0xf0, 0xef, 0x75, 0x5d,
	0x9d, 0x89, 0x1a, 0xa0, 0x9f, 0xc8, 0x49, 0x21, 0x8d, 0x49, 0xf3, 0x44, 0x48, 0xab, 0xbc, 0xe3,
	0x49, 0x2f, 0x38, 0x98, 0x4f, 0xab, 0xd2, 0xa7, 0x8e, 0xef, 0x88, 0xec, 0xf7, 0x2f, 0xff, 0x94,
	0x8c, 0xbf, 0x2d, 0xe3, 0xcb, 0x60, 0x19, 0x2e, 0xe3, 0xcb, 0xe9, 0xdb, 0x67, 0xa2, 0xeb, 0xa6,
	0xaf, 0x49, 0xdf, 0x44, 0xa0, 0x95, 0x37, 0xc2, 0x36, 0x4f, 0xdb, 0xe7, 0xc0, 0xf2, 0x3f, 0x1b,
	0x38, 0x07, 0xfd, 0x48, 0x86, 0xee, 0x4e, 0x8c, 0x47, 0x26, 0x87, 0xc1, 0xc9, 0xd5, 0x93, 0xb0,
	0x3d, 0xa1, 0xb0, 0x7d, 0xf9, 0x6b, 0x84, 0xba, 0xff, 0xab, 0xb6, 0x31, 0xb1, 0x6f, 0x30, 0x7f,
	0xff, 0xf5, 0xdd, 0xff, 0x38, 0xdc, 0xd5, 0x00, 0xd1, 0x97, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff,
	0x1b, 0x54, 0x8e, 0xa0, 0x51, 0x03, 0x00, 0x00,
}
