// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: user_or_user_group.proto

package inspection

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//用户或用户组的信息
type InspectionUserOrUserGroup struct {
	//
	//用户名称
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name" form:"name"`
	//
	//用户实例id
	InstanceId           string   `protobuf:"bytes,2,opt,name=instanceId,proto3" json:"instanceId" form:"instanceId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InspectionUserOrUserGroup) Reset()         { *m = InspectionUserOrUserGroup{} }
func (m *InspectionUserOrUserGroup) String() string { return proto.CompactTextString(m) }
func (*InspectionUserOrUserGroup) ProtoMessage()    {}
func (*InspectionUserOrUserGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_e45ad7ecdd64f7fa, []int{0}
}
func (m *InspectionUserOrUserGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InspectionUserOrUserGroup.Unmarshal(m, b)
}
func (m *InspectionUserOrUserGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InspectionUserOrUserGroup.Marshal(b, m, deterministic)
}
func (m *InspectionUserOrUserGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InspectionUserOrUserGroup.Merge(m, src)
}
func (m *InspectionUserOrUserGroup) XXX_Size() int {
	return xxx_messageInfo_InspectionUserOrUserGroup.Size(m)
}
func (m *InspectionUserOrUserGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_InspectionUserOrUserGroup.DiscardUnknown(m)
}

var xxx_messageInfo_InspectionUserOrUserGroup proto.InternalMessageInfo

func (m *InspectionUserOrUserGroup) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InspectionUserOrUserGroup) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func init() {
	proto.RegisterType((*InspectionUserOrUserGroup)(nil), "inspection.InspectionUserOrUserGroup")
}

func init() { proto.RegisterFile("user_or_user_group.proto", fileDescriptor_e45ad7ecdd64f7fa) }

var fileDescriptor_e45ad7ecdd64f7fa = []byte{
	// 278 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0xcf, 0x4a, 0xf4, 0x30,
	0x14, 0xc5, 0xe9, 0xc7, 0x87, 0x60, 0x04, 0xff, 0x74, 0x55, 0x67, 0x53, 0xa9, 0x2e, 0x74, 0x91,
	0x46, 0x19, 0x10, 0x74, 0x39, 0x88, 0xd2, 0x95, 0x30, 0xe0, 0x46, 0xd1, 0x21, 0x4d, 0x33, 0xb1,
	0xd8, 0xf6, 0x86, 0x9b, 0xd4, 0x41, 0xc5, 0x27, 0xf0, 0x1d, 0x47, 0xf0, 0x11, 0xe6, 0x09, 0xa4,
	0xb7, 0x32, 0x33, 0x9b, 0xe4, 0x9e, 0x9c, 0xdf, 0x21, 0x97, 0xc3, 0xa2, 0xd6, 0x69, 0x9c, 0x00,
	0x4e, 0xe8, 0x36, 0x08, 0xad, 0x4d, 0x2d, 0x82, 0x87, 0x90, 0x95, 0x8d, 0xb3, 0x5a, 0xf9, 0x12,
	0x9a, 0x01, 0x37, 0xa5, 0x7f, 0x6e, 0xf3, 0x54, 0x41, 0x2d, 0x0c, 0x18, 0x10, 0x84, 0xe4, 0xed,
	0x94, 0x14, 0x09, 0x9a, 0xfa, 0xe8, 0xe0, 0x7c, 0x0d, 0xaf, 0x67, 0xa5, 0x7f, 0x81, 0x99, 0x30,
	0xc0, 0xc9, 0xe4, 0xaf, 0xb2, 0x2a, 0x0b, 0xe9, 0x01, 0x9d, 0x58, 0x8e, 0x7d, 0x2e, 0xf9, 0x0a,
	0xd8, 0x7e, 0xb6, 0xfc, 0xf5, 0xce, 0x69, 0xbc, 0xc5, 0xee, 0xbc, 0xe9, 0xd6, 0x0a, 0x0f, 0xd9,
	0xff, 0x46, 0xd6, 0x3a, 0x0a, 0x0e, 0x82, 0xe3, 0xcd, 0xd1, 0xce, 0x62, 0x1e, 0x6f, 0x4d, 0x01,
	0xeb, 0xcb, 0xa4, 0x7b, 0x4d, 0xc6, 0x64, 0x86, 0x19, 0xeb, 0xf6, 0xf6, 0xb2, 0x51, 0x3a, 0x2b,
	0xa2, 0x7f, 0x84, 0x9e, 0x2c, 0xe6, 0xf1, 0x5e, 0x8f, 0xae, 0xbc, 0xe4, 0xe7, 0x3b, 0xde, 0x65,
	0xdb, 0x4f, 0x0f, 0xa7, 0xfc, 0x42, 0xf2, 0xf7, 0xc7, 0x8f, 0xb3, 0xe1, 0xe7, 0xd1, 0x78, 0x2d,
	0x3c, 0xba, 0xbe, 0xbf, 0x32, 0x90, 0x6a, 0xe9, 0xde, 0xc0, 0xba, 0xb4, 0x02, 0x25, 0x2b, 0xa1,
	0xa0, 0xf1, 0x28, 0x95, 0x77, 0x7d, 0x03, 0xa8, 0x2d, 0xf0, 0x1a, 0x0a, 0x5d, 0x39, 0xf1, 0x07,
	0x0a, 0x92, 0x62, 0x55, 0x5e, 0xbe, 0x41, 0xe8, 0xf0, 0x37, 0x00, 0x00, 0xff, 0xff, 0x06, 0x1a,
	0x9f, 0x5f, 0x6b, 0x01, 0x00, 0x00,
}
