// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: win_patch.proto

package patch_manager

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//windows补丁模型
type WinPatch struct {
	//
	//实例ID
	InstanceId string `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId" form:"instanceId"`
	//
	//名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name" form:"name"`
	//
	//补丁编号
	ArticleId string `protobuf:"bytes,3,opt,name=articleId,proto3" json:"articleId" form:"articleId"`
	//
	//发布时间
	ReleaseTime string `protobuf:"bytes,4,opt,name=releaseTime,proto3" json:"releaseTime" form:"releaseTime"`
	//
	//适用系统类型(如:Windows, linux)
	OsSystem string `protobuf:"bytes,5,opt,name=osSystem,proto3" json:"osSystem" form:"osSystem"`
	//
	//适用系统版本(如:Windows Server 2012 R2)
	OsVersion []string `protobuf:"bytes,6,rep,name=osVersion,proto3" json:"osVersion" form:"osVersion"`
	//
	//操作系统架构
	OsArchitecture []string `protobuf:"bytes,7,rep,name=osArchitecture,proto3" json:"osArchitecture" form:"osArchitecture"`
	//
	//是否需要重启
	RequireReboot bool `protobuf:"varint,8,opt,name=requireReboot,proto3" json:"requireReboot" form:"requireReboot"`
	//
	//MSRC编号
	Msrc string `protobuf:"bytes,9,opt,name=msrc,proto3" json:"msrc" form:"msrc"`
	//
	//补丁大小(单位为KB)
	Size_ int32 `protobuf:"varint,10,opt,name=size,proto3" json:"size" form:"size"`
	//
	//备注
	Memo string `protobuf:"bytes,11,opt,name=memo,proto3" json:"memo" form:"memo"`
	//
	//补丁下载链接
	Url                  string   `protobuf:"bytes,12,opt,name=url,proto3" json:"url" form:"url"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WinPatch) Reset()         { *m = WinPatch{} }
func (m *WinPatch) String() string { return proto.CompactTextString(m) }
func (*WinPatch) ProtoMessage()    {}
func (*WinPatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d1825e06f548aac, []int{0}
}
func (m *WinPatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WinPatch.Unmarshal(m, b)
}
func (m *WinPatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WinPatch.Marshal(b, m, deterministic)
}
func (m *WinPatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WinPatch.Merge(m, src)
}
func (m *WinPatch) XXX_Size() int {
	return xxx_messageInfo_WinPatch.Size(m)
}
func (m *WinPatch) XXX_DiscardUnknown() {
	xxx_messageInfo_WinPatch.DiscardUnknown(m)
}

var xxx_messageInfo_WinPatch proto.InternalMessageInfo

func (m *WinPatch) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *WinPatch) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WinPatch) GetArticleId() string {
	if m != nil {
		return m.ArticleId
	}
	return ""
}

func (m *WinPatch) GetReleaseTime() string {
	if m != nil {
		return m.ReleaseTime
	}
	return ""
}

func (m *WinPatch) GetOsSystem() string {
	if m != nil {
		return m.OsSystem
	}
	return ""
}

func (m *WinPatch) GetOsVersion() []string {
	if m != nil {
		return m.OsVersion
	}
	return nil
}

func (m *WinPatch) GetOsArchitecture() []string {
	if m != nil {
		return m.OsArchitecture
	}
	return nil
}

func (m *WinPatch) GetRequireReboot() bool {
	if m != nil {
		return m.RequireReboot
	}
	return false
}

func (m *WinPatch) GetMsrc() string {
	if m != nil {
		return m.Msrc
	}
	return ""
}

func (m *WinPatch) GetSize_() int32 {
	if m != nil {
		return m.Size_
	}
	return 0
}

func (m *WinPatch) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *WinPatch) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func init() {
	proto.RegisterType((*WinPatch)(nil), "patch_manager.WinPatch")
}

func init() { proto.RegisterFile("win_patch.proto", fileDescriptor_0d1825e06f548aac) }

var fileDescriptor_0d1825e06f548aac = []byte{
	// 578 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x93, 0x4f, 0x6f, 0xd3, 0x3e,
	0x18, 0xc7, 0x95, 0xdf, 0xfe, 0xfc, 0x3a, 0x8f, 0x6d, 0x10, 0x36, 0x29, 0xec, 0x92, 0xca, 0x70,
	0x48, 0x99, 0xdc, 0xb4, 0x1d, 0x43, 0x5a, 0x0f, 0x54, 0xdb, 0x05, 0xed, 0x86, 0xcc, 0x04, 0xd2,
	0x42, 0x99, 0xdc, 0xcc, 0xeb, 0x2c, 0xe2, 0x3c, 0xc5, 0x76, 0x99, 0x06, 0xe5, 0xc0, 0xdb, 0x41,
	0xe2, 0x7d, 0xf0, 0x2a, 0x82, 0xc4, 0x95, 0x5b, 0x5e, 0x01, 0x8a, 0x43, 0xdb, 0x74, 0x70, 0x8a,
	0x9f, 0xe7, 0xf3, 0xf9, 0x3e, 0x95, 0x5d, 0x1b, 0x6d, 0x5d, 0x8b, 0xf4, 0x7c, 0xc4, 0x4c, 0x7c,
	0xd5, 0x1c, 0x29, 0x30, 0xe0, 0x6e, 0xd8, 0xe2, 0x5c, 0xb2, 0x94, 0x0d, 0xb9, 0xda, 0x25, 0x43,
	0x61, 0xae, 0xc6, 0x83, 0x66, 0x0c, 0x32, 0x1c, 0xc2, 0x10, 0x42, 0x6b, 0x0d, 0xc6, 0x97, 0xb6,
	0xb2, 0x85, 0x5d, 0x95, 0xe9, 0xdd, 0xa7, 0x15, 0x5d, 0x5e, 0x0b, 0xf3, 0x0e, 0xae, 0xc3, 0x21,
	0x10, 0x0b, 0xc9, 0x07, 0x96, 0x88, 0x0b, 0x66, 0x40, 0xe9, 0x70, 0xb6, 0x2c, 0x73, 0xf8, 0xcb,
	0x2a, 0xaa, 0xbd, 0x16, 0xe9, 0x8b, 0xe2, 0xb7, 0xdd, 0x03, 0x84, 0x44, 0xaa, 0x0d, 0x4b, 0x63,
	0x7e, 0x72, 0xe1, 0x39, 0x75, 0x27, 0x58, 0x3b, 0xde, 0xc9, 0x33, 0xff, 0xde, 0x25, 0x28, 0xd9,
	0xc5, 0x73, 0x86, 0x69, 0x45, 0x74, 0x1f, 0xa2, 0xe5, 0x94, 0x49, 0xee, 0xfd, 0x67, 0x03, 0x5b,
	0x79, 0xe6, 0xaf, 0x97, 0x81, 0xa2, 0x8b, 0xa9, 0x85, 0x6e, 0x07, 0xad, 0x31, 0x65, 0x44, 0x9c,
	0x14, 0xa3, 0x97, 0xac, 0xb9, 0x9d, 0x67, 0xfe, 0xdd, 0xd2, 0x9c, 0x21, 0x4c, 0xe7, 0x9a, 0xfb,
	0xcb, 0x41, 0xeb, 0x8a, 0x27, 0x9c, 0x69, 0x7e, 0x2a, 0x24, 0xf7, 0x96, 0x6d, 0xec, 0xbb, 0x93,
	0x67, 0xbe, 0x5b, 0xe6, 0x2a, 0x14, 0xff, 0xfc, 0xe1, 0x7f, 0x73, 0xd0, 0x57, 0xe7, 0x6d, 0x10,
	0xf4, 0xba, 0x51, 0x9b, 0x1c, 0xf6, 0xa3, 0x16, 0x39, 0xec, 0x3f, 0x6e, 0xf4, 0xec, 0xf7, 0xd3,
	0x93, 0xcf, 0x0d, 0x12, 0xb4, 0xa3, 0x16, 0xe9, 0xf4, 0x27, 0x2d, 0xcb, 0x1b, 0x24, 0xd8, 0x8f,
	0x5a, 0xa4, 0x3d, 0xad, 0x27, 0x51, 0x9b, 0x74, 0xca, 0x54, 0x23, 0x3a, 0xad, 0xf7, 0x83, 0x4e,
	0xd4, 0x22, 0xfb, 0xfd, 0x89, 0x75, 0xca, 0x76, 0x37, 0x88, 0x5a, 0xe4, 0x60, 0x5a, 0xcc, 0xd7,
	0xc1, 0x9b, 0xa6, 0xfd, 0xee, 0x35, 0x7a, 0xc1, 0xd9, 0x24, 0xda, 0x23, 0xfd, 0xa0, 0xd7, 0xfd,
	0x47, 0xbc, 0x92, 0xee, 0x3d, 0xa2, 0xd5, 0xdd, 0xb9, 0x21, 0xaa, 0x81, 0x7e, 0x79, 0xa3, 0x0d,
	0x97, 0xde, 0x8a, 0xdd, 0xe9, 0xfd, 0x3c, 0xf3, 0xb7, 0xca, 0x8d, 0x4e, 0x09, 0xa6, 0x33, 0xa9,
	0x38, 0x52, 0xd0, 0xaf, 0xb8, 0xd2, 0x02, 0x52, 0x6f, 0xb5, 0xbe, 0xb4, 0x78, 0xa4, 0x33, 0x84,
	0xe9, 0x5c, 0x73, 0x8f, 0xd0, 0x26, 0xe8, 0x23, 0x15, 0x5f, 0x09, 0xc3, 0x63, 0x33, 0x56, 0xdc,
	0xfb, 0xdf, 0x06, 0x1f, 0xe4, 0x99, 0xbf, 0x33, 0x0d, 0x56, 0x39, 0xa6, 0xb7, 0x02, 0xee, 0x33,
	0xb4, 0xa1, 0xf8, 0xfb, 0xb1, 0x50, 0x9c, 0xf2, 0x01, 0x80, 0xf1, 0x6a, 0x75, 0x27, 0xa8, 0x1d,
	0x7b, 0x79, 0xe6, 0x6f, 0x4f, 0xff, 0x95, 0x0a, 0xc6, 0x74, 0x51, 0x2f, 0xae, 0x8b, 0xd4, 0x2a,
	0xf6, 0xd6, 0x6e, 0x5f, 0x97, 0xa2, 0x8b, 0xa9, 0x85, 0x85, 0xa4, 0xc5, 0x47, 0xee, 0xa1, 0xba,
	0x13, 0xac, 0x54, 0xa5, 0xa2, 0x8b, 0xa9, 0x85, 0x76, 0x12, 0x97, 0xe0, 0xad, 0xff, 0x35, 0x89,
	0x4b, 0x28, 0x26, 0x71, 0x09, 0x6e, 0x1d, 0x2d, 0x8d, 0x55, 0xe2, 0xdd, 0xb1, 0xce, 0x66, 0x9e,
	0xf9, 0xa8, 0x74, 0xc6, 0x2a, 0xc1, 0xb4, 0x40, 0xc7, 0x27, 0x67, 0xcf, 0x87, 0xd0, 0xe4, 0x4c,
	0xdf, 0xc0, 0x48, 0x37, 0x13, 0x88, 0x59, 0x12, 0xc6, 0x90, 0x1a, 0xc5, 0x62, 0xa3, 0xcb, 0x77,
	0xa7, 0xf8, 0x08, 0x88, 0x84, 0x0b, 0x9e, 0xe8, 0xf0, 0x8f, 0x18, 0xda, 0x32, 0x5c, 0x78, 0xb5,
	0x83, 0x55, 0x6b, 0xef, 0xff, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x1f, 0x58, 0x96, 0x76, 0xde, 0x03,
	0x00, 0x00,
}
