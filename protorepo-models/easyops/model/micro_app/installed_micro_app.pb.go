// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: installed_micro_app.proto

package micro_app

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//小产品
type InstalledMicroApp struct {
	//
	//cmdb唯一标识, 业务逻辑请使用appId作为唯一标识
	InstanceId string `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId" form:"instanceId"`
	//
	//小产品名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name" form:"name"`
	//
	//小产品id
	AppId string `protobuf:"bytes,3,opt,name=appId,proto3" json:"appId" form:"appId"`
	//
	//图标url
	Icons *InstalledMicroApp_Icons `protobuf:"bytes,4,opt,name=icons,proto3" json:"icons" form:"icons"`
	//
	//小产品配置
	StoryboardJson string `protobuf:"bytes,5,opt,name=storyboardJson,proto3" json:"storyboardJson" form:"storyboardJson"`
	//
	//标签
	Tags []string `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags" form:"tags"`
	//
	//NA程序包当前版本
	CurrentVersion string `protobuf:"bytes,7,opt,name=currentVersion,proto3" json:"currentVersion" form:"currentVersion"`
	//
	//小产品在应用商店的版本号
	AppVersion string `protobuf:"bytes,8,opt,name=appVersion,proto3" json:"appVersion" form:"appVersion"`
	//
	//安装状态， ok-成功, running-正在安装
	InstallStatus string `protobuf:"bytes,9,opt,name=installStatus,proto3" json:"installStatus" form:"installStatus"`
	//
	//小产品首页
	Homepage string `protobuf:"bytes,10,opt,name=homepage,proto3" json:"homepage" form:"homepage"`
	//
	//表示该应用是内部的，不出现在 launchpad 和 app store 中
	Internal string `protobuf:"bytes,11,opt,name=internal,proto3" json:"internal" form:"internal"`
	//
	//私有安装应用, true or false
	Private string `protobuf:"bytes,12,opt,name=private,proto3" json:"private" form:"private"`
	//
	//克隆对象
	ClonedFrom *InstalledMicroApp_ClonedFrom `protobuf:"bytes,13,opt,name=clonedFrom,proto3" json:"clonedFrom" form:"clonedFrom"`
	//
	//作者
	Owner string `protobuf:"bytes,14,opt,name=owner,proto3" json:"owner" form:"owner"`
	//
	//readme
	Readme string `protobuf:"bytes,15,opt,name=readme,proto3" json:"readme" form:"readme"`
	//
	//状态
	Status string `protobuf:"bytes,16,opt,name=status,proto3" json:"status" form:"status"`
	//
	//创建时间
	Ctime string `protobuf:"bytes,17,opt,name=ctime,proto3" json:"ctime" form:"ctime"`
	//
	//修改时间
	Mtime string `protobuf:"bytes,18,opt,name=mtime,proto3" json:"mtime" form:"mtime"`
	//
	//关联程序包名称
	PkgName string `protobuf:"bytes,19,opt,name=pkgName,proto3" json:"pkgName" form:"pkgName"`
	//
	//图标背景
	IconBackground string `protobuf:"bytes,20,opt,name=iconBackground,proto3" json:"iconBackground" form:"iconBackground"`
	//
	//菜单中显示的图标
	MenuIcon             *InstalledMicroApp_MenuIcon `protobuf:"bytes,21,opt,name=menuIcon,proto3" json:"menuIcon" form:"menuIcon"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *InstalledMicroApp) Reset()         { *m = InstalledMicroApp{} }
func (m *InstalledMicroApp) String() string { return proto.CompactTextString(m) }
func (*InstalledMicroApp) ProtoMessage()    {}
func (*InstalledMicroApp) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e99c71557ae3ac8, []int{0}
}
func (m *InstalledMicroApp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstalledMicroApp.Unmarshal(m, b)
}
func (m *InstalledMicroApp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstalledMicroApp.Marshal(b, m, deterministic)
}
func (m *InstalledMicroApp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstalledMicroApp.Merge(m, src)
}
func (m *InstalledMicroApp) XXX_Size() int {
	return xxx_messageInfo_InstalledMicroApp.Size(m)
}
func (m *InstalledMicroApp) XXX_DiscardUnknown() {
	xxx_messageInfo_InstalledMicroApp.DiscardUnknown(m)
}

var xxx_messageInfo_InstalledMicroApp proto.InternalMessageInfo

func (m *InstalledMicroApp) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *InstalledMicroApp) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InstalledMicroApp) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *InstalledMicroApp) GetIcons() *InstalledMicroApp_Icons {
	if m != nil {
		return m.Icons
	}
	return nil
}

func (m *InstalledMicroApp) GetStoryboardJson() string {
	if m != nil {
		return m.StoryboardJson
	}
	return ""
}

func (m *InstalledMicroApp) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *InstalledMicroApp) GetCurrentVersion() string {
	if m != nil {
		return m.CurrentVersion
	}
	return ""
}

func (m *InstalledMicroApp) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *InstalledMicroApp) GetInstallStatus() string {
	if m != nil {
		return m.InstallStatus
	}
	return ""
}

func (m *InstalledMicroApp) GetHomepage() string {
	if m != nil {
		return m.Homepage
	}
	return ""
}

func (m *InstalledMicroApp) GetInternal() string {
	if m != nil {
		return m.Internal
	}
	return ""
}

func (m *InstalledMicroApp) GetPrivate() string {
	if m != nil {
		return m.Private
	}
	return ""
}

func (m *InstalledMicroApp) GetClonedFrom() *InstalledMicroApp_ClonedFrom {
	if m != nil {
		return m.ClonedFrom
	}
	return nil
}

func (m *InstalledMicroApp) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *InstalledMicroApp) GetReadme() string {
	if m != nil {
		return m.Readme
	}
	return ""
}

func (m *InstalledMicroApp) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *InstalledMicroApp) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

func (m *InstalledMicroApp) GetMtime() string {
	if m != nil {
		return m.Mtime
	}
	return ""
}

func (m *InstalledMicroApp) GetPkgName() string {
	if m != nil {
		return m.PkgName
	}
	return ""
}

func (m *InstalledMicroApp) GetIconBackground() string {
	if m != nil {
		return m.IconBackground
	}
	return ""
}

func (m *InstalledMicroApp) GetMenuIcon() *InstalledMicroApp_MenuIcon {
	if m != nil {
		return m.MenuIcon
	}
	return nil
}

type InstalledMicroApp_Icons struct {
	//
	//图标url
	Large                string   `protobuf:"bytes,1,opt,name=large,proto3" json:"large" form:"large"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstalledMicroApp_Icons) Reset()         { *m = InstalledMicroApp_Icons{} }
func (m *InstalledMicroApp_Icons) String() string { return proto.CompactTextString(m) }
func (*InstalledMicroApp_Icons) ProtoMessage()    {}
func (*InstalledMicroApp_Icons) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e99c71557ae3ac8, []int{0, 0}
}
func (m *InstalledMicroApp_Icons) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstalledMicroApp_Icons.Unmarshal(m, b)
}
func (m *InstalledMicroApp_Icons) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstalledMicroApp_Icons.Marshal(b, m, deterministic)
}
func (m *InstalledMicroApp_Icons) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstalledMicroApp_Icons.Merge(m, src)
}
func (m *InstalledMicroApp_Icons) XXX_Size() int {
	return xxx_messageInfo_InstalledMicroApp_Icons.Size(m)
}
func (m *InstalledMicroApp_Icons) XXX_DiscardUnknown() {
	xxx_messageInfo_InstalledMicroApp_Icons.DiscardUnknown(m)
}

var xxx_messageInfo_InstalledMicroApp_Icons proto.InternalMessageInfo

func (m *InstalledMicroApp_Icons) GetLarge() string {
	if m != nil {
		return m.Large
	}
	return ""
}

type InstalledMicroApp_ClonedFrom struct {
	//
	//克隆的appId
	AppId string `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId" form:"appId"`
	//
	//克隆的版本号
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version" form:"version"`
	//
	//克隆的app名称
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name" form:"name"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstalledMicroApp_ClonedFrom) Reset()         { *m = InstalledMicroApp_ClonedFrom{} }
func (m *InstalledMicroApp_ClonedFrom) String() string { return proto.CompactTextString(m) }
func (*InstalledMicroApp_ClonedFrom) ProtoMessage()    {}
func (*InstalledMicroApp_ClonedFrom) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e99c71557ae3ac8, []int{0, 1}
}
func (m *InstalledMicroApp_ClonedFrom) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstalledMicroApp_ClonedFrom.Unmarshal(m, b)
}
func (m *InstalledMicroApp_ClonedFrom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstalledMicroApp_ClonedFrom.Marshal(b, m, deterministic)
}
func (m *InstalledMicroApp_ClonedFrom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstalledMicroApp_ClonedFrom.Merge(m, src)
}
func (m *InstalledMicroApp_ClonedFrom) XXX_Size() int {
	return xxx_messageInfo_InstalledMicroApp_ClonedFrom.Size(m)
}
func (m *InstalledMicroApp_ClonedFrom) XXX_DiscardUnknown() {
	xxx_messageInfo_InstalledMicroApp_ClonedFrom.DiscardUnknown(m)
}

var xxx_messageInfo_InstalledMicroApp_ClonedFrom proto.InternalMessageInfo

func (m *InstalledMicroApp_ClonedFrom) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *InstalledMicroApp_ClonedFrom) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *InstalledMicroApp_ClonedFrom) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type InstalledMicroApp_MenuIcon struct {
	//
	//图标库
	Lib string `protobuf:"bytes,1,opt,name=lib,proto3" json:"lib" form:"lib"`
	//
	//Antd 图标类型
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type" form:"type"`
	//
	//Antd 图标主题
	Theme string `protobuf:"bytes,3,opt,name=theme,proto3" json:"theme" form:"theme"`
	//
	//FA 或 EasyOps 图标
	Icon string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon" form:"icon"`
	//
	//FA 图标前缀
	Prefix string `protobuf:"bytes,5,opt,name=prefix,proto3" json:"prefix" form:"prefix"`
	//
	//EasyOps 图标分类
	Category             string   `protobuf:"bytes,6,opt,name=category,proto3" json:"category" form:"category"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstalledMicroApp_MenuIcon) Reset()         { *m = InstalledMicroApp_MenuIcon{} }
func (m *InstalledMicroApp_MenuIcon) String() string { return proto.CompactTextString(m) }
func (*InstalledMicroApp_MenuIcon) ProtoMessage()    {}
func (*InstalledMicroApp_MenuIcon) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e99c71557ae3ac8, []int{0, 2}
}
func (m *InstalledMicroApp_MenuIcon) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstalledMicroApp_MenuIcon.Unmarshal(m, b)
}
func (m *InstalledMicroApp_MenuIcon) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstalledMicroApp_MenuIcon.Marshal(b, m, deterministic)
}
func (m *InstalledMicroApp_MenuIcon) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstalledMicroApp_MenuIcon.Merge(m, src)
}
func (m *InstalledMicroApp_MenuIcon) XXX_Size() int {
	return xxx_messageInfo_InstalledMicroApp_MenuIcon.Size(m)
}
func (m *InstalledMicroApp_MenuIcon) XXX_DiscardUnknown() {
	xxx_messageInfo_InstalledMicroApp_MenuIcon.DiscardUnknown(m)
}

var xxx_messageInfo_InstalledMicroApp_MenuIcon proto.InternalMessageInfo

func (m *InstalledMicroApp_MenuIcon) GetLib() string {
	if m != nil {
		return m.Lib
	}
	return ""
}

func (m *InstalledMicroApp_MenuIcon) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *InstalledMicroApp_MenuIcon) GetTheme() string {
	if m != nil {
		return m.Theme
	}
	return ""
}

func (m *InstalledMicroApp_MenuIcon) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *InstalledMicroApp_MenuIcon) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *InstalledMicroApp_MenuIcon) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func init() {
	proto.RegisterType((*InstalledMicroApp)(nil), "micro_app.InstalledMicroApp")
	proto.RegisterType((*InstalledMicroApp_Icons)(nil), "micro_app.InstalledMicroApp.Icons")
	proto.RegisterType((*InstalledMicroApp_ClonedFrom)(nil), "micro_app.InstalledMicroApp.ClonedFrom")
	proto.RegisterType((*InstalledMicroApp_MenuIcon)(nil), "micro_app.InstalledMicroApp.MenuIcon")
}

func init() { proto.RegisterFile("installed_micro_app.proto", fileDescriptor_7e99c71557ae3ac8) }

var fileDescriptor_7e99c71557ae3ac8 = []byte{
	// 1056 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x56, 0xdd, 0x4e, 0xe3, 0x46,
	0x14, 0x56, 0xca, 0x86, 0x9f, 0x61, 0x09, 0xc4, 0xbb, 0x48, 0x5e, 0x6e, 0x42, 0x67, 0x69, 0xd7,
	0x81, 0x75, 0x9c, 0x40, 0x7f, 0xb4, 0x51, 0xb5, 0x11, 0xac, 0xda, 0x2a, 0x48, 0xf4, 0xc2, 0xad,
	0xb8, 0xc0, 0x4e, 0xe8, 0xc4, 0x19, 0x8c, 0x45, 0xec, 0xb1, 0xc6, 0x0e, 0x94, 0x25, 0xbc, 0x49,
	0x9f, 0xa0, 0x52, 0xdf, 0xa1, 0xea, 0x5b, 0xf4, 0x26, 0x95, 0xfa, 0x08, 0xb9, 0xec, 0x55, 0x35,
	0x67, 0xfc, 0x93, 0x84, 0x2d, 0x57, 0xbd, 0xe9, 0x0d, 0x99, 0x39, 0xdf, 0x77, 0xbe, 0x39, 0x67,
	0xe6, 0xf8, 0x1c, 0xd0, 0x0b, 0x2f, 0x88, 0x62, 0x32, 0x18, 0xd0, 0xfe, 0xb9, 0xef, 0x39, 0x9c,
	0x9d, 0x93, 0x30, 0xac, 0x85, 0x9c, 0xc5, 0x4c, 0x59, 0xc9, 0x0c, 0x5b, 0xba, 0xeb, 0xc5, 0x97,
	0xc3, 0x5e, 0xcd, 0x61, 0xbe, 0xe1, 0x32, 0x97, 0x19, 0xc0, 0xe8, 0x0d, 0x2f, 0x60, 0x07, 0x1b,
	0x58, 0x49, 0xcf, 0xad, 0x2f, 0xa6, 0xe8, 0xfe, 0x8d, 0x17, 0x5f, 0xb1, 0x1b, 0xc3, 0x65, 0x3a,
	0x80, 0xfa, 0x35, 0x19, 0x78, 0x7d, 0x12, 0x33, 0x1e, 0x19, 0xd9, 0x52, 0xfa, 0xe1, 0xdf, 0xca,
	0xa8, 0xdc, 0x4e, 0xe3, 0x39, 0x11, 0xa7, 0x1f, 0x86, 0xa1, 0xd2, 0x46, 0x08, 0x82, 0x0c, 0x1c,
	0xda, 0xee, 0xab, 0x85, 0xed, 0x82, 0xb6, 0x72, 0x54, 0x9d, 0x8c, 0x2b, 0xe5, 0x0b, 0xc6, 0xfd,
	0x26, 0xce, 0x31, 0xfc, 0xd7, 0x9f, 0x95, 0x0d, 0x54, 0xea, 0x5a, 0x75, 0xfd, 0x0d, 0xd1, 0xdf,
	0x77, 0xee, 0x1a, 0x07, 0xf7, 0x3b, 0xe6, 0x94, 0xb3, 0xf2, 0x12, 0x3d, 0x09, 0x88, 0x4f, 0xd5,
	0x8f, 0x40, 0x64, 0x7d, 0x32, 0xae, 0xac, 0x4a, 0x11, 0x61, 0xc5, 0x26, 0x80, 0xca, 0xa7, 0xa8,
	0x48, 0xc2, 0xb0, 0xdd, 0x57, 0x17, 0x80, 0xb5, 0x31, 0x19, 0x57, 0x9e, 0x4a, 0x16, 0x98, 0xb1,
	0x29, 0x61, 0xe5, 0x18, 0x15, 0x3d, 0x87, 0x05, 0x91, 0xfa, 0x64, 0xbb, 0xa0, 0xad, 0xee, 0xe3,
	0x5a, 0x7e, 0x81, 0x0f, 0x92, 0xa8, 0xb5, 0x05, 0x73, 0x5a, 0x0b, 0x5c, 0xb1, 0x29, 0x25, 0x94,
	0x43, 0x54, 0x8a, 0x62, 0xc6, 0x6f, 0x7b, 0x8c, 0xf0, 0xfe, 0x71, 0xc4, 0x02, 0xb5, 0x08, 0x87,
	0xbf, 0x98, 0x8c, 0x2b, 0x9b, 0xd2, 0x61, 0x16, 0xc7, 0xe6, 0x9c, 0x83, 0xc8, 0x2d, 0x26, 0x6e,
	0xa4, 0x2e, 0x6e, 0x2f, 0xcc, 0xe6, 0x26, 0xac, 0xd8, 0x04, 0x50, 0x39, 0x45, 0x25, 0x67, 0xc8,
	0x39, 0x0d, 0xe2, 0x53, 0xca, 0x23, 0x8f, 0x05, 0xea, 0x12, 0x9c, 0x53, 0xcb, 0xcf, 0x99, 0xc5,
	0xc5, 0x9d, 0x96, 0xd1, 0x7a, 0xd7, 0xee, 0xef, 0xd9, 0xb5, 0xf4, 0xcf, 0x8e, 0x39, 0xa7, 0xa2,
	0x1c, 0x23, 0x44, 0xc2, 0x30, 0xd5, 0x5c, 0x06, 0xcd, 0xdd, 0xfc, 0x8d, 0x72, 0xec, 0x5f, 0xf4,
	0xa6, 0xbc, 0x95, 0xb7, 0x68, 0x2d, 0x29, 0xca, 0xef, 0x63, 0x12, 0x0f, 0x23, 0x75, 0x05, 0xe4,
	0xd4, 0xc9, 0xb8, 0xf2, 0x7c, 0xea, 0xc9, 0x53, 0x18, 0x9b, 0xb3, 0x74, 0x65, 0x84, 0x96, 0x2f,
	0x99, 0x4f, 0x43, 0xe2, 0x52, 0x15, 0x81, 0xeb, 0x8f, 0x93, 0x71, 0x65, 0x5d, 0xba, 0xa6, 0x88,
	0x88, 0xa3, 0x8d, 0xbe, 0xed, 0x6a, 0x9a, 0x6d, 0x58, 0x5d, 0xdb, 0x68, 0xda, 0xbb, 0x76, 0x0b,
	0xe3, 0xaf, 0xde, 0xda, 0x23, 0x9b, 0xdb, 0x41, 0x67, 0xaf, 0xba, 0x57, 0x1d, 0x69, 0xb6, 0x51,
	0x1d, 0x59, 0x44, 0x7f, 0x7f, 0xa8, 0x9f, 0x75, 0x9a, 0x9a, 0x6d, 0x5b, 0x5d, 0xdb, 0x7e, 0xc8,
	0xdc, 0xdd, 0x31, 0xb3, 0x13, 0x15, 0x03, 0x2d, 0x7b, 0x41, 0x4c, 0x79, 0x40, 0x06, 0xea, 0x2a,
	0x9c, 0xfe, 0x2c, 0x3f, 0x3d, 0x45, 0xb0, 0x99, 0x91, 0x94, 0xd7, 0x68, 0x29, 0xe4, 0xde, 0x35,
	0x89, 0xa9, 0xfa, 0x14, 0xf8, 0xca, 0x64, 0x5c, 0x29, 0x49, 0x7e, 0x02, 0x60, 0x33, 0xa5, 0x28,
	0x5d, 0x84, 0x9c, 0x01, 0x0b, 0x68, 0xff, 0x1b, 0xce, 0x7c, 0x75, 0x0d, 0x2a, 0xef, 0xd5, 0xa3,
	0x95, 0xf7, 0x2e, 0xa3, 0x1f, 0x6d, 0xe6, 0x2f, 0x92, 0x8b, 0x60, 0x73, 0x4a, 0x51, 0x39, 0x41,
	0x45, 0x76, 0x13, 0x50, 0xae, 0x96, 0x20, 0x96, 0x2f, 0xf3, 0x82, 0x05, 0xb3, 0xb8, 0xb6, 0x97,
	0xe8, 0xe3, 0x6e, 0x72, 0x29, 0x75, 0xfd, 0x4d, 0xc7, 0xaa, 0x65, 0xeb, 0x73, 0xbd, 0x73, 0xb7,
	0xff, 0xfa, 0xa0, 0x71, 0xbf, 0x63, 0x4a, 0x15, 0xa5, 0x8a, 0x16, 0x39, 0x25, 0x7d, 0x9f, 0xaa,
	0xeb, 0xa0, 0x57, 0x9e, 0x8c, 0x2b, 0x6b, 0x52, 0x4f, 0xda, 0xb1, 0x99, 0x10, 0x04, 0x35, 0x92,
	0xef, 0xbd, 0x31, 0x4f, 0x8d, 0x92, 0x87, 0x4e, 0x08, 0xca, 0x1f, 0x05, 0x54, 0x74, 0x62, 0xcf,
	0xa7, 0x6a, 0x19, 0xa8, 0xbf, 0x17, 0xf2, 0x30, 0xc1, 0x2e, 0xc2, 0xfc, 0xb5, 0x80, 0x7e, 0x29,
	0x74, 0x35, 0xad, 0xd5, 0xb4, 0x1a, 0x22, 0x4c, 0x11, 0xeb, 0x6e, 0xb5, 0x05, 0xbf, 0x77, 0x9f,
	0xdd, 0x57, 0x75, 0xad, 0x61, 0xd5, 0xf5, 0xfd, 0xce, 0xa8, 0x0e, 0x78, 0x55, 0xd7, 0x0e, 0xac,
	0xba, 0xde, 0x48, 0xf7, 0x23, 0xab, 0xa1, 0xef, 0x4b, 0xaf, 0xaa, 0xf5, 0xc3, 0x76, 0x47, 0xdb,
	0xb7, 0xea, 0xfa, 0x41, 0x67, 0x04, 0x1c, 0x69, 0x6e, 0x6a, 0x56, 0x5d, 0xff, 0x3c, 0xdd, 0xe4,
	0x6b, 0xcd, 0xae, 0xc1, 0xef, 0x5e, 0xb5, 0xa5, 0x9d, 0x8d, 0xac, 0x3d, 0xbd, 0xa3, 0xb5, 0x9a,
	0x1f, 0x70, 0x9f, 0xf2, 0x6e, 0xed, 0x98, 0x32, 0x23, 0xc8, 0xcd, 0x87, 0xdc, 0x94, 0x07, 0xb9,
	0xf9, 0xff, 0xdb, 0xdc, 0x20, 0x72, 0x28, 0xf5, 0x2b, 0xf7, 0x3b, 0xd1, 0x81, 0x9f, 0x3d, 0x28,
	0x75, 0x09, 0x88, 0x52, 0x97, 0x2b, 0xd1, 0x13, 0x45, 0x73, 0x3c, 0x22, 0xce, 0x95, 0xcb, 0xd9,
	0x30, 0xe8, 0xab, 0xcf, 0xe7, 0x7b, 0xe2, 0x2c, 0x8e, 0xcd, 0x39, 0x07, 0xe5, 0x14, 0x2d, 0xfb,
	0x34, 0x18, 0x8a, 0xe6, 0xab, 0x6e, 0xc2, 0xb7, 0xf2, 0xc9, 0xa3, 0xdf, 0xca, 0x49, 0x42, 0x9e,
	0xfe, 0x66, 0x53, 0x01, 0x6c, 0x66, 0x5a, 0x5b, 0x23, 0x54, 0x84, 0x86, 0xae, 0x44, 0xa8, 0x38,
	0x20, 0xdc, 0xa5, 0xc9, 0x58, 0xea, 0xe4, 0x6f, 0x05, 0xe6, 0xff, 0xb8, 0xcb, 0xc8, 0xb3, 0xb6,
	0x7e, 0x2e, 0x20, 0x94, 0x7f, 0xd5, 0xf9, 0xbc, 0x2a, 0x3c, 0x3e, 0xaf, 0x0e, 0xd1, 0xd2, 0x75,
	0xd2, 0xa0, 0xe5, 0xfc, 0x7b, 0x95, 0xdf, 0xfe, 0xf5, 0xa3, 0xdd, 0x39, 0xf5, 0xcb, 0xe6, 0xe7,
	0xc2, 0x23, 0xf3, 0x73, 0xeb, 0xef, 0x02, 0x5a, 0x4e, 0x2f, 0x52, 0xd9, 0x46, 0x0b, 0x03, 0xaf,
	0x97, 0x84, 0x56, 0x9a, 0x8c, 0x2b, 0x28, 0xb9, 0x1e, 0xaf, 0x87, 0x4d, 0x01, 0xc1, 0xdc, 0xba,
	0x0d, 0x3f, 0x30, 0x93, 0x85, 0x55, 0xcc, 0xad, 0xdb, 0x10, 0x66, 0x72, 0x7c, 0x49, 0xb3, 0x93,
	0xa7, 0x72, 0x04, 0x33, 0x36, 0x25, 0x2c, 0xc4, 0x44, 0x09, 0xc0, 0x48, 0x9e, 0x11, 0xf3, 0xe0,
	0x05, 0x01, 0x14, 0x9d, 0x26, 0xe4, 0xf4, 0xc2, 0xfb, 0x29, 0x19, 0xb2, 0x53, 0x9d, 0x46, 0xda,
	0xb1, 0x99, 0x10, 0x44, 0x37, 0x77, 0x48, 0x4c, 0x5d, 0xc6, 0x6f, 0xd5, 0xc5, 0xf9, 0x6e, 0x9e,
	0x22, 0xd8, 0xcc, 0x48, 0x47, 0x5f, 0x9f, 0xbd, 0x73, 0x59, 0x8d, 0x92, 0xe8, 0x96, 0x85, 0x51,
	0x6d, 0xc0, 0x1c, 0x32, 0x30, 0x1c, 0x16, 0xc4, 0x9c, 0x38, 0x71, 0x24, 0xff, 0x6d, 0xe2, 0x34,
	0x64, 0xba, 0xcf, 0xfa, 0x74, 0x10, 0x19, 0x09, 0xd1, 0x80, 0xad, 0x91, 0x95, 0x66, 0x6f, 0x11,
	0x98, 0x07, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0xf1, 0xeb, 0x88, 0x39, 0x9f, 0x09, 0x00, 0x00,
}
