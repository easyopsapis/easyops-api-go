// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: plugin_instance.proto

package agent_admin

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//Agent插件关系
type PluginInstance struct {
	//
	//实例Id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" form:"id"`
	//
	//AgentID
	AgentId string `protobuf:"bytes,2,opt,name=agentId,proto3" json:"agentId" form:"agentId"`
	//
	//插件ID
	PluginId string `protobuf:"bytes,3,opt,name=pluginId,proto3" json:"pluginId" form:"pluginId"`
	//
	//插件名称
	PluginName string `protobuf:"bytes,4,opt,name=pluginName,proto3" json:"pluginName" form:"pluginName"`
	//
	//插件版本Id
	PluginVersionId string `protobuf:"bytes,5,opt,name=pluginVersionId,proto3" json:"pluginVersionId" form:"pluginVersionId"`
	//
	//插件版本名称
	PluginVersionName string `protobuf:"bytes,6,opt,name=pluginVersionName,proto3" json:"pluginVersionName" form:"pluginVersionName"`
	//
	//真实安装路径
	DeployPath string `protobuf:"bytes,7,opt,name=deployPath,proto3" json:"deployPath" form:"deployPath"`
	//
	//创建时间
	Ctime int32 `protobuf:"varint,8,opt,name=ctime,proto3" json:"ctime" form:"ctime"`
	//
	//修改时间
	Mtime                int32    `protobuf:"varint,9,opt,name=mtime,proto3" json:"mtime" form:"mtime"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PluginInstance) Reset()         { *m = PluginInstance{} }
func (m *PluginInstance) String() string { return proto.CompactTextString(m) }
func (*PluginInstance) ProtoMessage()    {}
func (*PluginInstance) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ed1172df60d1b7e, []int{0}
}
func (m *PluginInstance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PluginInstance.Unmarshal(m, b)
}
func (m *PluginInstance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PluginInstance.Marshal(b, m, deterministic)
}
func (m *PluginInstance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PluginInstance.Merge(m, src)
}
func (m *PluginInstance) XXX_Size() int {
	return xxx_messageInfo_PluginInstance.Size(m)
}
func (m *PluginInstance) XXX_DiscardUnknown() {
	xxx_messageInfo_PluginInstance.DiscardUnknown(m)
}

var xxx_messageInfo_PluginInstance proto.InternalMessageInfo

func (m *PluginInstance) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PluginInstance) GetAgentId() string {
	if m != nil {
		return m.AgentId
	}
	return ""
}

func (m *PluginInstance) GetPluginId() string {
	if m != nil {
		return m.PluginId
	}
	return ""
}

func (m *PluginInstance) GetPluginName() string {
	if m != nil {
		return m.PluginName
	}
	return ""
}

func (m *PluginInstance) GetPluginVersionId() string {
	if m != nil {
		return m.PluginVersionId
	}
	return ""
}

func (m *PluginInstance) GetPluginVersionName() string {
	if m != nil {
		return m.PluginVersionName
	}
	return ""
}

func (m *PluginInstance) GetDeployPath() string {
	if m != nil {
		return m.DeployPath
	}
	return ""
}

func (m *PluginInstance) GetCtime() int32 {
	if m != nil {
		return m.Ctime
	}
	return 0
}

func (m *PluginInstance) GetMtime() int32 {
	if m != nil {
		return m.Mtime
	}
	return 0
}

func init() {
	proto.RegisterType((*PluginInstance)(nil), "agent_admin.PluginInstance")
}

func init() { proto.RegisterFile("plugin_instance.proto", fileDescriptor_9ed1172df60d1b7e) }

var fileDescriptor_9ed1172df60d1b7e = []byte{
	// 363 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0xbf, 0x6e, 0xea, 0x30,
	0x14, 0x87, 0x05, 0x5c, 0xfe, 0xf9, 0xde, 0x0b, 0xc5, 0x15, 0x55, 0x84, 0x5a, 0x05, 0x79, 0xa8,
	0x18, 0x4a, 0x32, 0x54, 0x5d, 0x3a, 0xa2, 0x56, 0x15, 0x1d, 0x2a, 0x94, 0xa1, 0x43, 0x17, 0x64,
	0x62, 0x13, 0x2c, 0xc5, 0x71, 0x94, 0x98, 0x81, 0x97, 0xf5, 0x43, 0xe4, 0x09, 0xaa, 0x1c, 0x07,
	0x9a, 0xd2, 0x4e, 0xf6, 0xf1, 0xef, 0xfb, 0x8e, 0x8f, 0x25, 0xa3, 0x71, 0x1a, 0xef, 0x23, 0x91,
	0xac, 0x45, 0x92, 0x6b, 0x9a, 0x84, 0xdc, 0x4b, 0x33, 0xa5, 0x15, 0xfe, 0x4b, 0x23, 0x9e, 0xe8,
	0x35, 0x65, 0x52, 0x24, 0x93, 0x79, 0x24, 0xf4, 0x6e, 0xbf, 0xf1, 0x42, 0x25, 0xfd, 0x48, 0x45,
	0xca, 0x07, 0x66, 0xb3, 0xdf, 0x42, 0x05, 0x05, 0xec, 0xac, 0x4b, 0x4c, 0x0b, 0x0d, 0x56, 0xd0,
	0x75, 0x59, 0x35, 0xc5, 0x37, 0xa8, 0x29, 0x98, 0xd3, 0x98, 0x36, 0x66, 0xfd, 0xc5, 0xff, 0xc2,
	0xb8, 0xfd, 0xad, 0xca, 0xe4, 0x23, 0x11, 0x8c, 0x04, 0x4d, 0xc1, 0xf0, 0x1d, 0xea, 0xc2, 0x7d,
	0x4b, 0xe6, 0x34, 0x81, 0xc1, 0x85, 0x71, 0x07, 0x96, 0xa9, 0x02, 0x12, 0x1c, 0x11, 0xec, 0xa3,
	0x9e, 0x1d, 0x7a, 0xc9, 0x9c, 0x16, 0xe0, 0x97, 0x85, 0x71, 0x87, 0x16, 0x3f, 0x26, 0x24, 0x38,
	0x41, 0xf8, 0x01, 0x21, 0xbb, 0x7f, 0xa3, 0x92, 0x3b, 0x7f, 0x40, 0x19, 0x17, 0xc6, 0x1d, 0xd5,
	0x95, 0x32, 0x23, 0x41, 0x0d, 0xc4, 0x4f, 0x68, 0x68, 0xab, 0x77, 0x9e, 0xe5, 0x42, 0x95, 0xd7,
	0xb5, 0xc1, 0x9d, 0x14, 0xc6, 0xbd, 0xaa, 0xbb, 0x27, 0x80, 0x04, 0xe7, 0x0a, 0x7e, 0x45, 0xa3,
	0x6f, 0x47, 0x30, 0x43, 0x07, 0xfa, 0x5c, 0x17, 0xc6, 0x75, 0x7e, 0xe9, 0x63, 0x47, 0xf9, 0xa9,
	0x95, 0x0f, 0x61, 0x3c, 0x8d, 0xd5, 0x61, 0x45, 0xf5, 0xce, 0xe9, 0x9e, 0x3f, 0xe4, 0x2b, 0x23,
	0x41, 0x0d, 0xc4, 0xb7, 0xa8, 0x1d, 0x6a, 0x21, 0xb9, 0xd3, 0x9b, 0x36, 0x66, 0xed, 0xc5, 0x45,
	0x61, 0xdc, 0x7f, 0xd6, 0x80, 0x63, 0x12, 0xd8, 0xb8, 0xe4, 0x24, 0x70, 0xfd, 0x73, 0x4e, 0x56,
	0x1c, 0xac, 0x8b, 0x97, 0x8f, 0xe7, 0x48, 0x79, 0x9c, 0xe6, 0x07, 0x95, 0xe6, 0x5e, 0xac, 0x42,
	0x1a, 0xfb, 0xa1, 0x4a, 0x74, 0x46, 0x43, 0x9d, 0xdb, 0xcf, 0x91, 0xf1, 0x54, 0xcd, 0xa5, 0x62,
	0x3c, 0xce, 0xfd, 0x0a, 0xf4, 0xa1, 0xf4, 0x6b, 0x1f, 0x6b, 0xd3, 0x01, 0xf6, 0xfe, 0x33, 0x00,
	0x00, 0xff, 0xff, 0xaa, 0x44, 0x2e, 0xed, 0x85, 0x02, 0x00, 0x00,
}
