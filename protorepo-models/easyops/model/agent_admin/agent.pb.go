// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: agent.proto

package agent_admin

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//Agent
type Agent struct {
	//
	//实例唯一标识
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" form:"id"`
	//
	//状态
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status" form:"status"`
	//
	//是否存活
	Alive bool `protobuf:"varint,3,opt,name=alive,proto3" json:"alive" form:"alive"`
	//
	//版本
	Version string `protobuf:"bytes,4,opt,name=version,proto3" json:"version" form:"version"`
	//
	//Agent唯一标识
	Uuid string `protobuf:"bytes,5,opt,name=uuid,proto3" json:"uuid" form:"uuid"`
	//
	//时区
	Timezone int32 `protobuf:"varint,6,opt,name=timezone,proto3" json:"timezone" form:"timezone"`
	//
	//Agent端心跳时间戳
	HbAgentTime int32 `protobuf:"varint,7,opt,name=hbAgentTime,proto3" json:"hbAgentTime" form:"hbAgentTime"`
	//
	//Server端心跳时间戳
	HbServerTime int32 `protobuf:"varint,8,opt,name=hbServerTime,proto3" json:"hbServerTime" form:"hbServerTime"`
	//
	//Agent启动时间戳
	StartTime int32 `protobuf:"varint,9,opt,name=startTime,proto3" json:"startTime" form:"startTime"`
	//
	//Agent所属主机InstanceID
	HostID string `protobuf:"bytes,10,opt,name=hostID,proto3" json:"hostID" form:"hostID"`
	//
	//AgentIp
	Ip                   string   `protobuf:"bytes,11,opt,name=ip,proto3" json:"ip" form:"ip"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Agent) Reset()         { *m = Agent{} }
func (m *Agent) String() string { return proto.CompactTextString(m) }
func (*Agent) ProtoMessage()    {}
func (*Agent) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{0}
}
func (m *Agent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Agent.Unmarshal(m, b)
}
func (m *Agent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Agent.Marshal(b, m, deterministic)
}
func (m *Agent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Agent.Merge(m, src)
}
func (m *Agent) XXX_Size() int {
	return xxx_messageInfo_Agent.Size(m)
}
func (m *Agent) XXX_DiscardUnknown() {
	xxx_messageInfo_Agent.DiscardUnknown(m)
}

var xxx_messageInfo_Agent proto.InternalMessageInfo

func (m *Agent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Agent) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Agent) GetAlive() bool {
	if m != nil {
		return m.Alive
	}
	return false
}

func (m *Agent) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Agent) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Agent) GetTimezone() int32 {
	if m != nil {
		return m.Timezone
	}
	return 0
}

func (m *Agent) GetHbAgentTime() int32 {
	if m != nil {
		return m.HbAgentTime
	}
	return 0
}

func (m *Agent) GetHbServerTime() int32 {
	if m != nil {
		return m.HbServerTime
	}
	return 0
}

func (m *Agent) GetStartTime() int32 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *Agent) GetHostID() string {
	if m != nil {
		return m.HostID
	}
	return ""
}

func (m *Agent) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func init() {
	proto.RegisterType((*Agent)(nil), "agent_admin.Agent")
}

func init() { proto.RegisterFile("agent.proto", fileDescriptor_56ede974c0020f77) }

var fileDescriptor_56ede974c0020f77 = []byte{
	// 396 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0x41, 0x8b, 0xd4, 0x30,
	0x18, 0x86, 0x99, 0xd9, 0x9d, 0xd9, 0x99, 0xcc, 0xae, 0xbb, 0x66, 0x45, 0x83, 0x20, 0x19, 0x22,
	0xc8, 0x08, 0x6e, 0x0b, 0x7a, 0x11, 0x3d, 0x59, 0x14, 0xf1, 0x1a, 0x3d, 0x79, 0x91, 0xb4, 0xcd,
	0xb6, 0x81, 0xb6, 0x29, 0x49, 0x3a, 0xa0, 0x3f, 0x36, 0x3f, 0x22, 0xbf, 0x40, 0xfa, 0xa5, 0xb3,
	0x3b, 0xba, 0xb7, 0x7e, 0xdf, 0xfb, 0x3c, 0x0d, 0xe4, 0x0d, 0xda, 0x88, 0x4a, 0x76, 0x2e, 0xe9,
	0x8d, 0x76, 0x1a, 0xc7, 0xe1, 0x97, 0x28, 0x5b, 0xd5, 0x3d, 0xbf, 0xa9, 0x94, 0xab, 0x87, 0x3c,
	0x29, 0x74, 0x9b, 0x56, 0xba, 0xd2, 0x29, 0x30, 0xf9, 0x70, 0x0b, 0x13, 0x0c, 0xf0, 0x15, 0x5d,
	0x16, 0x4e, 0xd0, 0xe2, 0xd3, 0xa8, 0xe3, 0x17, 0x68, 0xae, 0x4a, 0x32, 0xdb, 0xce, 0x76, 0xeb,
	0xec, 0x22, 0x78, 0xba, 0xbe, 0xd5, 0xa6, 0xfd, 0xc0, 0x54, 0xc9, 0xf8, 0x5c, 0x95, 0xf8, 0x35,
	0x5a, 0x5a, 0x27, 0xdc, 0x60, 0xc9, 0x1c, 0x90, 0xc7, 0xc1, 0xd3, 0x8b, 0x88, 0xc4, 0x3d, 0xe3,
	0x13, 0x80, 0x5f, 0xa1, 0x85, 0x68, 0xd4, 0x5e, 0x92, 0x93, 0xed, 0x6c, 0xb7, 0xca, 0xae, 0x82,
	0xa7, 0xe7, 0x91, 0x84, 0x35, 0xe3, 0x31, 0xc6, 0x6f, 0xd0, 0xd9, 0x5e, 0x1a, 0xab, 0x74, 0x47,
	0x4e, 0xe1, 0x9f, 0x38, 0x78, 0xfa, 0x28, 0x92, 0x53, 0xc0, 0xf8, 0x01, 0xc1, 0x2f, 0xd1, 0xe9,
	0x30, 0xa8, 0x92, 0x2c, 0x00, 0xbd, 0x0c, 0x9e, 0x6e, 0x22, 0x3a, 0x6e, 0x19, 0x87, 0x10, 0xa7,
	0x68, 0xe5, 0x54, 0x2b, 0xff, 0xe8, 0x4e, 0x92, 0xe5, 0x76, 0xb6, 0x5b, 0x64, 0xd7, 0xc1, 0xd3,
	0xcb, 0x08, 0x1e, 0x12, 0xc6, 0xef, 0x20, 0xfc, 0x1e, 0x6d, 0xea, 0x1c, 0x2e, 0xe0, 0x87, 0x6a,
	0x25, 0x39, 0x03, 0xe7, 0x69, 0xf0, 0x14, 0x47, 0xe7, 0x28, 0x64, 0xfc, 0x18, 0xc5, 0x1f, 0xd1,
	0x79, 0x9d, 0x7f, 0x97, 0x66, 0x2f, 0x0d, 0xa8, 0x2b, 0x50, 0x9f, 0x05, 0x4f, 0xaf, 0x0f, 0xea,
	0x7d, 0xca, 0xf8, 0x3f, 0x30, 0x7e, 0x8b, 0xd6, 0xd6, 0x09, 0x13, 0x0f, 0x5d, 0x83, 0xf9, 0x24,
	0x78, 0x7a, 0x75, 0x77, 0xa1, 0x66, 0x3a, 0xf2, 0x1e, 0x1b, 0x1b, 0xa8, 0xb5, 0x75, 0xdf, 0x3e,
	0x13, 0xf4, 0x7f, 0x03, 0x71, 0xcf, 0xf8, 0x04, 0x40, 0x97, 0x3d, 0xd9, 0x3c, 0xe8, 0xb2, 0x1f,
	0xbb, 0xec, 0xb3, 0xaf, 0x3f, 0xbf, 0x54, 0x3a, 0x91, 0xc2, 0xfe, 0xd6, 0xbd, 0x4d, 0x1a, 0x5d,
	0x88, 0x26, 0x2d, 0x74, 0xe7, 0x8c, 0x28, 0x9c, 0x8d, 0x0f, 0xc6, 0xc8, 0x5e, 0xdf, 0xb4, 0xba,
	0x94, 0x8d, 0x4d, 0x27, 0x30, 0x85, 0x31, 0x3d, 0x7a, 0x6c, 0xf9, 0x12, 0xd8, 0x77, 0x7f, 0x03,
	0x00, 0x00, 0xff, 0xff, 0x78, 0xa2, 0x7c, 0x28, 0x8f, 0x02, 0x00, 0x00,
}
