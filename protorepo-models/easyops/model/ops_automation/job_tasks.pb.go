// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: job_tasks.proto

package ops_automation

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

//
//任务详情
type JobTasks struct {
	//
	//job task id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" form:"id"`
	//
	//job id
	JobId string `protobuf:"bytes,2,opt,name=jobId,proto3" json:"jobId" form:"jobId"`
	//
	//开始时间 2019-07-02 11:38:59.09199400
	StartTime string `protobuf:"bytes,3,opt,name=startTime,proto3" json:"startTime" form:"startTime"`
	//
	//执行触发器
	Trigger string `protobuf:"bytes,4,opt,name=trigger,proto3" json:"trigger" form:"trigger"`
	//
	//easy command id
	TaskId string `protobuf:"bytes,5,opt,name=taskId,proto3" json:"taskId" form:"taskId"`
	//
	//工具类型
	TaskType string `protobuf:"bytes,6,opt,name=taskType,proto3" json:"taskType" form:"taskType"`
	//
	//工具目标主机列表
	Agents []string `protobuf:"bytes,7,rep,name=agents,proto3" json:"agents" form:"agents"`
	//
	//工具执行用户
	ExecUser string `protobuf:"bytes,8,opt,name=execUser,proto3" json:"execUser" form:"execUser"`
	//
	//工具结果状态
	Status string `protobuf:"bytes,9,opt,name=status,proto3" json:"status" form:"status"`
	//
	//任务结束时间 2019-07-02 11:38:59.09199400
	EndTime string `protobuf:"bytes,10,opt,name=endTime,proto3" json:"endTime" form:"endTime"`
	//
	//工具版本
	VName string `protobuf:"bytes,11,opt,name=vName,proto3" json:"vName" form:"vName"`
	//
	//作业成功率。success agents / all agents
	SuccessRate float32 `protobuf:"fixed32,12,opt,name=successRate,proto3" json:"successRate" form:"successRate"`
	//
	//工具报错信息
	Error                string   `protobuf:"bytes,13,opt,name=error,proto3" json:"error" form:"error"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobTasks) Reset()         { *m = JobTasks{} }
func (m *JobTasks) String() string { return proto.CompactTextString(m) }
func (*JobTasks) ProtoMessage()    {}
func (*JobTasks) Descriptor() ([]byte, []int) {
	return fileDescriptor_578db8647d352164, []int{0}
}
func (m *JobTasks) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobTasks.Unmarshal(m, b)
}
func (m *JobTasks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobTasks.Marshal(b, m, deterministic)
}
func (m *JobTasks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobTasks.Merge(m, src)
}
func (m *JobTasks) XXX_Size() int {
	return xxx_messageInfo_JobTasks.Size(m)
}
func (m *JobTasks) XXX_DiscardUnknown() {
	xxx_messageInfo_JobTasks.DiscardUnknown(m)
}

var xxx_messageInfo_JobTasks proto.InternalMessageInfo

func (m *JobTasks) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *JobTasks) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

func (m *JobTasks) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *JobTasks) GetTrigger() string {
	if m != nil {
		return m.Trigger
	}
	return ""
}

func (m *JobTasks) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *JobTasks) GetTaskType() string {
	if m != nil {
		return m.TaskType
	}
	return ""
}

func (m *JobTasks) GetAgents() []string {
	if m != nil {
		return m.Agents
	}
	return nil
}

func (m *JobTasks) GetExecUser() string {
	if m != nil {
		return m.ExecUser
	}
	return ""
}

func (m *JobTasks) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *JobTasks) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *JobTasks) GetVName() string {
	if m != nil {
		return m.VName
	}
	return ""
}

func (m *JobTasks) GetSuccessRate() float32 {
	if m != nil {
		return m.SuccessRate
	}
	return 0
}

func (m *JobTasks) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*JobTasks)(nil), "ops_automation.JobTasks")
}

func init() { proto.RegisterFile("job_tasks.proto", fileDescriptor_578db8647d352164) }

var fileDescriptor_578db8647d352164 = []byte{
	// 744 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x95, 0x4d, 0x4e, 0xdb, 0x40,
	0x14, 0xc7, 0x21, 0x40, 0x88, 0x87, 0x6f, 0xb7, 0xa2, 0x16, 0x6a, 0x65, 0x64, 0x41, 0x35, 0x86,
	0x38, 0xce, 0x37, 0x25, 0x5d, 0x20, 0xb2, 0xa8, 0x0a, 0x8b, 0x2e, 0x2c, 0xba, 0x21, 0x0e, 0xc8,
	0x89, 0x8d, 0x6b, 0x48, 0x32, 0x91, 0x67, 0xc2, 0x47, 0x63, 0x9f, 0xa1, 0x52, 0x4f, 0xd1, 0x45,
	0x2f, 0xd1, 0x8b, 0xa4, 0x52, 0x8f, 0x90, 0x13, 0x54, 0x9e, 0x71, 0x62, 0x5a, 0x70, 0xdb, 0x05,
	0x65, 0x13, 0xcd, 0xbc, 0xf7, 0xfb, 0x67, 0x7e, 0xc9, 0xe2, 0x3d, 0xb0, 0x74, 0x8e, 0x1a, 0xa7,
	0xc4, 0xc0, 0x17, 0x38, 0xd3, 0x75, 0x11, 0x41, 0xfc, 0x22, 0xea, 0xe2, 0x53, 0xa3, 0x47, 0x50,
	0xdb, 0x20, 0x0e, 0xea, 0xac, 0x29, 0xb6, 0x43, 0x3e, 0xf4, 0x1a, 0x99, 0x26, 0x6a, 0xab, 0x36,
	0xb2, 0x91, 0x4a, 0xb1, 0x46, 0xef, 0x8c, 0xde, 0xe8, 0x85, 0x9e, 0x58, 0x7c, 0xad, 0x7c, 0x0b,
	0x6f, 0x5f, 0x39, 0xe4, 0x02, 0x5d, 0xa9, 0x36, 0x52, 0x68, 0x53, 0xb9, 0x34, 0x5a, 0x8e, 0x69,
	0x10, 0xe4, 0x62, 0x75, 0x7c, 0x64, 0x39, 0xe9, 0xeb, 0x22, 0x48, 0x1d, 0xa2, 0xc6, 0x51, 0x60,
	0xc2, 0xbf, 0x00, 0x09, 0xc7, 0x14, 0x26, 0xd7, 0x27, 0x21, 0x57, 0x5d, 0x18, 0x0e, 0x44, 0xee,
	0x0c, 0xb9, 0xed, 0x8a, 0xe4, 0x98, 0x92, 0x96, 0x70, 0x4c, 0xfe, 0x25, 0x98, 0x39, 0x47, 0x8d,
	0x03, 0x53, 0x48, 0x50, 0x62, 0x79, 0x38, 0x10, 0xe7, 0x19, 0x41, 0xcb, 0x92, 0xc6, 0xda, 0x7c,
	0x05, 0x70, 0x98, 0x18, 0x2e, 0x39, 0x72, 0xda, 0x96, 0x30, 0x45, 0xd9, 0xe7, 0xc3, 0x81, 0xb8,
	0xcc, 0xd8, 0x71, 0x4b, 0xfa, 0xf1, 0x5d, 0x9c, 0xee, 0x4e, 0x5c, 0x4b, 0x5a, 0x84, 0xf3, 0x69,
	0x30, 0x4b, 0x5c, 0xc7, 0xb6, 0x2d, 0x57, 0x98, 0xa6, 0x49, 0x7e, 0x38, 0x10, 0x17, 0x59, 0x32,
	0x6c, 0x48, 0xda, 0x08, 0xe1, 0x55, 0x90, 0x0c, 0xfe, 0xc3, 0x03, 0x53, 0x98, 0xa1, 0xf0, 0xb3,
	0xe1, 0x40, 0x5c, 0x08, 0x61, 0x5a, 0x0f, 0xde, 0x48, 0x74, 0x27, 0xb4, 0x10, 0xe3, 0x55, 0x90,
	0x0a, 0x4e, 0x47, 0x37, 0x5d, 0x4b, 0x48, 0xd2, 0xc8, 0x93, 0xe1, 0x40, 0x5c, 0x8a, 0x22, 0x41,
	0x47, 0xd2, 0xc6, 0x10, 0xff, 0x8d, 0x03, 0x49, 0xc3, 0xb6, 0x3a, 0x04, 0x0b, 0xb3, 0xeb, 0x53,
	0x90, 0xab, 0x7e, 0xe1, 0xa2, 0x37, 0x58, 0x23, 0x78, 0xe3, 0x33, 0x07, 0x3e, 0x71, 0x27, 0x10,
	0xe6, 0x61, 0xa9, 0x96, 0x55, 0x4a, 0xf5, 0x7e, 0xce, 0xf7, 0x6a, 0x59, 0xa5, 0x58, 0xd7, 0xcd,
	0x7e, 0xce, 0x97, 0x83, 0x73, 0xae, 0xbe, 0x17, 0x5c, 0xd2, 0x79, 0x5f, 0x86, 0x7a, 0xe6, 0x1f,
	0x49, 0xb9, 0x5f, 0xf0, 0x65, 0x4f, 0xc7, 0x5b, 0x10, 0xc2, 0x5a, 0x56, 0xd9, 0xdd, 0x57, 0xde,
	0x18, 0xca, 0x59, 0xbd, 0x9f, 0x4b, 0x17, 0xfd, 0x8a, 0xdc, 0xdf, 0xf1, 0xef, 0x54, 0xbd, 0x8a,
	0x2c, 0x7b, 0xf7, 0xc2, 0x65, 0x1f, 0x56, 0xee, 0xd0, 0x10, 0xe6, 0x99, 0x87, 0x97, 0x0f, 0x2d,
	0xbc, 0x9c, 0x6e, 0xea, 0xa6, 0x57, 0xcb, 0x29, 0xbb, 0x81, 0x07, 0x93, 0xfd, 0x0b, 0xc3, 0x34,
	0x63, 0x5f, 0x2e, 0xf9, 0x10, 0xde, 0x7d, 0x5b, 0x66, 0x3f, 0xd1, 0xab, 0x3c, 0x8a, 0x43, 0x31,
	0xd6, 0x21, 0x88, 0xdd, 0xd7, 0xda, 0x7b, 0x48, 0xb1, 0x3f, 0x98, 0x15, 0x62, 0xcd, 0x8a, 0x31,
	0x66, 0xfd, 0x6c, 0x3a, 0xef, 0x3f, 0x92, 0x5d, 0x3e, 0xd6, 0xae, 0x14, 0x6f, 0x57, 0x78, 0x2c,
	0xbb, 0x5c, 0xac, 0x5d, 0x39, 0xde, 0xae, 0xf8, 0x3f, 0xec, 0x2a, 0x71, 0x22, 0x3b, 0xf1, 0x22,
	0xa5, 0x87, 0x17, 0x91, 0xe1, 0x66, 0x66, 0x5b, 0xde, 0xd3, 0xf1, 0xd6, 0x86, 0x16, 0x0e, 0x2e,
	0xfe, 0x00, 0xa4, 0xac, 0x6b, 0xab, 0xf9, 0x1e, 0x5b, 0xae, 0x90, 0xa2, 0x43, 0x4f, 0x89, 0x86,
	0xde, 0xa8, 0x13, 0x4c, 0xb1, 0x55, 0xf0, 0xf4, 0xa4, 0xb6, 0xaf, 0x1c, 0x1b, 0xca, 0xc7, 0x53,
	0xa5, 0xae, 0x5f, 0xf5, 0x0b, 0xe9, 0x72, 0xd1, 0xdf, 0xd0, 0xc6, 0x71, 0x5e, 0x06, 0x49, 0x4c,
	0x0c, 0xd2, 0xc3, 0x02, 0x47, 0xbf, 0x68, 0x25, 0x1a, 0x86, 0xac, 0x2e, 0x69, 0x21, 0xc0, 0x17,
	0xc1, 0xac, 0xd5, 0x31, 0xe9, 0x0e, 0x00, 0x94, 0x5d, 0x8b, 0x26, 0x79, 0xd8, 0x88, 0x36, 0xc0,
	0x08, 0xe5, 0x5f, 0x83, 0x99, 0xcb, 0x77, 0x46, 0xdb, 0x12, 0xe6, 0x68, 0x66, 0x33, 0xda, 0x31,
	0xb4, 0x1c, 0x24, 0x56, 0xc0, 0xd2, 0x89, 0x6e, 0x6e, 0xeb, 0x99, 0xd1, 0xc7, 0x86, 0xc6, 0x32,
	0xfc, 0x2b, 0x30, 0x87, 0x7b, 0xcd, 0xa6, 0x85, 0xb1, 0x66, 0x10, 0x4b, 0x98, 0x5f, 0x9f, 0x84,
	0x89, 0xea, 0xea, 0x70, 0x20, 0xf2, 0xa1, 0x62, 0xd4, 0x94, 0xb4, 0xdb, 0x68, 0xb0, 0xda, 0x2c,
	0xd7, 0x45, 0xae, 0xb0, 0xf0, 0xfb, 0x6a, 0xa3, 0x65, 0x49, 0x63, 0xed, 0xea, 0xe1, 0xf1, 0x5b,
	0x1b, 0x65, 0x2c, 0x03, 0xdf, 0xa0, 0x2e, 0xce, 0xb4, 0x50, 0xd3, 0x68, 0xa9, 0x4d, 0xd4, 0x21,
	0xae, 0xd1, 0x24, 0x98, 0xad, 0x68, 0xd7, 0xea, 0x22, 0xa5, 0x8d, 0x4c, 0xab, 0x85, 0xd5, 0x10,
	0x54, 0xe9, 0x55, 0xfd, 0x75, 0xc3, 0x37, 0x92, 0x14, 0x2f, 0xfc, 0x0c, 0x00, 0x00, 0xff, 0xff,
	0xc4, 0x0d, 0xe0, 0x75, 0x0b, 0x08, 0x00, 0x00,
}
