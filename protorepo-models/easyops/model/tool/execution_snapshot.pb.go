// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: execution_snapshot.proto

package tool

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//执行快照信息
type ExecutionSnapshot struct {
	//
	//名称
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name" form:"name"`
	//
	//类别
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type" form:"type"`
	//
	//操作信息
	Operation string `protobuf:"bytes,3,opt,name=operation,proto3" json:"operation" form:"operation"`
	//
	//工具的toolId
	PackageId string `protobuf:"bytes,4,opt,name=packageId,proto3" json:"packageId" form:"packageId"`
	//
	//工具的版本id
	VersionId string `protobuf:"bytes,5,opt,name=versionId,proto3" json:"versionId" form:"versionId"`
	//
	//目标主机
	Targets []*ExecutionSnapshot_Targets `protobuf:"bytes,6,rep,name=targets,proto3" json:"targets" form:"targets"`
	//
	//执行动作信息
	Actions []*ExecutionSnapshot_Actions `protobuf:"bytes,7,rep,name=actions,proto3" json:"actions" form:"actions"`
	//
	//执行结束后的回调信息
	Callback *Callback `protobuf:"bytes,8,opt,name=callback,proto3" json:"callback" form:"callback"`
	//
	//额外信息
	ExtraInfo *ExtraInfo `protobuf:"bytes,9,opt,name=extraInfo,proto3" json:"extraInfo" form:"extraInfo"`
	//
	//工具执行的通知信息
	NeedNotify           string   `protobuf:"bytes,10,opt,name=needNotify,proto3" json:"needNotify" form:"needNotify"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecutionSnapshot) Reset()         { *m = ExecutionSnapshot{} }
func (m *ExecutionSnapshot) String() string { return proto.CompactTextString(m) }
func (*ExecutionSnapshot) ProtoMessage()    {}
func (*ExecutionSnapshot) Descriptor() ([]byte, []int) {
	return fileDescriptor_390f5f4ae7f35b81, []int{0}
}
func (m *ExecutionSnapshot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecutionSnapshot.Unmarshal(m, b)
}
func (m *ExecutionSnapshot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecutionSnapshot.Marshal(b, m, deterministic)
}
func (m *ExecutionSnapshot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecutionSnapshot.Merge(m, src)
}
func (m *ExecutionSnapshot) XXX_Size() int {
	return xxx_messageInfo_ExecutionSnapshot.Size(m)
}
func (m *ExecutionSnapshot) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecutionSnapshot.DiscardUnknown(m)
}

var xxx_messageInfo_ExecutionSnapshot proto.InternalMessageInfo

func (m *ExecutionSnapshot) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ExecutionSnapshot) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ExecutionSnapshot) GetOperation() string {
	if m != nil {
		return m.Operation
	}
	return ""
}

func (m *ExecutionSnapshot) GetPackageId() string {
	if m != nil {
		return m.PackageId
	}
	return ""
}

func (m *ExecutionSnapshot) GetVersionId() string {
	if m != nil {
		return m.VersionId
	}
	return ""
}

func (m *ExecutionSnapshot) GetTargets() []*ExecutionSnapshot_Targets {
	if m != nil {
		return m.Targets
	}
	return nil
}

func (m *ExecutionSnapshot) GetActions() []*ExecutionSnapshot_Actions {
	if m != nil {
		return m.Actions
	}
	return nil
}

func (m *ExecutionSnapshot) GetCallback() *Callback {
	if m != nil {
		return m.Callback
	}
	return nil
}

func (m *ExecutionSnapshot) GetExtraInfo() *ExtraInfo {
	if m != nil {
		return m.ExtraInfo
	}
	return nil
}

func (m *ExecutionSnapshot) GetNeedNotify() string {
	if m != nil {
		return m.NeedNotify
	}
	return ""
}

type ExecutionSnapshot_Targets struct {
	//
	//主机Ip地址
	TargetId             string   `protobuf:"bytes,1,opt,name=targetId,proto3" json:"targetId" form:"targetId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecutionSnapshot_Targets) Reset()         { *m = ExecutionSnapshot_Targets{} }
func (m *ExecutionSnapshot_Targets) String() string { return proto.CompactTextString(m) }
func (*ExecutionSnapshot_Targets) ProtoMessage()    {}
func (*ExecutionSnapshot_Targets) Descriptor() ([]byte, []int) {
	return fileDescriptor_390f5f4ae7f35b81, []int{0, 0}
}
func (m *ExecutionSnapshot_Targets) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecutionSnapshot_Targets.Unmarshal(m, b)
}
func (m *ExecutionSnapshot_Targets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecutionSnapshot_Targets.Marshal(b, m, deterministic)
}
func (m *ExecutionSnapshot_Targets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecutionSnapshot_Targets.Merge(m, src)
}
func (m *ExecutionSnapshot_Targets) XXX_Size() int {
	return xxx_messageInfo_ExecutionSnapshot_Targets.Size(m)
}
func (m *ExecutionSnapshot_Targets) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecutionSnapshot_Targets.DiscardUnknown(m)
}

var xxx_messageInfo_ExecutionSnapshot_Targets proto.InternalMessageInfo

func (m *ExecutionSnapshot_Targets) GetTargetId() string {
	if m != nil {
		return m.TargetId
	}
	return ""
}

type ExecutionSnapshot_Actions struct {
	//
	//工具名称
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name" form:"name"`
	//
	//动作类别
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type" form:"type"`
	//
	//动作名称
	Action string `protobuf:"bytes,3,opt,name=action,proto3" json:"action" form:"action"`
	//
	//参数信息
	Param                *ExecutionSnapshot_Actions_Param `protobuf:"bytes,4,opt,name=param,proto3" json:"param" form:"param"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *ExecutionSnapshot_Actions) Reset()         { *m = ExecutionSnapshot_Actions{} }
func (m *ExecutionSnapshot_Actions) String() string { return proto.CompactTextString(m) }
func (*ExecutionSnapshot_Actions) ProtoMessage()    {}
func (*ExecutionSnapshot_Actions) Descriptor() ([]byte, []int) {
	return fileDescriptor_390f5f4ae7f35b81, []int{0, 1}
}
func (m *ExecutionSnapshot_Actions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecutionSnapshot_Actions.Unmarshal(m, b)
}
func (m *ExecutionSnapshot_Actions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecutionSnapshot_Actions.Marshal(b, m, deterministic)
}
func (m *ExecutionSnapshot_Actions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecutionSnapshot_Actions.Merge(m, src)
}
func (m *ExecutionSnapshot_Actions) XXX_Size() int {
	return xxx_messageInfo_ExecutionSnapshot_Actions.Size(m)
}
func (m *ExecutionSnapshot_Actions) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecutionSnapshot_Actions.DiscardUnknown(m)
}

var xxx_messageInfo_ExecutionSnapshot_Actions proto.InternalMessageInfo

func (m *ExecutionSnapshot_Actions) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ExecutionSnapshot_Actions) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ExecutionSnapshot_Actions) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *ExecutionSnapshot_Actions) GetParam() *ExecutionSnapshot_Actions_Param {
	if m != nil {
		return m.Param
	}
	return nil
}

type ExecutionSnapshot_Actions_Param struct {
	//
	//执行命令
	Cmd string `protobuf:"bytes,1,opt,name=cmd,proto3" json:"cmd" form:"cmd"`
	//
	//脚本类别
	ScriptType string `protobuf:"bytes,2,opt,name=scriptType,proto3" json:"scriptType" form:"scriptType"`
	//
	//解析器名称
	Parser string `protobuf:"bytes,3,opt,name=parser,proto3" json:"parser" form:"parser"`
	//
	//参数
	Param string `protobuf:"bytes,4,opt,name=param,proto3" json:"param" form:"param"`
	//
	//执行用户
	ExecUser string `protobuf:"bytes,5,opt,name=execUser,proto3" json:"execUser" form:"execUser"`
	//
	//工具执行的超时时间(0表示不超时，默认为86400秒)
	Timeout              int32    `protobuf:"varint,6,opt,name=timeout,proto3" json:"timeout" form:"timeout"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecutionSnapshot_Actions_Param) Reset()         { *m = ExecutionSnapshot_Actions_Param{} }
func (m *ExecutionSnapshot_Actions_Param) String() string { return proto.CompactTextString(m) }
func (*ExecutionSnapshot_Actions_Param) ProtoMessage()    {}
func (*ExecutionSnapshot_Actions_Param) Descriptor() ([]byte, []int) {
	return fileDescriptor_390f5f4ae7f35b81, []int{0, 1, 0}
}
func (m *ExecutionSnapshot_Actions_Param) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecutionSnapshot_Actions_Param.Unmarshal(m, b)
}
func (m *ExecutionSnapshot_Actions_Param) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecutionSnapshot_Actions_Param.Marshal(b, m, deterministic)
}
func (m *ExecutionSnapshot_Actions_Param) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecutionSnapshot_Actions_Param.Merge(m, src)
}
func (m *ExecutionSnapshot_Actions_Param) XXX_Size() int {
	return xxx_messageInfo_ExecutionSnapshot_Actions_Param.Size(m)
}
func (m *ExecutionSnapshot_Actions_Param) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecutionSnapshot_Actions_Param.DiscardUnknown(m)
}

var xxx_messageInfo_ExecutionSnapshot_Actions_Param proto.InternalMessageInfo

func (m *ExecutionSnapshot_Actions_Param) GetCmd() string {
	if m != nil {
		return m.Cmd
	}
	return ""
}

func (m *ExecutionSnapshot_Actions_Param) GetScriptType() string {
	if m != nil {
		return m.ScriptType
	}
	return ""
}

func (m *ExecutionSnapshot_Actions_Param) GetParser() string {
	if m != nil {
		return m.Parser
	}
	return ""
}

func (m *ExecutionSnapshot_Actions_Param) GetParam() string {
	if m != nil {
		return m.Param
	}
	return ""
}

func (m *ExecutionSnapshot_Actions_Param) GetExecUser() string {
	if m != nil {
		return m.ExecUser
	}
	return ""
}

func (m *ExecutionSnapshot_Actions_Param) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func init() {
	proto.RegisterType((*ExecutionSnapshot)(nil), "tool.ExecutionSnapshot")
	proto.RegisterType((*ExecutionSnapshot_Targets)(nil), "tool.ExecutionSnapshot.Targets")
	proto.RegisterType((*ExecutionSnapshot_Actions)(nil), "tool.ExecutionSnapshot.Actions")
	proto.RegisterType((*ExecutionSnapshot_Actions_Param)(nil), "tool.ExecutionSnapshot.Actions.Param")
}

func init() { proto.RegisterFile("execution_snapshot.proto", fileDescriptor_390f5f4ae7f35b81) }

var fileDescriptor_390f5f4ae7f35b81 = []byte{
	// 928 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0x4d, 0x6e, 0xdb, 0x46,
	0x18, 0x85, 0xe3, 0x1f, 0x99, 0xe3, 0xd6, 0x8e, 0x99, 0x16, 0x20, 0xb4, 0xa1, 0xca, 0x38, 0xc5,
	0x30, 0x11, 0x49, 0x89, 0x92, 0x1c, 0x58, 0x8b, 0xba, 0x56, 0xd0, 0x00, 0x5a, 0xb8, 0x2d, 0xd8,
	0xb4, 0x8b, 0x48, 0x8a, 0x31, 0x26, 0x29, 0x85, 0xb0, 0xa8, 0x21, 0xc8, 0x71, 0x12, 0x57, 0xe2,
	0x01, 0xba, 0x2a, 0xd0, 0x63, 0xf4, 0x06, 0x3d, 0x41, 0x0f, 0xd0, 0xbd, 0x0a, 0x14, 0x3d, 0x81,
	0x4e, 0x50, 0x0c, 0x67, 0x48, 0xb1, 0x51, 0x98, 0x14, 0xb0, 0xeb, 0xdd, 0xf0, 0x7b, 0xef, 0x7b,
	0x7c, 0xf3, 0x71, 0x30, 0x8f, 0x40, 0x72, 0xdf, 0xb8, 0xf6, 0x25, 0xf1, 0xf0, 0xe4, 0x2c, 0x9a,
	0xa0, 0x20, 0x7a, 0x89, 0x89, 0x1e, 0x84, 0x98, 0x60, 0x71, 0x83, 0x60, 0x3c, 0x2e, 0x6b, 0x23,
	0x8f, 0xbc, 0xbc, 0x3c, 0xd7, 0x6d, 0xec, 0x1b, 0x23, 0x3c, 0xc2, 0x46, 0x02, 0x9e, 0x5f, 0x0e,
	0x93, 0xa7, 0xe4, 0x21, 0x59, 0xb1, 0xa6, 0xf2, 0xe9, 0x08, 0xeb, 0x2e, 0x8a, 0xae, 0x70, 0x10,
	0xe9, 0x63, 0x6c, 0xa3, 0xb1, 0x61, 0xe3, 0x09, 0x09, 0x91, 0x4d, 0x22, 0xd6, 0x19, 0xba, 0x01,
	0xd6, 0x7c, 0xec, 0xb8, 0xe3, 0xc8, 0xe0, 0x44, 0x23, 0x79, 0x34, 0xe8, 0xeb, 0x0c, 0x1b, 0x8d,
	0xc7, 0xe7, 0xc8, 0xbe, 0xe0, 0x72, 0xdf, 0x5c, 0x53, 0xce, 0x7d, 0x43, 0x42, 0x74, 0xe6, 0x4d,
	0x86, 0xa9, 0xbf, 0xc3, 0xdc, 0x76, 0xfc, 0xd7, 0x1e, 0xb9, 0xc0, 0xaf, 0x8d, 0x11, 0xd6, 0x12,
	0x50, 0x7b, 0x85, 0xc6, 0x9e, 0x83, 0x08, 0x0e, 0x23, 0x23, 0x5b, 0xb2, 0x3e, 0xe5, 0x6f, 0x11,
	0xec, 0x7f, 0x95, 0x4e, 0xea, 0x3b, 0x3e, 0x28, 0xf1, 0x3e, 0xd8, 0x98, 0x20, 0xdf, 0x95, 0xd6,
	0x2a, 0x6b, 0x50, 0xe8, 0xec, 0x2d, 0xe6, 0xf2, 0xce, 0x10, 0x87, 0x7e, 0x5b, 0xa1, 0x55, 0xc5,
	0x4a, 0x40, 0x4a, 0x22, 0x57, 0x81, 0x2b, 0xdd, 0x79, 0x9b, 0x44, 0xab, 0x8a, 0x95, 0x80, 0xa2,
	0x09, 0x04, 0x1c, 0xb8, 0x21, 0xa2, 0xf2, 0xd2, 0x7a, 0xc2, 0xfc, 0x64, 0x31, 0x97, 0xef, 0x32,
	0x66, 0x06, 0x29, 0xd6, 0x92, 0x26, 0x76, 0x81, 0x10, 0x20, 0xfb, 0x02, 0x8d, 0xdc, 0xae, 0x23,
	0x6d, 0x24, 0x3d, 0x8f, 0x96, 0x3d, 0x19, 0xa4, 0xfc, 0xf5, 0xa7, 0x7c, 0x0f, 0xec, 0xbf, 0xe8,
	0x21, 0x6d, 0x78, 0xa2, 0x3d, 0xad, 0x69, 0x47, 0x83, 0x69, 0xc3, 0x8c, 0x0f, 0xac, 0x65, 0x37,
	0x95, 0x7a, 0xe5, 0x86, 0x91, 0x87, 0x27, 0x5d, 0x47, 0xda, 0x7c, 0x5b, 0x2a, 0x83, 0x8a, 0xa5,
	0x32, 0x8a, 0x78, 0x0a, 0x4a, 0x04, 0x85, 0x23, 0x97, 0x44, 0xd2, 0x56, 0x65, 0x1d, 0xee, 0x98,
	0xb2, 0x4e, 0x3f, 0x85, 0xbe, 0x32, 0x3d, 0xfd, 0x19, 0xa3, 0x75, 0xc4, 0xc5, 0x5c, 0xde, 0xe5,
	0x23, 0x61, 0x25, 0xc5, 0x4a, 0x35, 0xa8, 0x1c, 0xb2, 0x69, 0x5b, 0x24, 0x95, 0xde, 0x2f, 0x77,
	0xc2, 0x68, 0x79, 0x39, 0xde, 0xa9, 0x58, 0xa9, 0x86, 0x78, 0x0c, 0xb6, 0xd3, 0x23, 0x26, 0x6d,
	0x57, 0xd6, 0xe0, 0x8e, 0xb9, 0xcb, 0xf4, 0x9e, 0xf0, 0x6a, 0xe7, 0xde, 0x62, 0x2e, 0xef, 0xb1,
	0xf6, 0x94, 0xa9, 0x58, 0x59, 0x93, 0xf8, 0x04, 0x08, 0xc9, 0xa1, 0xea, 0x4e, 0x86, 0x58, 0x12,
	0x12, 0x85, 0xbd, 0xd4, 0x11, 0x2f, 0xe7, 0xbf, 0x5c, 0xc6, 0x55, 0xac, 0x65, 0x9f, 0xd8, 0x02,
	0x60, 0xe2, 0xba, 0xce, 0xd7, 0x98, 0x78, 0xc3, 0x2b, 0x09, 0x24, 0xf3, 0xfe, 0x74, 0x31, 0x97,
	0xf7, 0xf9, 0xe9, 0xc9, 0x30, 0xc5, 0xca, 0x11, 0xcb, 0x7f, 0x08, 0xa0, 0xc4, 0x87, 0x26, 0xfe,
	0x2e, 0x80, 0x6d, 0x36, 0xa3, 0xae, 0xc3, 0xcf, 0xdf, 0xaf, 0xc2, 0xd2, 0x7a, 0x0a, 0xd1, 0x2f,
	0xf6, 0x8b, 0x00, 0x7e, 0x16, 0x5e, 0x40, 0x68, 0xc2, 0x56, 0xaf, 0xa6, 0xb5, 0x06, 0xd3, 0x7a,
	0x3c, 0xeb, 0xd5, 0xb4, 0xe6, 0xa0, 0xef, 0x4c, 0xeb, 0xb1, 0x4a, 0xd7, 0xf5, 0xc1, 0x31, 0x7d,
	0xa8, 0x9a, 0xb1, 0x0a, 0xfb, 0xfa, 0x7f, 0x64, 0xaa, 0xd3, 0x46, 0xac, 0xce, 0xfa, 0xd1, 0x43,
	0x08, 0x61, 0xaf, 0xa6, 0x1d, 0x9d, 0x68, 0x4f, 0x91, 0x36, 0x1c, 0x4c, 0xeb, 0xd5, 0x66, 0xdc,
	0x56, 0xa7, 0x8f, 0xe3, 0x95, 0xea, 0xac, 0xad, 0xaa, 0xb3, 0x77, 0x92, 0x0f, 0x63, 0xd8, 0x5e,
	0x61, 0x43, 0x68, 0x32, 0x1f, 0x33, 0x93, 0xbb, 0x98, 0xd5, 0xfb, 0x4e, 0xdf, 0x99, 0xf5, 0xea,
	0xda, 0x11, 0xf5, 0xc1, 0xcc, 0x7e, 0x80, 0xc3, 0x6c, 0x16, 0xbe, 0xb9, 0x15, 0x43, 0xb8, 0xfa,
	0x6e, 0x95, 0x6d, 0x71, 0xd6, 0xbe, 0x15, 0x0f, 0xcd, 0x42, 0x0f, 0xb4, 0xed, 0x5d, 0xd0, 0xf1,
	0x4d, 0x1a, 0x7b, 0x8f, 0xb3, 0x46, 0xa1, 0xb3, 0x66, 0x81, 0xb3, 0x69, 0xad, 0x6a, 0xc6, 0xb7,
	0xe4, 0xce, 0x2c, 0x74, 0xd7, 0x2a, 0x76, 0xd7, 0xb8, 0x2d, 0x77, 0xf5, 0x42, 0x77, 0x87, 0xc5,
	0xee, 0x9a, 0xff, 0x87, 0xbb, 0x76, 0x91, 0x91, 0xc7, 0xc5, 0x46, 0x5a, 0x37, 0x6f, 0x44, 0x85,
	0x0f, 0xf4, 0x47, 0xea, 0x71, 0x3f, 0x7a, 0x78, 0x60, 0x65, 0x97, 0x57, 0xf9, 0xa7, 0x0d, 0x50,
	0xe2, 0x77, 0xf7, 0x0d, 0x06, 0xaa, 0x0a, 0xb6, 0xd8, 0x9d, 0xcf, 0xd3, 0x74, 0x7f, 0x31, 0x97,
	0x3f, 0xce, 0xa7, 0x82, 0x62, 0x71, 0x82, 0x78, 0x0a, 0x36, 0x03, 0x14, 0x22, 0x3f, 0xc9, 0xd0,
	0x1d, 0xf3, 0xc1, 0x07, 0x02, 0x46, 0xff, 0x96, 0x92, 0x3b, 0x77, 0x17, 0x73, 0xf9, 0xa3, 0x34,
	0x6a, 0x43, 0xe4, 0x2b, 0x16, 0x53, 0x29, 0xff, 0x76, 0x07, 0x6c, 0x26, 0x14, 0xb1, 0x02, 0xd6,
	0x6d, 0x3f, 0xbd, 0x9d, 0x77, 0x17, 0x73, 0x19, 0xf0, 0x5c, 0xf1, 0x1d, 0xc5, 0xa2, 0x10, 0x0d,
	0x82, 0xc8, 0x0e, 0xbd, 0x80, 0x3c, 0x5b, 0x6e, 0x28, 0x17, 0x04, 0x4b, 0x4c, 0xb1, 0x72, 0x44,
	0xba, 0xb9, 0x00, 0x85, 0x91, 0x1b, 0xae, 0x6e, 0x8e, 0xd5, 0x15, 0x8b, 0x13, 0xc4, 0xcf, 0xf3,
	0x9b, 0x13, 0x0a, 0x5d, 0x8b, 0x3f, 0x80, 0x6d, 0xfa, 0x27, 0xf8, 0x3d, 0x15, 0x65, 0x3f, 0x00,
	0xed, 0x65, 0x9a, 0xa4, 0x08, 0x4d, 0x93, 0xfb, 0xe0, 0x33, 0x9a, 0xff, 0x3f, 0x9e, 0x68, 0xcf,
	0x69, 0xfe, 0xf7, 0xf4, 0x6c, 0x7d, 0xa6, 0x0d, 0xa6, 0x66, 0xb5, 0x51, 0x8f, 0x0f, 0xac, 0x4c,
	0x4b, 0xac, 0x82, 0x12, 0xf1, 0x7c, 0x17, 0x5f, 0x12, 0x69, 0xab, 0xb2, 0x06, 0x37, 0xff, 0x95,
	0xf6, 0x0c, 0xa0, 0x69, 0xcf, 0x56, 0x9d, 0x2f, 0x9f, 0x7f, 0x71, 0xbd, 0x3f, 0xbe, 0xf3, 0xad,
	0x84, 0xd4, 0xf8, 0x27, 0x00, 0x00, 0xff, 0xff, 0x38, 0x8e, 0xbc, 0x70, 0xd8, 0x0a, 0x00, 0x00,
}
