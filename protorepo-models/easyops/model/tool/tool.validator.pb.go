// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: tool.proto

package tool

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	math "math"
	regexp "regexp"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

var _regex_Tool_ToolId = regexp.MustCompile(`^[a-fA-F0-9]{32}$`)
var _regex_Tool_VId = regexp.MustCompile(`^[a-fA-F0-9]{32}$`)
var _regex_Tool_CreateTime = regexp.MustCompile(`^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])[T ](2[0-3]|[0-1][0-9]):([0-5][0-9]):[0-5][0-9](\.[0-9]+)?(Z|[+-](?:2[0-3]|[0-1][0-9]):[0-5][0-9])?$`)
var _regex_Tool_UpdateTime = regexp.MustCompile(`^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])[T ](2[0-3]|[0-1][0-9]):([0-5][0-9]):[0-5][0-9](\.[0-9]+)?(Z|[+-](?:2[0-3]|[0-1][0-9]):[0-5][0-9])?$`)
var _regex_Tool_Creator = regexp.MustCompile(`^[a-zA-Z0-9][.a-zA-Z0-9_-]{2,31}$`)
var _regex_Tool_ExecUser = regexp.MustCompile(`^[a-zA-Z0-9][.a-zA-Z0-9_-]{2,31}$`)
var _regex_Tool_AuthUsers = regexp.MustCompile(`^[a-zA-Z0-9][.a-zA-Z0-9_-]{2,31}$`)
var _regex_Tool_VCreateTime = regexp.MustCompile(`^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])[T ](2[0-3]|[0-1][0-9]):([0-5][0-9]):[0-5][0-9](\.[0-9]+)?(Z|[+-](?:2[0-3]|[0-1][0-9]):[0-5][0-9])?$`)
var _regex_Tool_VUpdateTime = regexp.MustCompile(`^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])[T ](2[0-3]|[0-1][0-9]):([0-5][0-9]):[0-5][0-9](\.[0-9]+)?(Z|[+-](?:2[0-3]|[0-1][0-9]):[0-5][0-9])?$`)
var _regex_Tool_VCreator = regexp.MustCompile(`^[a-zA-Z0-9][.a-zA-Z0-9_-]{2,31}$`)
var _regex_Tool_CheckUser = regexp.MustCompile(`^[a-zA-Z0-9][.a-zA-Z0-9_-]{2,31}$`)
var _regex_Tool_CheckSponsor = regexp.MustCompile(`^[a-zA-Z0-9][.a-zA-Z0-9_-]{2,31}$`)
var _regex_Tool_Approvers = regexp.MustCompile(`^[a-zA-Z0-9][.a-zA-Z0-9_-]{2,31}$`)
var _regex_Tool_AnsibleNodeExecUser = regexp.MustCompile(`^[a-zA-Z0-9][.a-zA-Z0-9_-]{2,31}$`)

func (this *Tool) Validate() error {
	if !_regex_Tool_ToolId.MatchString(this.ToolId) {
		return github_com_mwitkow_go_proto_validators.FieldError("ToolId", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-fA-F0-9]{32}$"`, this.ToolId))
	}
	if !_regex_Tool_VId.MatchString(this.VId) {
		return github_com_mwitkow_go_proto_validators.FieldError("VId", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-fA-F0-9]{32}$"`, this.VId))
	}
	if !_regex_Tool_CreateTime.MatchString(this.CreateTime) {
		return github_com_mwitkow_go_proto_validators.FieldError("CreateTime", fmt.Errorf(`value '%v' must be a string conforming to regex "^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])[T ](2[0-3]|[0-1][0-9]):([0-5][0-9]):[0-5][0-9](\\.[0-9]+)?(Z|[+-](?:2[0-3]|[0-1][0-9]):[0-5][0-9])?$"`, this.CreateTime))
	}
	if !_regex_Tool_UpdateTime.MatchString(this.UpdateTime) {
		return github_com_mwitkow_go_proto_validators.FieldError("UpdateTime", fmt.Errorf(`value '%v' must be a string conforming to regex "^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])[T ](2[0-3]|[0-1][0-9]):([0-5][0-9]):[0-5][0-9](\\.[0-9]+)?(Z|[+-](?:2[0-3]|[0-1][0-9]):[0-5][0-9])?$"`, this.UpdateTime))
	}
	if !_regex_Tool_Creator.MatchString(this.Creator) {
		return github_com_mwitkow_go_proto_validators.FieldError("Creator", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9][.a-zA-Z0-9_-]{2,31}$"`, this.Creator))
	}
	if !(this.Org > 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("Org", fmt.Errorf(`value '%v' must be greater than '0'`, this.Org))
	}
	for _, item := range this.Inputs {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Inputs", err)
			}
		}
	}
	if !_regex_Tool_ExecUser.MatchString(this.ExecUser) {
		return github_com_mwitkow_go_proto_validators.FieldError("ExecUser", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9][.a-zA-Z0-9_-]{2,31}$"`, this.ExecUser))
	}
	for _, item := range this.AuthUsers {
		if !_regex_Tool_AuthUsers.MatchString(item) {
			return github_com_mwitkow_go_proto_validators.FieldError("AuthUsers", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9][.a-zA-Z0-9_-]{2,31}$"`, item))
		}
	}
	if this.ToolOutputs != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ToolOutputs); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ToolOutputs", err)
		}
	}
	for _, item := range this.OutputDefs {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("OutputDefs", err)
			}
		}
	}
	for _, item := range this.TableDefs {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("TableDefs", err)
			}
		}
	}
	if !_regex_Tool_VCreateTime.MatchString(this.VCreateTime) {
		return github_com_mwitkow_go_proto_validators.FieldError("VCreateTime", fmt.Errorf(`value '%v' must be a string conforming to regex "^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])[T ](2[0-3]|[0-1][0-9]):([0-5][0-9]):[0-5][0-9](\\.[0-9]+)?(Z|[+-](?:2[0-3]|[0-1][0-9]):[0-5][0-9])?$"`, this.VCreateTime))
	}
	if !_regex_Tool_VUpdateTime.MatchString(this.VUpdateTime) {
		return github_com_mwitkow_go_proto_validators.FieldError("VUpdateTime", fmt.Errorf(`value '%v' must be a string conforming to regex "^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])[T ](2[0-3]|[0-1][0-9]):([0-5][0-9]):[0-5][0-9](\\.[0-9]+)?(Z|[+-](?:2[0-3]|[0-1][0-9]):[0-5][0-9])?$"`, this.VUpdateTime))
	}
	if !_regex_Tool_VCreator.MatchString(this.VCreator) {
		return github_com_mwitkow_go_proto_validators.FieldError("VCreator", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9][.a-zA-Z0-9_-]{2,31}$"`, this.VCreator))
	}
	if !_regex_Tool_CheckUser.MatchString(this.CheckUser) {
		return github_com_mwitkow_go_proto_validators.FieldError("CheckUser", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9][.a-zA-Z0-9_-]{2,31}$"`, this.CheckUser))
	}
	if !_regex_Tool_CheckSponsor.MatchString(this.CheckSponsor) {
		return github_com_mwitkow_go_proto_validators.FieldError("CheckSponsor", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9][.a-zA-Z0-9_-]{2,31}$"`, this.CheckSponsor))
	}
	if this.BatchStrategy != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.BatchStrategy); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("BatchStrategy", err)
		}
	}
	for _, item := range this.Approvers {
		if !_regex_Tool_Approvers.MatchString(item) {
			return github_com_mwitkow_go_proto_validators.FieldError("Approvers", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9][.a-zA-Z0-9_-]{2,31}$"`, item))
		}
	}
	if !_regex_Tool_AnsibleNodeExecUser.MatchString(this.AnsibleNodeExecUser) {
		return github_com_mwitkow_go_proto_validators.FieldError("AnsibleNodeExecUser", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9][.a-zA-Z0-9_-]{2,31}$"`, this.AnsibleNodeExecUser))
	}
	if this.Log != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Log); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Log", err)
		}
	}
	return nil
}
func (this *Tool_OutputDefs) Validate() error {
	return nil
}
func (this *Tool_TableDefs) Validate() error {
	for _, item := range this.Dimensions {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Dimensions", err)
			}
		}
	}
	for _, item := range this.Columns {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Columns", err)
			}
		}
	}
	return nil
}
func (this *Tool_TableDefs_Dimensions) Validate() error {
	return nil
}
func (this *Tool_TableDefs_Columns) Validate() error {
	return nil
}
func (this *Tool_Log) Validate() error {
	return nil
}
