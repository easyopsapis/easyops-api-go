// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pipeline.proto

package pipeline

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

//
//流水线
type Pipeline struct {
	//
	//流水线id，服务端自动生成
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" form:"id"`
	//
	//流水线名称
	AliasName string `protobuf:"bytes,2,opt,name=alias_name,json=aliasName,proto3" json:"alias_name" form:"alias_name"`
	//
	//yaml文件内容
	WorkflowType string `protobuf:"bytes,3,opt,name=workflow_type,json=workflowType,proto3" json:"workflow_type" form:"workflow_type"`
	//
	//workflow yaml存放位置
	YamlPath string `protobuf:"bytes,4,opt,name=yaml_path,json=yamlPath,proto3" json:"yaml_path" form:"yaml_path"`
	//
	//workflow定义字符串
	YamlString string `protobuf:"bytes,5,opt,name=yaml_string,json=yamlString,proto3" json:"yaml_string" form:"yaml_string"`
	//
	//workflow定义url
	YamlUrl string `protobuf:"bytes,6,opt,name=yaml_url,json=yamlUrl,proto3" json:"yaml_url" form:"yaml_url"`
	//
	//流水线全局变量
	Variables []*Pipeline_Variables `protobuf:"bytes,7,rep,name=variables,proto3" json:"variables" form:"variables"`
	//
	//创建者, 服务端自动生成
	Creator string `protobuf:"bytes,8,opt,name=creator,proto3" json:"creator" form:"creator"`
	//
	//创建时间, 服务端自动生成
	Ctime string `protobuf:"bytes,9,opt,name=ctime,proto3" json:"ctime" form:"ctime"`
	//
	//修改时间, 服务端自动生成
	Mtime                string   `protobuf:"bytes,10,opt,name=mtime,proto3" json:"mtime" form:"mtime"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pipeline) Reset()         { *m = Pipeline{} }
func (m *Pipeline) String() string { return proto.CompactTextString(m) }
func (*Pipeline) ProtoMessage()    {}
func (*Pipeline) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ac67a7adf3df9c7, []int{0}
}
func (m *Pipeline) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pipeline.Unmarshal(m, b)
}
func (m *Pipeline) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pipeline.Marshal(b, m, deterministic)
}
func (m *Pipeline) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pipeline.Merge(m, src)
}
func (m *Pipeline) XXX_Size() int {
	return xxx_messageInfo_Pipeline.Size(m)
}
func (m *Pipeline) XXX_DiscardUnknown() {
	xxx_messageInfo_Pipeline.DiscardUnknown(m)
}

var xxx_messageInfo_Pipeline proto.InternalMessageInfo

func (m *Pipeline) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Pipeline) GetAliasName() string {
	if m != nil {
		return m.AliasName
	}
	return ""
}

func (m *Pipeline) GetWorkflowType() string {
	if m != nil {
		return m.WorkflowType
	}
	return ""
}

func (m *Pipeline) GetYamlPath() string {
	if m != nil {
		return m.YamlPath
	}
	return ""
}

func (m *Pipeline) GetYamlString() string {
	if m != nil {
		return m.YamlString
	}
	return ""
}

func (m *Pipeline) GetYamlUrl() string {
	if m != nil {
		return m.YamlUrl
	}
	return ""
}

func (m *Pipeline) GetVariables() []*Pipeline_Variables {
	if m != nil {
		return m.Variables
	}
	return nil
}

func (m *Pipeline) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *Pipeline) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

func (m *Pipeline) GetMtime() string {
	if m != nil {
		return m.Mtime
	}
	return ""
}

type Pipeline_Variables struct {
	//
	//key
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key" form:"key"`
	//
	//value
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value" form:"value"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pipeline_Variables) Reset()         { *m = Pipeline_Variables{} }
func (m *Pipeline_Variables) String() string { return proto.CompactTextString(m) }
func (*Pipeline_Variables) ProtoMessage()    {}
func (*Pipeline_Variables) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ac67a7adf3df9c7, []int{0, 0}
}
func (m *Pipeline_Variables) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pipeline_Variables.Unmarshal(m, b)
}
func (m *Pipeline_Variables) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pipeline_Variables.Marshal(b, m, deterministic)
}
func (m *Pipeline_Variables) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pipeline_Variables.Merge(m, src)
}
func (m *Pipeline_Variables) XXX_Size() int {
	return xxx_messageInfo_Pipeline_Variables.Size(m)
}
func (m *Pipeline_Variables) XXX_DiscardUnknown() {
	xxx_messageInfo_Pipeline_Variables.DiscardUnknown(m)
}

var xxx_messageInfo_Pipeline_Variables proto.InternalMessageInfo

func (m *Pipeline_Variables) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Pipeline_Variables) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*Pipeline)(nil), "pipeline.Pipeline")
	proto.RegisterType((*Pipeline_Variables)(nil), "pipeline.Pipeline.Variables")
}

func init() { proto.RegisterFile("pipeline.proto", fileDescriptor_7ac67a7adf3df9c7) }

var fileDescriptor_7ac67a7adf3df9c7 = []byte{
	// 774 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x54, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0xc6, 0x2d, 0xdd, 0xd6, 0xb3, 0x3f, 0x2c, 0x56, 0x05, 0x56, 0xb5, 0xe0, 0xca, 0x5b, 0x56,
	0xe3, 0xa6, 0x63, 0xa7, 0xc9, 0x6e, 0xa4, 0x5a, 0x04, 0xb3, 0x11, 0x02, 0x71, 0x83, 0x2a, 0xb3,
	0x70, 0x11, 0x8f, 0x63, 0x4d, 0x12, 0x37, 0xb1, 0x62, 0x67, 0x2c, 0xdb, 0x89, 0xc9, 0x36, 0xe9,
	0x3b, 0xf0, 0x1a, 0x08, 0x5e, 0x82, 0x3b, 0x1e, 0x81, 0x1b, 0x23, 0xf1, 0x08, 0x7e, 0x02, 0xe4,
	0x71, 0x9c, 0x64, 0x55, 0x5e, 0x60, 0xaf, 0x3c, 0xe7, 0x9c, 0xef, 0xfb, 0xce, 0xf9, 0xac, 0xa3,
	0x03, 0x9e, 0x84, 0x5e, 0xe8, 0xfa, 0xde, 0xd4, 0x55, 0xc3, 0x88, 0x26, 0x54, 0x38, 0xaa, 0xe2,
	0x13, 0x34, 0xf2, 0x92, 0xf1, 0xac, 0xaf, 0x0e, 0x68, 0xa0, 0x8d, 0xe8, 0x88, 0x6a, 0x0c, 0xd0,
	0x9f, 0xdd, 0xb0, 0x88, 0x05, 0xec, 0x55, 0x12, 0x4f, 0x5a, 0x3b, 0xf0, 0x20, 0xf5, 0x92, 0x09,
	0x4d, 0xb5, 0x11, 0x45, 0xac, 0x88, 0xe6, 0xc4, 0xf7, 0x86, 0x24, 0xa1, 0x51, 0xac, 0x6d, 0x9e,
	0x25, 0x4f, 0xfe, 0x9d, 0x07, 0x47, 0xd7, 0xeb, 0x9e, 0xc2, 0x67, 0x60, 0xcf, 0x1b, 0x8a, 0xdc,
	0x29, 0x07, 0xf9, 0xce, 0xe3, 0x3c, 0x93, 0xf8, 0x1b, 0x1a, 0x05, 0xba, 0xec, 0x0d, 0x65, 0x73,
	0xcf, 0x1b, 0x0a, 0x6d, 0x00, 0x88, 0xef, 0x91, 0xd8, 0x99, 0x92, 0xc0, 0x15, 0xf7, 0x18, 0xec,
	0xf3, 0x3c, 0x93, 0x3e, 0x2e, 0x61, 0xdb, 0x9a, 0xfc, 0xef, 0x3f, 0xd2, 0x41, 0xb8, 0xff, 0xcb,
	0x5f, 0x9c, 0xc9, 0xb3, 0xec, 0x0f, 0x24, 0x70, 0x85, 0x36, 0x78, 0x9c, 0xd2, 0x68, 0x72, 0xe3,
	0xd3, 0xd4, 0x49, 0x16, 0xa1, 0x2b, 0xee, 0x33, 0x05, 0x31, 0xcf, 0xa4, 0xe3, 0x52, 0xe1, 0x9d,
	0xb2, 0x6c, 0x3e, 0xaa, 0xe2, 0x37, 0x8b, 0xd0, 0x15, 0xee, 0x00, 0xbf, 0x20, 0x81, 0xef, 0x84,
	0x24, 0x19, 0x8b, 0x1f, 0x32, 0x2a, 0xc9, 0x33, 0xe9, 0x69, 0x49, 0xdd, 0x94, 0x8a, 0xde, 0xdf,
	0x83, 0xef, 0x7a, 0x10, 0x62, 0xcd, 0xea, 0x61, 0x4d, 0xc7, 0xe7, 0xd8, 0x90, 0xe5, 0x2f, 0xbf,
	0xc2, 0x4b, 0x1c, 0xe1, 0xa9, 0x5d, 0x53, 0x6a, 0xca, 0x12, 0x62, 0x4d, 0x59, 0x5a, 0x04, 0xbd,
	0x7d, 0x8d, 0xba, 0xb6, 0x0e, 0x31, 0xb6, 0x7a, 0x18, 0xdf, 0x47, 0x9e, 0x9f, 0x99, 0x47, 0x85,
	0xf0, 0x35, 0x49, 0xc6, 0x42, 0x1b, 0x3c, 0x64, 0x4d, 0xe2, 0x24, 0xf2, 0xa6, 0x23, 0xf1, 0x80,
	0x4d, 0xf0, 0x2c, 0xcf, 0x24, 0x61, 0x67, 0x82, 0xb2, 0x58, 0xcc, 0xb0, 0x17, 0x7e, 0x60, 0x82,
	0x22, 0xf7, 0x23, 0x4b, 0x09, 0xbf, 0x72, 0x80, 0x69, 0x39, 0xb3, 0xc8, 0x17, 0x1f, 0x30, 0xf2,
	0x3c, 0xcf, 0xa4, 0x8f, 0x76, 0xc8, 0xb3, 0xc8, 0x2f, 0x98, 0x0e, 0xb0, 0x7b, 0xe3, 0x24, 0x09,
	0x63, 0x43, 0xc7, 0x1a, 0xd6, 0x60, 0x9a, 0xa6, 0x58, 0x55, 0x0c, 0x0b, 0x95, 0xf3, 0xd6, 0xd1,
	0xd5, 0xd7, 0xfa, 0x17, 0xaa, 0x83, 0x6b, 0x77, 0xcf, 0xdb, 0xf6, 0x6d, 0xe3, 0xa2, 0xf1, 0xaa,
	0xb5, 0xc2, 0x6a, 0xe1, 0xa6, 0x88, 0x5a, 0x2b, 0xdc, 0x87, 0xef, 0x62, 0x1d, 0x5c, 0x53, 0xef,
	0x9e, 0x1b, 0x2f, 0x34, 0xad, 0x6d, 0x9f, 0x2b, 0x67, 0xe6, 0x61, 0xd1, 0xed, 0xa7, 0xc8, 0x17,
	0xae, 0x01, 0x3f, 0x27, 0x91, 0x47, 0xfa, 0xbe, 0x1b, 0x8b, 0x87, 0xa7, 0xfb, 0xf0, 0x61, 0xe3,
	0x99, 0xba, 0xd9, 0xc8, 0x6a, 0x2d, 0xd4, 0x9f, 0x2b, 0x4c, 0xe7, 0x78, 0xfb, 0xc3, 0x37, 0x44,
	0xd9, 0xdc, 0x8a, 0x08, 0xdf, 0x82, 0xc3, 0x41, 0xe4, 0x16, 0xfb, 0x25, 0x1e, 0x31, 0x8f, 0x17,
	0x79, 0x26, 0x3d, 0x29, 0x19, 0xeb, 0x42, 0x61, 0xf1, 0x13, 0x70, 0xdc, 0xb3, 0x5e, 0xa3, 0x2e,
	0x41, 0x6f, 0x1d, 0x64, 0xe3, 0xf4, 0xb6, 0x79, 0xd1, 0x7a, 0xb9, 0x3a, 0x33, 0x2b, 0xb2, 0xf0,
	0x37, 0x07, 0x0e, 0x06, 0x89, 0x17, 0xb8, 0x22, 0xcf, 0x64, 0xfe, 0xe4, 0xf2, 0x4c, 0x7a, 0xb4,
	0xd6, 0x29, 0xf2, 0x85, 0xca, 0x1f, 0x1c, 0xf8, 0x8d, 0xeb, 0x41, 0x68, 0xe8, 0xd6, 0x25, 0xba,
	0xb2, 0xad, 0x3a, 0xba, 0xb2, 0xcf, 0x15, 0x83, 0x7d, 0x6f, 0x5f, 0xae, 0x14, 0x04, 0x2f, 0xad,
	0x3a, 0x6a, 0xd8, 0xcb, 0x3a, 0xab, 0x2b, 0x08, 0x36, 0xad, 0x3a, 0xba, 0xac, 0xe2, 0xa5, 0x75,
	0x89, 0x1a, 0x25, 0x4b, 0xb1, 0xde, 0x9c, 0xda, 0xb0, 0x61, 0xd5, 0x51, 0xd3, 0x5e, 0x32, 0x4c,
	0x99, 0xd6, 0xa1, 0x55, 0x47, 0xaf, 0xaa, 0x60, 0xfb, 0x86, 0x58, 0x65, 0xdf, 0x9a, 0x62, 0xc0,
	0xee, 0xd2, 0xaa, 0x21, 0x1b, 0x1a, 0xfa, 0xff, 0xd0, 0x77, 0xd8, 0xc6, 0x99, 0x59, 0x3a, 0x62,
	0xde, 0x02, 0xe6, 0x0d, 0xdc, 0xf3, 0x16, 0xbc, 0xb7, 0xde, 0xd8, 0xe4, 0x27, 0x3d, 0xc0, 0x6f,
	0xb6, 0x45, 0x50, 0xc0, 0xfe, 0xc4, 0x5d, 0xac, 0xef, 0xc9, 0xa7, 0x79, 0x26, 0x81, 0xd2, 0xe4,
	0xc4, 0x5d, 0x94, 0x17, 0x82, 0x2b, 0x2e, 0x44, 0x81, 0x11, 0x5e, 0x80, 0x83, 0x39, 0xf1, 0x67,
	0xd5, 0x55, 0x79, 0xba, 0xfd, 0x23, 0x2c, 0x2d, 0x9b, 0x65, 0xb9, 0xf3, 0x4d, 0xb7, 0x33, 0xa2,
	0xaa, 0x4b, 0xe2, 0x05, 0x0d, 0x63, 0xd5, 0xa7, 0x03, 0xe2, 0x6b, 0x03, 0x3a, 0x4d, 0x22, 0x32,
	0x48, 0xe2, 0xf2, 0x44, 0x46, 0x6e, 0x48, 0x51, 0x40, 0x87, 0xae, 0x1f, 0x6b, 0x6b, 0xa0, 0xc6,
	0x42, 0xad, 0xda, 0xec, 0xfe, 0x03, 0x06, 0x6c, 0xfe, 0x17, 0x00, 0x00, 0xff, 0xff, 0x57, 0x71,
	0x83, 0x82, 0x7e, 0x05, 0x00, 0x00,
}
