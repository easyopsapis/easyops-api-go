// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: template.proto

package pipeline

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//流水线模版
type PipelineTemplate struct {
	//
	//模板id，服务端自动生成
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" form:"id"`
	//
	//模板名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name" form:"name"`
	//
	//简介
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description" form:"description"`
	//
	//yaml定义
	YamlString string `protobuf:"bytes,4,opt,name=yaml_string,json=yamlString,proto3" json:"yaml_string" form:"yaml_string"`
	//
	//模板变量列表
	Variables []*PipelineTemplate_Variables `protobuf:"bytes,5,rep,name=variables,proto3" json:"variables" form:"variables"`
	//
	//创建者，服务端自动生成
	Creator string `protobuf:"bytes,6,opt,name=creator,proto3" json:"creator" form:"creator"`
	//
	//创建时间, 服务端自动生成
	Ctime string `protobuf:"bytes,7,opt,name=ctime,proto3" json:"ctime" form:"ctime"`
	//
	//修改时间, 服务端自动生成
	Mtime                string   `protobuf:"bytes,8,opt,name=mtime,proto3" json:"mtime" form:"mtime"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PipelineTemplate) Reset()         { *m = PipelineTemplate{} }
func (m *PipelineTemplate) String() string { return proto.CompactTextString(m) }
func (*PipelineTemplate) ProtoMessage()    {}
func (*PipelineTemplate) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1b68e1b5f001c74, []int{0}
}
func (m *PipelineTemplate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PipelineTemplate.Unmarshal(m, b)
}
func (m *PipelineTemplate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PipelineTemplate.Marshal(b, m, deterministic)
}
func (m *PipelineTemplate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PipelineTemplate.Merge(m, src)
}
func (m *PipelineTemplate) XXX_Size() int {
	return xxx_messageInfo_PipelineTemplate.Size(m)
}
func (m *PipelineTemplate) XXX_DiscardUnknown() {
	xxx_messageInfo_PipelineTemplate.DiscardUnknown(m)
}

var xxx_messageInfo_PipelineTemplate proto.InternalMessageInfo

func (m *PipelineTemplate) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PipelineTemplate) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PipelineTemplate) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *PipelineTemplate) GetYamlString() string {
	if m != nil {
		return m.YamlString
	}
	return ""
}

func (m *PipelineTemplate) GetVariables() []*PipelineTemplate_Variables {
	if m != nil {
		return m.Variables
	}
	return nil
}

func (m *PipelineTemplate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *PipelineTemplate) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

func (m *PipelineTemplate) GetMtime() string {
	if m != nil {
		return m.Mtime
	}
	return ""
}

type PipelineTemplate_Variables struct {
	//
	//name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name" form:"name"`
	//
	//value
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value" form:"value"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PipelineTemplate_Variables) Reset()         { *m = PipelineTemplate_Variables{} }
func (m *PipelineTemplate_Variables) String() string { return proto.CompactTextString(m) }
func (*PipelineTemplate_Variables) ProtoMessage()    {}
func (*PipelineTemplate_Variables) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1b68e1b5f001c74, []int{0, 0}
}
func (m *PipelineTemplate_Variables) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PipelineTemplate_Variables.Unmarshal(m, b)
}
func (m *PipelineTemplate_Variables) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PipelineTemplate_Variables.Marshal(b, m, deterministic)
}
func (m *PipelineTemplate_Variables) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PipelineTemplate_Variables.Merge(m, src)
}
func (m *PipelineTemplate_Variables) XXX_Size() int {
	return xxx_messageInfo_PipelineTemplate_Variables.Size(m)
}
func (m *PipelineTemplate_Variables) XXX_DiscardUnknown() {
	xxx_messageInfo_PipelineTemplate_Variables.DiscardUnknown(m)
}

var xxx_messageInfo_PipelineTemplate_Variables proto.InternalMessageInfo

func (m *PipelineTemplate_Variables) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PipelineTemplate_Variables) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*PipelineTemplate)(nil), "pipeline.PipelineTemplate")
	proto.RegisterType((*PipelineTemplate_Variables)(nil), "pipeline.PipelineTemplate.Variables")
}

func init() { proto.RegisterFile("template.proto", fileDescriptor_b1b68e1b5f001c74) }

var fileDescriptor_b1b68e1b5f001c74 = []byte{
	// 557 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x54, 0xdd, 0x6e, 0xd3, 0x3c,
	0x18, 0x56, 0xba, 0x75, 0x5d, 0xdd, 0xef, 0x1b, 0x55, 0x84, 0x50, 0x54, 0x09, 0xa5, 0x64, 0x15,
	0x4a, 0x19, 0x4e, 0xd2, 0x96, 0xbf, 0xf5, 0xa4, 0xa2, 0xe2, 0x02, 0x50, 0x36, 0xa1, 0xa9, 0x21,
	0x9b, 0xdc, 0xc4, 0x0b, 0x16, 0x49, 0x1d, 0x25, 0x6e, 0xa7, 0xb1, 0xee, 0x06, 0xb8, 0x14, 0x24,
	0x6e, 0x82, 0xbb, 0xe0, 0x24, 0x48, 0x5c, 0x42, 0xae, 0x00, 0xc5, 0x6e, 0xda, 0x6a, 0x20, 0xce,
	0x39, 0xf2, 0xfb, 0xbc, 0xcf, 0x4f, 0xfc, 0x5a, 0x76, 0xc0, 0x01, 0xc3, 0x51, 0x1c, 0x22, 0x86,
	0x8d, 0x38, 0xa1, 0x8c, 0xca, 0xfb, 0x31, 0x89, 0x71, 0x48, 0x66, 0xb8, 0x05, 0x03, 0xc2, 0x3e,
	0xcc, 0xa7, 0x86, 0x47, 0x23, 0x33, 0xa0, 0x01, 0x35, 0xb9, 0x60, 0x3a, 0xbf, 0xe4, 0x88, 0x03,
	0x5e, 0x09, 0x63, 0xeb, 0xc5, 0x96, 0x3c, 0xba, 0x22, 0xec, 0x23, 0xbd, 0x32, 0x03, 0x0a, 0x39,
	0x09, 0x17, 0x28, 0x24, 0x3e, 0x62, 0x34, 0x49, 0xcd, 0x75, 0x29, 0x7c, 0xda, 0xe7, 0x1a, 0x68,
	0xbe, 0x5d, 0x7d, 0xf3, 0x74, 0xb5, 0x17, 0xf9, 0x21, 0xa8, 0x10, 0x5f, 0x91, 0xda, 0x92, 0x5e,
	0x1f, 0xff, 0x9f, 0x67, 0x6a, 0xfd, 0x92, 0x26, 0xd1, 0x50, 0x23, 0xbe, 0x66, 0x57, 0x88, 0x2f,
	0x1f, 0x82, 0xdd, 0x19, 0x8a, 0xb0, 0x52, 0xe1, 0x82, 0x7b, 0x79, 0xa6, 0x36, 0x84, 0xa0, 0xe8,
	0x6a, 0x36, 0x27, 0xe5, 0x57, 0xa0, 0xe1, 0xe3, 0xd4, 0x4b, 0x48, 0xcc, 0x08, 0x9d, 0x29, 0x3b,
	0x5c, 0xfb, 0x20, 0xcf, 0x54, 0x59, 0x68, 0xb7, 0x48, 0xcd, 0xde, 0x96, 0xca, 0x2f, 0x41, 0xe3,
	0x1a, 0x45, 0xe1, 0x45, 0xca, 0x12, 0x32, 0x0b, 0x94, 0xdd, 0xbb, 0xce, 0x2d, 0x52, 0xb3, 0x41,
	0x81, 0x4e, 0x38, 0x90, 0xcf, 0x40, 0x7d, 0x81, 0x12, 0x82, 0xa6, 0x21, 0x4e, 0x95, 0x6a, 0x7b,
	0x47, 0x6f, 0xf4, 0x3b, 0x46, 0x79, 0xa0, 0xc6, 0xdd, 0x29, 0x8d, 0x77, 0xa5, 0x76, 0x7c, 0x3f,
	0xcf, 0xd4, 0xa6, 0x08, 0x5f, 0x07, 0x68, 0xf6, 0x26, 0x4c, 0x3e, 0x01, 0x35, 0x2f, 0xc1, 0xc5,
	0xb1, 0x29, 0x7b, 0x7c, 0x3b, 0xc7, 0x79, 0xa6, 0x1e, 0x08, 0xc7, 0x8a, 0xd0, 0x7e, 0xfe, 0x50,
	0x0f, 0xc1, 0xa3, 0x73, 0x07, 0xc1, 0x4f, 0xaf, 0xe1, 0xc4, 0x82, 0xc7, 0xae, 0x63, 0xac, 0xeb,
	0x0b, 0xe8, 0xde, 0xf4, 0x9f, 0x0e, 0x7a, 0xb7, 0x1d, 0xbb, 0x4c, 0x92, 0xbf, 0x4b, 0xa0, 0xea,
	0x31, 0x12, 0x61, 0xa5, 0xc6, 0x33, 0xbf, 0x49, 0x79, 0xa6, 0xfe, 0xb7, 0x0a, 0x2d, 0xfa, 0x45,
	0xe4, 0x57, 0x09, 0x7c, 0x91, 0xce, 0x75, 0x7d, 0x34, 0x74, 0x7a, 0x45, 0x64, 0x91, 0xfb, 0xa4,
	0x3b, 0xe2, 0xeb, 0xcd, 0xb3, 0xdb, 0x2e, 0xd4, 0x7b, 0x8e, 0x05, 0xfb, 0xee, 0xd2, 0xe2, 0x7c,
	0x17, 0xea, 0x03, 0xc7, 0x82, 0xbd, 0x12, 0x2f, 0x9d, 0x1e, 0xec, 0x0b, 0x57, 0xd7, 0x39, 0x6d,
	0xbb, 0x7a, 0xdf, 0xb1, 0xe0, 0xc0, 0x5d, 0x72, 0x8d, 0x68, 0x0f, 0x75, 0xc7, 0x82, 0xcf, 0x4b,
	0xb0, 0xa9, 0xf5, 0xf7, 0x06, 0x5f, 0x8f, 0xba, 0x23, 0x7d, 0xb2, 0x74, 0x8e, 0xa0, 0xab, 0x8f,
	0x86, 0x7f, 0xb0, 0x6f, 0xb9, 0x47, 0x1d, 0x5b, 0x4c, 0xc4, 0x67, 0x8b, 0xf8, 0x6c, 0xfb, 0xbf,
	0xcd, 0x16, 0xfd, 0xb3, 0xb3, 0xf1, 0x9d, 0xb7, 0xce, 0x40, 0x7d, 0x7d, 0x75, 0xd6, 0x6f, 0x41,
	0xfa, 0xdb, 0x5b, 0x78, 0x0c, 0xaa, 0x0b, 0x14, 0xce, 0xcb, 0x17, 0xd3, 0xdc, 0x9c, 0x05, 0x6f,
	0x6b, 0xb6, 0xa0, 0xc7, 0x6f, 0x26, 0xe3, 0x80, 0x1a, 0x18, 0xa5, 0xd7, 0x34, 0x4e, 0x8d, 0x90,
	0x7a, 0x28, 0x34, 0x3d, 0x3a, 0x63, 0x09, 0xf2, 0x58, 0x2a, 0x7e, 0x00, 0x09, 0x8e, 0x29, 0x8c,
	0xa8, 0x8f, 0xc3, 0xd4, 0x5c, 0x09, 0x4d, 0x0e, 0xcd, 0xf2, 0xa2, 0x4f, 0xf7, 0xb8, 0x70, 0xf0,
	0x2b, 0x00, 0x00, 0xff, 0xff, 0x0c, 0xd2, 0x6b, 0xdf, 0x5c, 0x04, 0x00, 0x00,
}
