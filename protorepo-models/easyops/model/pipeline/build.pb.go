// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: build.proto

package pipeline

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//流水线任务
type Build struct {
	//
	//任务id, 服务端自动生成
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" form:"id"`
	//
	//git信息, 创建的时候传入，不能修改
	GitMeta *GitMeta `protobuf:"bytes,2,opt,name=git_meta,json=gitMeta,proto3" json:"git_meta" form:"git_meta"`
	//
	//触发者，创建的时候传入，不能修改
	Sender string `protobuf:"bytes,3,opt,name=sender,proto3" json:"sender" form:"sender"`
	//
	//制品包信息
	Artifact *Build_Artifact `protobuf:"bytes,4,opt,name=artifact,proto3" json:"artifact" form:"artifact"`
	//
	//创建时间，创建的时候传入，不能修改
	Created int32 `protobuf:"varint,5,opt,name=created,proto3" json:"created" form:"created"`
	//
	//workflow定义
	YamlString string `protobuf:"bytes,6,opt,name=yaml_string,json=yamlString,proto3" json:"yaml_string" form:"yaml_string"`
	//
	//执行状态
	Status *BuildStatus `protobuf:"bytes,7,opt,name=status,proto3" json:"status" form:"status"`
	//
	//编号
	Number string `protobuf:"bytes,8,opt,name=number,proto3" json:"number" form:"number"`
	//
	//事件列表
	Events               []string `protobuf:"bytes,9,rep,name=events,proto3" json:"events" form:"events"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Build) Reset()         { *m = Build{} }
func (m *Build) String() string { return proto.CompactTextString(m) }
func (*Build) ProtoMessage()    {}
func (*Build) Descriptor() ([]byte, []int) {
	return fileDescriptor_14ce178a580e4ede, []int{0}
}
func (m *Build) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Build.Unmarshal(m, b)
}
func (m *Build) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Build.Marshal(b, m, deterministic)
}
func (m *Build) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Build.Merge(m, src)
}
func (m *Build) XXX_Size() int {
	return xxx_messageInfo_Build.Size(m)
}
func (m *Build) XXX_DiscardUnknown() {
	xxx_messageInfo_Build.DiscardUnknown(m)
}

var xxx_messageInfo_Build proto.InternalMessageInfo

func (m *Build) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Build) GetGitMeta() *GitMeta {
	if m != nil {
		return m.GitMeta
	}
	return nil
}

func (m *Build) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *Build) GetArtifact() *Build_Artifact {
	if m != nil {
		return m.Artifact
	}
	return nil
}

func (m *Build) GetCreated() int32 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Build) GetYamlString() string {
	if m != nil {
		return m.YamlString
	}
	return ""
}

func (m *Build) GetStatus() *BuildStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Build) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

func (m *Build) GetEvents() []string {
	if m != nil {
		return m.Events
	}
	return nil
}

type Build_Artifact struct {
	//
	//制品包名称
	PackageName string `protobuf:"bytes,1,opt,name=packageName,proto3" json:"packageName" form:"packageName"`
	//
	//版本号
	VersionName string `protobuf:"bytes,2,opt,name=versionName,proto3" json:"versionName" form:"versionName"`
	//
	//制品包上传时间
	Ctime string `protobuf:"bytes,3,opt,name=ctime,proto3" json:"ctime" form:"ctime"`
	//
	//程序包Id
	PackageId string `protobuf:"bytes,4,opt,name=packageId,proto3" json:"packageId" form:"packageId"`
	//
	//版本Id
	VersionId            string   `protobuf:"bytes,5,opt,name=versionId,proto3" json:"versionId" form:"versionId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Build_Artifact) Reset()         { *m = Build_Artifact{} }
func (m *Build_Artifact) String() string { return proto.CompactTextString(m) }
func (*Build_Artifact) ProtoMessage()    {}
func (*Build_Artifact) Descriptor() ([]byte, []int) {
	return fileDescriptor_14ce178a580e4ede, []int{0, 0}
}
func (m *Build_Artifact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Build_Artifact.Unmarshal(m, b)
}
func (m *Build_Artifact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Build_Artifact.Marshal(b, m, deterministic)
}
func (m *Build_Artifact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Build_Artifact.Merge(m, src)
}
func (m *Build_Artifact) XXX_Size() int {
	return xxx_messageInfo_Build_Artifact.Size(m)
}
func (m *Build_Artifact) XXX_DiscardUnknown() {
	xxx_messageInfo_Build_Artifact.DiscardUnknown(m)
}

var xxx_messageInfo_Build_Artifact proto.InternalMessageInfo

func (m *Build_Artifact) GetPackageName() string {
	if m != nil {
		return m.PackageName
	}
	return ""
}

func (m *Build_Artifact) GetVersionName() string {
	if m != nil {
		return m.VersionName
	}
	return ""
}

func (m *Build_Artifact) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

func (m *Build_Artifact) GetPackageId() string {
	if m != nil {
		return m.PackageId
	}
	return ""
}

func (m *Build_Artifact) GetVersionId() string {
	if m != nil {
		return m.VersionId
	}
	return ""
}

func init() {
	proto.RegisterType((*Build)(nil), "pipeline.Build")
	proto.RegisterType((*Build_Artifact)(nil), "pipeline.Build.Artifact")
}

func init() { proto.RegisterFile("build.proto", fileDescriptor_14ce178a580e4ede) }

var fileDescriptor_14ce178a580e4ede = []byte{
	// 734 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0xc1, 0x6e, 0xdb, 0x46,
	0x10, 0x05, 0x65, 0x4b, 0x96, 0x56, 0xad, 0x6b, 0xb3, 0x68, 0x41, 0xf8, 0x42, 0x99, 0xd5, 0x81,
	0xaa, 0xbd, 0xa4, 0x28, 0xb9, 0xad, 0xad, 0x8b, 0x2a, 0xa2, 0x68, 0xa1, 0x43, 0x83, 0x98, 0x4e,
	0x2e, 0x66, 0x64, 0x61, 0x45, 0xae, 0x18, 0xc2, 0xa2, 0x56, 0x20, 0x57, 0x36, 0x6c, 0x4b, 0x1f,
	0x90, 0x4b, 0x3e, 0x24, 0x40, 0x7e, 0x22, 0x7f, 0x91, 0x8b, 0x02, 0xe4, 0x13, 0xf8, 0x05, 0x01,
	0x77, 0x49, 0x99, 0x36, 0x72, 0x09, 0x92, 0x9c, 0xb8, 0x33, 0xef, 0xbd, 0x99, 0x37, 0xe3, 0xb1,
	0x40, 0x75, 0x34, 0xf7, 0x27, 0xae, 0x36, 0x0b, 0x09, 0x25, 0x62, 0x79, 0xe6, 0xcf, 0xf0, 0xc4,
	0x9f, 0xe2, 0x3d, 0xe8, 0xf9, 0xf4, 0xe5, 0x7c, 0xa4, 0x39, 0x24, 0xd0, 0x3d, 0xe2, 0x11, 0x9d,
	0x11, 0x46, 0xf3, 0x31, 0x8b, 0x58, 0xc0, 0x5e, 0x5c, 0xb8, 0x77, 0xea, 0x11, 0x0d, 0xa3, 0xe8,
	0x86, 0xcc, 0x22, 0x6d, 0x42, 0x1c, 0x34, 0xd1, 0x1d, 0x32, 0xa5, 0x21, 0x72, 0x68, 0xc4, 0x95,
	0x21, 0x9e, 0x11, 0x18, 0x10, 0x17, 0x4f, 0x22, 0x3d, 0x25, 0xea, 0x2c, 0xd4, 0xb3, 0x96, 0xba,
	0xe7, 0xd3, 0x61, 0x80, 0x29, 0x4a, 0x4b, 0x3e, 0xff, 0x06, 0x25, 0xd9, 0x6c, 0xc3, 0x88, 0x22,
	0x3a, 0x8f, 0xd2, 0xb2, 0x7f, 0xe6, 0x06, 0x0b, 0xae, 0x7d, 0x7a, 0x49, 0xae, 0x75, 0x8f, 0x40,
	0x06, 0xc2, 0x2b, 0x34, 0xf1, 0x5d, 0x44, 0x49, 0x18, 0xe9, 0xeb, 0x27, 0xd7, 0x29, 0xaf, 0x2b,
	0xa0, 0x68, 0x26, 0xe5, 0x44, 0x03, 0x14, 0x7c, 0x57, 0x12, 0x6a, 0x82, 0x5a, 0x31, 0xf7, 0xe3,
	0x95, 0x5c, 0x19, 0x93, 0x30, 0xe8, 0x28, 0xbe, 0xab, 0x7c, 0xfc, 0x20, 0xef, 0x80, 0xed, 0x0b,
	0xbb, 0x09, 0x4f, 0x10, 0xbc, 0x1d, 0xdc, 0x19, 0xed, 0x65, 0xdd, 0x2a, 0xf8, 0xae, 0xd8, 0x03,
	0xe5, 0x6c, 0x3a, 0xa9, 0x50, 0x13, 0xd4, 0x6a, 0x6b, 0x57, 0xcb, 0x4c, 0x6a, 0xff, 0xf9, 0xf4,
	0x7f, 0x4c, 0x91, 0xf9, 0x73, 0xbc, 0x92, 0x7f, 0xe2, 0xb5, 0x32, 0xb2, 0x62, 0x6d, 0x79, 0x1c,
	0x15, 0x9f, 0x82, 0x52, 0x84, 0xa7, 0x2e, 0x0e, 0xa5, 0x0d, 0xd6, 0xf9, 0x38, 0x5e, 0xc9, 0x3f,
	0x72, 0x36, 0xcf, 0x27, 0xdd, 0x7f, 0x03, 0xfb, 0x17, 0x36, 0x82, 0xb7, 0x3d, 0x78, 0xde, 0x84,
	0x27, 0x03, 0x5b, 0x5b, 0xbf, 0x87, 0x70, 0x70, 0xd7, 0x3a, 0x6c, 0x1b, 0xcb, 0xba, 0x95, 0xd6,
	0x11, 0xfb, 0xa0, 0x8c, 0x42, 0xea, 0x8f, 0x91, 0x43, 0xa5, 0x4d, 0x66, 0x4a, 0xba, 0x37, 0xc5,
	0x46, 0xd5, 0x7a, 0x29, 0x9e, 0xf7, 0x96, 0x69, 0x14, 0x6b, 0x2d, 0x17, 0x0f, 0xc1, 0x96, 0x13,
	0x62, 0x44, 0xb1, 0x2b, 0x15, 0x6b, 0x82, 0x5a, 0x34, 0xc5, 0x78, 0x25, 0x6f, 0x73, 0x7e, 0x0a,
	0x28, 0x56, 0x46, 0x11, 0xff, 0x02, 0xd5, 0x1b, 0x14, 0x4c, 0x86, 0x11, 0x0d, 0xfd, 0xa9, 0x27,
	0x95, 0xd8, 0x3c, 0xbf, 0xc6, 0x2b, 0x59, 0xe4, 0x8a, 0x1c, 0xa8, 0x58, 0x20, 0x89, 0xce, 0x58,
	0x20, 0xfe, 0x0d, 0x4a, 0xfc, 0x6f, 0x29, 0x6d, 0x31, 0xbf, 0xbf, 0x3c, 0xf2, 0x7b, 0xc6, 0x40,
	0x73, 0x37, 0xb7, 0x1a, 0x96, 0x51, 0xac, 0x54, 0x27, 0x36, 0x40, 0x69, 0x3a, 0x0f, 0x46, 0x38,
	0x94, 0xca, 0xac, 0x6b, 0x8e, 0xca, 0xf3, 0x8a, 0x95, 0x12, 0x12, 0x2a, 0xbe, 0xc2, 0x53, 0x1a,
	0x49, 0x95, 0xda, 0xc6, 0x43, 0x2a, 0xcf, 0x2b, 0x56, 0x4a, 0xd8, 0x8b, 0x37, 0x41, 0x39, 0x5b,
	0x95, 0x78, 0x0c, 0xaa, 0x33, 0xe4, 0x5c, 0x22, 0x0f, 0x3f, 0x41, 0x01, 0x4e, 0xef, 0x24, 0x37,
	0x5d, 0x0e, 0x54, 0xac, 0x3c, 0x35, 0x51, 0x5e, 0xe1, 0x30, 0xf2, 0xc9, 0x94, 0x29, 0x0b, 0x8f,
	0x95, 0x39, 0x50, 0xb1, 0xf2, 0x54, 0xf1, 0xbd, 0x00, 0x8a, 0x0e, 0xf5, 0x03, 0x9c, 0x1e, 0xc7,
	0x3b, 0x21, 0x5e, 0xc9, 0x3f, 0xa4, 0xfb, 0x4f, 0xf2, 0xc9, 0x71, 0xbc, 0x15, 0xc0, 0x1b, 0xe1,
	0x42, 0x55, 0xbb, 0x1d, 0xdb, 0x48, 0x8e, 0x23, 0xb9, 0x90, 0xdf, 0x1b, 0x5d, 0xf6, 0xbd, 0x3b,
	0x5a, 0x36, 0xa0, 0x6a, 0xd8, 0x4d, 0xd8, 0x1a, 0x2c, 0x9a, 0x0c, 0x6f, 0x40, 0xb5, 0x6d, 0x37,
	0xa1, 0x91, 0xc5, 0x0b, 0xdb, 0x80, 0x2d, 0xae, 0x6a, 0xd8, 0xcf, 0x6a, 0x03, 0xb5, 0x65, 0x37,
	0x61, 0x7b, 0xb0, 0x60, 0x1c, 0x9e, 0xee, 0xa8, 0x76, 0x13, 0xfe, 0x91, 0x05, 0xf7, 0x6f, 0xf5,
	0x85, 0xc6, 0xbe, 0x07, 0x8d, 0xae, 0x7a, 0xbe, 0xb0, 0x0f, 0xe0, 0x40, 0xed, 0x76, 0x3e, 0x23,
	0xcf, 0xa9, 0xbb, 0x75, 0x8b, 0x4f, 0x24, 0xbe, 0x12, 0x40, 0x25, 0xdd, 0x52, 0xdf, 0x65, 0x87,
	0x5a, 0x31, 0x2f, 0xe3, 0x95, 0xbc, 0xf3, 0x60, 0x9d, 0x7d, 0xf6, 0xdf, 0x77, 0x06, 0x4e, 0x93,
	0xfb, 0x1f, 0xf7, 0xe0, 0xbf, 0x6c, 0xaa, 0xe3, 0x25, 0xec, 0xe6, 0xe3, 0xa3, 0x2f, 0x8c, 0x8d,
	0xd6, 0xb2, 0x6e, 0xdd, 0x77, 0x67, 0x5e, 0xd2, 0xbd, 0xf7, 0xf9, 0xa9, 0x3f, 0xf0, 0xb2, 0x86,
	0xbe, 0x9f, 0x97, 0x75, 0x0b, 0xf3, 0x9f, 0x73, 0xf3, 0xeb, 0x7f, 0x21, 0x47, 0x25, 0x46, 0x6c,
	0x7f, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x5b, 0x91, 0x5f, 0x23, 0x07, 0x06, 0x00, 0x00,
}
