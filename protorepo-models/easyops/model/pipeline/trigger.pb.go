// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: trigger.proto

package pipeline

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//trigger信息
type Trigger struct {
	//
	//实例id，服务端自动生成
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" form:"id"`
	//
	//git 事件
	Events []string `protobuf:"bytes,2,rep,name=events,proto3" json:"events" form:"events"`
	//
	//链接
	Link string `protobuf:"bytes,3,opt,name=link,proto3" json:"link" form:"link"`
	//
	//branch 正则
	BranchName string `protobuf:"bytes,4,opt,name=branch_name,json=branchName,proto3" json:"branch_name" form:"branch_name"`
	//
	//类型
	Type string `protobuf:"bytes,5,opt,name=type,proto3" json:"type" form:"type"`
	//
	//git hook id
	HookId string `protobuf:"bytes,6,opt,name=hook_id,json=hookId,proto3" json:"hook_id" form:"hook_id"`
	//
	//gitlab, github...
	Provider string `protobuf:"bytes,7,opt,name=provider,proto3" json:"provider" form:"provider"`
	//
	//创建者, 服务端自动生成
	Creator string `protobuf:"bytes,8,opt,name=creator,proto3" json:"creator" form:"creator"`
	//
	//创建时间, 服务端自动生成
	Ctime string `protobuf:"bytes,9,opt,name=ctime,proto3" json:"ctime" form:"ctime"`
	//
	//修改时间, 服务端自动生成
	Mtime                string   `protobuf:"bytes,10,opt,name=mtime,proto3" json:"mtime" form:"mtime"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Trigger) Reset()         { *m = Trigger{} }
func (m *Trigger) String() string { return proto.CompactTextString(m) }
func (*Trigger) ProtoMessage()    {}
func (*Trigger) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c31e6d8b4368946, []int{0}
}
func (m *Trigger) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trigger.Unmarshal(m, b)
}
func (m *Trigger) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trigger.Marshal(b, m, deterministic)
}
func (m *Trigger) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trigger.Merge(m, src)
}
func (m *Trigger) XXX_Size() int {
	return xxx_messageInfo_Trigger.Size(m)
}
func (m *Trigger) XXX_DiscardUnknown() {
	xxx_messageInfo_Trigger.DiscardUnknown(m)
}

var xxx_messageInfo_Trigger proto.InternalMessageInfo

func (m *Trigger) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Trigger) GetEvents() []string {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *Trigger) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *Trigger) GetBranchName() string {
	if m != nil {
		return m.BranchName
	}
	return ""
}

func (m *Trigger) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Trigger) GetHookId() string {
	if m != nil {
		return m.HookId
	}
	return ""
}

func (m *Trigger) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *Trigger) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *Trigger) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

func (m *Trigger) GetMtime() string {
	if m != nil {
		return m.Mtime
	}
	return ""
}

func init() {
	proto.RegisterType((*Trigger)(nil), "pipeline.Trigger")
}

func init() { proto.RegisterFile("trigger.proto", fileDescriptor_8c31e6d8b4368946) }

var fileDescriptor_8c31e6d8b4368946 = []byte{
	// 562 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x94, 0xcb, 0x6e, 0x9b, 0x40,
	0x14, 0x86, 0x85, 0x93, 0xf8, 0x32, 0x69, 0x92, 0x96, 0x4a, 0x15, 0xca, 0x06, 0x87, 0x78, 0x01,
	0x75, 0x87, 0x8b, 0xdd, 0x8b, 0xec, 0x8d, 0x55, 0xab, 0x9b, 0x6e, 0xba, 0xa0, 0x59, 0x99, 0x62,
	0x0b, 0xc3, 0x04, 0x8f, 0x0c, 0x0c, 0x02, 0xe2, 0x28, 0xb1, 0xfd, 0x42, 0x95, 0xfa, 0x12, 0x7d,
	0x87, 0x2e, 0xba, 0xa1, 0x52, 0x1f, 0x81, 0x27, 0xa8, 0x98, 0xb1, 0x1d, 0xab, 0xed, 0x0b, 0x64,
	0x35, 0xe7, 0x9c, 0xff, 0xfb, 0x7f, 0xcd, 0x19, 0x09, 0xc0, 0x49, 0x96, 0x60, 0xdf, 0x47, 0x89,
	0x1a, 0x27, 0x24, 0x23, 0x7c, 0x3d, 0xc6, 0x31, 0x0a, 0x70, 0x84, 0xce, 0xa1, 0x8f, 0xb3, 0xd9,
	0xcd, 0x54, 0x75, 0x49, 0xa8, 0xf9, 0xc4, 0x27, 0x1a, 0x05, 0xa6, 0x37, 0xd7, 0xb4, 0xa3, 0x0d,
	0xad, 0x98, 0xf1, 0xfc, 0xed, 0x1e, 0x1e, 0xde, 0xe2, 0x6c, 0x4e, 0x6e, 0x35, 0x9f, 0x40, 0x2a,
	0xc2, 0x85, 0x13, 0x60, 0xcf, 0xc9, 0x48, 0x92, 0x6a, 0xbb, 0x92, 0xf9, 0xa4, 0x1f, 0x55, 0x50,
	0xbb, 0x62, 0x57, 0xe0, 0x0d, 0x50, 0xc1, 0x9e, 0xc0, 0x35, 0x39, 0xb9, 0x31, 0xbc, 0x28, 0x72,
	0xb1, 0x71, 0x4d, 0x92, 0xb0, 0x2f, 0x61, 0x4f, 0xfa, 0xfd, 0x4b, 0x7c, 0x0a, 0x4e, 0xc7, 0x96,
	0x0e, 0x7b, 0x0e, 0xbc, 0xb7, 0x97, 0x46, 0x77, 0xdd, 0x32, 0x2b, 0xd8, 0xe3, 0x15, 0x50, 0x45,
	0x0b, 0x14, 0x65, 0xa9, 0x50, 0x69, 0x1e, 0xc8, 0x8d, 0xe1, 0xb3, 0x22, 0x17, 0x4f, 0x98, 0x8d,
	0xcd, 0x25, 0x73, 0x03, 0xf0, 0x97, 0xe0, 0x30, 0xc0, 0xd1, 0x5c, 0x38, 0xa0, 0xf9, 0x67, 0x45,
	0x2e, 0x1e, 0x33, 0xb0, 0x9c, 0x4a, 0x26, 0x15, 0xf9, 0x77, 0xe0, 0x78, 0x9a, 0x38, 0x91, 0x3b,
	0x9b, 0x44, 0x4e, 0x88, 0x84, 0x43, 0xca, 0xbe, 0x28, 0x72, 0x91, 0x67, 0xec, 0x9e, 0x28, 0x99,
	0x80, 0x75, 0x9f, 0x9c, 0x10, 0x95, 0xe9, 0xd9, 0x5d, 0x8c, 0x84, 0xa3, 0xbf, 0xd3, 0xcb, 0xa9,
	0x64, 0x52, 0x91, 0x6f, 0x83, 0xda, 0x8c, 0x90, 0xf9, 0x04, 0x7b, 0x42, 0x95, 0x72, 0x7c, 0x91,
	0x8b, 0xa7, 0x8c, 0xdb, 0x08, 0x92, 0x59, 0x2d, 0xab, 0x8f, 0x1e, 0xaf, 0x81, 0x7a, 0x9c, 0x90,
	0x05, 0xf6, 0x50, 0x22, 0xd4, 0x28, 0xfd, 0xbc, 0xc8, 0xc5, 0x33, 0x46, 0x6f, 0x15, 0xc9, 0xdc,
	0x41, 0xfc, 0x67, 0x50, 0x73, 0x13, 0x54, 0xbe, 0xad, 0x50, 0xa7, 0x7c, 0xef, 0x21, 0x7d, 0x23,
	0x94, 0x0f, 0x79, 0x09, 0x2e, 0xc6, 0x96, 0x03, 0xef, 0xdf, 0xc3, 0x91, 0x0e, 0x7b, 0xb6, 0xa5,
	0xee, 0xea, 0x09, 0xb4, 0x97, 0x9d, 0x57, 0x5d, 0x63, 0xdd, 0x32, 0xb7, 0x49, 0xfc, 0x4f, 0x0e,
	0x1c, 0xb9, 0x19, 0x0e, 0x91, 0xd0, 0xa0, 0x99, 0xdf, 0xb9, 0x22, 0x17, 0x9f, 0x6c, 0x42, 0xcb,
	0x79, 0x19, 0xf9, 0x8d, 0x03, 0x5f, 0xb9, 0xb1, 0x2c, 0x0f, 0xfa, 0x96, 0x51, 0x46, 0x96, 0xb9,
	0x2f, 0x95, 0x01, 0x3d, 0x97, 0xaf, 0xd7, 0x0a, 0x94, 0x0d, 0x4b, 0x87, 0x1d, 0x7b, 0xa5, 0x53,
	0x5d, 0x81, 0x72, 0xd7, 0xd2, 0xa1, 0xb1, 0xed, 0x57, 0x96, 0x01, 0x3b, 0xcc, 0xa5, 0x58, 0x57,
	0x4d, 0x5b, 0xee, 0x58, 0x3a, 0xec, 0xda, 0x2b, 0xca, 0xb0, 0x71, 0x5f, 0xb6, 0x74, 0xf8, 0x66,
	0xdb, 0x3c, 0xd4, 0xf2, 0x17, 0x95, 0x9e, 0x6d, 0x65, 0x20, 0x8f, 0x56, 0x56, 0x1b, 0xda, 0xf2,
	0xa0, 0xff, 0x1f, 0xfb, 0x9e, 0x7b, 0xd0, 0x32, 0xd9, 0x46, 0x74, 0xb7, 0x90, 0xee, 0x06, 0xfe,
	0xd9, 0x2d, 0x7c, 0xb4, 0xbb, 0xd1, 0x9b, 0x0f, 0x3f, 0x8c, 0x86, 0x3e, 0x51, 0x91, 0x93, 0xde,
	0x91, 0x38, 0x55, 0x03, 0xe2, 0x3a, 0x81, 0xe6, 0x92, 0x28, 0x4b, 0x1c, 0x37, 0x4b, 0xd9, 0xb7,
	0x9c, 0xa0, 0x98, 0xc0, 0x90, 0x78, 0x28, 0x48, 0xb5, 0x0d, 0xa8, 0xd1, 0x56, 0xdb, 0xfe, 0x04,
	0xa6, 0x55, 0x0a, 0x76, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0xbf, 0xf5, 0xe3, 0xaa, 0x26, 0x04,
	0x00, 0x00,
}
