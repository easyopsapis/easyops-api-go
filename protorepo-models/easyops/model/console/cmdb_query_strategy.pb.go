// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cmdb_query_strategy.proto

package console

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//cmdb实例查询策略
type CmdbQueryStrategy struct {
	//
	//模型Id
	ObjectId string `protobuf:"bytes,1,opt,name=objectId,proto3" json:"objectId" form:"objectId"`
	//
	//策略
	Instances *CmdbQueryStrategy_Instances `protobuf:"bytes,2,opt,name=instances,proto3" json:"instances" form:"instances"`
	//
	//fields
	Fields               *types.Struct `protobuf:"bytes,3,opt,name=fields,proto3" json:"fields" form:"fields"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CmdbQueryStrategy) Reset()         { *m = CmdbQueryStrategy{} }
func (m *CmdbQueryStrategy) String() string { return proto.CompactTextString(m) }
func (*CmdbQueryStrategy) ProtoMessage()    {}
func (*CmdbQueryStrategy) Descriptor() ([]byte, []int) {
	return fileDescriptor_8da8731d6462e12b, []int{0}
}
func (m *CmdbQueryStrategy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CmdbQueryStrategy.Unmarshal(m, b)
}
func (m *CmdbQueryStrategy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CmdbQueryStrategy.Marshal(b, m, deterministic)
}
func (m *CmdbQueryStrategy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CmdbQueryStrategy.Merge(m, src)
}
func (m *CmdbQueryStrategy) XXX_Size() int {
	return xxx_messageInfo_CmdbQueryStrategy.Size(m)
}
func (m *CmdbQueryStrategy) XXX_DiscardUnknown() {
	xxx_messageInfo_CmdbQueryStrategy.DiscardUnknown(m)
}

var xxx_messageInfo_CmdbQueryStrategy proto.InternalMessageInfo

func (m *CmdbQueryStrategy) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *CmdbQueryStrategy) GetInstances() *CmdbQueryStrategy_Instances {
	if m != nil {
		return m.Instances
	}
	return nil
}

func (m *CmdbQueryStrategy) GetFields() *types.Struct {
	if m != nil {
		return m.Fields
	}
	return nil
}

type CmdbQueryStrategy_Instances struct {
	//
	//类型
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type" form:"type"`
	//
	//实例Id列表, constant时填写
	InstanceIds []string `protobuf:"bytes,2,rep,name=instanceIds,proto3" json:"instanceIds" form:"instanceIds"`
	//
	//查询query, search时填写
	Query                *types.Struct `protobuf:"bytes,3,opt,name=query,proto3" json:"query" form:"query"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CmdbQueryStrategy_Instances) Reset()         { *m = CmdbQueryStrategy_Instances{} }
func (m *CmdbQueryStrategy_Instances) String() string { return proto.CompactTextString(m) }
func (*CmdbQueryStrategy_Instances) ProtoMessage()    {}
func (*CmdbQueryStrategy_Instances) Descriptor() ([]byte, []int) {
	return fileDescriptor_8da8731d6462e12b, []int{0, 0}
}
func (m *CmdbQueryStrategy_Instances) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CmdbQueryStrategy_Instances.Unmarshal(m, b)
}
func (m *CmdbQueryStrategy_Instances) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CmdbQueryStrategy_Instances.Marshal(b, m, deterministic)
}
func (m *CmdbQueryStrategy_Instances) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CmdbQueryStrategy_Instances.Merge(m, src)
}
func (m *CmdbQueryStrategy_Instances) XXX_Size() int {
	return xxx_messageInfo_CmdbQueryStrategy_Instances.Size(m)
}
func (m *CmdbQueryStrategy_Instances) XXX_DiscardUnknown() {
	xxx_messageInfo_CmdbQueryStrategy_Instances.DiscardUnknown(m)
}

var xxx_messageInfo_CmdbQueryStrategy_Instances proto.InternalMessageInfo

func (m *CmdbQueryStrategy_Instances) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *CmdbQueryStrategy_Instances) GetInstanceIds() []string {
	if m != nil {
		return m.InstanceIds
	}
	return nil
}

func (m *CmdbQueryStrategy_Instances) GetQuery() *types.Struct {
	if m != nil {
		return m.Query
	}
	return nil
}

func init() {
	proto.RegisterType((*CmdbQueryStrategy)(nil), "console.CmdbQueryStrategy")
	proto.RegisterType((*CmdbQueryStrategy_Instances)(nil), "console.CmdbQueryStrategy.Instances")
}

func init() { proto.RegisterFile("cmdb_query_strategy.proto", fileDescriptor_8da8731d6462e12b) }

var fileDescriptor_8da8731d6462e12b = []byte{
	// 362 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x51, 0xcd, 0x4e, 0xab, 0x40,
	0x14, 0x0e, 0xb7, 0xf7, 0xf6, 0xca, 0x54, 0xd3, 0x76, 0x34, 0x5a, 0x1b, 0x13, 0x1a, 0x74, 0xd1,
	0x4d, 0x87, 0x44, 0x37, 0xc6, 0x8d, 0x91, 0xae, 0x58, 0x4a, 0x37, 0xc6, 0x4d, 0x03, 0xc3, 0x14,
	0x6b, 0x80, 0x83, 0x33, 0xc3, 0x82, 0xb7, 0xf0, 0x3d, 0x7c, 0x27, 0x1e, 0x82, 0x27, 0x30, 0xcc,
	0x40, 0xab, 0x71, 0xe1, 0x8e, 0xc3, 0xf9, 0x7e, 0xe7, 0xa0, 0x73, 0x9a, 0x46, 0xe1, 0xfa, 0xad,
	0x60, 0xbc, 0x5c, 0x0b, 0xc9, 0x03, 0xc9, 0xe2, 0x92, 0xe4, 0x1c, 0x24, 0xe0, 0xff, 0x14, 0x32,
	0x01, 0x09, 0x9b, 0x2e, 0xe2, 0xad, 0x7c, 0x29, 0x42, 0x42, 0x21, 0x75, 0x62, 0x88, 0xc1, 0x51,
	0xfb, 0xb0, 0xd8, 0xa8, 0x49, 0x0d, 0xea, 0x4b, 0xf3, 0xa6, 0x17, 0x31, 0x40, 0x9c, 0xb0, 0x3d,
	0x4a, 0x48, 0x5e, 0x50, 0xa9, 0xb7, 0xf6, 0x7b, 0x0f, 0x8d, 0x97, 0x69, 0x14, 0x3e, 0x36, 0x96,
	0xab, 0xd6, 0x11, 0x3b, 0xe8, 0x00, 0xc2, 0x57, 0x46, 0xa5, 0x17, 0x4d, 0x8c, 0x99, 0x31, 0x37,
	0xdd, 0xe3, 0xba, 0xb2, 0x86, 0x1b, 0xe0, 0xe9, 0x9d, 0xdd, 0x6d, 0x6c, 0x7f, 0x07, 0xc2, 0x4f,
	0xc8, 0xdc, 0x66, 0x42, 0x06, 0x19, 0x65, 0x62, 0xf2, 0x67, 0x66, 0xcc, 0x07, 0xd7, 0x57, 0xa4,
	0x0d, 0x4c, 0x7e, 0xe8, 0x13, 0xaf, 0xc3, 0xba, 0x27, 0x75, 0x65, 0x8d, 0xb4, 0xee, 0x4e, 0xc0,
	0xf6, 0xf7, 0x62, 0xd8, 0x45, 0xfd, 0xcd, 0x96, 0x25, 0x91, 0x98, 0xf4, 0x94, 0xec, 0x19, 0xd1,
	0x7d, 0x48, 0xd7, 0x87, 0xac, 0x54, 0x1f, 0x77, 0x5c, 0x57, 0xd6, 0x91, 0x56, 0xd2, 0x04, 0xdb,
	0x6f, 0x99, 0xd3, 0x0f, 0x03, 0x99, 0x3b, 0x4b, 0x7c, 0x89, 0xfe, 0xca, 0x32, 0x67, 0x6d, 0xb1,
	0x61, 0x5d, 0x59, 0x03, 0x4d, 0x6b, 0xfe, 0xda, 0xbe, 0x5a, 0xe2, 0x5b, 0x34, 0xe8, 0x32, 0x78,
	0x51, 0x53, 0xa9, 0x37, 0x37, 0xdd, 0xd3, 0xba, 0xb2, 0xf0, 0xf7, 0xb0, 0x5e, 0xe3, 0xf3, 0x15,
	0x8a, 0xef, 0xd1, 0x3f, 0x75, 0xbf, 0xdf, 0xf2, 0x8e, 0xea, 0xca, 0x3a, 0xd4, 0x62, 0x0a, 0x6f,
	0xfb, 0x9a, 0xe7, 0x2e, 0x9f, 0x1f, 0x62, 0x20, 0x2c, 0x10, 0x25, 0xe4, 0x82, 0x24, 0x40, 0x83,
	0xc4, 0xa1, 0x90, 0x49, 0x1e, 0x50, 0x29, 0xf4, 0x19, 0x39, 0xcb, 0x61, 0x91, 0x42, 0xc4, 0x12,
	0xe1, 0xb4, 0x40, 0x47, 0x8d, 0x4e, 0xfb, 0xe6, 0x61, 0x5f, 0xe1, 0x6e, 0x3e, 0x03, 0x00, 0x00,
	0xff, 0xff, 0x97, 0xe4, 0xc0, 0xd6, 0x51, 0x02, 0x00, 0x00,
}
