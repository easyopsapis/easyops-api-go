// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: operation_log.proto

package notify

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

//
//返回数据中具体一条日志
type OperationLog struct {
	//
	//系统名称
	System string `protobuf:"bytes,1,opt,name=system,proto3" json:"system" form:"system"`
	//
	//topic
	Topic string `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic" form:"topic"`
	//
	//事件id
	EventId string `protobuf:"bytes,3,opt,name=event_id,json=eventId,proto3" json:"event_id" form:"event_id"`
	//
	//父事件id
	ParentEventId string `protobuf:"bytes,4,opt,name=parent_event_id,json=parentEventId,proto3" json:"parent_event_id" form:"parent_event_id"`
	//
	//父事件
	ParentEvent *OperationLog `protobuf:"bytes,5,opt,name=parent_event,json=parentEvent,proto3" json:"parent_event" form:"parent_event"`
	//
	//事件名称
	Event string `protobuf:"bytes,6,opt,name=event,proto3" json:"event" form:"event"`
	//
	//事件状态
	Status string `protobuf:"bytes,7,opt,name=status,proto3" json:"status" form:"status"`
	//
	//设备列表
	DeviceList []*Device `protobuf:"bytes,8,rep,name=device_list,json=deviceList,proto3" json:"device_list" form:"device_list"`
	//
	//操作人
	Operator string `protobuf:"bytes,9,opt,name=operator,proto3" json:"operator" form:"operator"`
	//
	//目标名称(工具名/流程名/对象名/实例名)
	TargetName string `protobuf:"bytes,10,opt,name=target_name,json=targetName,proto3" json:"target_name" form:"target_name"`
	//
	//目标名称
	TargetId string `protobuf:"bytes,11,opt,name=target_id,json=targetId,proto3" json:"target_id" form:"target_id"`
	//
	//app
	AppList []*App `protobuf:"bytes,12,rep,name=app_list,json=appList,proto3" json:"app_list" form:"app_list"`
	//
	//ext_info
	ExtInfo *types.Struct `protobuf:"bytes,13,opt,name=ext_info,json=extInfo,proto3" json:"ext_info" form:"ext_info"`
	//
	//修改时间
	Mtime int64 `protobuf:"varint,14,opt,name=mtime,proto3" json:"mtime" form:"mtime"`
	//
	//创建时间
	Ctime int64 `protobuf:"varint,15,opt,name=ctime,proto3" json:"ctime" form:"ctime"`
	//
	//关联应用id
	AppId string `protobuf:"bytes,16,opt,name=app_id,json=appId,proto3" json:"app_id" form:"app_id"`
	//
	//关联包id
	PackageId string `protobuf:"bytes,17,opt,name=package_id,json=packageId,proto3" json:"package_id" form:"package_id"`
	//
	//关联集群id
	ClusterId            string   `protobuf:"bytes,18,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id" form:"cluster_id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OperationLog) Reset()         { *m = OperationLog{} }
func (m *OperationLog) String() string { return proto.CompactTextString(m) }
func (*OperationLog) ProtoMessage()    {}
func (*OperationLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_c759f6398179ec0e, []int{0}
}
func (m *OperationLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperationLog.Unmarshal(m, b)
}
func (m *OperationLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperationLog.Marshal(b, m, deterministic)
}
func (m *OperationLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperationLog.Merge(m, src)
}
func (m *OperationLog) XXX_Size() int {
	return xxx_messageInfo_OperationLog.Size(m)
}
func (m *OperationLog) XXX_DiscardUnknown() {
	xxx_messageInfo_OperationLog.DiscardUnknown(m)
}

var xxx_messageInfo_OperationLog proto.InternalMessageInfo

func (m *OperationLog) GetSystem() string {
	if m != nil {
		return m.System
	}
	return ""
}

func (m *OperationLog) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *OperationLog) GetEventId() string {
	if m != nil {
		return m.EventId
	}
	return ""
}

func (m *OperationLog) GetParentEventId() string {
	if m != nil {
		return m.ParentEventId
	}
	return ""
}

func (m *OperationLog) GetParentEvent() *OperationLog {
	if m != nil {
		return m.ParentEvent
	}
	return nil
}

func (m *OperationLog) GetEvent() string {
	if m != nil {
		return m.Event
	}
	return ""
}

func (m *OperationLog) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *OperationLog) GetDeviceList() []*Device {
	if m != nil {
		return m.DeviceList
	}
	return nil
}

func (m *OperationLog) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

func (m *OperationLog) GetTargetName() string {
	if m != nil {
		return m.TargetName
	}
	return ""
}

func (m *OperationLog) GetTargetId() string {
	if m != nil {
		return m.TargetId
	}
	return ""
}

func (m *OperationLog) GetAppList() []*App {
	if m != nil {
		return m.AppList
	}
	return nil
}

func (m *OperationLog) GetExtInfo() *types.Struct {
	if m != nil {
		return m.ExtInfo
	}
	return nil
}

func (m *OperationLog) GetMtime() int64 {
	if m != nil {
		return m.Mtime
	}
	return 0
}

func (m *OperationLog) GetCtime() int64 {
	if m != nil {
		return m.Ctime
	}
	return 0
}

func (m *OperationLog) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *OperationLog) GetPackageId() string {
	if m != nil {
		return m.PackageId
	}
	return ""
}

func (m *OperationLog) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func init() {
	proto.RegisterType((*OperationLog)(nil), "notify.OperationLog")
}

func init() { proto.RegisterFile("operation_log.proto", fileDescriptor_c759f6398179ec0e) }

var fileDescriptor_c759f6398179ec0e = []byte{
	// 611 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x94, 0xcb, 0x6e, 0xdb, 0x3a,
	0x10, 0x86, 0xe1, 0x93, 0x13, 0x5f, 0x28, 0xe7, 0xc6, 0xa4, 0x89, 0x10, 0x14, 0x90, 0xc1, 0x45,
	0xe1, 0x2e, 0x22, 0xa1, 0x69, 0x81, 0x02, 0xed, 0xa6, 0x35, 0x5a, 0x04, 0x2e, 0xd2, 0x0b, 0xd8,
	0x5d, 0x37, 0x06, 0x23, 0xd1, 0x2a, 0x51, 0x49, 0x24, 0x24, 0x3a, 0x48, 0xde, 0xb1, 0xcf, 0xa0,
	0x87, 0xd0, 0x13, 0x14, 0x9a, 0x91, 0x12, 0x45, 0x59, 0x66, 0x65, 0xce, 0xfc, 0xdf, 0x3f, 0xe2,
	0x70, 0x06, 0x26, 0x87, 0xda, 0xc8, 0x5c, 0x58, 0xa5, 0xb3, 0x55, 0xa2, 0x63, 0xdf, 0xe4, 0xda,
	0x6a, 0x3a, 0xcc, 0xb4, 0x55, 0xeb, 0xdb, 0xd3, 0xb3, 0x58, 0xd9, 0xdf, 0x9b, 0x2b, 0x3f, 0xd4,
	0x69, 0x10, 0xeb, 0x58, 0x07, 0x20, 0x5f, 0x6d, 0xd6, 0x10, 0x41, 0x00, 0x27, 0xb4, 0x9d, 0x7e,
	0x8d, 0xb5, 0x2f, 0x45, 0x71, 0xab, 0x4d, 0xe1, 0x27, 0x3a, 0x14, 0x49, 0x10, 0xea, 0xcc, 0xe6,
	0x22, 0xb4, 0x05, 0x3a, 0x73, 0x69, 0xf4, 0x59, 0xaa, 0x23, 0x99, 0x14, 0x41, 0x03, 0x06, 0x10,
	0x06, 0xf8, 0xc1, 0x20, 0x92, 0xd7, 0x2a, 0x94, 0x4d, 0xb9, 0x2f, 0x4f, 0x2e, 0x27, 0x8c, 0x69,
	0x6a, 0x3d, 0x8f, 0xb5, 0x8e, 0x13, 0x79, 0xdf, 0x40, 0x61, 0xf3, 0x4d, 0x68, 0x51, 0x65, 0x7f,
	0x47, 0x64, 0xfa, 0xbd, 0x7d, 0x87, 0x4b, 0x1d, 0xd3, 0x97, 0x64, 0x58, 0xdc, 0x16, 0x56, 0xa6,
	0xee, 0x60, 0x36, 0x98, 0x4f, 0x16, 0x07, 0x55, 0xe9, 0xed, 0xac, 0x75, 0x9e, 0xbe, 0x63, 0x98,
	0x67, 0xbc, 0x01, 0xe8, 0x0b, 0xb2, 0x6d, 0xb5, 0x51, 0xa1, 0xfb, 0x1f, 0x90, 0xfb, 0x55, 0xe9,
	0x4d, 0x91, 0x84, 0x34, 0xe3, 0x28, 0x53, 0x9f, 0x8c, 0xe5, 0xb5, 0xcc, 0xec, 0x4a, 0x45, 0xee,
	0x16, 0xa0, 0x87, 0x55, 0xe9, 0xed, 0x21, 0xda, 0x2a, 0x8c, 0x8f, 0xe0, 0xb8, 0x8c, 0xe8, 0x82,
	0xec, 0x19, 0x91, 0xd7, 0xe9, 0x3b, 0xdb, 0xff, 0x60, 0x3b, 0xad, 0x4a, 0xef, 0x18, 0x6d, 0x3d,
	0x80, 0xf1, 0x1d, 0xcc, 0x7c, 0x6e, 0x6a, 0xfc, 0x20, 0xd3, 0x2e, 0xe2, 0x6e, 0xcf, 0x06, 0x73,
	0xe7, 0xfc, 0xc8, 0xc7, 0xe7, 0xf1, 0xbb, 0x2d, 0x2f, 0x4e, 0xaa, 0xd2, 0x3b, 0x7c, 0x5c, 0x96,
	0x71, 0xa7, 0x53, 0xb3, 0xee, 0x16, 0x4b, 0x0d, 0xfb, 0xdd, 0x36, 0x34, 0xca, 0xf0, 0x80, 0x56,
	0xd8, 0x4d, 0xe1, 0x8e, 0x1e, 0x3d, 0x20, 0xe4, 0xeb, 0x07, 0x84, 0x03, 0xbd, 0x20, 0x0e, 0x8e,
	0x7d, 0x95, 0xa8, 0xc2, 0xba, 0xe3, 0xd9, 0xd6, 0xdc, 0x39, 0xdf, 0x6d, 0xef, 0xf8, 0x09, 0xa4,
	0xc5, 0x71, 0x55, 0x7a, 0x14, 0xfd, 0x1d, 0x98, 0x71, 0x82, 0xd1, 0xa5, 0x2a, 0x2c, 0x0d, 0xc8,
	0x18, 0x97, 0x59, 0xe7, 0xee, 0xa4, 0xff, 0xc2, 0xad, 0xc2, 0xf8, 0x1d, 0x44, 0xdf, 0x12, 0xc7,
	0x8a, 0x3c, 0x96, 0x76, 0x95, 0x89, 0x54, 0xba, 0x04, 0x3c, 0x9d, 0x2f, 0x75, 0x44, 0xc6, 0x09,
	0x46, 0xdf, 0x44, 0x2a, 0xe9, 0x2b, 0x32, 0x69, 0x34, 0x15, 0xb9, 0x0e, 0xd8, 0x8e, 0xaa, 0xd2,
	0xdb, 0x7f, 0x60, 0xab, 0xe7, 0x31, 0xc6, 0xf3, 0x32, 0xa2, 0xef, 0xc9, 0x58, 0x18, 0x83, 0x2d,
	0x4e, 0xa1, 0x45, 0xa7, 0x6d, 0xf1, 0xa3, 0x31, 0xdd, 0x9b, 0xb6, 0x18, 0xe3, 0x23, 0x61, 0x0c,
	0x74, 0x76, 0x41, 0xc6, 0xf2, 0xc6, 0xae, 0x54, 0xb6, 0xd6, 0xee, 0x0e, 0xcc, 0xf0, 0xc4, 0xc7,
	0x85, 0xf6, 0xdb, 0x85, 0xf6, 0x7f, 0xc2, 0x42, 0x3f, 0x58, 0xaa, 0xc6, 0x52, 0x2f, 0xd5, 0x8d,
	0x5d, 0x66, 0x6b, 0x5d, 0x8f, 0x2f, 0xb5, 0x2a, 0x95, 0xee, 0xee, 0x6c, 0x30, 0xdf, 0xea, 0x8e,
	0x0f, 0xd2, 0x8c, 0xa3, 0x5c, 0x73, 0x21, 0x70, 0x7b, 0x7d, 0x2e, 0x6c, 0x38, 0xf8, 0xa5, 0x73,
	0x32, 0xac, 0xaf, 0xab, 0x22, 0x77, 0xbf, 0x3f, 0x66, 0xcc, 0x33, 0xbe, 0x2d, 0x8c, 0x59, 0x46,
	0xf4, 0x0d, 0x21, 0x46, 0x84, 0x7f, 0x44, 0x2c, 0x6b, 0xfa, 0x00, 0xe8, 0x67, 0x55, 0xe9, 0x1d,
	0xb4, 0x2b, 0xd7, 0x6a, 0x8c, 0x4f, 0x9a, 0x00, 0x5d, 0x61, 0xb2, 0x29, 0xac, 0xcc, 0x6b, 0x17,
	0xed, 0xbb, 0xee, 0x35, 0xc6, 0x27, 0x4d, 0xb0, 0x8c, 0x16, 0x8b, 0x5f, 0x1f, 0x9e, 0xfa, 0xd7,
	0x71, 0x35, 0x04, 0xec, 0xf5, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xa3, 0xfe, 0x13, 0x20,
	0x05, 0x00, 0x00,
}
