// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: filter_data_source.proto

package resource_manage

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *FilterDataSource) Validate() error {
	if this.Const != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Const); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Const", err)
		}
	}
	if this.Mapping != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Mapping); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Mapping", err)
		}
	}
	if this.Expression != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Expression); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Expression", err)
		}
	}
	if this.Time != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Time); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Time", err)
		}
	}
	return nil
}
func (this *FilterDataSource_Const) Validate() error {
	if this.Value != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Value); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Value", err)
		}
	}
	return nil
}
func (this *FilterDataSource_Mapping) Validate() error {
	return nil
}
func (this *FilterDataSource_Expression) Validate() error {
	if this.Left != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Left); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Left", err)
		}
	}
	if this.Right != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Right); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Right", err)
		}
	}
	return nil
}
func (this *FilterDataSource_Time) Validate() error {
	return nil
}
