// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: send_message_with_appendix_request.proto

package msgsender

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//发送带附件的通知的请求body
type SendMessageWithAppendixRequest struct {
	//
	//发送通知的请求数据
	Data                 *SendMessageRequestData `protobuf:"bytes,1,opt,name=data,proto3" json:"data" form:"data"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *SendMessageWithAppendixRequest) Reset()         { *m = SendMessageWithAppendixRequest{} }
func (m *SendMessageWithAppendixRequest) String() string { return proto.CompactTextString(m) }
func (*SendMessageWithAppendixRequest) ProtoMessage()    {}
func (*SendMessageWithAppendixRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ac56c4edcb9529b, []int{0}
}
func (m *SendMessageWithAppendixRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMessageWithAppendixRequest.Unmarshal(m, b)
}
func (m *SendMessageWithAppendixRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMessageWithAppendixRequest.Marshal(b, m, deterministic)
}
func (m *SendMessageWithAppendixRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMessageWithAppendixRequest.Merge(m, src)
}
func (m *SendMessageWithAppendixRequest) XXX_Size() int {
	return xxx_messageInfo_SendMessageWithAppendixRequest.Size(m)
}
func (m *SendMessageWithAppendixRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMessageWithAppendixRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendMessageWithAppendixRequest proto.InternalMessageInfo

func (m *SendMessageWithAppendixRequest) GetData() *SendMessageRequestData {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*SendMessageWithAppendixRequest)(nil), "msgsender.SendMessageWithAppendixRequest")
}

func init() {
	proto.RegisterFile("send_message_with_appendix_request.proto", fileDescriptor_8ac56c4edcb9529b)
}

var fileDescriptor_8ac56c4edcb9529b = []byte{
	// 241 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x8f, 0x3d, 0x4b, 0x04, 0x31,
	0x10, 0x86, 0x39, 0x10, 0xc1, 0xbd, 0x42, 0xb8, 0x4a, 0xae, 0xf0, 0x63, 0xab, 0x6b, 0x2e, 0x01,
	0xed, 0xec, 0x3c, 0x3f, 0x3a, 0x9b, 0xb3, 0x10, 0x6c, 0x96, 0xd9, 0x64, 0x2e, 0xbb, 0xb0, 0xd9,
	0x89, 0x99, 0x59, 0xd4, 0x3f, 0xeb, 0x8f, 0xf0, 0x17, 0xc8, 0x26, 0xcb, 0xa1, 0xfd, 0x75, 0x79,
	0xe1, 0x79, 0x32, 0xef, 0x5b, 0xac, 0x18, 0x7b, 0x5b, 0x79, 0x64, 0x06, 0x87, 0xd5, 0x47, 0x2b,
	0x4d, 0x05, 0x21, 0x60, 0x6f, 0xdb, 0xcf, 0x2a, 0xe2, 0xfb, 0x80, 0x2c, 0x2a, 0x44, 0x12, 0x5a,
	0x9c, 0x78, 0x76, 0x23, 0x8c, 0x71, 0xb9, 0x76, 0xad, 0x34, 0x43, 0xad, 0x0c, 0x79, 0xed, 0xc8,
	0x91, 0x4e, 0x44, 0x3d, 0xec, 0x52, 0x4a, 0x21, 0xbd, 0xb2, 0xb9, 0x34, 0x8e, 0x14, 0x02, 0x7f,
	0x51, 0x60, 0xd5, 0x91, 0x81, 0x4e, 0x1b, 0xea, 0x25, 0x82, 0x11, 0xce, 0x66, 0xc4, 0x40, 0x6b,
	0x4f, 0x16, 0x3b, 0xd6, 0x13, 0xa8, 0x53, 0xd4, 0xfb, 0x9b, 0xfa, 0x5f, 0xcf, 0xa9, 0x59, 0x65,
	0x41, 0x20, 0x1f, 0x29, 0x9b, 0xe2, 0xfc, 0x05, 0x7b, 0xfb, 0x9c, 0x89, 0xd7, 0x56, 0x9a, 0xbb,
	0x69, 0xc7, 0x36, 0xc3, 0x8b, 0xa7, 0xe2, 0x68, 0xe4, 0xcf, 0x66, 0x97, 0xb3, 0xd5, 0xfc, 0xfa,
	0x4a, 0xed, 0xff, 0x56, 0x7f, 0xc4, 0x09, 0x7e, 0x00, 0x81, 0xcd, 0xe9, 0xcf, 0xf7, 0xc5, 0x7c,
	0x47, 0xd1, 0xdf, 0x96, 0xa3, 0x58, 0x6e, 0x93, 0xbf, 0x79, 0x7c, 0xbb, 0x3f, 0xc0, 0xa0, 0xfa,
	0x38, 0x91, 0x37, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x43, 0x10, 0xf8, 0xa0, 0x82, 0x01, 0x00,
	0x00,
}
