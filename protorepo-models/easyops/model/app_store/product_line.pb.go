// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: product_line.proto

package app_store

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//产品线
type ProductLine struct {
	//
	//实例id
	InstanceId string `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId" form:"instanceId"`
	//
	//名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name" form:"name"`
	//
	//图标
	Icon                 *ProductLine_Icon `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon" form:"icon"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ProductLine) Reset()         { *m = ProductLine{} }
func (m *ProductLine) String() string { return proto.CompactTextString(m) }
func (*ProductLine) ProtoMessage()    {}
func (*ProductLine) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a35037029baabdd, []int{0}
}
func (m *ProductLine) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductLine.Unmarshal(m, b)
}
func (m *ProductLine) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductLine.Marshal(b, m, deterministic)
}
func (m *ProductLine) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductLine.Merge(m, src)
}
func (m *ProductLine) XXX_Size() int {
	return xxx_messageInfo_ProductLine.Size(m)
}
func (m *ProductLine) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductLine.DiscardUnknown(m)
}

var xxx_messageInfo_ProductLine proto.InternalMessageInfo

func (m *ProductLine) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *ProductLine) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProductLine) GetIcon() *ProductLine_Icon {
	if m != nil {
		return m.Icon
	}
	return nil
}

type ProductLine_Icon struct {
	//
	//图标库
	Lib string `protobuf:"bytes,1,opt,name=lib,proto3" json:"lib" form:"lib"`
	//
	//图标url
	Icon                 string   `protobuf:"bytes,2,opt,name=icon,proto3" json:"icon" form:"icon"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProductLine_Icon) Reset()         { *m = ProductLine_Icon{} }
func (m *ProductLine_Icon) String() string { return proto.CompactTextString(m) }
func (*ProductLine_Icon) ProtoMessage()    {}
func (*ProductLine_Icon) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a35037029baabdd, []int{0, 0}
}
func (m *ProductLine_Icon) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductLine_Icon.Unmarshal(m, b)
}
func (m *ProductLine_Icon) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductLine_Icon.Marshal(b, m, deterministic)
}
func (m *ProductLine_Icon) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductLine_Icon.Merge(m, src)
}
func (m *ProductLine_Icon) XXX_Size() int {
	return xxx_messageInfo_ProductLine_Icon.Size(m)
}
func (m *ProductLine_Icon) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductLine_Icon.DiscardUnknown(m)
}

var xxx_messageInfo_ProductLine_Icon proto.InternalMessageInfo

func (m *ProductLine_Icon) GetLib() string {
	if m != nil {
		return m.Lib
	}
	return ""
}

func (m *ProductLine_Icon) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func init() {
	proto.RegisterType((*ProductLine)(nil), "app_store.ProductLine")
	proto.RegisterType((*ProductLine_Icon)(nil), "app_store.ProductLine.Icon")
}

func init() { proto.RegisterFile("product_line.proto", fileDescriptor_4a35037029baabdd) }

var fileDescriptor_4a35037029baabdd = []byte{
	// 396 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0xdf, 0x6a, 0xdb, 0x30,
	0x14, 0xc6, 0x49, 0x1b, 0x06, 0x55, 0xa0, 0xdb, 0x7c, 0x15, 0xb2, 0x0b, 0x07, 0xad, 0x17, 0x4e,
	0x8b, 0xac, 0x6d, 0x85, 0xc1, 0xc2, 0xd8, 0x9f, 0x8e, 0x31, 0x02, 0xbb, 0x18, 0xb9, 0xac, 0x15,
	0x17, 0x59, 0x56, 0x3d, 0x31, 0x5b, 0xc7, 0xc8, 0xca, 0xca, 0xba, 0xec, 0x45, 0xf6, 0x6c, 0x23,
	0x85, 0x3c, 0x42, 0x9e, 0x60, 0x58, 0x0a, 0x99, 0x59, 0xef, 0xce, 0xf1, 0xf7, 0xfb, 0x3e, 0x7f,
	0x1c, 0xa1, 0xa0, 0x36, 0x90, 0x2f, 0x85, 0xbd, 0x2a, 0x95, 0x96, 0x71, 0x6d, 0xc0, 0x42, 0x70,
	0xc4, 0xeb, 0xfa, 0xaa, 0xb1, 0x60, 0xe4, 0x88, 0x14, 0xca, 0x7e, 0x5d, 0x66, 0xb1, 0x80, 0x8a,
	0x16, 0x50, 0x00, 0x75, 0x44, 0xb6, 0xbc, 0x76, 0x9b, 0x5b, 0xdc, 0xe4, 0x9d, 0xa3, 0x97, 0x1d,
	0xbc, 0xba, 0x51, 0xf6, 0x1b, 0xdc, 0xd0, 0x02, 0x88, 0x13, 0xc9, 0x77, 0x5e, 0xaa, 0x9c, 0x5b,
	0x30, 0x0d, 0xdd, 0x8f, 0xde, 0x87, 0xff, 0x1c, 0xa0, 0xc1, 0x17, 0x5f, 0xe4, 0xb3, 0xd2, 0x32,
	0x98, 0x21, 0xa4, 0x74, 0x63, 0xb9, 0x16, 0x72, 0x96, 0x0f, 0x7b, 0xe3, 0x5e, 0x74, 0x74, 0x31,
	0xd9, 0xae, 0xc3, 0xc7, 0xd7, 0x60, 0xaa, 0x29, 0xfe, 0xa7, 0xe1, 0xcd, 0x5d, 0xf8, 0x08, 0x1d,
	0xa7, 0xc9, 0x33, 0xf2, 0x8a, 0x93, 0xdb, 0xc5, 0xcf, 0xe7, 0xe7, 0xbf, 0x4e, 0xe6, 0x1d, 0x73,
	0xf0, 0x14, 0xf5, 0x35, 0xaf, 0xe4, 0xf0, 0xc0, 0x85, 0x3c, 0xdc, 0xae, 0xc3, 0x81, 0x0f, 0x69,
	0xbf, 0xe2, 0xb9, 0x13, 0x83, 0x77, 0xa8, 0xaf, 0x04, 0xe8, 0xe1, 0xe1, 0xb8, 0x17, 0x0d, 0x5e,
	0x3c, 0x89, 0xf7, 0x07, 0x88, 0x3b, 0xad, 0xe2, 0x99, 0x00, 0xdd, 0x4d, 0x68, 0x2d, 0x78, 0xee,
	0x9c, 0xa3, 0xdf, 0x3d, 0xd4, 0x6f, 0xf5, 0x60, 0x8c, 0x0e, 0x4b, 0x95, 0xed, 0x3a, 0x1f, 0x6f,
	0xd7, 0x21, 0xf2, 0x70, 0xa9, 0x32, 0x3c, 0x6f, 0xa5, 0xa0, 0xde, 0xfd, 0xcc, 0x37, 0x62, 0xff,
	0xe5, 0x6d, 0xee, 0xc2, 0x19, 0xfa, 0x94, 0x46, 0x11, 0xa3, 0x49, 0xca, 0xe8, 0x94, 0x9d, 0xb2,
	0xb7, 0x18, 0xbf, 0x7e, 0xc3, 0x56, 0xcc, 0x30, 0xbd, 0x38, 0x9b, 0x9c, 0x4d, 0x56, 0x11, 0xa3,
	0x93, 0x55, 0xc2, 0xc9, 0xed, 0x7b, 0x72, 0xb9, 0x98, 0x46, 0x8c, 0x25, 0x29, 0x63, 0xf7, 0xc9,
	0xd3, 0x13, 0x5f, 0xee, 0xe2, 0xe3, 0xe5, 0x87, 0x02, 0x62, 0xc9, 0x9b, 0x1f, 0x50, 0x37, 0x71,
	0x09, 0x82, 0x97, 0x54, 0x80, 0xb6, 0x86, 0x0b, 0xdb, 0xf8, 0x27, 0x35, 0xb2, 0x06, 0x52, 0x41,
	0x2e, 0xcb, 0x86, 0xee, 0x40, 0xea, 0x56, 0xba, 0xbf, 0x45, 0xf6, 0xc0, 0x91, 0xe7, 0x7f, 0x03,
	0x00, 0x00, 0xff, 0xff, 0xe6, 0x1b, 0xcd, 0x5e, 0x34, 0x02, 0x00, 0x00,
}
