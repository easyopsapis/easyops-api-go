// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: micro_app.proto

package app_store

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//小产品包
type AppStoreMicroApp struct {
	//
	//小产品名称
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name" form:"name"`
	//
	//小产品id
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id" form:"id"`
	//
	//图标url
	Icons *AppStoreMicroApp_Icons `protobuf:"bytes,3,opt,name=icons,proto3" json:"icons" form:"icons"`
	//
	//小产品概要介绍
	Intro string `protobuf:"bytes,4,opt,name=intro,proto3" json:"intro" form:"intro"`
	//
	//功能预览
	Preview []string `protobuf:"bytes,5,rep,name=preview,proto3" json:"preview" form:"preview"`
	//
	//功能详细介绍
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description" form:"description"`
	//
	//首页路径
	Homepage string `protobuf:"bytes,7,opt,name=homepage,proto3" json:"homepage" form:"homepage"`
	//
	//小产品分类
	Category string `protobuf:"bytes,8,opt,name=category,proto3" json:"category" form:"category"`
	//
	//所属桌面Id
	ContainerId          string   `protobuf:"bytes,9,opt,name=containerId,proto3" json:"containerId" form:"containerId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppStoreMicroApp) Reset()         { *m = AppStoreMicroApp{} }
func (m *AppStoreMicroApp) String() string { return proto.CompactTextString(m) }
func (*AppStoreMicroApp) ProtoMessage()    {}
func (*AppStoreMicroApp) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c3c3ea0841e904e, []int{0}
}
func (m *AppStoreMicroApp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppStoreMicroApp.Unmarshal(m, b)
}
func (m *AppStoreMicroApp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppStoreMicroApp.Marshal(b, m, deterministic)
}
func (m *AppStoreMicroApp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppStoreMicroApp.Merge(m, src)
}
func (m *AppStoreMicroApp) XXX_Size() int {
	return xxx_messageInfo_AppStoreMicroApp.Size(m)
}
func (m *AppStoreMicroApp) XXX_DiscardUnknown() {
	xxx_messageInfo_AppStoreMicroApp.DiscardUnknown(m)
}

var xxx_messageInfo_AppStoreMicroApp proto.InternalMessageInfo

func (m *AppStoreMicroApp) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AppStoreMicroApp) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AppStoreMicroApp) GetIcons() *AppStoreMicroApp_Icons {
	if m != nil {
		return m.Icons
	}
	return nil
}

func (m *AppStoreMicroApp) GetIntro() string {
	if m != nil {
		return m.Intro
	}
	return ""
}

func (m *AppStoreMicroApp) GetPreview() []string {
	if m != nil {
		return m.Preview
	}
	return nil
}

func (m *AppStoreMicroApp) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *AppStoreMicroApp) GetHomepage() string {
	if m != nil {
		return m.Homepage
	}
	return ""
}

func (m *AppStoreMicroApp) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *AppStoreMicroApp) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

type AppStoreMicroApp_Icons struct {
	//
	//图标url
	Large                string   `protobuf:"bytes,1,opt,name=large,proto3" json:"large" form:"large"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppStoreMicroApp_Icons) Reset()         { *m = AppStoreMicroApp_Icons{} }
func (m *AppStoreMicroApp_Icons) String() string { return proto.CompactTextString(m) }
func (*AppStoreMicroApp_Icons) ProtoMessage()    {}
func (*AppStoreMicroApp_Icons) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c3c3ea0841e904e, []int{0, 0}
}
func (m *AppStoreMicroApp_Icons) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppStoreMicroApp_Icons.Unmarshal(m, b)
}
func (m *AppStoreMicroApp_Icons) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppStoreMicroApp_Icons.Marshal(b, m, deterministic)
}
func (m *AppStoreMicroApp_Icons) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppStoreMicroApp_Icons.Merge(m, src)
}
func (m *AppStoreMicroApp_Icons) XXX_Size() int {
	return xxx_messageInfo_AppStoreMicroApp_Icons.Size(m)
}
func (m *AppStoreMicroApp_Icons) XXX_DiscardUnknown() {
	xxx_messageInfo_AppStoreMicroApp_Icons.DiscardUnknown(m)
}

var xxx_messageInfo_AppStoreMicroApp_Icons proto.InternalMessageInfo

func (m *AppStoreMicroApp_Icons) GetLarge() string {
	if m != nil {
		return m.Large
	}
	return ""
}

func init() {
	proto.RegisterType((*AppStoreMicroApp)(nil), "app_store.AppStoreMicroApp")
	proto.RegisterType((*AppStoreMicroApp_Icons)(nil), "app_store.AppStoreMicroApp.Icons")
}

func init() { proto.RegisterFile("micro_app.proto", fileDescriptor_2c3c3ea0841e904e) }

var fileDescriptor_2c3c3ea0841e904e = []byte{
	// 539 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0x4f, 0x6f, 0xd3, 0x30,
	0x18, 0xc6, 0xb5, 0x3f, 0xd9, 0x56, 0x77, 0x62, 0x93, 0x91, 0x50, 0x54, 0x09, 0xa5, 0x44, 0x3d,
	0xa4, 0x5b, 0x13, 0x87, 0x4e, 0x9a, 0xa0, 0x42, 0x40, 0x8b, 0x00, 0xf5, 0xc0, 0x25, 0xdc, 0x56,
	0xb7, 0xc5, 0x4d, 0xbc, 0xcc, 0xa2, 0x89, 0x2d, 0x27, 0x5b, 0x35, 0xd6, 0x7d, 0xd5, 0x20, 0xf1,
	0x01, 0x38, 0xe4, 0x13, 0xa0, 0x38, 0x6d, 0x17, 0x8d, 0x0b, 0x07, 0x6e, 0xf6, 0xfb, 0xfe, 0x9e,
	0xf7, 0x79, 0x1c, 0x3b, 0xe0, 0x28, 0x62, 0xbe, 0xe4, 0x53, 0x22, 0x84, 0x23, 0x24, 0x4f, 0x39,
	0xac, 0x11, 0x21, 0xa6, 0x49, 0xca, 0x25, 0x6d, 0xd8, 0x21, 0x4b, 0xaf, 0xae, 0x67, 0x8e, 0xcf,
	0x23, 0x14, 0xf2, 0x90, 0x23, 0x45, 0xcc, 0xae, 0x2f, 0xd5, 0x4e, 0x6d, 0xd4, 0xaa, 0x54, 0x36,
	0xce, 0x2b, 0x78, 0xb4, 0x60, 0xe9, 0x77, 0xbe, 0x40, 0x21, 0xb7, 0x55, 0xd3, 0xbe, 0x21, 0x73,
	0x16, 0x90, 0x94, 0xcb, 0x04, 0x6d, 0x96, 0xa5, 0xce, 0xfc, 0xad, 0x81, 0xe3, 0xbe, 0x10, 0x5f,
	0x0b, 0xcf, 0x2f, 0x45, 0x9a, 0xbe, 0x10, 0xf0, 0x13, 0xd8, 0x8d, 0x49, 0x44, 0xf5, 0xad, 0xe6,
	0x96, 0x55, 0x1b, 0x74, 0xf3, 0xcc, 0xa8, 0x5f, 0x72, 0x19, 0xf5, 0xcc, 0xa2, 0x6a, 0xfe, 0xfa,
	0x69, 0x18, 0xe0, 0xf9, 0x64, 0x44, 0xec, 0x1f, 0x7d, 0xfb, 0x62, 0x3a, 0x1e, 0xb9, 0xf6, 0xeb,
	0xf5, 0xfa, 0xce, 0xed, 0x9c, 0xbd, 0xbc, 0x6f, 0x79, 0x4a, 0x0f, 0xdf, 0x83, 0x6d, 0x16, 0xe8,
	0xdb, 0x6a, 0x8a, 0x9b, 0x67, 0x46, 0xad, 0x9c, 0xc2, 0x82, 0x7f, 0x9a, 0xb1, 0xcd, 0x02, 0x38,
	0x04, 0x1a, 0xf3, 0x79, 0x9c, 0xe8, 0x3b, 0xcd, 0x2d, 0xab, 0xde, 0x7d, 0xe1, 0x6c, 0x3e, 0x90,
	0xf3, 0x38, 0xb5, 0x33, 0x2c, 0xc0, 0xc1, 0x71, 0x9e, 0x19, 0x87, 0x2b, 0x9f, 0xa2, 0x60, 0x7a,
	0xe5, 0x04, 0x78, 0x0e, 0x34, 0x16, 0xa7, 0x92, 0xeb, 0xbb, 0x2a, 0x4f, 0xb3, 0xc2, 0x15, 0xe5,
	0x22, 0xd2, 0x21, 0x00, 0x13, 0xe7, 0xce, 0xed, 0x74, 0x5d, 0xf7, 0xbe, 0xe5, 0x95, 0x38, 0xec,
	0x80, 0x7d, 0x21, 0xe9, 0x0d, 0xa3, 0x0b, 0x5d, 0x6b, 0xee, 0x58, 0xb5, 0x01, 0xcc, 0x33, 0xe3,
	0x49, 0xa9, 0x5c, 0x35, 0x4c, 0x6f, 0x8d, 0xc0, 0x57, 0xa0, 0x1e, 0xd0, 0xc4, 0x97, 0x4c, 0xa4,
	0x8c, 0xc7, 0xfa, 0x9e, 0xf2, 0x7a, 0x96, 0x67, 0x06, 0x2c, 0x15, 0x95, 0xa6, 0xe9, 0x55, 0x51,
	0xb8, 0x04, 0x07, 0x57, 0x3c, 0xa2, 0x82, 0x84, 0x54, 0xdf, 0x57, 0xb2, 0x6f, 0x79, 0x66, 0x1c,
	0x95, 0xb2, 0x75, 0xa7, 0x48, 0x39, 0x04, 0x9f, 0x27, 0x96, 0x85, 0xd1, 0x68, 0x82, 0x51, 0x0f,
	0x9f, 0xe0, 0x77, 0xa6, 0xf9, 0xe6, 0x2d, 0x5e, 0x62, 0x89, 0xe3, 0xf1, 0x69, 0xfb, 0xb4, 0xbd,
	0xb4, 0x30, 0x6a, 0x2f, 0x57, 0x9f, 0x76, 0xdc, 0xb3, 0x30, 0x1e, 0x4d, 0x30, 0xfe, 0x9b, 0x3c,
	0x69, 0x79, 0x1b, 0x47, 0x88, 0xc0, 0x81, 0x4f, 0x52, 0x1a, 0x72, 0x79, 0xab, 0x1f, 0x28, 0xf7,
	0xa7, 0x0f, 0xee, 0xeb, 0x8e, 0xe9, 0x6d, 0xa0, 0xe2, 0xa0, 0x3e, 0x8f, 0x53, 0xc2, 0x62, 0x2a,
	0x87, 0x81, 0x5e, 0x7b, 0x7c, 0xd0, 0x4a, 0xd3, 0xf4, 0xaa, 0x68, 0x63, 0x09, 0x34, 0x75, 0x55,
	0x30, 0x01, 0xda, 0x9c, 0xc8, 0x70, 0xfd, 0xce, 0xc6, 0x0f, 0x37, 0xa2, 0xca, 0xff, 0xf9, 0xac,
	0xa5, 0xd7, 0xe0, 0xe3, 0xc5, 0x87, 0x90, 0x3b, 0x94, 0x24, 0xb7, 0x5c, 0x24, 0xce, 0x9c, 0xfb,
	0x64, 0x8e, 0x8a, 0x74, 0x92, 0xf8, 0x69, 0x52, 0xfe, 0x64, 0x92, 0x0a, 0x6e, 0x47, 0x3c, 0xa0,
	0xf3, 0x04, 0xad, 0x40, 0xa4, 0xb6, 0x68, 0xf3, 0xfa, 0x66, 0x7b, 0x8a, 0x3c, 0xfb, 0x13, 0x00,
	0x00, 0xff, 0xff, 0xd9, 0x93, 0x2b, 0x25, 0xc3, 0x03, 0x00, 0x00,
}
