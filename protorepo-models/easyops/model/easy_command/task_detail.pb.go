// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: task_detail.proto

package easy_command

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

//
//任务详情
type TaskDetail struct {
	//
	//任务ID
	TaskId string `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId" form:"taskId"`
	//
	//任务名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name" form:"name"`
	//
	//任务类型。例如 agent_admin cmd command database_deliver deploy test tool
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type" form:"type"`
	//
	//操作。例如 database.check deployPreCheck instance.checkPackage instance.deploy instance.deployStrategy instance.fileDelivery instance.fileUninstall instance.restart instance.start instance.stop instance.uninstall plugin.deploy plugin.report task.run test
	Operation string `protobuf:"bytes,4,opt,name=operation,proto3" json:"operation" form:"operation"`
	//
	//任务分组id。作用不明
	GroupId string `protobuf:"bytes,5,opt,name=groupId,proto3" json:"groupId" form:"groupId"`
	//
	//关联的appId
	AppId string `protobuf:"bytes,6,opt,name=appId,proto3" json:"appId" form:"appId"`
	//
	//关联的clusterId
	ClusterId string `protobuf:"bytes,7,opt,name=clusterId,proto3" json:"clusterId" form:"clusterId"`
	//
	//关联的packageId
	PackageId string `protobuf:"bytes,8,opt,name=packageId,proto3" json:"packageId" form:"packageId"`
	//
	//关联的versionId
	VersionId string `protobuf:"bytes,9,opt,name=versionId,proto3" json:"versionId" form:"versionId"`
	//
	//是否需要发送状态变更通知到 logic.notify
	NeedNotify bool `protobuf:"varint,10,opt,name=needNotify,proto3" json:"needNotify" form:"needNotify"`
	//
	//设置的任务回调接口
	Callback *TaskCallback `protobuf:"bytes,11,opt,name=callback,proto3" json:"callback" form:"callback"`
	//
	//设置的目标机器分批执行的每批数量
	BatchNum int32 `protobuf:"varint,12,opt,name=batchNum,proto3" json:"batchNum" form:"batchNum"`
	//
	//设置的目标机器分批执行的每批之间的间隔秒数
	BatchInterval int32 `protobuf:"varint,13,opt,name=batchInterval,proto3" json:"batchInterval" form:"batchInterval"`
	//
	//如果某个目标机器的action执行失败，是否停止整个task
	FailedStop bool `protobuf:"varint,14,opt,name=failedStop,proto3" json:"failedStop" form:"failedStop"`
	//
	//租户org
	Org int32 `protobuf:"varint,15,opt,name=org,proto3" json:"org" form:"org"`
	//
	//创建任务的操作用户
	Operator string `protobuf:"bytes,16,opt,name=operator,proto3" json:"operator" form:"operator"`
	//
	//任务执行状态
	Status string `protobuf:"bytes,17,opt,name=status,proto3" json:"status" form:"status"`
	//
	//最后一个出错的目标机器action的退出码
	Code int32 `protobuf:"varint,18,opt,name=code,proto3" json:"code" form:"code"`
	//
	//整个任务当前的用时，单位为秒
	UsedTime int32 `protobuf:"varint,19,opt,name=usedTime,proto3" json:"usedTime" form:"usedTime"`
	//
	//任务开始时间
	StartTime string `protobuf:"bytes,20,opt,name=startTime,proto3" json:"startTime" form:"startTime"`
	//
	//任务状态更新时间
	UpdateTime string `protobuf:"bytes,21,opt,name=updateTime,proto3" json:"updateTime" form:"updateTime"`
	//
	//任务结束时间
	EndTime string `protobuf:"bytes,22,opt,name=endTime,proto3" json:"endTime" form:"endTime"`
	//
	//任务的各个目标机器的执行结果详情
	TargetsLog           []*TargetLog `protobuf:"bytes,23,rep,name=targetsLog,proto3" json:"targetsLog" form:"targetsLog"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TaskDetail) Reset()         { *m = TaskDetail{} }
func (m *TaskDetail) String() string { return proto.CompactTextString(m) }
func (*TaskDetail) ProtoMessage()    {}
func (*TaskDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_2edb9d8a0597ed12, []int{0}
}
func (m *TaskDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskDetail.Unmarshal(m, b)
}
func (m *TaskDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskDetail.Marshal(b, m, deterministic)
}
func (m *TaskDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskDetail.Merge(m, src)
}
func (m *TaskDetail) XXX_Size() int {
	return xxx_messageInfo_TaskDetail.Size(m)
}
func (m *TaskDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskDetail.DiscardUnknown(m)
}

var xxx_messageInfo_TaskDetail proto.InternalMessageInfo

func (m *TaskDetail) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *TaskDetail) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TaskDetail) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TaskDetail) GetOperation() string {
	if m != nil {
		return m.Operation
	}
	return ""
}

func (m *TaskDetail) GetGroupId() string {
	if m != nil {
		return m.GroupId
	}
	return ""
}

func (m *TaskDetail) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *TaskDetail) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *TaskDetail) GetPackageId() string {
	if m != nil {
		return m.PackageId
	}
	return ""
}

func (m *TaskDetail) GetVersionId() string {
	if m != nil {
		return m.VersionId
	}
	return ""
}

func (m *TaskDetail) GetNeedNotify() bool {
	if m != nil {
		return m.NeedNotify
	}
	return false
}

func (m *TaskDetail) GetCallback() *TaskCallback {
	if m != nil {
		return m.Callback
	}
	return nil
}

func (m *TaskDetail) GetBatchNum() int32 {
	if m != nil {
		return m.BatchNum
	}
	return 0
}

func (m *TaskDetail) GetBatchInterval() int32 {
	if m != nil {
		return m.BatchInterval
	}
	return 0
}

func (m *TaskDetail) GetFailedStop() bool {
	if m != nil {
		return m.FailedStop
	}
	return false
}

func (m *TaskDetail) GetOrg() int32 {
	if m != nil {
		return m.Org
	}
	return 0
}

func (m *TaskDetail) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

func (m *TaskDetail) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *TaskDetail) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *TaskDetail) GetUsedTime() int32 {
	if m != nil {
		return m.UsedTime
	}
	return 0
}

func (m *TaskDetail) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *TaskDetail) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

func (m *TaskDetail) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *TaskDetail) GetTargetsLog() []*TargetLog {
	if m != nil {
		return m.TargetsLog
	}
	return nil
}

func init() {
	proto.RegisterType((*TaskDetail)(nil), "easy_command.TaskDetail")
}

func init() { proto.RegisterFile("task_detail.proto", fileDescriptor_2edb9d8a0597ed12) }

var fileDescriptor_2edb9d8a0597ed12 = []byte{
	// 881 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x95, 0x4d, 0x6f, 0xdb, 0x36,
	0x1c, 0xc6, 0xa1, 0xb5, 0x49, 0x6c, 0xe6, 0x9d, 0x4d, 0x5b, 0x22, 0x17, 0x19, 0x5c, 0x0e, 0xf2,
	0x5a, 0x5a, 0x7e, 0x69, 0x0b, 0xd4, 0x87, 0x19, 0xcb, 0x86, 0x62, 0xc6, 0x8a, 0x1c, 0xb8, 0x00,
	0x03, 0xa2, 0x3a, 0x01, 0x2d, 0x31, 0xaa, 0x61, 0xd9, 0x14, 0x24, 0x3a, 0x41, 0x9a, 0xe4, 0x0b,
	0x0d, 0xd8, 0xb7, 0x18, 0xb6, 0x6f, 0xe1, 0x02, 0x03, 0x06, 0xec, 0xb4, 0x83, 0x3e, 0xc1, 0x40,
	0xea, 0x75, 0x46, 0x8f, 0xbd, 0xf4, 0x64, 0xf2, 0xff, 0xfc, 0x1e, 0x9a, 0x0f, 0xf5, 0xa7, 0x04,
	0xf6, 0x25, 0x8b, 0xa7, 0x17, 0x1e, 0x97, 0x6c, 0x12, 0xb4, 0xc2, 0x48, 0x48, 0x01, 0xb7, 0x38,
	0x8b, 0x6f, 0x2e, 0x5c, 0x31, 0x9b, 0xb1, 0xb9, 0x77, 0x48, 0xfc, 0x89, 0x7c, 0xbf, 0x18, 0xb7,
	0x5c, 0x31, 0xb3, 0x7d, 0xe1, 0x0b, 0x5b, 0x43, 0xe3, 0xc5, 0xa5, 0x9e, 0xe9, 0x89, 0x1e, 0xa5,
	0xe6, 0xc3, 0x33, 0x5f, 0xb4, 0x94, 0x5f, 0x84, 0x71, 0x2b, 0x10, 0x2e, 0x0b, 0x6c, 0x57, 0xcc,
	0x65, 0xc4, 0x5c, 0x19, 0xa7, 0xce, 0x88, 0x87, 0x82, 0xcc, 0x84, 0xc7, 0x83, 0xd8, 0xce, 0x40,
	0x5b, 0x4f, 0xed, 0xea, 0xdf, 0xda, 0x7a, 0x5b, 0x2e, 0x0b, 0x82, 0x31, 0x73, 0xa7, 0xd9, 0xda,
	0xbf, 0x7c, 0xb6, 0xb5, 0x23, 0x9f, 0xcb, 0x8b, 0x40, 0xf8, 0xd9, 0xc2, 0xaf, 0x2a, 0x19, 0x67,
	0xd7, 0x13, 0x39, 0x15, 0xd7, 0xb6, 0x2f, 0x88, 0x16, 0xc9, 0x15, 0x0b, 0x26, 0x1e, 0x93, 0x22,
	0x8a, 0xed, 0x62, 0x98, 0xfa, 0xf0, 0xbf, 0xdb, 0x00, 0x9c, 0xb2, 0x78, 0xfa, 0x83, 0x3e, 0x3e,
	0xd8, 0x04, 0xeb, 0x6a, 0xdb, 0x43, 0x0f, 0x19, 0x0d, 0xc3, 0xaa, 0x1f, 0xef, 0x27, 0x4b, 0x73,
	0xfb, 0x52, 0x44, 0xb3, 0x3e, 0x4e, 0xeb, 0x98, 0x66, 0x00, 0xfc, 0x1a, 0x3c, 0x9c, 0xb3, 0x19,
	0x47, 0x5f, 0x69, 0x70, 0x37, 0x59, 0x9a, 0x9b, 0x29, 0xa8, 0xaa, 0x98, 0x6a, 0x51, 0x41, 0xf2,
	0x26, 0xe4, 0xe8, 0xc1, 0x2a, 0xa4, 0xaa, 0x98, 0x6a, 0x11, 0x76, 0x41, 0x5d, 0x84, 0x3c, 0x62,
	0x72, 0x22, 0xe6, 0xe8, 0xa1, 0x26, 0x0f, 0x92, 0xa5, 0xb9, 0x97, 0x92, 0x85, 0x84, 0x69, 0x89,
	0xc1, 0xe7, 0x60, 0xc3, 0x8f, 0xc4, 0x22, 0x1c, 0x7a, 0x68, 0x4d, 0x3b, 0x60, 0xb2, 0x34, 0x77,
	0x52, 0x47, 0x26, 0x60, 0x9a, 0x23, 0xb0, 0x0f, 0xd6, 0x58, 0xa8, 0xd8, 0x75, 0xcd, 0x1e, 0x25,
	0x4b, 0x73, 0x2b, 0x65, 0x75, 0x19, 0xff, 0xf5, 0xd1, 0xdc, 0x03, 0x3b, 0xe7, 0x4e, 0x9b, 0xbc,
	0x66, 0xe4, 0xc3, 0xe8, 0xb6, 0xd3, 0xbb, 0x3f, 0xa2, 0xa9, 0x05, 0xbe, 0x01, 0x75, 0x37, 0x58,
	0xc4, 0x92, 0x47, 0x43, 0x0f, 0x6d, 0x68, 0xbf, 0x55, 0xee, 0xae, 0x90, 0x3e, 0xbd, 0x46, 0x69,
	0x55, 0x29, 0x43, 0xe6, 0x4e, 0x99, 0xcf, 0x87, 0x1e, 0xaa, 0xad, 0xa6, 0x2c, 0x24, 0x4c, 0x4b,
	0x4c, 0x79, 0xae, 0x78, 0x14, 0x4f, 0xc4, 0x7c, 0xe8, 0xa1, 0xfa, 0xaa, 0xa7, 0x90, 0x30, 0x2d,
	0x31, 0xf8, 0x12, 0x80, 0x39, 0xe7, 0xde, 0x89, 0x90, 0x93, 0xcb, 0x1b, 0x04, 0x1a, 0x86, 0x55,
	0x3b, 0x7e, 0x9c, 0x2c, 0xcd, 0xfd, 0xec, 0xe9, 0x14, 0x1a, 0xa6, 0x15, 0x10, 0xfe, 0x04, 0x6a,
	0x79, 0xaf, 0xa2, 0xcd, 0x86, 0x61, 0x6d, 0x76, 0x0f, 0x5b, 0xd5, 0x96, 0x6b, 0xa9, 0x2e, 0xf9,
	0x3e, 0x23, 0x8e, 0x1f, 0x25, 0x4b, 0x73, 0x37, 0x3b, 0x81, 0xac, 0x86, 0x69, 0xb1, 0x00, 0xb4,
	0x41, 0x6d, 0xcc, 0xa4, 0xfb, 0xfe, 0x64, 0x31, 0x43, 0x5b, 0x0d, 0xc3, 0x5a, 0xab, 0x1a, 0x72,
	0x05, 0xd3, 0x02, 0x82, 0xdf, 0x82, 0x6d, 0x3d, 0x1e, 0xce, 0x25, 0x8f, 0xae, 0x58, 0x80, 0xb6,
	0xb5, 0x0b, 0x25, 0x4b, 0xf3, 0xa0, 0xe2, 0xca, 0x65, 0x4c, 0xff, 0x8f, 0xab, 0xd0, 0x97, 0x6c,
	0x12, 0x70, 0xef, 0x67, 0x29, 0x42, 0xb4, 0xb3, 0x1a, 0xba, 0xd4, 0x30, 0xad, 0x80, 0xb0, 0x01,
	0x1e, 0x88, 0xc8, 0x47, 0xbb, 0xfa, 0xcf, 0x76, 0x92, 0xa5, 0x09, 0xb2, 0x9e, 0x8b, 0x7c, 0x4c,
	0x95, 0x04, 0x87, 0xa0, 0x96, 0x36, 0x9d, 0x88, 0xd0, 0x9e, 0x7e, 0x00, 0xa4, 0x4c, 0x92, 0x2b,
	0xea, 0xd9, 0x3f, 0x01, 0x07, 0xe7, 0xce, 0x77, 0xe4, 0x8c, 0x91, 0x0f, 0x17, 0x64, 0xf4, 0xee,
	0xfa, 0xb6, 0xf7, 0xfc, 0xd5, 0x8b, 0xfb, 0x23, 0x5a, 0xd8, 0xd5, 0xdd, 0x8a, 0x25, 0x93, 0x8b,
	0x18, 0xed, 0xaf, 0xde, 0xad, 0xb4, 0x8e, 0x69, 0x06, 0xa8, 0x6b, 0xe3, 0x0a, 0x8f, 0x23, 0xa8,
	0x37, 0x56, 0xb9, 0x36, 0xaa, 0x8a, 0xa9, 0x16, 0xd5, 0x21, 0x2f, 0x62, 0xee, 0x9d, 0x4e, 0x66,
	0x1c, 0x3d, 0x5a, 0x3d, 0xe4, 0x5c, 0xc1, 0xb4, 0x80, 0xe0, 0xdf, 0x06, 0xa8, 0xc7, 0x92, 0x45,
	0x52, 0x5b, 0x0e, 0xf4, 0x26, 0xfe, 0x30, 0xca, 0x7e, 0x2a, 0x34, 0x95, 0xe7, 0x37, 0x03, 0xfc,
	0x6a, 0x9c, 0x5b, 0xd6, 0xa0, 0xef, 0x74, 0xc8, 0xeb, 0x91, 0x6a, 0xeb, 0xd1, 0x37, 0xcd, 0x81,
	0xfe, 0xbd, 0x7d, 0x71, 0xdf, 0x24, 0x56, 0xc7, 0x69, 0x93, 0xee, 0xe8, 0xae, 0xad, 0xf5, 0x26,
	0xb1, 0x7a, 0x4e, 0x9b, 0x74, 0xf2, 0xf9, 0x9d, 0xd3, 0x21, 0xdd, 0xd4, 0xd5, 0x74, 0x4e, 0x1b,
	0x23, 0xab, 0xeb, 0xb4, 0x49, 0x6f, 0x74, 0xa7, 0x99, 0xb4, 0xdc, 0xb7, 0x9c, 0x36, 0x79, 0x99,
	0x4f, 0xca, 0xb1, 0xf5, 0xae, 0xa5, 0x7f, 0x9f, 0x35, 0x07, 0xd6, 0xd9, 0x9d, 0xf3, 0x8c, 0x8c,
	0xac, 0x41, 0xff, 0x13, 0xf6, 0x8a, 0x7b, 0x70, 0x44, 0xcb, 0x64, 0xf0, 0x1f, 0x03, 0x80, 0x45,
	0xe8, 0x31, 0xc9, 0x75, 0xd0, 0xc7, 0x3a, 0xe8, 0x9f, 0x46, 0xd9, 0x0e, 0xa5, 0xf8, 0x25, 0x26,
	0xad, 0x64, 0x83, 0x1f, 0x0d, 0xb0, 0xc1, 0xe7, 0x69, 0x0f, 0x3c, 0xd1, 0x39, 0x7f, 0x37, 0xca,
	0x17, 0x61, 0xa6, 0x7c, 0x89, 0x21, 0xf3, 0x54, 0xf0, 0x04, 0x80, 0xf4, 0x63, 0x17, 0xbf, 0x15,
	0x3e, 0x7a, 0xda, 0x78, 0x60, 0x6d, 0x76, 0x9f, 0xae, 0xbe, 0x99, 0x94, 0xfe, 0x56, 0xf8, 0xd5,
	0x2b, 0x5f, 0x9a, 0x30, 0xad, 0xac, 0x70, 0xfc, 0xe3, 0xd9, 0x9b, 0xcf, 0xf3, 0x0d, 0x1e, 0xaf,
	0x6b, 0xb8, 0xf7, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x09, 0x4f, 0xcb, 0x1e, 0x80, 0x08, 0x00,
	0x00,
}
