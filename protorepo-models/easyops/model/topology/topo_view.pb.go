// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: topo_view.proto

package topology

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//拓扑视图
type TopoView struct {
	//
	//ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" form:"id"`
	//
	//名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name" form:"name"`
	//
	//类型
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type" form:"type"`
	//
	//数据
	Data string `protobuf:"bytes,4,opt,name=data,proto3" json:"data" form:"data"`
	//
	//创建者
	Creator string `protobuf:"bytes,5,opt,name=creator,proto3" json:"creator" form:"creator"`
	//
	//创建时间
	Ctime string `protobuf:"bytes,6,opt,name=ctime,proto3" json:"ctime" form:"ctime"`
	//
	//修改者
	Modifier string `protobuf:"bytes,7,opt,name=modifier,proto3" json:"modifier" form:"modifier"`
	//
	//修改时间
	Mtime                string   `protobuf:"bytes,8,opt,name=mtime,proto3" json:"mtime" form:"mtime"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopoView) Reset()         { *m = TopoView{} }
func (m *TopoView) String() string { return proto.CompactTextString(m) }
func (*TopoView) ProtoMessage()    {}
func (*TopoView) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0ece3896a5baac9, []int{0}
}
func (m *TopoView) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TopoView.Unmarshal(m, b)
}
func (m *TopoView) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TopoView.Marshal(b, m, deterministic)
}
func (m *TopoView) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopoView.Merge(m, src)
}
func (m *TopoView) XXX_Size() int {
	return xxx_messageInfo_TopoView.Size(m)
}
func (m *TopoView) XXX_DiscardUnknown() {
	xxx_messageInfo_TopoView.DiscardUnknown(m)
}

var xxx_messageInfo_TopoView proto.InternalMessageInfo

func (m *TopoView) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TopoView) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TopoView) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TopoView) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *TopoView) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *TopoView) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

func (m *TopoView) GetModifier() string {
	if m != nil {
		return m.Modifier
	}
	return ""
}

func (m *TopoView) GetMtime() string {
	if m != nil {
		return m.Mtime
	}
	return ""
}

func init() {
	proto.RegisterType((*TopoView)(nil), "topology.TopoView")
}

func init() { proto.RegisterFile("topo_view.proto", fileDescriptor_c0ece3896a5baac9) }

var fileDescriptor_c0ece3896a5baac9 = []byte{
	// 487 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x93, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0xe5, 0xd2, 0xb4, 0xa9, 0xf9, 0x13, 0xc9, 0x27, 0xab, 0x12, 0x72, 0x71, 0x7b, 0xd8,
	0x50, 0xd6, 0x76, 0x12, 0x40, 0x6a, 0x2e, 0x11, 0x11, 0x4f, 0x60, 0xaa, 0x1e, 0xb2, 0xb8, 0x95,
	0x63, 0x6f, 0xcc, 0x8a, 0xb8, 0x63, 0xd9, 0xdb, 0x46, 0xa1, 0xe9, 0x0b, 0x21, 0xf1, 0x12, 0xbc,
	0x05, 0x17, 0x23, 0xf1, 0x08, 0xbe, 0x23, 0xa1, 0x1d, 0xc7, 0xa1, 0x2a, 0x1c, 0xb8, 0x72, 0xda,
	0x99, 0xef, 0xfb, 0xcd, 0xa7, 0xdd, 0x91, 0x56, 0xef, 0x48, 0xc8, 0xe0, 0xe2, 0x5a, 0xf0, 0x85,
	0x93, 0xe5, 0x20, 0xc1, 0x68, 0x2b, 0x61, 0x0e, 0xc9, 0x72, 0x9f, 0x26, 0x42, 0x7e, 0xb8, 0x9a,
	0x3a, 0x11, 0xa4, 0x6e, 0x02, 0x09, 0xb8, 0x08, 0x4c, 0xaf, 0x66, 0xd8, 0x61, 0x83, 0x55, 0x3d,
	0xb8, 0xff, 0xfa, 0x0e, 0x9e, 0x2e, 0x84, 0xfc, 0x08, 0x0b, 0x37, 0x01, 0x8a, 0x26, 0xbd, 0x0e,
	0xe7, 0x22, 0x0e, 0x25, 0xe4, 0x85, 0xbb, 0x29, 0xeb, 0x39, 0xfb, 0x67, 0x4b, 0x6f, 0x9f, 0x42,
	0x06, 0x67, 0x82, 0x2f, 0x8c, 0xa7, 0xfa, 0x96, 0x88, 0x4d, 0xed, 0x40, 0x23, 0x7b, 0xe3, 0xc7,
	0x55, 0x69, 0xed, 0xcd, 0x20, 0x4f, 0x87, 0xb6, 0x88, 0x6d, 0x7f, 0x4b, 0xc4, 0xc6, 0xa1, 0xbe,
	0x7d, 0x19, 0xa6, 0xdc, 0xdc, 0x42, 0xa0, 0x53, 0x95, 0xd6, 0xc3, 0x1a, 0x50, 0xaa, 0xed, 0xa3,
	0xa9, 0x20, 0xb9, 0xcc, 0xb8, 0xf9, 0xe0, 0x3e, 0xa4, 0x54, 0xdb, 0x47, 0x53, 0x41, 0x71, 0x28,
	0x43, 0x73, 0xfb, 0x3e, 0xa4, 0x54, 0xdb, 0x47, 0xd3, 0x78, 0xa7, 0xef, 0x46, 0x39, 0x57, 0x77,
	0x35, 0x5b, 0xc8, 0x9d, 0x54, 0xa5, 0xf5, 0xa4, 0xe6, 0xd6, 0x86, 0xfd, 0xe3, 0xbb, 0x75, 0xa8,
	0x3f, 0x3b, 0x67, 0x21, 0xfd, 0xf4, 0x86, 0x4e, 0x3c, 0x7a, 0x12, 0x30, 0x67, 0x53, 0x5f, 0xd0,
	0xe0, 0xa6, 0xff, 0x62, 0xd0, 0xbb, 0x3d, 0xf2, 0x9b, 0x24, 0xe3, 0x9b, 0xa6, 0xb7, 0x22, 0x29,
	0x52, 0x6e, 0xee, 0x60, 0xe6, 0x57, 0xad, 0x2a, 0xad, 0x47, 0xeb, 0x50, 0xa5, 0xab, 0xc8, 0x2f,
	0x9a, 0xfe, 0x59, 0x3b, 0x27, 0x64, 0x34, 0x64, 0x3d, 0x15, 0xa9, 0x72, 0x9f, 0x77, 0x47, 0x78,
	0xde, 0xbc, 0xbc, 0xed, 0x52, 0xd2, 0x63, 0x1e, 0xed, 0x07, 0x2b, 0x0f, 0xfd, 0x2e, 0x25, 0x03,
	0xe6, 0xd1, 0x5e, 0xd3, 0xaf, 0x58, 0x8f, 0xf6, 0xeb, 0xa9, 0x2e, 0x3b, 0x3d, 0x08, 0x48, 0x9f,
	0x79, 0x74, 0x10, 0xac, 0x90, 0xa9, 0xe5, 0x21, 0x61, 0x1e, 0x7d, 0xd5, 0x34, 0xbf, 0x6b, 0xf2,
	0xde, 0xc1, 0xf3, 0xb8, 0x3b, 0x22, 0x93, 0x15, 0x3b, 0xa6, 0x01, 0x19, 0x0d, 0xff, 0x32, 0x7e,
	0x67, 0x7a, 0x74, 0xe4, 0xd7, 0x2f, 0x32, 0xce, 0xf4, 0x76, 0x0a, 0xb1, 0x98, 0x09, 0x9e, 0x9b,
	0xbb, 0xf8, 0xba, 0x61, 0x55, 0x5a, 0x9d, 0xfa, 0x71, 0x8d, 0xf3, 0xcf, 0x2b, 0xdb, 0x64, 0xe1,
	0xce, 0x52, 0xdc, 0x59, 0xfb, 0x8f, 0x9d, 0xa5, 0xff, 0xed, 0xce, 0xf0, 0xe6, 0xe3, 0xb7, 0x93,
	0x71, 0x02, 0x0e, 0x0f, 0x8b, 0x25, 0x64, 0x85, 0x33, 0x87, 0x28, 0x9c, 0xbb, 0x11, 0x5c, 0xca,
	0x3c, 0x8c, 0x64, 0x51, 0xff, 0xb9, 0x9c, 0x67, 0x40, 0x53, 0x88, 0xf9, 0xbc, 0x70, 0xd7, 0xa0,
	0x8b, 0xad, 0xdb, 0x7c, 0xd6, 0xe9, 0x0e, 0x82, 0x83, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x0a,
	0x7c, 0x2a, 0x80, 0xd0, 0x03, 0x00, 0x00,
}
