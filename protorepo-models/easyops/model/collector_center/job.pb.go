// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: job.proto

package collector_center

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//采集任务
type CollJob struct {
	//
	//执行时间间隔
	Interval int32 `protobuf:"varint,1,opt,name=interval,proto3" json:"interval" form:"interval"`
	//
	//超时间隔
	Timeout int32 `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout" form:"timeout"`
	//
	//执行时间段
	TimeRange string `protobuf:"bytes,3,opt,name=timeRange,proto3" json:"timeRange" form:"timeRange"`
	//
	//主机
	Host *CollJob_Host `protobuf:"bytes,4,opt,name=host,proto3" json:"host" form:"host"`
	//
	//指标表名
	MetricTable string `protobuf:"bytes,5,opt,name=metricTable,proto3" json:"metricTable" form:"metricTable"`
	//
	//插件ID
	PluginId string `protobuf:"bytes,6,opt,name=pluginId,proto3" json:"pluginId" form:"pluginId"`
	//
	//采集作业名称
	Name string `protobuf:"bytes,7,opt,name=name,proto3" json:"name" form:"name"`
	//
	//脚本
	Script *CollJob_Script `protobuf:"bytes,8,opt,name=script,proto3" json:"script" form:"script"`
	//
	//数据ID
	DataId int32 `protobuf:"varint,9,opt,name=dataId,proto3" json:"dataId" form:"dataId"`
	//
	//环境变量
	Env []*CollJob_Env `protobuf:"bytes,10,rep,name=env,proto3" json:"env" form:"env"`
	//
	//参数
	Kwargs []*CollJob_Kwargs `protobuf:"bytes,11,rep,name=kwargs,proto3" json:"kwargs" form:"kwargs"`
	//
	//执行方法
	Fun string `protobuf:"bytes,12,opt,name=fun,proto3" json:"fun" form:"fun"`
	//
	//采集类型ID
	ClazzId string `protobuf:"bytes,13,opt,name=clazzId,proto3" json:"clazzId" form:"clazzId"`
	//
	//采集类型名称
	ClazzName string `protobuf:"bytes,14,opt,name=clazzName,proto3" json:"clazzName" form:"clazzName"`
	//
	//采集任务ID
	JobConfigId string `protobuf:"bytes,15,opt,name=jobConfigId,proto3" json:"jobConfigId" form:"jobConfigId"`
	//
	//数据要求字段
	RequiredFields []string `protobuf:"bytes,16,rep,name=requiredFields,proto3" json:"requiredFields" form:"requiredFields"`
	//
	//缓存过期次数（时间）
	CacheTtl int32 `protobuf:"varint,17,opt,name=cacheTtl,proto3" json:"cacheTtl" form:"cacheTtl"`
	//
	//是否忽略不符合要求数据
	IgnoreInvalid bool `protobuf:"varint,18,opt,name=ignoreInvalid,proto3" json:"ignoreInvalid" form:"ignoreInvalid"`
	//
	//标签
	Labels []string `protobuf:"bytes,19,rep,name=labels,proto3" json:"labels" form:"labels"`
	//
	//是否禁用
	Disabled bool `protobuf:"varint,20,opt,name=disabled,proto3" json:"disabled" form:"disabled"`
	//
	//ORG
	Org int32 `protobuf:"varint,21,opt,name=org,proto3" json:"org" form:"org"`
	//
	//采集作业ID
	Id string `protobuf:"bytes,22,opt,name=id,proto3" json:"id" form:"id"`
	//
	//创建者
	Creator string `protobuf:"bytes,23,opt,name=creator,proto3" json:"creator" form:"creator"`
	//
	//修改者
	Modifier string `protobuf:"bytes,24,opt,name=modifier,proto3" json:"modifier" form:"modifier"`
	//
	//创建时间
	Ctime int32 `protobuf:"varint,25,opt,name=ctime,proto3" json:"ctime" form:"ctime"`
	//
	//修改时间
	Mtime int32 `protobuf:"varint,26,opt,name=mtime,proto3" json:"mtime" form:"mtime"`
	//
	//关联模型ID
	ObjectId string `protobuf:"bytes,27,opt,name=objectId,proto3" json:"objectId" form:"objectId"`
	//
	//关联模型实例ID
	InstanceId           string   `protobuf:"bytes,28,opt,name=instanceId,proto3" json:"instanceId" form:"instanceId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CollJob) Reset()         { *m = CollJob{} }
func (m *CollJob) String() string { return proto.CompactTextString(m) }
func (*CollJob) ProtoMessage()    {}
func (*CollJob) Descriptor() ([]byte, []int) {
	return fileDescriptor_f32c477d91a04ead, []int{0}
}
func (m *CollJob) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollJob.Unmarshal(m, b)
}
func (m *CollJob) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollJob.Marshal(b, m, deterministic)
}
func (m *CollJob) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollJob.Merge(m, src)
}
func (m *CollJob) XXX_Size() int {
	return xxx_messageInfo_CollJob.Size(m)
}
func (m *CollJob) XXX_DiscardUnknown() {
	xxx_messageInfo_CollJob.DiscardUnknown(m)
}

var xxx_messageInfo_CollJob proto.InternalMessageInfo

func (m *CollJob) GetInterval() int32 {
	if m != nil {
		return m.Interval
	}
	return 0
}

func (m *CollJob) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *CollJob) GetTimeRange() string {
	if m != nil {
		return m.TimeRange
	}
	return ""
}

func (m *CollJob) GetHost() *CollJob_Host {
	if m != nil {
		return m.Host
	}
	return nil
}

func (m *CollJob) GetMetricTable() string {
	if m != nil {
		return m.MetricTable
	}
	return ""
}

func (m *CollJob) GetPluginId() string {
	if m != nil {
		return m.PluginId
	}
	return ""
}

func (m *CollJob) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CollJob) GetScript() *CollJob_Script {
	if m != nil {
		return m.Script
	}
	return nil
}

func (m *CollJob) GetDataId() int32 {
	if m != nil {
		return m.DataId
	}
	return 0
}

func (m *CollJob) GetEnv() []*CollJob_Env {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *CollJob) GetKwargs() []*CollJob_Kwargs {
	if m != nil {
		return m.Kwargs
	}
	return nil
}

func (m *CollJob) GetFun() string {
	if m != nil {
		return m.Fun
	}
	return ""
}

func (m *CollJob) GetClazzId() string {
	if m != nil {
		return m.ClazzId
	}
	return ""
}

func (m *CollJob) GetClazzName() string {
	if m != nil {
		return m.ClazzName
	}
	return ""
}

func (m *CollJob) GetJobConfigId() string {
	if m != nil {
		return m.JobConfigId
	}
	return ""
}

func (m *CollJob) GetRequiredFields() []string {
	if m != nil {
		return m.RequiredFields
	}
	return nil
}

func (m *CollJob) GetCacheTtl() int32 {
	if m != nil {
		return m.CacheTtl
	}
	return 0
}

func (m *CollJob) GetIgnoreInvalid() bool {
	if m != nil {
		return m.IgnoreInvalid
	}
	return false
}

func (m *CollJob) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CollJob) GetDisabled() bool {
	if m != nil {
		return m.Disabled
	}
	return false
}

func (m *CollJob) GetOrg() int32 {
	if m != nil {
		return m.Org
	}
	return 0
}

func (m *CollJob) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CollJob) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *CollJob) GetModifier() string {
	if m != nil {
		return m.Modifier
	}
	return ""
}

func (m *CollJob) GetCtime() int32 {
	if m != nil {
		return m.Ctime
	}
	return 0
}

func (m *CollJob) GetMtime() int32 {
	if m != nil {
		return m.Mtime
	}
	return 0
}

func (m *CollJob) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *CollJob) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

type CollJob_Host struct {
	//
	//主机
	InstanceId string `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId" form:"instanceId"`
	//
	//IP
	Ip string `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip" form:"ip"`
	//
	//Agent唯一标识
	Uuid                 string   `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid" form:"uuid"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CollJob_Host) Reset()         { *m = CollJob_Host{} }
func (m *CollJob_Host) String() string { return proto.CompactTextString(m) }
func (*CollJob_Host) ProtoMessage()    {}
func (*CollJob_Host) Descriptor() ([]byte, []int) {
	return fileDescriptor_f32c477d91a04ead, []int{0, 0}
}
func (m *CollJob_Host) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollJob_Host.Unmarshal(m, b)
}
func (m *CollJob_Host) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollJob_Host.Marshal(b, m, deterministic)
}
func (m *CollJob_Host) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollJob_Host.Merge(m, src)
}
func (m *CollJob_Host) XXX_Size() int {
	return xxx_messageInfo_CollJob_Host.Size(m)
}
func (m *CollJob_Host) XXX_DiscardUnknown() {
	xxx_messageInfo_CollJob_Host.DiscardUnknown(m)
}

var xxx_messageInfo_CollJob_Host proto.InternalMessageInfo

func (m *CollJob_Host) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *CollJob_Host) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *CollJob_Host) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type CollJob_Script struct {
	//
	//脚本Id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" form:"id"`
	//
	//脚本版本
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version" form:"version"`
	//
	//脚本类型
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type" form:"type"`
	//
	//脚本内容
	Content string `protobuf:"bytes,4,opt,name=content,proto3" json:"content" form:"content"`
	//
	//脚本名称
	Name                 string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name" form:"name"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CollJob_Script) Reset()         { *m = CollJob_Script{} }
func (m *CollJob_Script) String() string { return proto.CompactTextString(m) }
func (*CollJob_Script) ProtoMessage()    {}
func (*CollJob_Script) Descriptor() ([]byte, []int) {
	return fileDescriptor_f32c477d91a04ead, []int{0, 1}
}
func (m *CollJob_Script) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollJob_Script.Unmarshal(m, b)
}
func (m *CollJob_Script) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollJob_Script.Marshal(b, m, deterministic)
}
func (m *CollJob_Script) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollJob_Script.Merge(m, src)
}
func (m *CollJob_Script) XXX_Size() int {
	return xxx_messageInfo_CollJob_Script.Size(m)
}
func (m *CollJob_Script) XXX_DiscardUnknown() {
	xxx_messageInfo_CollJob_Script.DiscardUnknown(m)
}

var xxx_messageInfo_CollJob_Script proto.InternalMessageInfo

func (m *CollJob_Script) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CollJob_Script) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *CollJob_Script) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *CollJob_Script) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *CollJob_Script) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CollJob_Env struct {
	//
	//键
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key" form:"key"`
	//
	//值
	Value                *types.Value `protobuf:"bytes,2,opt,name=value,proto3" json:"value" form:"value"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CollJob_Env) Reset()         { *m = CollJob_Env{} }
func (m *CollJob_Env) String() string { return proto.CompactTextString(m) }
func (*CollJob_Env) ProtoMessage()    {}
func (*CollJob_Env) Descriptor() ([]byte, []int) {
	return fileDescriptor_f32c477d91a04ead, []int{0, 2}
}
func (m *CollJob_Env) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollJob_Env.Unmarshal(m, b)
}
func (m *CollJob_Env) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollJob_Env.Marshal(b, m, deterministic)
}
func (m *CollJob_Env) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollJob_Env.Merge(m, src)
}
func (m *CollJob_Env) XXX_Size() int {
	return xxx_messageInfo_CollJob_Env.Size(m)
}
func (m *CollJob_Env) XXX_DiscardUnknown() {
	xxx_messageInfo_CollJob_Env.DiscardUnknown(m)
}

var xxx_messageInfo_CollJob_Env proto.InternalMessageInfo

func (m *CollJob_Env) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *CollJob_Env) GetValue() *types.Value {
	if m != nil {
		return m.Value
	}
	return nil
}

type CollJob_Kwargs struct {
	//
	//键
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key" form:"key"`
	//
	//值
	Value                *types.Value `protobuf:"bytes,2,opt,name=value,proto3" json:"value" form:"value"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CollJob_Kwargs) Reset()         { *m = CollJob_Kwargs{} }
func (m *CollJob_Kwargs) String() string { return proto.CompactTextString(m) }
func (*CollJob_Kwargs) ProtoMessage()    {}
func (*CollJob_Kwargs) Descriptor() ([]byte, []int) {
	return fileDescriptor_f32c477d91a04ead, []int{0, 3}
}
func (m *CollJob_Kwargs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollJob_Kwargs.Unmarshal(m, b)
}
func (m *CollJob_Kwargs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollJob_Kwargs.Marshal(b, m, deterministic)
}
func (m *CollJob_Kwargs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollJob_Kwargs.Merge(m, src)
}
func (m *CollJob_Kwargs) XXX_Size() int {
	return xxx_messageInfo_CollJob_Kwargs.Size(m)
}
func (m *CollJob_Kwargs) XXX_DiscardUnknown() {
	xxx_messageInfo_CollJob_Kwargs.DiscardUnknown(m)
}

var xxx_messageInfo_CollJob_Kwargs proto.InternalMessageInfo

func (m *CollJob_Kwargs) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *CollJob_Kwargs) GetValue() *types.Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*CollJob)(nil), "collector_center.CollJob")
	proto.RegisterType((*CollJob_Host)(nil), "collector_center.CollJob.Host")
	proto.RegisterType((*CollJob_Script)(nil), "collector_center.CollJob.Script")
	proto.RegisterType((*CollJob_Env)(nil), "collector_center.CollJob.Env")
	proto.RegisterType((*CollJob_Kwargs)(nil), "collector_center.CollJob.Kwargs")
}

func init() { proto.RegisterFile("job.proto", fileDescriptor_f32c477d91a04ead) }

var fileDescriptor_f32c477d91a04ead = []byte{
	// 947 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x95, 0xcd, 0x6e, 0xe3, 0x36,
	0x10, 0xc7, 0xe1, 0x38, 0x76, 0x62, 0x7a, 0xf3, 0xc5, 0x4d, 0x52, 0xae, 0xbb, 0x5b, 0x19, 0x2c,
	0x50, 0xb8, 0x40, 0x57, 0x06, 0x52, 0x14, 0x28, 0x7a, 0xd8, 0xa2, 0x0e, 0xb6, 0xa8, 0x37, 0x45,
	0x0f, 0xec, 0xa2, 0x87, 0x5e, 0x0a, 0x59, 0xa2, 0x15, 0x26, 0x32, 0xe9, 0x52, 0x94, 0x8b, 0xec,
	0xad, 0x2f, 0xd7, 0x5b, 0x5f, 0x41, 0x0f, 0xa1, 0x27, 0x28, 0x38, 0x94, 0x1c, 0x46, 0x8b, 0x0d,
	0x7a, 0xd9, 0x93, 0x69, 0xfe, 0x7f, 0xc3, 0x19, 0xce, 0x8c, 0x86, 0x68, 0x70, 0xa3, 0x16, 0xe1,
	0x5a, 0x2b, 0xa3, 0xf0, 0x71, 0xac, 0xb2, 0x8c, 0xc7, 0x46, 0xe9, 0x3f, 0x62, 0x2e, 0x0d, 0xd7,
	0xa3, 0x97, 0xa9, 0x30, 0xd7, 0xc5, 0x22, 0x8c, 0xd5, 0x6a, 0x9a, 0xaa, 0x54, 0x4d, 0x01, 0x5c,
	0x14, 0x4b, 0xf8, 0x07, 0x7f, 0x60, 0xe5, 0x0e, 0x18, 0x3d, 0x4f, 0x95, 0x4a, 0x33, 0x7e, 0x4f,
	0xe5, 0x46, 0x17, 0xb1, 0x71, 0x2a, 0xfd, 0xe7, 0x08, 0xed, 0x5d, 0xaa, 0x2c, 0x7b, 0xa3, 0x16,
	0x78, 0x8a, 0xf6, 0x85, 0xf5, 0xb0, 0x89, 0x32, 0xd2, 0x19, 0x77, 0x26, 0xbd, 0xd9, 0xd3, 0xaa,
	0x0c, 0x8e, 0x96, 0x4a, 0xaf, 0xbe, 0xa3, 0x8d, 0x42, 0xd9, 0x16, 0xc2, 0x5f, 0xa1, 0x3d, 0x23,
	0x56, 0x5c, 0x15, 0x86, 0xec, 0x00, 0x8f, 0xab, 0x32, 0x38, 0x74, 0x7c, 0x2d, 0x50, 0xd6, 0x20,
	0xf8, 0x02, 0x0d, 0xec, 0x92, 0x45, 0x32, 0xe5, 0xa4, 0x3b, 0xee, 0x4c, 0x06, 0xb3, 0xd3, 0xaa,
	0x0c, 0x8e, 0xef, 0x79, 0x90, 0x28, 0xbb, 0xc7, 0xf0, 0x25, 0xda, 0xbd, 0x56, 0xb9, 0x21, 0xbb,
	0xe3, 0xce, 0x64, 0x78, 0xf1, 0x59, 0xd8, 0x4e, 0x46, 0x58, 0xc7, 0x1e, 0xfe, 0xa4, 0x72, 0x33,
	0x3b, 0xaa, 0xca, 0x60, 0xe8, 0x8e, 0xb3, 0x56, 0x94, 0x81, 0x31, 0xfe, 0x16, 0x0d, 0x57, 0xdc,
	0x68, 0x11, 0xbf, 0x8d, 0x16, 0x19, 0x27, 0x3d, 0x70, 0x7d, 0x5e, 0x95, 0x01, 0x76, 0xac, 0x27,
	0x52, 0xe6, 0xa3, 0x36, 0x23, 0xeb, 0xac, 0x48, 0x85, 0x9c, 0x27, 0xa4, 0x0f, 0x66, 0x5e, 0x46,
	0x1a, 0x85, 0xb2, 0x2d, 0x84, 0x3f, 0x47, 0xbb, 0x32, 0x5a, 0x71, 0xb2, 0x07, 0xb0, 0x17, 0x8f,
	0xdd, 0xa5, 0x0c, 0x44, 0x7c, 0x85, 0xfa, 0x79, 0xac, 0xc5, 0xda, 0x90, 0x7d, 0xb8, 0xd6, 0xf8,
	0xc3, 0xd7, 0xfa, 0x15, 0xb8, 0xd9, 0x49, 0x55, 0x06, 0x07, 0xee, 0x20, 0x67, 0x49, 0x59, 0x7d,
	0x04, 0xfe, 0x12, 0xf5, 0x93, 0xc8, 0x44, 0xf3, 0x84, 0x0c, 0xa0, 0x04, 0x1e, 0xea, 0xf6, 0x29,
	0xab, 0x01, 0xfc, 0x3d, 0xea, 0x72, 0xb9, 0x21, 0x68, 0xdc, 0x9d, 0x0c, 0x2f, 0x5e, 0x7c, 0xd8,
	0xe9, 0x6b, 0xb9, 0x99, 0x1d, 0x56, 0x65, 0x80, 0xdc, 0x31, 0x5c, 0x6e, 0x28, 0xb3, 0x96, 0x36,
	0xf0, 0xdb, 0xbf, 0x22, 0x9d, 0xe6, 0x64, 0x08, 0x67, 0x3c, 0x12, 0xf8, 0x15, 0x70, 0x7e, 0x34,
	0xce, 0x92, 0xb2, 0xfa, 0x08, 0x3c, 0x46, 0xdd, 0x65, 0x21, 0xc9, 0x13, 0xc8, 0x94, 0xe7, 0x6e,
	0x59, 0x48, 0xca, 0xac, 0x64, 0xdb, 0x2b, 0xce, 0xa2, 0x77, 0xef, 0xe6, 0x09, 0x39, 0x00, 0xca,
	0x6b, 0xaf, 0x5a, 0xa0, 0xac, 0x41, 0x6c, 0x7b, 0xc1, 0xf2, 0x17, 0x9b, 0xff, 0xc3, 0x76, 0x7b,
	0x6d, 0x25, 0xca, 0xee, 0x31, 0xdb, 0x19, 0x37, 0x6a, 0x71, 0xa9, 0xe4, 0x52, 0xa4, 0xf3, 0x84,
	0x1c, 0xb5, 0x3b, 0xc3, 0x13, 0x29, 0xf3, 0x51, 0xfc, 0x03, 0x3a, 0xd4, 0xfc, 0xcf, 0x42, 0x68,
	0x9e, 0xfc, 0x28, 0x78, 0x96, 0xe4, 0xe4, 0x78, 0xdc, 0x9d, 0x0c, 0x66, 0xcf, 0xaa, 0x32, 0x38,
	0x73, 0xc6, 0x0f, 0x75, 0xca, 0x5a, 0x06, 0xb6, 0xb9, 0xe2, 0x28, 0xbe, 0xe6, 0x6f, 0x4d, 0x46,
	0x4e, 0xda, 0x9f, 0x5b, 0xa3, 0x50, 0xb6, 0x85, 0xf0, 0x2b, 0x74, 0x20, 0x52, 0xa9, 0x34, 0x9f,
	0xcb, 0x4d, 0x94, 0x89, 0x84, 0xe0, 0x71, 0x67, 0xb2, 0x3f, 0x23, 0x55, 0x19, 0x9c, 0xd6, 0x1f,
	0xa9, 0x2f, 0x53, 0xf6, 0x10, 0xb7, 0xad, 0x92, 0x45, 0x0b, 0x9e, 0xe5, 0xe4, 0x29, 0xc4, 0xea,
	0x15, 0xc7, 0xed, 0x53, 0x56, 0x03, 0x36, 0xb6, 0x44, 0xe4, 0xf6, 0x1b, 0x48, 0xc8, 0x29, 0x78,
	0xf1, 0x62, 0x6b, 0x14, 0xca, 0xb6, 0x90, 0xad, 0xa6, 0xd2, 0x29, 0x39, 0x83, 0x7b, 0x78, 0xd5,
	0x54, 0x3a, 0xa5, 0xcc, 0x4a, 0xf8, 0x05, 0xda, 0x11, 0x09, 0x39, 0x87, 0x14, 0x1f, 0x54, 0x65,
	0x30, 0xa8, 0x43, 0x4e, 0x28, 0xdb, 0x11, 0x09, 0x14, 0x5b, 0xf3, 0xc8, 0x28, 0x4d, 0x3e, 0x79,
	0xaf, 0xd8, 0x4e, 0xb0, 0xc5, 0x76, 0x2b, 0x1b, 0xdf, 0x4a, 0x25, 0x62, 0x29, 0xb8, 0x26, 0xa4,
	0xfd, 0x61, 0x36, 0x0a, 0x65, 0x5b, 0x08, 0x7f, 0x81, 0x7a, 0xb1, 0x1d, 0x2b, 0xe4, 0x19, 0x44,
	0x78, 0x5c, 0x95, 0xc1, 0x93, 0xfa, 0x70, 0xbb, 0x4d, 0x99, 0x93, 0x2d, 0xb7, 0x02, 0x6e, 0xd4,
	0xe6, 0x56, 0x35, 0x07, 0xbf, 0x36, 0x00, 0xb5, 0xb8, 0xe1, 0xb1, 0x99, 0x27, 0xe4, 0xd3, 0x76,
	0x00, 0x8d, 0x42, 0xd9, 0x16, 0xc2, 0xdf, 0x20, 0x24, 0x64, 0x6e, 0x22, 0x19, 0xf3, 0x79, 0x42,
	0x9e, 0x83, 0xc9, 0x59, 0x55, 0x06, 0x27, 0xcd, 0x78, 0x6d, 0x34, 0xca, 0x3c, 0x70, 0xf4, 0x77,
	0x07, 0xed, 0xda, 0xd9, 0xd6, 0xb2, 0xef, 0xfc, 0x4f, 0x7b, 0xc8, 0xfa, 0x1a, 0xa6, 0xf3, 0xc3,
	0xac, 0xaf, 0x6d, 0xd6, 0xd7, 0x76, 0x5e, 0x15, 0x85, 0x48, 0xea, 0x71, 0xec, 0xcd, 0x2b, 0xbb,
	0x4b, 0x19, 0x88, 0xa3, 0x7f, 0x3b, 0xa8, 0xef, 0x06, 0x51, 0x5d, 0xc4, 0xce, 0x23, 0x45, 0xdc,
	0x70, 0x9d, 0x0b, 0x25, 0x6b, 0x97, 0x5e, 0x11, 0x6b, 0x81, 0xb2, 0x06, 0xb1, 0xce, 0xcd, 0xdd,
	0x9a, 0xbf, 0xef, 0xdc, 0xee, 0x52, 0x06, 0x22, 0xf4, 0x85, 0x92, 0x86, 0x4b, 0xf7, 0x08, 0x3c,
	0xec, 0x0b, 0x27, 0xd8, 0xbe, 0x70, 0xab, 0xed, 0xfc, 0xed, 0x3d, 0x32, 0x7f, 0x47, 0x29, 0xea,
	0xbe, 0x96, 0x1b, 0xdb, 0xb2, 0xb7, 0xfc, 0xae, 0xbe, 0x8c, 0xd7, 0xb2, 0xb7, 0xfc, 0x8e, 0x32,
	0x2b, 0xe1, 0x57, 0xa8, 0xb7, 0x89, 0xb2, 0x82, 0xc3, 0x65, 0x86, 0x17, 0xe7, 0xa1, 0x7b, 0x4a,
	0xc3, 0xe6, 0x29, 0x0d, 0x7f, 0xb3, 0xaa, 0xdf, 0x24, 0x80, 0x53, 0xe6, 0xcc, 0x46, 0x37, 0xa8,
	0x7f, 0xb5, 0x1d, 0x76, 0x1f, 0xd7, 0xd7, 0xec, 0xe7, 0xdf, 0xdf, 0xa4, 0x2a, 0xe4, 0x51, 0x7e,
	0xa7, 0xd6, 0x79, 0x98, 0xa9, 0x38, 0xca, 0xa6, 0x36, 0x2b, 0x3a, 0x8a, 0x4d, 0xee, 0x1e, 0x7f,
	0xcd, 0xd7, 0xea, 0xe5, 0x4a, 0x25, 0x3c, 0xcb, 0xa7, 0x35, 0x38, 0x85, 0xbf, 0xd3, 0xf6, 0x18,
	0x5f, 0xf4, 0xc1, 0xe0, 0xeb, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0xb9, 0x12, 0x74, 0xbe, 0x89,
	0x08, 0x00, 0x00,
}
