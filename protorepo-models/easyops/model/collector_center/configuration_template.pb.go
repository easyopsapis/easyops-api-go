// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: configuration_template.proto

package collector_center

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//采集配置模版
type ConfigurationTemplate struct {
	//
	//ORG
	Org int32 `protobuf:"varint,1,opt,name=org,proto3" json:"org" form:"org"`
	//
	//ID
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id" form:"id"`
	//
	//名称
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name" form:"name"`
	//
	//参数
	Kwargs *types.Value `protobuf:"bytes,4,opt,name=kwargs,proto3" json:"kwargs" form:"kwargs"`
	//
	//超时时间
	Timeout int32 `protobuf:"varint,5,opt,name=timeout,proto3" json:"timeout" form:"timeout"`
	//
	//环境变量
	Env *types.Value `protobuf:"bytes,6,opt,name=env,proto3" json:"env" form:"env"`
	//
	//是否禁用
	Disabled bool `protobuf:"varint,7,opt,name=disabled,proto3" json:"disabled" form:"disabled"`
	//
	//标签
	Labels []string `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels" form:"labels"`
	//
	//是否忽略不符合要求数据
	IgnoreInvalid bool `protobuf:"varint,9,opt,name=ignoreInvalid,proto3" json:"ignoreInvalid" form:"ignoreInvalid"`
	//
	//脚本
	Script *Script `protobuf:"bytes,10,opt,name=script,proto3" json:"script" form:"script"`
	//
	//目标动态范围
	TargetRange *TargetRange `protobuf:"bytes,11,opt,name=targetRange,proto3" json:"targetRange" form:"targetRange"`
	//
	//采集间隔
	Interval int32 `protobuf:"varint,12,opt,name=interval,proto3" json:"interval" form:"interval"`
	//
	//缓存过期次数（时间）
	CacheTtl int32 `protobuf:"varint,13,opt,name=cacheTtl,proto3" json:"cacheTtl" form:"cacheTtl"`
	//
	//执行时间范围（24小时）
	TimeRange string `protobuf:"bytes,14,opt,name=timeRange,proto3" json:"timeRange" form:"timeRange"`
	//
	//采集类型名称
	ClazzName string `protobuf:"bytes,15,opt,name=clazzName,proto3" json:"clazzName" form:"clazzName"`
	//
	//创建者
	Creator string `protobuf:"bytes,16,opt,name=creator,proto3" json:"creator" form:"creator"`
	//
	//修改者
	Modifier string `protobuf:"bytes,17,opt,name=modifier,proto3" json:"modifier" form:"modifier"`
	//
	//创建时间
	Ctime int32 `protobuf:"varint,18,opt,name=ctime,proto3" json:"ctime" form:"ctime"`
	//
	//修改时间
	Mtime                int32    `protobuf:"varint,19,opt,name=mtime,proto3" json:"mtime" form:"mtime"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigurationTemplate) Reset()         { *m = ConfigurationTemplate{} }
func (m *ConfigurationTemplate) String() string { return proto.CompactTextString(m) }
func (*ConfigurationTemplate) ProtoMessage()    {}
func (*ConfigurationTemplate) Descriptor() ([]byte, []int) {
	return fileDescriptor_933fc8a80f9f98b8, []int{0}
}
func (m *ConfigurationTemplate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigurationTemplate.Unmarshal(m, b)
}
func (m *ConfigurationTemplate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigurationTemplate.Marshal(b, m, deterministic)
}
func (m *ConfigurationTemplate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigurationTemplate.Merge(m, src)
}
func (m *ConfigurationTemplate) XXX_Size() int {
	return xxx_messageInfo_ConfigurationTemplate.Size(m)
}
func (m *ConfigurationTemplate) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigurationTemplate.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigurationTemplate proto.InternalMessageInfo

func (m *ConfigurationTemplate) GetOrg() int32 {
	if m != nil {
		return m.Org
	}
	return 0
}

func (m *ConfigurationTemplate) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ConfigurationTemplate) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ConfigurationTemplate) GetKwargs() *types.Value {
	if m != nil {
		return m.Kwargs
	}
	return nil
}

func (m *ConfigurationTemplate) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *ConfigurationTemplate) GetEnv() *types.Value {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *ConfigurationTemplate) GetDisabled() bool {
	if m != nil {
		return m.Disabled
	}
	return false
}

func (m *ConfigurationTemplate) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *ConfigurationTemplate) GetIgnoreInvalid() bool {
	if m != nil {
		return m.IgnoreInvalid
	}
	return false
}

func (m *ConfigurationTemplate) GetScript() *Script {
	if m != nil {
		return m.Script
	}
	return nil
}

func (m *ConfigurationTemplate) GetTargetRange() *TargetRange {
	if m != nil {
		return m.TargetRange
	}
	return nil
}

func (m *ConfigurationTemplate) GetInterval() int32 {
	if m != nil {
		return m.Interval
	}
	return 0
}

func (m *ConfigurationTemplate) GetCacheTtl() int32 {
	if m != nil {
		return m.CacheTtl
	}
	return 0
}

func (m *ConfigurationTemplate) GetTimeRange() string {
	if m != nil {
		return m.TimeRange
	}
	return ""
}

func (m *ConfigurationTemplate) GetClazzName() string {
	if m != nil {
		return m.ClazzName
	}
	return ""
}

func (m *ConfigurationTemplate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *ConfigurationTemplate) GetModifier() string {
	if m != nil {
		return m.Modifier
	}
	return ""
}

func (m *ConfigurationTemplate) GetCtime() int32 {
	if m != nil {
		return m.Ctime
	}
	return 0
}

func (m *ConfigurationTemplate) GetMtime() int32 {
	if m != nil {
		return m.Mtime
	}
	return 0
}

func init() {
	proto.RegisterType((*ConfigurationTemplate)(nil), "collector_center.ConfigurationTemplate")
}

func init() { proto.RegisterFile("configuration_template.proto", fileDescriptor_933fc8a80f9f98b8) }

var fileDescriptor_933fc8a80f9f98b8 = []byte{
	// 723 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0xef, 0x4e, 0xdb, 0x3a,
	0x18, 0xc6, 0x69, 0x0b, 0xa5, 0x75, 0xa1, 0x14, 0xf3, 0x47, 0x3e, 0x88, 0xa3, 0x54, 0x3e, 0x3a,
	0x47, 0x45, 0x3a, 0x4d, 0x8e, 0x7a, 0xfe, 0xe8, 0x0c, 0x69, 0x93, 0x56, 0x3e, 0x6d, 0x9a, 0xf6,
	0xc1, 0x43, 0x43, 0x1a, 0x42, 0xc8, 0x4d, 0xdc, 0x10, 0x91, 0xc4, 0x95, 0xe3, 0x16, 0x0d, 0xc4,
	0xcd, 0xec, 0xc2, 0x82, 0xc4, 0x25, 0xe4, 0x0a, 0x26, 0xdb, 0x49, 0x93, 0x81, 0xb4, 0x4f, 0x7c,
	0x22, 0xf6, 0xf3, 0x7b, 0x5e, 0xfb, 0x7d, 0xfd, 0x50, 0x70, 0xe8, 0xf2, 0x78, 0x1a, 0xf8, 0x73,
	0x41, 0x65, 0xc0, 0xe3, 0x4b, 0xc9, 0xa2, 0x59, 0x48, 0x25, 0xb3, 0x67, 0x82, 0x4b, 0x0e, 0x7b,
	0x2e, 0x0f, 0x43, 0xe6, 0x4a, 0x2e, 0x2e, 0x5d, 0x16, 0x4b, 0x26, 0x0e, 0x86, 0x7e, 0x20, 0xaf,
	0xe6, 0x13, 0xdb, 0xe5, 0x91, 0xe3, 0x73, 0x9f, 0x3b, 0x1a, 0x9c, 0xcc, 0xa7, 0x7a, 0xa5, 0x17,
	0xfa, 0xcb, 0x14, 0x38, 0x38, 0xf3, 0xb9, 0xcd, 0x68, 0xf2, 0x95, 0xcf, 0x12, 0x3b, 0xe4, 0x2e,
	0x0d, 0x1d, 0x97, 0xc7, 0x52, 0x50, 0x57, 0x26, 0xc6, 0x29, 0xd8, 0x8c, 0x0f, 0x23, 0xee, 0xb1,
	0x30, 0x71, 0x72, 0xd0, 0xd1, 0x4b, 0xe7, 0xe9, 0xd1, 0x4e, 0xe2, 0x8a, 0x60, 0x26, 0xf3, 0xc2,
	0x17, 0x2f, 0x58, 0x58, 0x52, 0xe1, 0x33, 0x79, 0x29, 0x68, 0xec, 0xe7, 0x8d, 0x1f, 0xfc, 0x57,
	0x69, 0x33, 0xba, 0x09, 0xe4, 0x35, 0xbf, 0x71, 0x7c, 0x3e, 0xd4, 0xe2, 0x70, 0x41, 0xc3, 0xc0,
	0xa3, 0x92, 0x8b, 0xc4, 0x59, 0x7e, 0xe6, 0xbe, 0x43, 0x9f, 0x73, 0x3f, 0x64, 0xe5, 0x54, 0x12,
	0x29, 0xe6, 0x6e, 0x7e, 0x69, 0xfc, 0xad, 0x05, 0xf6, 0x4e, 0xaa, 0xf3, 0x3e, 0xcd, 0xc7, 0x0d,
	0xfb, 0xa0, 0xc1, 0x85, 0x8f, 0x6a, 0xfd, 0xda, 0x60, 0x6d, 0xdc, 0xcd, 0x52, 0x0b, 0x4c, 0xb9,
	0x88, 0x8e, 0x31, 0x17, 0x3e, 0x26, 0x4a, 0x82, 0x0e, 0xa8, 0x07, 0x1e, 0xaa, 0xf7, 0x6b, 0x83,
	0xf6, 0xd8, 0xca, 0x52, 0xab, 0x6d, 0x80, 0xc0, 0xc3, 0x8f, 0x0f, 0x56, 0x17, 0x6c, 0x9c, 0xff,
	0x35, 0x7c, 0x45, 0x87, 0xd3, 0x8b, 0xbb, 0xd1, 0x3f, 0xf7, 0xa4, 0x1e, 0x78, 0xf0, 0x08, 0xac,
	0xc6, 0x34, 0x62, 0xa8, 0xa1, 0x2d, 0x7b, 0x59, 0x6a, 0x75, 0x8c, 0x45, 0xed, 0x2a, 0x53, 0x7d,
	0xb6, 0x42, 0x34, 0x02, 0xdf, 0x82, 0xe6, 0xf5, 0x0d, 0x15, 0x7e, 0x82, 0x56, 0xfb, 0xb5, 0x41,
	0x67, 0xb4, 0x6f, 0x9b, 0x36, 0xec, 0xa2, 0x0d, 0xfb, 0x33, 0x0d, 0xe7, 0x6c, 0xbc, 0x9d, 0xa5,
	0xd6, 0xa6, 0x29, 0x62, 0x78, 0x4c, 0x72, 0x23, 0xfc, 0x13, 0xac, 0xcb, 0x20, 0x62, 0x7c, 0x2e,
	0xd1, 0x9a, 0x6e, 0x02, 0x66, 0xa9, 0xd5, 0x35, 0x6c, 0x2e, 0x60, 0x52, 0x20, 0xf0, 0x7f, 0xd0,
	0x60, 0xf1, 0x02, 0x35, 0x7f, 0x7a, 0x5a, 0x65, 0x0c, 0x2c, 0x5e, 0x60, 0xa2, 0x2c, 0xd0, 0x01,
	0x2d, 0x2f, 0x48, 0xe8, 0x24, 0x64, 0x1e, 0x5a, 0xef, 0xd7, 0x06, 0xad, 0xf1, 0x4e, 0x96, 0x5a,
	0x5b, 0x06, 0x2b, 0x14, 0x4c, 0x96, 0x10, 0x3c, 0x02, 0xcd, 0x90, 0x4e, 0x58, 0x98, 0xa0, 0x56,
	0xbf, 0x31, 0x68, 0x57, 0x7b, 0x30, 0xfb, 0x98, 0xe4, 0x00, 0x7c, 0x03, 0x36, 0x03, 0x3f, 0xe6,
	0x82, 0xbd, 0x8b, 0xf5, 0xbb, 0xa2, 0xb6, 0x3e, 0x00, 0x65, 0xa9, 0xb5, 0x9b, 0x4f, 0xbb, 0x2a,
	0x63, 0xf2, 0x23, 0x0e, 0x4f, 0x40, 0xd3, 0x64, 0x14, 0x01, 0xdd, 0x18, 0xb2, 0x9f, 0x46, 0xcd,
	0xfe, 0xa4, 0xf5, 0xea, 0x25, 0x8c, 0x03, 0x93, 0xdc, 0x0a, 0xcf, 0x40, 0xc7, 0xe4, 0x91, 0xa8,
	0x38, 0xa2, 0x8e, 0xae, 0xf4, 0xeb, 0xf3, 0x4a, 0xa7, 0x25, 0x34, 0xde, 0xcf, 0x52, 0x0b, 0xe6,
	0xb3, 0x2e, 0xb7, 0x31, 0xa9, 0x56, 0x82, 0xff, 0x82, 0x56, 0xa0, 0x9c, 0x0b, 0x1a, 0xa2, 0x0d,
	0xfd, 0x44, 0xbf, 0x94, 0x93, 0x2b, 0x14, 0x9d, 0x8b, 0xde, 0x0a, 0x59, 0xa2, 0x6a, 0xe0, 0x2e,
	0x75, 0xaf, 0xd8, 0xa9, 0x0c, 0xd1, 0xa6, 0xb6, 0x55, 0x06, 0x5e, 0x28, 0x98, 0x2c, 0x21, 0x78,
	0x0e, 0xda, 0xea, 0x99, 0xcd, 0xf5, 0xbb, 0x3a, 0x7c, 0xaf, 0xb3, 0xd4, 0xea, 0x95, 0x59, 0x30,
	0xb7, 0x7b, 0x7c, 0xb0, 0x7e, 0x07, 0xbf, 0xa9, 0xd8, 0x5e, 0xdc, 0x8d, 0xee, 0x8f, 0x8b, 0x8f,
	0xe1, 0xb3, 0x1d, 0x52, 0xd6, 0x83, 0x23, 0xd0, 0x76, 0x43, 0x7a, 0x7b, 0xfb, 0x51, 0x25, 0x7b,
	0x4b, 0x17, 0xdf, 0x2d, 0x8b, 0x2f, 0x25, 0x4c, 0x4a, 0x4c, 0x45, 0xd3, 0x15, 0x4c, 0xfd, 0x93,
	0xa2, 0x9e, 0x76, 0x54, 0xa2, 0x99, 0x0b, 0x98, 0x14, 0x88, 0xea, 0x37, 0xe2, 0x5e, 0x30, 0x0d,
	0x98, 0x40, 0xdb, 0x1a, 0xaf, 0xf4, 0x5b, 0x28, 0x98, 0x2c, 0x21, 0xf8, 0x07, 0x58, 0x73, 0xd5,
	0x05, 0x11, 0xd4, 0xd3, 0xe9, 0x65, 0xa9, 0xb5, 0x91, 0x17, 0x57, 0xdb, 0x98, 0x18, 0x59, 0x71,
	0x91, 0xe6, 0x76, 0x9e, 0x72, 0x51, 0xce, 0xe9, 0xbf, 0xe3, 0x0f, 0x5f, 0xde, 0xbf, 0xdc, 0x6f,
	0xdb, 0xa4, 0xa9, 0x0d, 0x7f, 0x7f, 0x0f, 0x00, 0x00, 0xff, 0xff, 0xb7, 0x91, 0x23, 0xd7, 0xe8,
	0x05, 0x00, 0x00,
}
