// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: file_info.proto

package file_repository

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

//
//归档文件信息
type FileInfo struct {
	//
	//文件名
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name" form:"name"`
	//
	//文件类型
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type" form:"type"`
	//
	//文件大小
	Size_ int64 `protobuf:"varint,3,opt,name=size,proto3" json:"size" form:"size"`
	//
	//文件权限
	Perm string `protobuf:"bytes,4,opt,name=perm,proto3" json:"perm" form:"perm"`
	//
	//文件修改时间
	Mtime string `protobuf:"bytes,5,opt,name=mtime,proto3" json:"mtime" form:"mtime"`
	//
	//文件创建时间
	Ctime string `protobuf:"bytes,6,opt,name=ctime,proto3" json:"ctime" form:"ctime"`
	//
	//如果type=link，link为链接地址
	Link string `protobuf:"bytes,7,opt,name=link,proto3" json:"link" form:"link"`
	//
	//参数path的编码格式
	Encoding string `protobuf:"bytes,8,opt,name=encoding,proto3" json:"encoding" form:"encoding"`
	//
	//文件hash
	Md5                  string   `protobuf:"bytes,9,opt,name=md5,proto3" json:"md5" form:"md5"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileInfo) Reset()         { *m = FileInfo{} }
func (m *FileInfo) String() string { return proto.CompactTextString(m) }
func (*FileInfo) ProtoMessage()    {}
func (*FileInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b76802e3aad61f5, []int{0}
}
func (m *FileInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileInfo.Unmarshal(m, b)
}
func (m *FileInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileInfo.Marshal(b, m, deterministic)
}
func (m *FileInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileInfo.Merge(m, src)
}
func (m *FileInfo) XXX_Size() int {
	return xxx_messageInfo_FileInfo.Size(m)
}
func (m *FileInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FileInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FileInfo proto.InternalMessageInfo

func (m *FileInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FileInfo) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *FileInfo) GetSize_() int64 {
	if m != nil {
		return m.Size_
	}
	return 0
}

func (m *FileInfo) GetPerm() string {
	if m != nil {
		return m.Perm
	}
	return ""
}

func (m *FileInfo) GetMtime() string {
	if m != nil {
		return m.Mtime
	}
	return ""
}

func (m *FileInfo) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

func (m *FileInfo) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *FileInfo) GetEncoding() string {
	if m != nil {
		return m.Encoding
	}
	return ""
}

func (m *FileInfo) GetMd5() string {
	if m != nil {
		return m.Md5
	}
	return ""
}

func init() {
	proto.RegisterType((*FileInfo)(nil), "file_repository.FileInfo")
}

func init() { proto.RegisterFile("file_info.proto", fileDescriptor_0b76802e3aad61f5) }

var fileDescriptor_0b76802e3aad61f5 = []byte{
	// 506 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x93, 0x41, 0x6e, 0xd3, 0x40,
	0x14, 0x86, 0x65, 0x9a, 0x94, 0x74, 0xa8, 0x88, 0x70, 0x37, 0x56, 0x37, 0x09, 0xa6, 0x48, 0x63,
	0xaa, 0xb1, 0x9d, 0x98, 0x50, 0x35, 0x1b, 0x8b, 0x2e, 0x2a, 0x55, 0xec, 0x2c, 0x56, 0x1d, 0x1c,
	0xe4, 0xd8, 0x63, 0x33, 0xaa, 0xed, 0xb1, 0x6c, 0x97, 0x2a, 0x34, 0xb9, 0x10, 0x12, 0x97, 0xe0,
	0x16, 0x6c, 0x82, 0xc4, 0x11, 0xb2, 0x61, 0x8b, 0xe6, 0xb9, 0x69, 0xa3, 0xc0, 0x05, 0x58, 0xcd,
	0xbc, 0xff, 0xff, 0x7e, 0xcb, 0x6f, 0xf4, 0x1e, 0xea, 0xc6, 0x3c, 0x65, 0x1f, 0x79, 0x1e, 0x0b,
	0xb3, 0x28, 0x45, 0x2d, 0xd4, 0x46, 0x28, 0x59, 0x21, 0x2a, 0x5e, 0x8b, 0x72, 0x76, 0x48, 0x12,
	0x5e, 0x7f, 0xba, 0x9e, 0x9a, 0xa1, 0xc8, 0xac, 0x44, 0x24, 0xc2, 0x02, 0x6e, 0x7a, 0x1d, 0x43,
	0x05, 0x05, 0xdc, 0x9a, 0xfc, 0xe1, 0x9b, 0x0d, 0x3c, 0xbb, 0xe1, 0xf5, 0x95, 0xb8, 0xb1, 0x12,
	0x41, 0xc0, 0x24, 0x9f, 0x83, 0x94, 0x47, 0x41, 0x2d, 0xca, 0xca, 0xba, 0xbf, 0x36, 0x39, 0xfd,
	0x77, 0x1b, 0x75, 0xce, 0x79, 0xca, 0x2e, 0xf2, 0x58, 0xa8, 0x2f, 0x50, 0x2b, 0x0f, 0x32, 0xa6,
	0x29, 0x7d, 0x05, 0xef, 0x9d, 0x75, 0x57, 0xcb, 0xde, 0x93, 0x58, 0x94, 0xd9, 0x58, 0x97, 0xaa,
	0xee, 0x81, 0x29, 0xa1, 0x7a, 0x56, 0x30, 0xed, 0xd1, 0x36, 0x24, 0x55, 0xdd, 0x03, 0x53, 0x42,
	0x15, 0xff, 0xc2, 0xb4, 0x9d, 0xbe, 0x82, 0x77, 0x36, 0x21, 0xa9, 0xea, 0x1e, 0x98, 0xea, 0x08,
	0xb5, 0x0a, 0x56, 0x66, 0x5a, 0x0b, 0xbe, 0xf4, 0xfc, 0x01, 0x92, 0xaa, 0xfe, 0xeb, 0x67, 0xef,
	0x29, 0xda, 0x9f, 0x60, 0x9b, 0xda, 0xe4, 0xc4, 0xbf, 0x75, 0x16, 0x86, 0x07, 0xb8, 0xfa, 0x43,
	0x41, 0xed, 0xac, 0xe6, 0x19, 0xd3, 0xda, 0x10, 0xfc, 0xae, 0xac, 0x96, 0xbd, 0xfd, 0x26, 0x09,
	0xba, 0x8c, 0x7e, 0x53, 0xd0, 0x57, 0x65, 0x82, 0xb1, 0x3b, 0xa6, 0x03, 0x72, 0xea, 0x53, 0x9b,
	0x9c, 0xfa, 0xaf, 0x0c, 0x17, 0xce, 0xdb, 0xd7, 0x0b, 0x83, 0xe0, 0x01, 0xb5, 0xc9, 0xd0, 0x9f,
	0xdb, 0xe0, 0x1b, 0x04, 0x3b, 0xd4, 0x26, 0x83, 0x75, 0x3d, 0xa7, 0x03, 0x32, 0x6c, 0x52, 0x06,
	0x7d, 0xdf, 0xf7, 0xf1, 0x90, 0xda, 0xc4, 0xf1, 0xe7, 0xc0, 0x34, 0xf2, 0x18, 0x53, 0x9b, 0x8c,
	0xd6, 0xc5, 0xc3, 0x1d, 0x7f, 0x30, 0xe1, 0x3c, 0x36, 0x5c, 0x7c, 0x39, 0xa7, 0xc7, 0xc4, 0xc7,
	0xee, 0xf8, 0x1f, 0xf1, 0x8d, 0xb4, 0x7b, 0xe4, 0x35, 0x1d, 0x41, 0x6f, 0x21, 0xf4, 0xb6, 0xfb,
	0x57, 0x6f, 0xe1, 0x7f, 0xdb, 0x1b, 0xfc, 0xb9, 0x9c, 0x89, 0x94, 0xe7, 0x57, 0xda, 0xe3, 0xed,
	0xc1, 0x91, 0xaa, 0xee, 0x81, 0xa9, 0x5a, 0xa8, 0xc3, 0xf2, 0x50, 0x44, 0x3c, 0x4f, 0xb4, 0x0e,
	0x80, 0x07, 0xab, 0x65, 0xaf, 0xdb, 0x80, 0x6b, 0x47, 0xf7, 0xee, 0x21, 0xf5, 0x04, 0xed, 0x64,
	0xd1, 0x48, 0xdb, 0x03, 0xf6, 0xe5, 0x6a, 0xd9, 0x43, 0x77, 0x93, 0x10, 0x8d, 0xe4, 0x5b, 0x1d,
	0xa0, 0x67, 0x13, 0x1a, 0x90, 0xf8, 0x2d, 0x39, 0x87, 0xe7, 0x71, 0x86, 0x8b, 0x23, 0x4f, 0x26,
	0xce, 0xde, 0x5d, 0x5e, 0x24, 0xc2, 0x64, 0x41, 0x35, 0x13, 0x45, 0x65, 0xa6, 0x22, 0x0c, 0x52,
	0x2b, 0x14, 0x79, 0x5d, 0x06, 0x61, 0x5d, 0x35, 0xdb, 0x26, 0xd7, 0x91, 0x64, 0x22, 0x62, 0x69,
	0x65, 0xdd, 0x81, 0x16, 0x94, 0xd6, 0xd6, 0xb6, 0x4e, 0x77, 0x81, 0x77, 0xfe, 0x04, 0x00, 0x00,
	0xff, 0xff, 0x42, 0xd1, 0x29, 0x0b, 0xd8, 0x03, 0x00, 0x00,
}
