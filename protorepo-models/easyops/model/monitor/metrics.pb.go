// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: metrics.proto

package monitor

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//采集指标配置
type Metrics struct {
	//
	//保持策略
	RetentionPolicy string `protobuf:"bytes,1,opt,name=retention_policy,json=retentionPolicy,proto3" json:"retention_policy" form:"retention_policy"`
	//
	//指标描述
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description" form:"description"`
	//
	//数据类型
	DataType string `protobuf:"bytes,3,opt,name=data_type,json=dataType,proto3" json:"data_type" form:"data_type"`
	//
	//数据名称
	DataName string `protobuf:"bytes,4,opt,name=data_name,json=dataName,proto3" json:"data_name" form:"data_name"`
	//
	//CUSTOM
	Custom bool `protobuf:"varint,5,opt,name=custom,proto3" json:"custom" form:"custom"`
	//
	//指标配置版本
	Version float32 `protobuf:"fixed32,6,opt,name=version,proto3" json:"version" form:"version"`
	//
	//格式
	Formats []*Metrics_Formats `protobuf:"bytes,7,rep,name=formats,proto3" json:"formats" form:"formats"`
	//
	//ORG
	Org int32 `protobuf:"varint,8,opt,name=org,proto3" json:"org" form:"org"`
	//
	//ID
	XId string `protobuf:"bytes,9,opt,name=_id,json=Id,proto3" json:"_id" form:"_id"`
	//
	//创建者
	Creator string `protobuf:"bytes,10,opt,name=creator,proto3" json:"creator" form:"creator"`
	//
	//修改者
	Modifier string `protobuf:"bytes,11,opt,name=modifier,proto3" json:"modifier" form:"modifier"`
	//
	//创建时间
	Ctime string `protobuf:"bytes,12,opt,name=ctime,proto3" json:"ctime" form:"ctime"`
	//
	//修改时间
	Mtime                string   `protobuf:"bytes,13,opt,name=mtime,proto3" json:"mtime" form:"mtime"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Metrics) Reset()         { *m = Metrics{} }
func (m *Metrics) String() string { return proto.CompactTextString(m) }
func (*Metrics) ProtoMessage()    {}
func (*Metrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_6039342a2ba47b72, []int{0}
}
func (m *Metrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metrics.Unmarshal(m, b)
}
func (m *Metrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metrics.Marshal(b, m, deterministic)
}
func (m *Metrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metrics.Merge(m, src)
}
func (m *Metrics) XXX_Size() int {
	return xxx_messageInfo_Metrics.Size(m)
}
func (m *Metrics) XXX_DiscardUnknown() {
	xxx_messageInfo_Metrics.DiscardUnknown(m)
}

var xxx_messageInfo_Metrics proto.InternalMessageInfo

func (m *Metrics) GetRetentionPolicy() string {
	if m != nil {
		return m.RetentionPolicy
	}
	return ""
}

func (m *Metrics) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Metrics) GetDataType() string {
	if m != nil {
		return m.DataType
	}
	return ""
}

func (m *Metrics) GetDataName() string {
	if m != nil {
		return m.DataName
	}
	return ""
}

func (m *Metrics) GetCustom() bool {
	if m != nil {
		return m.Custom
	}
	return false
}

func (m *Metrics) GetVersion() float32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Metrics) GetFormats() []*Metrics_Formats {
	if m != nil {
		return m.Formats
	}
	return nil
}

func (m *Metrics) GetOrg() int32 {
	if m != nil {
		return m.Org
	}
	return 0
}

func (m *Metrics) GetXId() string {
	if m != nil {
		return m.XId
	}
	return ""
}

func (m *Metrics) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *Metrics) GetModifier() string {
	if m != nil {
		return m.Modifier
	}
	return ""
}

func (m *Metrics) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

func (m *Metrics) GetMtime() string {
	if m != nil {
		return m.Mtime
	}
	return ""
}

type Metrics_Formats struct {
	//
	//配置ID
	ConfigId string `protobuf:"bytes,1,opt,name=config_id,json=configId,proto3" json:"config_id" form:"config_id"`
	//
	//最大int
	MaxIntCol int32 `protobuf:"varint,2,opt,name=max_int_col,json=maxIntCol,proto3" json:"max_int_col" form:"max_int_col"`
	//
	//最大string
	MaxStringCol int32 `protobuf:"varint,3,opt,name=max_string_col,json=maxStringCol,proto3" json:"max_string_col" form:"max_string_col"`
	//
	//最大int
	MaxTextCol int32 `protobuf:"varint,4,opt,name=max_text_col,json=maxTextCol,proto3" json:"max_text_col" form:"max_text_col"`
	//
	//最大double
	MaxDoubleCol int32 `protobuf:"varint,5,opt,name=max_double_col,json=maxDoubleCol,proto3" json:"max_double_col" form:"max_double_col"`
	//
	//最大dim
	MaxDimCol int32 `protobuf:"varint,6,opt,name=max_dim_col,json=maxDimCol,proto3" json:"max_dim_col" form:"max_dim_col"`
	//
	//table
	Table string `protobuf:"bytes,7,opt,name=table,proto3" json:"table" form:"table"`
	//
	//aggregation
	Aggregation bool `protobuf:"varint,8,opt,name=aggregation,proto3" json:"aggregation" form:"aggregation"`
	//
	//字段
	Fields               []*Metrics_Formats_Fields `protobuf:"bytes,9,rep,name=fields,proto3" json:"fields" form:"fields"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *Metrics_Formats) Reset()         { *m = Metrics_Formats{} }
func (m *Metrics_Formats) String() string { return proto.CompactTextString(m) }
func (*Metrics_Formats) ProtoMessage()    {}
func (*Metrics_Formats) Descriptor() ([]byte, []int) {
	return fileDescriptor_6039342a2ba47b72, []int{0, 0}
}
func (m *Metrics_Formats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metrics_Formats.Unmarshal(m, b)
}
func (m *Metrics_Formats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metrics_Formats.Marshal(b, m, deterministic)
}
func (m *Metrics_Formats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metrics_Formats.Merge(m, src)
}
func (m *Metrics_Formats) XXX_Size() int {
	return xxx_messageInfo_Metrics_Formats.Size(m)
}
func (m *Metrics_Formats) XXX_DiscardUnknown() {
	xxx_messageInfo_Metrics_Formats.DiscardUnknown(m)
}

var xxx_messageInfo_Metrics_Formats proto.InternalMessageInfo

func (m *Metrics_Formats) GetConfigId() string {
	if m != nil {
		return m.ConfigId
	}
	return ""
}

func (m *Metrics_Formats) GetMaxIntCol() int32 {
	if m != nil {
		return m.MaxIntCol
	}
	return 0
}

func (m *Metrics_Formats) GetMaxStringCol() int32 {
	if m != nil {
		return m.MaxStringCol
	}
	return 0
}

func (m *Metrics_Formats) GetMaxTextCol() int32 {
	if m != nil {
		return m.MaxTextCol
	}
	return 0
}

func (m *Metrics_Formats) GetMaxDoubleCol() int32 {
	if m != nil {
		return m.MaxDoubleCol
	}
	return 0
}

func (m *Metrics_Formats) GetMaxDimCol() int32 {
	if m != nil {
		return m.MaxDimCol
	}
	return 0
}

func (m *Metrics_Formats) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

func (m *Metrics_Formats) GetAggregation() bool {
	if m != nil {
		return m.Aggregation
	}
	return false
}

func (m *Metrics_Formats) GetFields() []*Metrics_Formats_Fields {
	if m != nil {
		return m.Fields
	}
	return nil
}

type Metrics_Formats_Fields struct {
	//
	//字段类型
	FieldType string `protobuf:"bytes,1,opt,name=field_type,json=fieldType,proto3" json:"field_type" form:"field_type"`
	//
	//字段描述
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description" form:"description"`
	//
	//字段名称
	FieldName string `protobuf:"bytes,3,opt,name=field_name,json=fieldName,proto3" json:"field_name" form:"field_name"`
	//
	//字段值类型
	FieldValueType string `protobuf:"bytes,4,opt,name=field_value_type,json=fieldValueType,proto3" json:"field_value_type" form:"field_value_type"`
	//
	//状态百分比
	StatPeriod int32 `protobuf:"varint,5,opt,name=stat_period,json=statPeriod,proto3" json:"stat_period" form:"stat_period"`
	//
	//状态类型
	StatType string `protobuf:"bytes,6,opt,name=stat_type,json=statType,proto3" json:"stat_type" form:"stat_type"`
	//
	//单位
	Unit string `protobuf:"bytes,7,opt,name=unit,proto3" json:"unit" form:"unit"`
	//
	//列名
	ColumnName           string   `protobuf:"bytes,8,opt,name=column_name,json=columnName,proto3" json:"column_name" form:"column_name"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Metrics_Formats_Fields) Reset()         { *m = Metrics_Formats_Fields{} }
func (m *Metrics_Formats_Fields) String() string { return proto.CompactTextString(m) }
func (*Metrics_Formats_Fields) ProtoMessage()    {}
func (*Metrics_Formats_Fields) Descriptor() ([]byte, []int) {
	return fileDescriptor_6039342a2ba47b72, []int{0, 0, 0}
}
func (m *Metrics_Formats_Fields) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metrics_Formats_Fields.Unmarshal(m, b)
}
func (m *Metrics_Formats_Fields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metrics_Formats_Fields.Marshal(b, m, deterministic)
}
func (m *Metrics_Formats_Fields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metrics_Formats_Fields.Merge(m, src)
}
func (m *Metrics_Formats_Fields) XXX_Size() int {
	return xxx_messageInfo_Metrics_Formats_Fields.Size(m)
}
func (m *Metrics_Formats_Fields) XXX_DiscardUnknown() {
	xxx_messageInfo_Metrics_Formats_Fields.DiscardUnknown(m)
}

var xxx_messageInfo_Metrics_Formats_Fields proto.InternalMessageInfo

func (m *Metrics_Formats_Fields) GetFieldType() string {
	if m != nil {
		return m.FieldType
	}
	return ""
}

func (m *Metrics_Formats_Fields) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Metrics_Formats_Fields) GetFieldName() string {
	if m != nil {
		return m.FieldName
	}
	return ""
}

func (m *Metrics_Formats_Fields) GetFieldValueType() string {
	if m != nil {
		return m.FieldValueType
	}
	return ""
}

func (m *Metrics_Formats_Fields) GetStatPeriod() int32 {
	if m != nil {
		return m.StatPeriod
	}
	return 0
}

func (m *Metrics_Formats_Fields) GetStatType() string {
	if m != nil {
		return m.StatType
	}
	return ""
}

func (m *Metrics_Formats_Fields) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *Metrics_Formats_Fields) GetColumnName() string {
	if m != nil {
		return m.ColumnName
	}
	return ""
}

func init() {
	proto.RegisterType((*Metrics)(nil), "monitor.Metrics")
	proto.RegisterType((*Metrics_Formats)(nil), "monitor.Metrics.Formats")
	proto.RegisterType((*Metrics_Formats_Fields)(nil), "monitor.Metrics.Formats.Fields")
}

func init() { proto.RegisterFile("metrics.proto", fileDescriptor_6039342a2ba47b72) }

var fileDescriptor_6039342a2ba47b72 = []byte{
	// 865 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0x5f, 0x8f, 0x1b, 0x35,
	0x10, 0x57, 0x2e, 0x97, 0x7f, 0x4e, 0x2e, 0x77, 0x75, 0x29, 0x5d, 0x8e, 0x87, 0x8d, 0x8c, 0x54,
	0x05, 0x89, 0x64, 0x69, 0xa9, 0x0a, 0xe5, 0x05, 0x91, 0x96, 0x93, 0x0e, 0x09, 0x54, 0x99, 0x8a,
	0x07, 0x10, 0x8a, 0x9c, 0x5d, 0x67, 0xb1, 0x58, 0xaf, 0x23, 0xaf, 0x73, 0xcd, 0x09, 0xf1, 0xd9,
	0xf8, 0x1c, 0xbc, 0x2c, 0x12, 0x1f, 0x61, 0x3f, 0x01, 0xf2, 0xd8, 0x49, 0x56, 0xab, 0xf0, 0xc2,
	0xd3, 0x7a, 0xe6, 0xf7, 0xfb, 0xcd, 0x78, 0x6c, 0xcf, 0x2c, 0xba, 0x90, 0xdc, 0x68, 0x11, 0x17,
	0xf3, 0x8d, 0x56, 0x46, 0xe1, 0x9e, 0x54, 0xb9, 0x30, 0x4a, 0x5f, 0xcf, 0x52, 0x61, 0x7e, 0xdd,
	0xae, 0xe6, 0xb1, 0x92, 0x51, 0xaa, 0x52, 0x15, 0x01, 0xbe, 0xda, 0xae, 0xc1, 0x02, 0x03, 0x56,
	0x4e, 0x77, 0xfd, 0xa2, 0x46, 0x97, 0xef, 0x84, 0xf9, 0x4d, 0xbd, 0x8b, 0x52, 0x35, 0x03, 0x70,
	0x76, 0xc7, 0x32, 0x91, 0x30, 0xa3, 0x74, 0x11, 0x1d, 0x96, 0x4e, 0x47, 0xaa, 0x11, 0xea, 0x7d,
	0xe7, 0x76, 0x80, 0x6f, 0xd0, 0x95, 0xe6, 0x86, 0xe7, 0x46, 0xa8, 0x7c, 0xb9, 0x51, 0x99, 0x88,
	0xef, 0x83, 0xd6, 0xa4, 0x35, 0x1d, 0x2c, 0x3e, 0xac, 0xca, 0xf0, 0xf1, 0x5a, 0x69, 0xf9, 0x25,
	0x69, 0x32, 0x08, 0xbd, 0x3c, 0xb8, 0xde, 0x80, 0x07, 0x7f, 0x81, 0x86, 0x09, 0x2f, 0x62, 0x2d,
	0x36, 0xd6, 0x19, 0x9c, 0x41, 0x88, 0xf7, 0xab, 0x32, 0xc4, 0x2e, 0x44, 0x0d, 0x24, 0xb4, 0x4e,
	0xc5, 0x4f, 0xd1, 0x20, 0x61, 0x86, 0x2d, 0xcd, 0xfd, 0x86, 0x07, 0x6d, 0xd0, 0xbd, 0x57, 0x95,
	0xe1, 0x95, 0xd7, 0xed, 0x21, 0x42, 0xfb, 0x76, 0xfd, 0xf6, 0x7e, 0xc3, 0x0f, 0x92, 0x9c, 0x49,
	0x1e, 0x9c, 0x9f, 0x94, 0x58, 0xc8, 0x4b, 0xbe, 0x67, 0x92, 0xe3, 0x8f, 0x51, 0x37, 0xde, 0x16,
	0x46, 0xc9, 0xa0, 0x33, 0x69, 0x4d, 0xfb, 0x8b, 0x07, 0x55, 0x19, 0x5e, 0x38, 0xbe, 0xf3, 0x13,
	0xea, 0x09, 0xf8, 0x13, 0xd4, 0xbb, 0xe3, 0xba, 0xb0, 0x65, 0x74, 0x27, 0xad, 0xe9, 0xd9, 0x02,
	0x57, 0x65, 0x38, 0x76, 0x5c, 0x0f, 0x10, 0xba, 0xa7, 0xe0, 0x1b, 0xd4, 0xb3, 0x10, 0x33, 0x45,
	0xd0, 0x9b, 0xb4, 0xa7, 0xc3, 0x67, 0xc1, 0xdc, 0x5f, 0xe7, 0xdc, 0x9f, 0xf1, 0xfc, 0xc6, 0xe1,
	0xf5, 0x38, 0x5e, 0x42, 0xe8, 0x5e, 0x8c, 0x27, 0xa8, 0xad, 0x74, 0x1a, 0xf4, 0x27, 0xad, 0x69,
	0x67, 0x31, 0xae, 0xca, 0x10, 0x39, 0xa6, 0xd2, 0x29, 0xa1, 0x16, 0xc2, 0x4f, 0x51, 0x7b, 0x29,
	0x92, 0x60, 0x00, 0xf5, 0x4e, 0x8e, 0x8c, 0xa5, 0x48, 0xc8, 0x3f, 0x7f, 0x87, 0x63, 0x34, 0xfa,
	0xf9, 0xd3, 0xd9, 0x4b, 0x36, 0x5b, 0xff, 0xf2, 0xfb, 0xb3, 0xe7, 0x7f, 0xd0, 0xb3, 0xdb, 0xc4,
	0x96, 0x12, 0x6b, 0x6e, 0xaf, 0x3e, 0x40, 0x20, 0xab, 0x6d, 0xc1, 0x03, 0x84, 0xee, 0x29, 0x38,
	0x42, 0x7d, 0xa9, 0x12, 0xb1, 0x16, 0x5c, 0x07, 0x43, 0xa0, 0x3f, 0xac, 0xca, 0xf0, 0xd2, 0xd1,
	0xf7, 0x08, 0xa1, 0x07, 0x12, 0x7e, 0x82, 0x3a, 0xb1, 0x11, 0x92, 0x07, 0x23, 0x60, 0x5f, 0x55,
	0x65, 0x38, 0xf2, 0xc1, 0xad, 0x9b, 0x50, 0x07, 0x5b, 0x9e, 0x04, 0xde, 0x45, 0x93, 0x27, 0x3d,
	0x0f, 0xbe, 0xd7, 0x7f, 0xf5, 0x50, 0xcf, 0x1f, 0x96, 0xbd, 0xe3, 0x58, 0xe5, 0x6b, 0x91, 0xda,
	0x9a, 0x5b, 0xcd, 0x3b, 0x3e, 0x40, 0x84, 0xf6, 0xdd, 0xfa, 0x36, 0xc1, 0x2f, 0xd0, 0x50, 0xb2,
	0xdd, 0x52, 0xe4, 0x66, 0x19, 0xab, 0x0c, 0xde, 0x60, 0xa7, 0xfe, 0x06, 0x6b, 0x20, 0xa1, 0x03,
	0xc9, 0x76, 0xb7, 0xb9, 0x79, 0xa5, 0x32, 0xfc, 0x15, 0x1a, 0x5b, 0xa8, 0x30, 0x5a, 0xe4, 0x29,
	0x48, 0xdb, 0x20, 0xfd, 0xa0, 0x2a, 0xc3, 0x47, 0x47, 0xe9, 0x11, 0x27, 0x74, 0x24, 0xd9, 0xee,
	0x07, 0xb0, 0x6d, 0x80, 0x97, 0xc8, 0xda, 0x4b, 0xc3, 0x77, 0x2e, 0xf3, 0x39, 0xc8, 0x1f, 0x57,
	0x65, 0xf8, 0xf0, 0x28, 0xdf, 0xa3, 0x84, 0x22, 0xc9, 0x76, 0x6f, 0xf9, 0xae, 0x9e, 0x3b, 0x51,
	0xdb, 0x55, 0xc6, 0x41, 0xdc, 0x39, 0x95, 0xfb, 0x88, 0xbb, 0xdc, 0xaf, 0xc1, 0xb6, 0x01, 0x7c,
	0xd1, 0x89, 0x90, 0xa0, 0xee, 0x9e, 0x2a, 0xda, 0x83, 0xae, 0xe8, 0xd7, 0x42, 0x5a, 0xdd, 0x13,
	0xd4, 0x31, 0x6c, 0x95, 0xf1, 0xa0, 0xd7, 0xbc, 0x13, 0x70, 0x13, 0xea, 0x60, 0xdb, 0xd8, 0x2c,
	0x4d, 0x35, 0x4f, 0x19, 0x34, 0x76, 0x1f, 0xba, 0xa7, 0x16, 0xbf, 0x06, 0x12, 0x5a, 0xa7, 0xe2,
	0x6f, 0x51, 0x77, 0x2d, 0x78, 0x96, 0x14, 0xc1, 0x00, 0x1a, 0x23, 0xfc, 0xaf, 0xc6, 0x98, 0xdf,
	0x00, 0xad, 0xde, 0x93, 0x4e, 0x48, 0xa8, 0x8f, 0x70, 0xfd, 0x67, 0x1b, 0x75, 0x1d, 0x0b, 0x3f,
	0x47, 0x08, 0x9c, 0x6e, 0x60, 0xb8, 0x97, 0xf1, 0xa8, 0x2a, 0xc3, 0x07, 0x35, 0xa5, 0x9f, 0x18,
	0x03, 0x30, 0x60, 0x64, 0xfc, 0xff, 0xf9, 0x74, 0xc8, 0x07, 0xd3, 0xa6, 0x7d, 0x3a, 0x9f, 0x1b,
	0x37, 0x2e, 0x1f, 0xcc, 0x9b, 0x6f, 0xd0, 0x95, 0x43, 0xee, 0x58, 0xb6, 0xe5, 0x6e, 0xaf, 0xe7,
	0xcd, 0xb9, 0xda, 0x64, 0x10, 0x3a, 0x06, 0xd7, 0x8f, 0xd6, 0x03, 0xdb, 0xfe, 0x1c, 0x0d, 0x0b,
	0xc3, 0xcc, 0x72, 0xc3, 0xb5, 0x50, 0x89, 0x7f, 0x1b, 0xb5, 0x6d, 0xd7, 0x40, 0x42, 0x91, 0xb5,
	0xde, 0x80, 0x61, 0xdb, 0x07, 0x30, 0x48, 0xdc, 0x6d, 0xb6, 0xcf, 0x01, 0x22, 0xb4, 0x6f, 0xd7,
	0x90, 0xeb, 0x23, 0x74, 0xbe, 0xcd, 0x85, 0xf1, 0x0f, 0xe2, 0xb2, 0x2a, 0xc3, 0xa1, 0x63, 0x5b,
	0x2f, 0xa1, 0x00, 0xda, 0x0d, 0xc5, 0x2a, 0xdb, 0xca, 0xdc, 0x1d, 0x47, 0xbf, 0x79, 0x8e, 0x35,
	0x90, 0x50, 0xe4, 0x2c, 0x7b, 0x20, 0x8b, 0x57, 0x3f, 0x7d, 0x9d, 0xaa, 0x39, 0x67, 0xc5, 0xbd,
	0xda, 0x14, 0xf3, 0x4c, 0xc5, 0x2c, 0x8b, 0x62, 0x95, 0x1b, 0xcd, 0x62, 0x53, 0xb8, 0x1f, 0x9d,
	0xe6, 0x1b, 0x35, 0x93, 0x2a, 0xe1, 0x59, 0x11, 0x79, 0x62, 0x04, 0x66, 0xe4, 0x1f, 0xce, 0xaa,
	0x0b, 0xbc, 0xcf, 0xfe, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x52, 0xb6, 0x1a, 0x4b, 0x41, 0x07, 0x00,
	0x00,
}
