// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: alert_rule.proto

package monitor

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	math "math"
	regexp "regexp"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

var _regex_AlertRule_Id = regexp.MustCompile(`^[0-9a-fA-F]{24}$`)
var _regex_AlertRule_RuleId = regexp.MustCompile(`^[0-9a-fA-F]{24}$`)

func (this *AlertRule) Validate() error {
	if !_regex_AlertRule_Id.MatchString(this.Id) {
		return github_com_mwitkow_go_proto_validators.FieldError("Id", fmt.Errorf(`value '%v' must be a string conforming to regex "^[0-9a-fA-F]{24}$"`, this.Id))
	}
	if !_regex_AlertRule_RuleId.MatchString(this.RuleId) {
		return github_com_mwitkow_go_proto_validators.FieldError("RuleId", fmt.Errorf(`value '%v' must be a string conforming to regex "^[0-9a-fA-F]{24}$"`, this.RuleId))
	}
	for _, item := range this.AlertDims {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("AlertDims", err)
			}
		}
	}
	if this.AlertConditions != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.AlertConditions); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("AlertConditions", err)
		}
	}
	for _, item := range this.Actions {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Actions", err)
			}
		}
	}
	if this.Templates != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Templates); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Templates", err)
		}
	}
	return nil
}
func (this *AlertRule_AlertDims) Validate() error {
	for _, item := range this.Values {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Values", err)
			}
		}
	}
	return nil
}
func (this *AlertRule_AlertDims_Values) Validate() error {
	return nil
}
func (this *AlertRule_Actions) Validate() error {
	if this.Condition != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Condition); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Condition", err)
		}
	}
	return nil
}
func (this *AlertRule_Actions_Condition) Validate() error {
	return nil
}
func (this *AlertRule_Templates) Validate() error {
	return nil
}
