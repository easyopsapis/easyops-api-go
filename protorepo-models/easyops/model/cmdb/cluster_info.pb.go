// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cluster_info.proto

package cmdb

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

//
//集群
type ClusterInfo struct {
	//
	//集群Id
	ClusterId string `protobuf:"bytes,1,opt,name=clusterId,proto3" json:"clusterId" form:"clusterId"`
	//
	//类型
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type" form:"type"`
	//
	//名称
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name" form:"name"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterInfo) Reset()         { *m = ClusterInfo{} }
func (m *ClusterInfo) String() string { return proto.CompactTextString(m) }
func (*ClusterInfo) ProtoMessage()    {}
func (*ClusterInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4adc548271830d3, []int{0}
}
func (m *ClusterInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterInfo.Unmarshal(m, b)
}
func (m *ClusterInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterInfo.Marshal(b, m, deterministic)
}
func (m *ClusterInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterInfo.Merge(m, src)
}
func (m *ClusterInfo) XXX_Size() int {
	return xxx_messageInfo_ClusterInfo.Size(m)
}
func (m *ClusterInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterInfo proto.InternalMessageInfo

func (m *ClusterInfo) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *ClusterInfo) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ClusterInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*ClusterInfo)(nil), "cmdb.ClusterInfo")
}

func init() { proto.RegisterFile("cluster_info.proto", fileDescriptor_d4adc548271830d3) }

var fileDescriptor_d4adc548271830d3 = []byte{
	// 290 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4a, 0xce, 0x29, 0x2d,
	0x2e, 0x49, 0x2d, 0x8a, 0xcf, 0xcc, 0x4b, 0xcb, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62,
	0x49, 0xce, 0x4d, 0x49, 0x92, 0xd2, 0x4d, 0xcf, 0x2c, 0xc9, 0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf,
	0xd5, 0x4f, 0xcf, 0x4f, 0xcf, 0xd7, 0x07, 0x4b, 0x26, 0x95, 0xa6, 0x81, 0x79, 0x60, 0x0e, 0x98,
	0x05, 0xd1, 0x24, 0x65, 0x86, 0xa4, 0x3c, 0xb7, 0x3c, 0xb3, 0x24, 0x3b, 0xbf, 0x5c, 0x3f, 0x3d,
	0x5f, 0x17, 0x2c, 0xa9, 0x5b, 0x96, 0x98, 0x93, 0x99, 0x92, 0x58, 0x92, 0x5f, 0x54, 0xac, 0x0f,
	0x67, 0x42, 0xf4, 0x29, 0x3d, 0x61, 0xe4, 0xe2, 0x76, 0x86, 0xb8, 0xc1, 0x33, 0x2f, 0x2d, 0x5f,
	0xa8, 0x8b, 0x91, 0x8b, 0x13, 0xea, 0x26, 0xcf, 0x14, 0x09, 0x46, 0x05, 0x46, 0x0d, 0x4e, 0xa7,
	0x9c, 0x4f, 0xf7, 0xe4, 0x05, 0xd2, 0xf2, 0x8b, 0x72, 0xad, 0x94, 0xe0, 0x52, 0x4a, 0x8f, 0xee,
	0xcb, 0x87, 0x70, 0x05, 0xc5, 0x45, 0xdb, 0x27, 0xea, 0x56, 0x39, 0xea, 0x46, 0x19, 0xe8, 0x5a,
	0xc6, 0x56, 0x5b, 0xd4, 0xea, 0xa2, 0xf0, 0x4d, 0x48, 0xe4, 0x1b, 0x1a, 0xd5, 0xaa, 0x04, 0x21,
	0xac, 0x17, 0x52, 0xe6, 0x62, 0x29, 0xa9, 0x2c, 0x48, 0x95, 0x60, 0x02, 0x3b, 0x83, 0xff, 0xd3,
	0x3d, 0x79, 0x6e, 0x88, 0x33, 0x40, 0xa2, 0x4a, 0x41, 0x60, 0x49, 0x90, 0xa2, 0xbc, 0xc4, 0xdc,
	0x54, 0x09, 0x66, 0x74, 0x45, 0x20, 0x51, 0xa5, 0x20, 0xb0, 0xa4, 0x93, 0x43, 0x94, 0x5d, 0x7a,
	0xbe, 0x5e, 0x6a, 0x62, 0x71, 0x65, 0x7e, 0x41, 0xb1, 0x5e, 0x4e, 0x7e, 0x72, 0x62, 0x8e, 0x7e,
	0x72, 0x7e, 0x5e, 0x49, 0x51, 0x62, 0x72, 0x49, 0x31, 0x24, 0x68, 0x8b, 0x52, 0x0b, 0xf2, 0x75,
	0x73, 0xf3, 0x53, 0x52, 0x73, 0x8a, 0xf5, 0xa1, 0x0a, 0xf5, 0xc1, 0x5c, 0x7d, 0x50, 0x7c, 0x24,
	0xb1, 0x81, 0x15, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x4f, 0x90, 0x76, 0x46, 0xb2, 0x01,
	0x00, 0x00,
}
