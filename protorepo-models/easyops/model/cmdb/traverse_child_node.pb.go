// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: traverse_child_node.proto

package cmdb

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//TraverseChildNode
type TraverseChildNode struct {
	//
	//父节点指向当前节点的关系字段, 比如 APP的 owner, CLUSTER 的 deviceList
	ParentOut string `protobuf:"bytes,1,opt,name=parentOut,proto3" json:"parentOut" form:"parentOut"`
	//
	//当前图所有实例的过滤条件 (过滤条件不仅支持属性的过滤，也支持关系字段的过滤)
	Query *types.Struct `protobuf:"bytes,2,opt,name=query,proto3" json:"query" form:"query"`
	//
	//指定返回此关系指向模型的fields
	Fields *types.Struct `protobuf:"bytes,3,opt,name=fields,proto3" json:"fields" form:"fields"`
	//
	//自递归深度 -1表示不限深度
	Depth int32 `protobuf:"varint,4,opt,name=depth,proto3" json:"depth" form:"depth"`
	//
	//子节点列表
	Child                []*TraverseChildNode `protobuf:"bytes,5,rep,name=child,proto3" json:"child" form:"child"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TraverseChildNode) Reset()         { *m = TraverseChildNode{} }
func (m *TraverseChildNode) String() string { return proto.CompactTextString(m) }
func (*TraverseChildNode) ProtoMessage()    {}
func (*TraverseChildNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_85f4a5d2417e8aea, []int{0}
}
func (m *TraverseChildNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraverseChildNode.Unmarshal(m, b)
}
func (m *TraverseChildNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraverseChildNode.Marshal(b, m, deterministic)
}
func (m *TraverseChildNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraverseChildNode.Merge(m, src)
}
func (m *TraverseChildNode) XXX_Size() int {
	return xxx_messageInfo_TraverseChildNode.Size(m)
}
func (m *TraverseChildNode) XXX_DiscardUnknown() {
	xxx_messageInfo_TraverseChildNode.DiscardUnknown(m)
}

var xxx_messageInfo_TraverseChildNode proto.InternalMessageInfo

func (m *TraverseChildNode) GetParentOut() string {
	if m != nil {
		return m.ParentOut
	}
	return ""
}

func (m *TraverseChildNode) GetQuery() *types.Struct {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *TraverseChildNode) GetFields() *types.Struct {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *TraverseChildNode) GetDepth() int32 {
	if m != nil {
		return m.Depth
	}
	return 0
}

func (m *TraverseChildNode) GetChild() []*TraverseChildNode {
	if m != nil {
		return m.Child
	}
	return nil
}

func init() {
	proto.RegisterType((*TraverseChildNode)(nil), "cmdb.TraverseChildNode")
}

func init() { proto.RegisterFile("traverse_child_node.proto", fileDescriptor_85f4a5d2417e8aea) }

var fileDescriptor_85f4a5d2417e8aea = []byte{
	// 378 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x51, 0x4f, 0x8b, 0xd3, 0x40,
	0x14, 0x27, 0x6d, 0x53, 0x68, 0x54, 0x68, 0x73, 0x31, 0x16, 0x25, 0x21, 0x88, 0xf4, 0x60, 0x66,
	0xaa, 0x05, 0x45, 0x0f, 0xfe, 0x89, 0x77, 0x85, 0xa8, 0x97, 0x16, 0x2d, 0x93, 0xcc, 0x34, 0x0d,
	0x26, 0x7d, 0x71, 0x66, 0xd2, 0xd2, 0x5d, 0xf6, 0x7b, 0xee, 0xa9, 0x0b, 0xfb, 0x11, 0xfa, 0x09,
	0x96, 0xcc, 0xa4, 0x7f, 0x60, 0x61, 0x6f, 0xef, 0xcd, 0xef, 0x2f, 0xf3, 0xac, 0x67, 0x92, 0x93,
	0x35, 0xe3, 0x82, 0xcd, 0x93, 0x65, 0x96, 0xd3, 0xf9, 0x0a, 0x28, 0x43, 0x25, 0x07, 0x09, 0x76,
	0x27, 0x29, 0x68, 0x3c, 0x0c, 0xd2, 0x4c, 0x2e, 0xab, 0x18, 0x25, 0x50, 0xe0, 0x14, 0x52, 0xc0,
	0x0a, 0x8c, 0xab, 0x85, 0xda, 0xd4, 0xa2, 0x26, 0x2d, 0x1a, 0xbe, 0x3b, 0xa3, 0x17, 0x9b, 0x4c,
	0xfe, 0x83, 0x0d, 0x4e, 0x21, 0x50, 0x60, 0xb0, 0x26, 0x79, 0x46, 0x89, 0x04, 0x2e, 0xf0, 0x71,
	0x6c, 0x74, 0xcf, 0x53, 0x80, 0x34, 0x67, 0x27, 0x77, 0x21, 0x79, 0x95, 0x48, 0x8d, 0xfa, 0xd7,
	0x2d, 0x6b, 0xf0, 0xab, 0x29, 0xfa, 0xad, 0xee, 0xf9, 0x1d, 0x28, 0xb3, 0x7f, 0x5b, 0xbd, 0x92,
	0x70, 0xb6, 0x92, 0x3f, 0x2a, 0xe9, 0x18, 0x9e, 0x31, 0xea, 0x85, 0xef, 0xf7, 0x3b, 0xb7, 0xbf,
	0x00, 0x5e, 0x7c, 0xf4, 0x8f, 0x90, 0x7f, 0x7b, 0xe3, 0xba, 0xd6, 0x8b, 0xbf, 0x33, 0x12, 0x5c,
	0x7c, 0x0d, 0xa6, 0xf3, 0x3f, 0xb3, 0x71, 0xf0, 0xe1, 0x30, 0x5f, 0x8e, 0x5f, 0x4f, 0xde, 0x5c,
	0xbd, 0x8c, 0x4e, 0x4e, 0xf6, 0x67, 0xcb, 0xfc, 0x5f, 0x31, 0xbe, 0x75, 0x5a, 0x9e, 0x31, 0x7a,
	0xf4, 0xf6, 0x29, 0xd2, 0xd5, 0xd0, 0xa1, 0x1a, 0xfa, 0xa9, 0xaa, 0x85, 0xfd, 0xfd, 0xce, 0x7d,
	0xac, 0xb3, 0x14, 0xdf, 0x8f, 0xb4, 0xce, 0x0e, 0xad, 0xee, 0x22, 0x63, 0x39, 0x15, 0x4e, 0xfb,
	0x61, 0x87, 0xc1, 0x7e, 0xe7, 0x3e, 0xd1, 0x0e, 0x5a, 0xe0, 0x47, 0x8d, 0xd2, 0x7e, 0x65, 0x99,
	0x94, 0x95, 0x72, 0xe9, 0x74, 0x3c, 0x63, 0x64, 0x9e, 0x67, 0xa9, 0x67, 0x3f, 0xd2, 0x70, 0x5d,
	0x56, 0x1d, 0xce, 0x31, 0xbd, 0xb6, 0x8a, 0xaa, 0x8f, 0x86, 0xee, 0xfd, 0xd5, 0xb9, 0x81, 0xe2,
	0xfb, 0x91, 0xd6, 0x85, 0x5f, 0xa6, 0x9f, 0x52, 0x40, 0x8c, 0x88, 0x2d, 0x94, 0x02, 0xe5, 0x90,
	0x90, 0x1c, 0x27, 0xb0, 0x92, 0x9c, 0x24, 0x52, 0xe8, 0x73, 0x70, 0x56, 0x42, 0x50, 0x00, 0x65,
	0xb9, 0xc0, 0x0d, 0x11, 0xab, 0x15, 0xd7, 0x61, 0x71, 0x57, 0x91, 0x26, 0x77, 0x01, 0x00, 0x00,
	0xff, 0xff, 0xb4, 0xb3, 0x97, 0xc5, 0x4b, 0x02, 0x00, 0x00,
}
