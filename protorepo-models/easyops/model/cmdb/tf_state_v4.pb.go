// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: tf_state_v4.proto

package cmdb

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//terrafrom state信息 v4
type TFStateV4 struct {
	//
	//version
	Version int32 `protobuf:"varint,1,opt,name=version,proto3" json:"version" form:"version"`
	//
	//terraform_version
	TerraformVersion string `protobuf:"bytes,2,opt,name=terraform_version,json=terraformVersion,proto3" json:"terraform_version" form:"terraform_version"`
	//
	//serial
	Serial int32 `protobuf:"varint,3,opt,name=serial,proto3" json:"serial" form:"serial"`
	//
	//lineage
	Lineage string `protobuf:"bytes,4,opt,name=lineage,proto3" json:"lineage" form:"lineage"`
	//
	//outputs
	Outputs *types.Struct `protobuf:"bytes,5,opt,name=outputs,proto3" json:"outputs" form:"outputs"`
	//
	//resources
	Resources            []*TFStateV4_Resources `protobuf:"bytes,6,rep,name=resources,proto3" json:"resources" form:"resources"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TFStateV4) Reset()         { *m = TFStateV4{} }
func (m *TFStateV4) String() string { return proto.CompactTextString(m) }
func (*TFStateV4) ProtoMessage()    {}
func (*TFStateV4) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c231c799798e434, []int{0}
}
func (m *TFStateV4) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TFStateV4.Unmarshal(m, b)
}
func (m *TFStateV4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TFStateV4.Marshal(b, m, deterministic)
}
func (m *TFStateV4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TFStateV4.Merge(m, src)
}
func (m *TFStateV4) XXX_Size() int {
	return xxx_messageInfo_TFStateV4.Size(m)
}
func (m *TFStateV4) XXX_DiscardUnknown() {
	xxx_messageInfo_TFStateV4.DiscardUnknown(m)
}

var xxx_messageInfo_TFStateV4 proto.InternalMessageInfo

func (m *TFStateV4) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *TFStateV4) GetTerraformVersion() string {
	if m != nil {
		return m.TerraformVersion
	}
	return ""
}

func (m *TFStateV4) GetSerial() int32 {
	if m != nil {
		return m.Serial
	}
	return 0
}

func (m *TFStateV4) GetLineage() string {
	if m != nil {
		return m.Lineage
	}
	return ""
}

func (m *TFStateV4) GetOutputs() *types.Struct {
	if m != nil {
		return m.Outputs
	}
	return nil
}

func (m *TFStateV4) GetResources() []*TFStateV4_Resources {
	if m != nil {
		return m.Resources
	}
	return nil
}

type TFStateV4_Resources struct {
	//
	//mode,eg:managed
	Mode string `protobuf:"bytes,1,opt,name=mode,proto3" json:"mode" form:"mode"`
	//
	//type,eg:kubernetes_namespace
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type" form:"type"`
	//
	//name,eg:example
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name" form:"name"`
	//
	//provider,eg:provider.kubernetes
	Provider string `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider" form:"provider"`
	//
	//instances
	Instances            []*types.Struct `protobuf:"bytes,5,rep,name=instances,proto3" json:"instances" form:"instances"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TFStateV4_Resources) Reset()         { *m = TFStateV4_Resources{} }
func (m *TFStateV4_Resources) String() string { return proto.CompactTextString(m) }
func (*TFStateV4_Resources) ProtoMessage()    {}
func (*TFStateV4_Resources) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c231c799798e434, []int{0, 0}
}
func (m *TFStateV4_Resources) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TFStateV4_Resources.Unmarshal(m, b)
}
func (m *TFStateV4_Resources) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TFStateV4_Resources.Marshal(b, m, deterministic)
}
func (m *TFStateV4_Resources) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TFStateV4_Resources.Merge(m, src)
}
func (m *TFStateV4_Resources) XXX_Size() int {
	return xxx_messageInfo_TFStateV4_Resources.Size(m)
}
func (m *TFStateV4_Resources) XXX_DiscardUnknown() {
	xxx_messageInfo_TFStateV4_Resources.DiscardUnknown(m)
}

var xxx_messageInfo_TFStateV4_Resources proto.InternalMessageInfo

func (m *TFStateV4_Resources) GetMode() string {
	if m != nil {
		return m.Mode
	}
	return ""
}

func (m *TFStateV4_Resources) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TFStateV4_Resources) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TFStateV4_Resources) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *TFStateV4_Resources) GetInstances() []*types.Struct {
	if m != nil {
		return m.Instances
	}
	return nil
}

func init() {
	proto.RegisterType((*TFStateV4)(nil), "cmdb.TFStateV4")
	proto.RegisterType((*TFStateV4_Resources)(nil), "cmdb.TFStateV4.Resources")
}

func init() { proto.RegisterFile("tf_state_v4.proto", fileDescriptor_8c231c799798e434) }

var fileDescriptor_8c231c799798e434 = []byte{
	// 450 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xcf, 0x8b, 0xd3, 0x40,
	0x14, 0xc7, 0x89, 0xdb, 0x76, 0xcd, 0x14, 0xdd, 0xed, 0x28, 0x18, 0xcb, 0x42, 0xca, 0x78, 0xa9,
	0xe0, 0x4e, 0x60, 0xdd, 0x93, 0x07, 0x91, 0x80, 0x82, 0x88, 0x97, 0x59, 0xd9, 0x83, 0x97, 0x32,
	0x4d, 0xa7, 0x31, 0x90, 0xe4, 0x85, 0x99, 0x49, 0x61, 0xff, 0xd9, 0xfc, 0x09, 0x1e, 0x72, 0xf2,
	0x28, 0xf3, 0x23, 0x69, 0x45, 0xf6, 0xd6, 0xf7, 0xbe, 0x9f, 0xef, 0x7b, 0xf3, 0xbe, 0x0d, 0x5a,
	0xe8, 0xfd, 0x46, 0x69, 0xae, 0xc5, 0xe6, 0x70, 0x4b, 0x1b, 0x09, 0x1a, 0xf0, 0x24, 0xab, 0x76,
	0xdb, 0xe5, 0x75, 0x5e, 0xe8, 0x5f, 0xed, 0x96, 0x66, 0x50, 0x25, 0x39, 0xe4, 0x90, 0x58, 0x71,
	0xdb, 0xee, 0x6d, 0x65, 0x0b, 0xfb, 0xcb, 0x99, 0x96, 0x57, 0x39, 0x40, 0x5e, 0x8a, 0x23, 0xa5,
	0xb4, 0x6c, 0x33, 0xed, 0x54, 0xf2, 0x7b, 0x82, 0xc2, 0x1f, 0x5f, 0xee, 0xcc, 0x9e, 0xfb, 0x5b,
	0xfc, 0x0e, 0x9d, 0x1f, 0x84, 0x54, 0x05, 0xd4, 0x51, 0xb0, 0x0a, 0xd6, 0xd3, 0x14, 0xf7, 0x5d,
	0xfc, 0x7c, 0x0f, 0xb2, 0xfa, 0x40, 0xbc, 0x40, 0xd8, 0x80, 0xe0, 0xaf, 0x68, 0xa1, 0x85, 0x94,
	0xdc, 0xe8, 0x9b, 0xc1, 0xf7, 0x64, 0x15, 0xac, 0xc3, 0xf4, 0xaa, 0xef, 0xe2, 0xc8, 0xf9, 0xfe,
	0x43, 0x08, 0xbb, 0x1c, 0x7b, 0xf7, 0x7e, 0xd4, 0x5b, 0x34, 0x53, 0x42, 0x16, 0xbc, 0x8c, 0xce,
	0xec, 0xde, 0x45, 0xdf, 0xc5, 0xcf, 0x9c, 0xdf, 0xf5, 0x09, 0xf3, 0x80, 0x79, 0x63, 0x59, 0xd4,
	0x82, 0xe7, 0x22, 0x9a, 0xd8, 0x5d, 0x27, 0x6f, 0xf4, 0x02, 0x61, 0x03, 0x82, 0x3f, 0xa3, 0x73,
	0x68, 0x75, 0xd3, 0x6a, 0x15, 0x4d, 0x57, 0xc1, 0x7a, 0x7e, 0xf3, 0x8a, 0xba, 0x3c, 0xe8, 0x90,
	0x07, 0xbd, 0xb3, 0x79, 0x9c, 0x8e, 0xf1, 0x0e, 0xc2, 0x06, 0x2f, 0xfe, 0x8e, 0x42, 0x29, 0x14,
	0xb4, 0x32, 0x13, 0x2a, 0x9a, 0xad, 0xce, 0xd6, 0xf3, 0x9b, 0xd7, 0xd4, 0xfc, 0x1b, 0x74, 0x0c,
	0x8f, 0xb2, 0x01, 0x48, 0x5f, 0xf6, 0x5d, 0x7c, 0xe9, 0x46, 0x8d, 0x2e, 0xc2, 0x8e, 0x13, 0x96,
	0x7f, 0x02, 0x14, 0x8e, 0x38, 0x7e, 0x83, 0x26, 0x15, 0xec, 0x84, 0x8d, 0x3c, 0x4c, 0x2f, 0xfa,
	0x2e, 0x9e, 0x3b, 0xb3, 0xe9, 0x12, 0x66, 0x45, 0x03, 0xe9, 0x87, 0x46, 0xf8, 0x7c, 0x4f, 0x20,
	0xd3, 0x25, 0xcc, 0x8a, 0x06, 0xaa, 0x79, 0x25, 0x6c, 0x88, 0xff, 0x40, 0xa6, 0x4b, 0x98, 0x15,
	0x71, 0x82, 0x9e, 0x36, 0x12, 0x0e, 0xc5, 0x4e, 0x48, 0x9f, 0xe0, 0x8b, 0xbe, 0x8b, 0x2f, 0x1c,
	0x38, 0x28, 0x84, 0x8d, 0x10, 0xfe, 0x86, 0xc2, 0xa2, 0x56, 0x9a, 0xd7, 0xe6, 0xf8, 0xa9, 0x3d,
	0xfe, 0xd1, 0x14, 0x4f, 0x4e, 0x1f, 0x3d, 0x84, 0x1d, 0xfd, 0xe9, 0xa7, 0x9f, 0x1f, 0x73, 0xa0,
	0x82, 0xab, 0x07, 0x68, 0x14, 0x2d, 0x21, 0xe3, 0x65, 0x92, 0x41, 0xad, 0x25, 0xcf, 0xb4, 0x72,
	0x1f, 0xa9, 0x14, 0x0d, 0x5c, 0x9b, 0xa3, 0x4b, 0x95, 0x78, 0x30, 0xb1, 0x65, 0x62, 0x12, 0xdf,
	0xce, 0x2c, 0xf4, 0xfe, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1a, 0x7c, 0x59, 0x81, 0x21, 0x03,
	0x00, 0x00,
}
