// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cmdb_object.proto

package cmdb

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

//
//模型
type CmdbObject struct {
	//
	//名称
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name" form:"name"`
	//
	//objectId
	ObjectId string `protobuf:"bytes,2,opt,name=objectId,proto3" json:"objectId" form:"objectId"`
	//
	//备注
	Memo string `protobuf:"bytes,3,opt,name=memo,proto3" json:"memo" form:"memo"`
	//
	//属性列表
	AttrList []*ObjectAttr `protobuf:"bytes,4,rep,name=attrList,proto3" json:"attrList" form:"attrList"`
	//
	//关系列表
	RelationList []*ObjectRelation `protobuf:"bytes,5,rep,name=relation_list,json=relationList,proto3" json:"relation_list" form:"relation_list"`
	//
	//关系分组
	RelationGroups []*ObjectRelationGroup `protobuf:"bytes,6,rep,name=relation_groups,json=relationGroups,proto3" json:"relation_groups" form:"relation_groups"`
	//
	//视图设置
	View *ObjectView `protobuf:"bytes,7,opt,name=view,proto3" json:"view" form:"view"`
	//
	//true 内置模型，false 用户自定义模型
	Protected bool `protobuf:"varint,8,opt,name=protected,proto3" json:"protected" form:"protected"`
	//
	//当为 true 时，不纳入全文搜索
	WordIndexDenied bool `protobuf:"varint,9,opt,name=wordIndexDenied,proto3" json:"wordIndexDenied" form:"wordIndexDenied"`
	//
	//分类
	Category string `protobuf:"bytes,10,opt,name=category,proto3" json:"category" form:"category"`
	//
	//模型图标
	Icon string `protobuf:"bytes,11,opt,name=icon,proto3" json:"icon" form:"icon"`
	//
	//创建时间
	Ctime string `protobuf:"bytes,12,opt,name=ctime,proto3" json:"ctime" form:"ctime"`
	//
	//修改时间
	Mtime string `protobuf:"bytes,13,opt,name=mtime,proto3" json:"mtime" form:"mtime"`
	//
	//创建者
	Creator string `protobuf:"bytes,14,opt,name=creator,proto3" json:"creator" form:"creator"`
	//
	//修改者
	Modifier string `protobuf:"bytes,15,opt,name=modifier,proto3" json:"modifier" form:"modifier"`
	//
	//创建时间的时间截
	XTs int32 `protobuf:"varint,16,opt,name=_ts,json=Ts,proto3" json:"_ts" form:"_ts"`
	//
	//模型版本
	XVersion int32 `protobuf:"varint,17,opt,name=_version,json=Version,proto3" json:"_version" form:"_version"`
	//
	//编辑权限白名单
	UpdateAuthorizers []string `protobuf:"bytes,18,rep,name=updateAuthorizers,proto3" json:"updateAuthorizers" form:"updateAuthorizers"`
	//
	//删除权限白名单
	DeleteAuthorizers    []string `protobuf:"bytes,19,rep,name=deleteAuthorizers,proto3" json:"deleteAuthorizers" form:"deleteAuthorizers"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CmdbObject) Reset()         { *m = CmdbObject{} }
func (m *CmdbObject) String() string { return proto.CompactTextString(m) }
func (*CmdbObject) ProtoMessage()    {}
func (*CmdbObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb7f70b8c8841e18, []int{0}
}
func (m *CmdbObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CmdbObject.Unmarshal(m, b)
}
func (m *CmdbObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CmdbObject.Marshal(b, m, deterministic)
}
func (m *CmdbObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CmdbObject.Merge(m, src)
}
func (m *CmdbObject) XXX_Size() int {
	return xxx_messageInfo_CmdbObject.Size(m)
}
func (m *CmdbObject) XXX_DiscardUnknown() {
	xxx_messageInfo_CmdbObject.DiscardUnknown(m)
}

var xxx_messageInfo_CmdbObject proto.InternalMessageInfo

func (m *CmdbObject) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CmdbObject) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *CmdbObject) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *CmdbObject) GetAttrList() []*ObjectAttr {
	if m != nil {
		return m.AttrList
	}
	return nil
}

func (m *CmdbObject) GetRelationList() []*ObjectRelation {
	if m != nil {
		return m.RelationList
	}
	return nil
}

func (m *CmdbObject) GetRelationGroups() []*ObjectRelationGroup {
	if m != nil {
		return m.RelationGroups
	}
	return nil
}

func (m *CmdbObject) GetView() *ObjectView {
	if m != nil {
		return m.View
	}
	return nil
}

func (m *CmdbObject) GetProtected() bool {
	if m != nil {
		return m.Protected
	}
	return false
}

func (m *CmdbObject) GetWordIndexDenied() bool {
	if m != nil {
		return m.WordIndexDenied
	}
	return false
}

func (m *CmdbObject) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *CmdbObject) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *CmdbObject) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

func (m *CmdbObject) GetMtime() string {
	if m != nil {
		return m.Mtime
	}
	return ""
}

func (m *CmdbObject) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *CmdbObject) GetModifier() string {
	if m != nil {
		return m.Modifier
	}
	return ""
}

func (m *CmdbObject) GetXTs() int32 {
	if m != nil {
		return m.XTs
	}
	return 0
}

func (m *CmdbObject) GetXVersion() int32 {
	if m != nil {
		return m.XVersion
	}
	return 0
}

func (m *CmdbObject) GetUpdateAuthorizers() []string {
	if m != nil {
		return m.UpdateAuthorizers
	}
	return nil
}

func (m *CmdbObject) GetDeleteAuthorizers() []string {
	if m != nil {
		return m.DeleteAuthorizers
	}
	return nil
}

func init() {
	proto.RegisterType((*CmdbObject)(nil), "cmdb.CmdbObject")
}

func init() { proto.RegisterFile("cmdb_object.proto", fileDescriptor_cb7f70b8c8841e18) }

var fileDescriptor_cb7f70b8c8841e18 = []byte{
	// 847 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x95, 0xdd, 0x6e, 0xdb, 0x36,
	0x14, 0xc7, 0xa7, 0xc4, 0x69, 0x1c, 0x26, 0x8d, 0x13, 0x26, 0x2b, 0xb8, 0x60, 0x80, 0x0c, 0x2d,
	0x17, 0x72, 0x1b, 0x5a, 0xfe, 0x68, 0x0b, 0x34, 0x17, 0xf3, 0xec, 0x15, 0x1d, 0x32, 0x0c, 0xd8,
	0xc0, 0x05, 0xbd, 0xb0, 0xea, 0x18, 0xb2, 0xc4, 0xb8, 0xda, 0x2c, 0xd3, 0xa0, 0xe8, 0x78, 0xcd,
	0xc7, 0x0b, 0x0d, 0xd8, 0x4b, 0xec, 0x25, 0x86, 0xdd, 0x68, 0xc0, 0x1e, 0x41, 0x4f, 0x30, 0x90,
	0xb4, 0x6c, 0xc7, 0x2e, 0x76, 0xb3, 0xdc, 0xec, 0x4a, 0x3c, 0xe7, 0xfc, 0xff, 0x3f, 0xf2, 0xf0,
	0x10, 0x36, 0xd8, 0xf7, 0xa3, 0xa0, 0xd7, 0x65, 0xbd, 0x9f, 0xa8, 0x2f, 0xca, 0x23, 0xce, 0x04,
	0x83, 0x39, 0x99, 0x3a, 0xc2, 0xfd, 0x50, 0xbc, 0x1f, 0xf7, 0xca, 0x3e, 0x8b, 0x9c, 0x3e, 0xeb,
	0x33, 0x47, 0x15, 0x7b, 0xe3, 0x4b, 0x15, 0xa9, 0x40, 0xad, 0xb4, 0xe9, 0xe8, 0x87, 0x3e, 0x2b,
	0x53, 0x2f, 0xfe, 0xc0, 0x46, 0x71, 0x79, 0xc0, 0x7c, 0x6f, 0xe0, 0xf8, 0x6c, 0x28, 0xb8, 0xe7,
	0x8b, 0x58, 0x3b, 0x39, 0x1d, 0x31, 0x1c, 0xb1, 0x80, 0x0e, 0x62, 0x67, 0x2a, 0x74, 0x54, 0xe8,
	0xc8, 0xed, 0x1c, 0x7d, 0x82, 0xae, 0x27, 0x04, 0x9f, 0x12, 0xcf, 0x1f, 0x86, 0xc8, 0xe9, 0xc0,
	0x13, 0x21, 0x1b, 0x4e, 0xa9, 0xed, 0x87, 0xa5, 0x76, 0xfb, 0x9c, 0x8d, 0x47, 0x0f, 0x7b, 0x07,
	0x57, 0x21, 0x9d, 0x4c, 0x89, 0x2f, 0x17, 0x86, 0x10, 0x4d, 0x42, 0xf1, 0x33, 0x9b, 0x38, 0x7d,
	0x86, 0x55, 0x11, 0x5f, 0x79, 0x83, 0x30, 0xf0, 0x04, 0xe3, 0xb1, 0x33, 0x5b, 0x6a, 0x9f, 0xf5,
	0xc7, 0x36, 0x00, 0x5f, 0x47, 0x41, 0xef, 0x7b, 0x45, 0x84, 0x25, 0x90, 0x1b, 0x7a, 0x11, 0x45,
	0x46, 0xd1, 0xb0, 0xb7, 0x5a, 0x9f, 0xa6, 0x89, 0xb9, 0x7d, 0xc9, 0x78, 0x74, 0x6a, 0xc9, 0xac,
	0xf5, 0xf7, 0x5f, 0xe6, 0xda, 0xe8, 0x13, 0xa2, 0x24, 0xf0, 0x0d, 0xc8, 0xeb, 0x63, 0x9c, 0x05,
	0x68, 0x4d, 0xc9, 0x9f, 0xa6, 0x89, 0x59, 0xd0, 0xf2, 0xac, 0x22, 0x2d, 0x07, 0x60, 0xff, 0xc2,
	0xf5, 0xf0, 0x75, 0x13, 0xb7, 0xbb, 0x9d, 0x9b, 0xea, 0x49, 0xbd, 0x76, 0x77, 0x4c, 0x66, 0x5e,
	0xf8, 0x05, 0xc8, 0x45, 0x34, 0x62, 0x68, 0x5d, 0x31, 0x0a, 0xf3, 0x2d, 0x65, 0xd6, 0x22, 0xaa,
	0x08, 0x9b, 0x20, 0x2f, 0x07, 0xfe, 0x5d, 0x18, 0x0b, 0x94, 0x2b, 0xae, 0xdb, 0xdb, 0xb5, 0xbd,
	0xb2, 0xbc, 0x89, 0xb2, 0x3e, 0x77, 0x53, 0x08, 0xde, 0x3a, 0x98, 0x6f, 0x9f, 0x69, 0x2d, 0x32,
	0xb3, 0xc1, 0x1f, 0xc1, 0xe3, 0xd9, 0x2c, 0x06, 0x92, 0xb3, 0xa1, 0x38, 0x87, 0x8b, 0x1c, 0x32,
	0x15, 0xb4, 0x50, 0x9a, 0x98, 0x87, 0x9a, 0x75, 0xcf, 0x64, 0x91, 0x9d, 0x2c, 0x56, 0xd0, 0x0b,
	0x50, 0xb8, 0x3f, 0xe0, 0x18, 0x3d, 0x52, 0xd8, 0xcf, 0x3e, 0x86, 0xfd, 0x46, 0x2a, 0x5a, 0x47,
	0x69, 0x62, 0x3e, 0x59, 0x62, 0x6b, 0xaf, 0x45, 0x76, 0xf9, 0xa2, 0x34, 0x86, 0x2f, 0x40, 0x4e,
	0x0e, 0x19, 0x6d, 0x16, 0x8d, 0xe5, 0x9e, 0xdf, 0x86, 0x74, 0xb2, 0x78, 0x5d, 0x52, 0x67, 0x11,
	0x25, 0x87, 0x35, 0xb0, 0x25, 0xc7, 0x4b, 0x7d, 0x41, 0x03, 0x94, 0x2f, 0x1a, 0x76, 0xbe, 0x75,
	0x98, 0x26, 0xe6, 0x9e, 0x56, 0xce, 0x4a, 0x16, 0x99, 0xcb, 0xe0, 0x6b, 0x50, 0x98, 0x30, 0x1e,
	0x9c, 0x0d, 0x03, 0xfa, 0xcb, 0x6b, 0x3a, 0x0c, 0x69, 0x80, 0xb6, 0x94, 0x73, 0xe1, 0xbc, 0x4b,
	0x02, 0x8b, 0x2c, 0x5b, 0xa0, 0x03, 0xf2, 0xbe, 0x27, 0x68, 0x9f, 0xf1, 0x0f, 0x08, 0xa8, 0x89,
	0x2e, 0x8c, 0x25, 0xab, 0x58, 0x64, 0x26, 0x92, 0xe3, 0x0f, 0x7d, 0x36, 0x44, 0xdb, 0xcb, 0xe3,
	0x97, 0x59, 0x8b, 0xa8, 0x22, 0xfc, 0xd3, 0x00, 0x1b, 0xbe, 0x08, 0x23, 0x8a, 0x76, 0x94, 0xec,
	0x77, 0x23, 0x4d, 0xcc, 0x9d, 0x29, 0x54, 0xe6, 0xe5, 0x3b, 0xfb, 0xcd, 0x00, 0xbf, 0x1a, 0x17,
	0xb6, 0xdd, 0x38, 0x75, 0xab, 0xf8, 0x55, 0xc7, 0xad, 0xe0, 0x57, 0x9d, 0xa7, 0xa5, 0x86, 0xfa,
	0xde, 0x3c, 0xbf, 0x2b, 0x61, 0xbb, 0xea, 0x56, 0x70, 0xad, 0x73, 0x5b, 0x51, 0xf5, 0x12, 0xb6,
	0xeb, 0x6e, 0x05, 0x57, 0xb3, 0xf8, 0xd6, 0xad, 0xe2, 0x9a, 0x76, 0x95, 0xdc, 0xf3, 0x62, 0xc7,
	0xae, 0xb9, 0x15, 0x5c, 0xef, 0xdc, 0x2a, 0x8d, 0x4e, 0x9f, 0xda, 0x6e, 0x05, 0xbf, 0xc8, 0x82,
	0xf9, 0xda, 0x7e, 0x57, 0x56, 0xdf, 0x67, 0xa5, 0x86, 0xdd, 0xbe, 0x75, 0x9f, 0xe1, 0x8e, 0xdd,
	0x38, 0xfd, 0x88, 0x7d, 0xc1, 0xdd, 0x38, 0x26, 0xba, 0x23, 0xd5, 0x5b, 0xa4, 0x7a, 0x7b, 0xbc,
	0xd2, 0x5b, 0xf4, 0xbf, 0xed, 0x4d, 0x9d, 0x1c, 0xbe, 0x01, 0x9b, 0x3e, 0xa7, 0xf2, 0xe7, 0x06,
	0xed, 0xaa, 0xe6, 0x4e, 0xd2, 0xc4, 0xdc, 0x9d, 0xce, 0x4d, 0x17, 0x64, 0x77, 0x4f, 0xc0, 0xe1,
	0x85, 0xdb, 0xc4, 0x6d, 0x0f, 0x5f, 0x77, 0x71, 0xe7, 0xdd, 0xe4, 0xa6, 0x7e, 0xf2, 0xf2, 0xf9,
	0xdd, 0x31, 0xc9, 0xcc, 0xf0, 0x0c, 0xe4, 0x23, 0x16, 0x84, 0x97, 0x21, 0xe5, 0xa8, 0xa0, 0x40,
	0x78, 0xfe, 0xaa, 0xb2, 0xca, 0xbf, 0x91, 0x66, 0x76, 0x68, 0x82, 0xf5, 0xae, 0x88, 0xd1, 0x5e,
	0xd1, 0xb0, 0x37, 0x5a, 0xbb, 0x69, 0x62, 0x02, 0x4d, 0xe9, 0x8a, 0xd8, 0x22, 0x6b, 0xe7, 0x31,
	0x2c, 0x83, 0x7c, 0xf7, 0x8a, 0xf2, 0x38, 0x64, 0x43, 0xb4, 0xaf, 0x54, 0x0b, 0x2f, 0x38, 0xab,
	0x58, 0x64, 0xf3, 0xad, 0x5e, 0xc1, 0x6f, 0xc1, 0xfe, 0x78, 0x14, 0x78, 0x82, 0x36, 0xc7, 0xe2,
	0x3d, 0xe3, 0xe1, 0x35, 0xe5, 0x31, 0x82, 0xc5, 0x75, 0x7b, 0xab, 0xf5, 0x79, 0x9a, 0x98, 0x48,
	0x1b, 0x57, 0x24, 0x16, 0x59, 0xb5, 0x49, 0x56, 0x40, 0x07, 0xf4, 0x3e, 0xeb, 0x60, 0x99, 0xb5,
	0x22, 0xb1, 0xc8, 0xaa, 0xad, 0xf5, 0x55, 0xfb, 0xcb, 0xff, 0xf6, 0x2f, 0xd3, 0x7b, 0xa4, 0x44,
	0xf5, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xf6, 0x11, 0x9e, 0x3b, 0xfa, 0x07, 0x00, 0x00,
}
