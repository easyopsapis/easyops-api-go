// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: user.proto

package cmdb

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//用户信息
type User struct {
	//
	//用户ID
	InstanceId string `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId" form:"instanceId"`
	//
	//名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name" form:"name"`
	//
	//名称
	Nickname string `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname" form:"nickname"`
	//
	//邮箱
	UserEmail string `protobuf:"bytes,4,opt,name=user_email,json=userEmail,proto3" json:"user_email" form:"user_email"`
	//
	//电话号码
	UserTel string `protobuf:"bytes,5,opt,name=user_tel,json=userTel,proto3" json:"user_tel" form:"user_tel"`
	//
	//企业微信账号
	WeworkUserid string `protobuf:"bytes,6,opt,name=wework_userid,json=weworkUserid,proto3" json:"wework_userid" form:"wework_userid"`
	//
	//状态
	State string `protobuf:"bytes,7,opt,name=state,proto3" json:"state" form:"state"`
	//
	//备注
	UserMemo string `protobuf:"bytes,8,opt,name=user_memo,json=userMemo,proto3" json:"user_memo" form:"user_memo"`
	//
	//自动发现用户
	XIsAutoDescovery string `protobuf:"bytes,9,opt,name=_is_auto_descovery,json=IsAutoDescovery,proto3" json:"_is_auto_descovery" form:"_is_auto_descovery"`
	//
	//员工姓名
	Code string `protobuf:"bytes,10,opt,name=code,proto3" json:"code" form:"code"`
	//
	//用户手机
	UserPhone string `protobuf:"bytes,11,opt,name=user_phone,json=userPhone,proto3" json:"user_phone" form:"user_phone"`
	//
	//用户类型
	UserType string `protobuf:"bytes,12,opt,name=user_type,json=userType,proto3" json:"user_type" form:"user_type"`
	//
	//微信
	UserWechat           string   `protobuf:"bytes,13,opt,name=user_wechat,json=userWechat,proto3" json:"user_wechat" form:"user_wechat"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *User) GetUserEmail() string {
	if m != nil {
		return m.UserEmail
	}
	return ""
}

func (m *User) GetUserTel() string {
	if m != nil {
		return m.UserTel
	}
	return ""
}

func (m *User) GetWeworkUserid() string {
	if m != nil {
		return m.WeworkUserid
	}
	return ""
}

func (m *User) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *User) GetUserMemo() string {
	if m != nil {
		return m.UserMemo
	}
	return ""
}

func (m *User) GetXIsAutoDescovery() string {
	if m != nil {
		return m.XIsAutoDescovery
	}
	return ""
}

func (m *User) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *User) GetUserPhone() string {
	if m != nil {
		return m.UserPhone
	}
	return ""
}

func (m *User) GetUserType() string {
	if m != nil {
		return m.UserType
	}
	return ""
}

func (m *User) GetUserWechat() string {
	if m != nil {
		return m.UserWechat
	}
	return ""
}

func init() {
	proto.RegisterType((*User)(nil), "cmdb.User")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf) }

var fileDescriptor_116e343673f7ffaf = []byte{
	// 593 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x93, 0xef, 0x4e, 0xd4, 0x4c,
	0x14, 0xc6, 0x03, 0x6f, 0xf9, 0x37, 0xc0, 0x0b, 0x8e, 0x68, 0x46, 0x8c, 0xa9, 0x16, 0x62, 0x40,
	0x9d, 0x16, 0xc4, 0xa0, 0x68, 0x30, 0x40, 0xf4, 0x03, 0x24, 0x26, 0xa6, 0x01, 0x4d, 0x58, 0x96,
	0x66, 0xb6, 0x1d, 0x96, 0x86, 0xb6, 0xd3, 0x74, 0xa6, 0x6c, 0x16, 0xc2, 0x0d, 0x79, 0x51, 0x35,
	0xf1, 0x12, 0x7a, 0x05, 0x66, 0xce, 0x2c, 0xbb, 0xab, 0xf2, 0xed, 0x9c, 0xe7, 0x39, 0xbf, 0xa7,
	0x67, 0xda, 0x0e, 0x42, 0xa5, 0xe4, 0x85, 0x9b, 0x17, 0x42, 0x09, 0x6c, 0x85, 0x69, 0xd4, 0x5a,
	0xa4, 0xed, 0x58, 0x9d, 0x97, 0x2d, 0x37, 0x14, 0xa9, 0xd7, 0x16, 0x6d, 0xe1, 0x81, 0xd9, 0x2a,
	0xcf, 0xa0, 0x83, 0x06, 0x2a, 0x03, 0x2d, 0x6e, 0x0e, 0x8d, 0xa7, 0x9d, 0x58, 0x5d, 0x88, 0x8e,
	0xd7, 0x16, 0x14, 0x4c, 0x7a, 0xc9, 0x92, 0x38, 0x62, 0x4a, 0x14, 0xd2, 0xeb, 0x97, 0x86, 0x73,
	0x7e, 0x8c, 0x23, 0xeb, 0x48, 0xf2, 0x02, 0xef, 0x23, 0x14, 0x67, 0x52, 0xb1, 0x2c, 0xe4, 0xfb,
	0x11, 0x19, 0x79, 0x3a, 0xb2, 0x32, 0xb5, 0xb7, 0x5a, 0x57, 0xf6, 0xbd, 0x33, 0x51, 0xa4, 0xef,
	0x9d, 0x81, 0xe7, 0xfc, 0xfa, 0x69, 0xcf, 0xa3, 0xff, 0x4f, 0x1b, 0x6b, 0x74, 0x8b, 0xd1, 0xab,
	0xe6, 0xf5, 0xfa, 0xc6, 0xcd, 0xb2, 0x3f, 0x04, 0xe3, 0x03, 0x64, 0x65, 0x2c, 0xe5, 0x64, 0x14,
	0x42, 0x36, 0xeb, 0xca, 0x9e, 0x36, 0x21, 0x5a, 0xd5, 0xf8, 0x12, 0x7a, 0x76, 0xda, 0x60, 0xf4,
	0x6a, 0x97, 0x1e, 0xaf, 0xd1, 0xad, 0x66, 0xc3, 0xed, 0xd7, 0x01, 0x6d, 0x5e, 0xbf, 0x7e, 0xb5,
	0xb1, 0x7e, 0xb3, 0xec, 0x43, 0x06, 0x7e, 0x8b, 0x26, 0xb3, 0x38, 0xbc, 0x80, 0xbc, 0xff, 0x20,
	0xef, 0x71, 0x5d, 0xd9, 0x73, 0xbd, 0xbc, 0x9e, 0xa3, 0x33, 0x2d, 0x34, 0xea, 0xbe, 0xf0, 0xfb,
	0xc3, 0xb8, 0x34, 0xef, 0x34, 0xe0, 0x29, 0x8b, 0x13, 0x62, 0x01, 0xfa, 0x6d, 0x70, 0x9e, 0x81,
	0xa7, 0xe1, 0x6d, 0xf4, 0xe1, 0x74, 0xa5, 0xb1, 0x4b, 0x8f, 0x19, 0xbd, 0xd2, 0x5b, 0x9c, 0xd0,
	0x13, 0xb7, 0xb9, 0xfa, 0xf2, 0x64, 0xe7, 0x2e, 0xd1, 0xbd, 0x15, 0xf5, 0xaa, 0xef, 0x6e, 0x56,
	0x97, 0xfd, 0x29, 0x9d, 0xf6, 0x59, 0x87, 0x61, 0x17, 0x4d, 0x42, 0xb4, 0xe2, 0x09, 0x19, 0x83,
	0x87, 0xde, 0x1f, 0xec, 0x7b, 0xeb, 0x38, 0xfe, 0x84, 0x2e, 0x0f, 0x79, 0x82, 0xb7, 0xd1, 0x6c,
	0x87, 0x77, 0x44, 0x71, 0x11, 0x68, 0x25, 0x8e, 0xc8, 0x38, 0x40, 0xa4, 0xae, 0xec, 0x05, 0x03,
	0xfd, 0x61, 0x3b, 0xfe, 0x8c, 0xe9, 0x8f, 0xa0, 0xc5, 0xcf, 0xd1, 0x98, 0x54, 0x4c, 0x71, 0x32,
	0x01, 0xd8, 0x7c, 0x5d, 0xd9, 0x33, 0x06, 0x03, 0xd9, 0xf1, 0x8d, 0x8d, 0xd7, 0x11, 0xec, 0x18,
	0xa4, 0x3c, 0x15, 0x64, 0x12, 0x66, 0x17, 0xea, 0xca, 0x9e, 0x1f, 0xda, 0x4b, 0x5b, 0x8e, 0x0f,
	0xdb, 0x7f, 0xe1, 0xa9, 0xc0, 0x07, 0x08, 0x07, 0xb1, 0x0c, 0x58, 0xa9, 0x44, 0x10, 0x71, 0x19,
	0x8a, 0x4b, 0x5e, 0x74, 0xc9, 0x14, 0xb0, 0x4f, 0xea, 0xca, 0x7e, 0x64, 0xd8, 0x7f, 0x67, 0x1c,
	0x7f, 0x6e, 0x5f, 0xee, 0x96, 0x4a, 0x7c, 0xba, 0x55, 0xf0, 0x12, 0xb2, 0x42, 0x11, 0x71, 0x82,
	0x80, 0x9e, 0x1b, 0xfc, 0x11, 0x5a, 0x75, 0x7c, 0x30, 0xf1, 0x9b, 0xde, 0x17, 0xcb, 0xcf, 0x45,
	0xc6, 0xc9, 0x34, 0x8c, 0x3e, 0xf8, 0xeb, 0x8b, 0x81, 0xe7, 0x98, 0x17, 0xfe, 0x55, 0xd7, 0xfd,
	0x93, 0xa9, 0x6e, 0xce, 0xc9, 0xcc, 0x9d, 0x27, 0xd3, 0x56, 0xef, 0x64, 0x87, 0xdd, 0x5c, 0xff,
	0x53, 0xd3, 0xa0, 0x77, 0x78, 0x78, 0xce, 0x14, 0x99, 0x05, 0xe8, 0x61, 0x5d, 0xd9, 0x78, 0x08,
	0x32, 0xa6, 0xe3, 0xc3, 0x4e, 0xdf, 0xa1, 0xd9, 0xdb, 0x39, 0xfe, 0xd8, 0x16, 0x2e, 0x67, 0xb2,
	0x2b, 0x72, 0xe9, 0x26, 0x22, 0x64, 0x89, 0x17, 0x8a, 0x4c, 0x15, 0x2c, 0x54, 0xd2, 0x5c, 0xd0,
	0x82, 0xe7, 0x82, 0xa6, 0x22, 0xe2, 0x89, 0xf4, 0x7a, 0x83, 0x1e, 0xb4, 0x9e, 0xbe, 0xd5, 0xad,
	0x71, 0x18, 0xda, 0xf8, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x3d, 0xb6, 0xc4, 0xbe, 0xf0, 0x03, 0x00,
	0x00,
}
