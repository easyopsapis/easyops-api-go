// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: instance_tree_child_node.proto

package cmdb

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//树子节点定义
type InstanceTreeChildNode struct {
	//
	//关系字段ID
	RelationFieldId string `protobuf:"bytes,1,opt,name=relation_field_id,json=relationFieldId,proto3" json:"relation_field_id" form:"relation_field_id"`
	//
	//过滤的字段列表, 留空代表返回所有字段(true: 表示指定获取字段, false: 表示指定不获取的字段)
	Fields *types.Struct `protobuf:"bytes,2,opt,name=fields,proto3" json:"fields" form:"fields"`
	//
	//忽略与父级无关联实例, 默认false
	IgnoreSingle bool `protobuf:"varint,3,opt,name=ignore_single,json=ignoreSingle,proto3" json:"ignore_single" form:"ignore_single"`
	//
	//子节点列表
	Child                []*InstanceTreeChildNode `protobuf:"bytes,4,rep,name=child,proto3" json:"child" form:"child"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *InstanceTreeChildNode) Reset()         { *m = InstanceTreeChildNode{} }
func (m *InstanceTreeChildNode) String() string { return proto.CompactTextString(m) }
func (*InstanceTreeChildNode) ProtoMessage()    {}
func (*InstanceTreeChildNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d8b0dec0f3120e6, []int{0}
}
func (m *InstanceTreeChildNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceTreeChildNode.Unmarshal(m, b)
}
func (m *InstanceTreeChildNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceTreeChildNode.Marshal(b, m, deterministic)
}
func (m *InstanceTreeChildNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceTreeChildNode.Merge(m, src)
}
func (m *InstanceTreeChildNode) XXX_Size() int {
	return xxx_messageInfo_InstanceTreeChildNode.Size(m)
}
func (m *InstanceTreeChildNode) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceTreeChildNode.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceTreeChildNode proto.InternalMessageInfo

func (m *InstanceTreeChildNode) GetRelationFieldId() string {
	if m != nil {
		return m.RelationFieldId
	}
	return ""
}

func (m *InstanceTreeChildNode) GetFields() *types.Struct {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *InstanceTreeChildNode) GetIgnoreSingle() bool {
	if m != nil {
		return m.IgnoreSingle
	}
	return false
}

func (m *InstanceTreeChildNode) GetChild() []*InstanceTreeChildNode {
	if m != nil {
		return m.Child
	}
	return nil
}

func init() {
	proto.RegisterType((*InstanceTreeChildNode)(nil), "cmdb.InstanceTreeChildNode")
}

func init() { proto.RegisterFile("instance_tree_child_node.proto", fileDescriptor_2d8b0dec0f3120e6) }

var fileDescriptor_2d8b0dec0f3120e6 = []byte{
	// 397 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x5f, 0x6b, 0xd5, 0x30,
	0x18, 0xc6, 0xe9, 0x36, 0x87, 0x76, 0x1b, 0xba, 0xa2, 0x58, 0xe6, 0x9f, 0x96, 0xe2, 0x45, 0x2f,
	0x6c, 0x32, 0x37, 0x10, 0x14, 0xfc, 0xd7, 0x81, 0xb0, 0x1b, 0x2f, 0x3a, 0xaf, 0x36, 0xb4, 0xa4,
	0x49, 0x4e, 0x16, 0x4e, 0xda, 0xf7, 0x90, 0xe4, 0x78, 0x50, 0xf1, 0x1b, 0xfa, 0x19, 0x2a, 0xf8,
	0x11, 0xfa, 0x09, 0xa4, 0x49, 0x8f, 0x7f, 0x70, 0x77, 0xef, 0xc3, 0xf3, 0xfc, 0xde, 0x3c, 0xe4,
	0x0d, 0x1f, 0xca, 0xce, 0x58, 0xd2, 0x51, 0x5e, 0x5b, 0xcd, 0x79, 0x4d, 0x2f, 0xa5, 0x62, 0x75,
	0x07, 0x8c, 0xa3, 0x85, 0x06, 0x0b, 0xd1, 0x16, 0x6d, 0x59, 0x73, 0x50, 0x08, 0x69, 0x2f, 0x97,
	0x0d, 0xa2, 0xd0, 0x62, 0x01, 0x02, 0xb0, 0x33, 0x9b, 0xe5, 0xcc, 0x29, 0x27, 0xdc, 0xe4, 0xa1,
	0x83, 0xa7, 0x7f, 0xc5, 0xdb, 0x95, 0xb4, 0x73, 0x58, 0x61, 0x01, 0x85, 0x33, 0x8b, 0x4f, 0x44,
	0x49, 0x46, 0x2c, 0x68, 0x83, 0x7f, 0x8f, 0x13, 0x77, 0x5f, 0x00, 0x08, 0xc5, 0xff, 0x6c, 0x37,
	0x56, 0x2f, 0xa9, 0xf5, 0x6e, 0xf6, 0x7d, 0x23, 0xbc, 0x73, 0x3a, 0xb5, 0x7d, 0xaf, 0x39, 0x3f,
	0x19, 0xbb, 0xbe, 0x03, 0xc6, 0xa3, 0x79, 0xb8, 0xaf, 0xb9, 0x22, 0x56, 0x42, 0x57, 0xcf, 0x24,
	0x57, 0xac, 0x96, 0x2c, 0x0e, 0xd2, 0x20, 0xbf, 0x51, 0xbe, 0x1a, 0xfa, 0x24, 0x9e, 0x81, 0x6e,
	0x9f, 0x67, 0xff, 0x45, 0xb2, 0x9f, 0x3f, 0x92, 0x24, 0x7c, 0xf0, 0xf1, 0x82, 0x14, 0x5f, 0xde,
	0x14, 0xe7, 0xf5, 0x87, 0x8b, 0xc3, 0xe2, 0xd9, 0x7a, 0xfe, 0x7a, 0xf8, 0xf8, 0xf8, 0xc9, 0xb7,
	0x47, 0xd5, 0xcd, 0x35, 0xf6, 0x76, 0xa4, 0x4e, 0x59, 0x54, 0x86, 0xdb, 0x6e, 0x81, 0x89, 0x37,
	0xd2, 0x20, 0xdf, 0x39, 0xba, 0x8b, 0x7c, 0x6b, 0xb4, 0x6e, 0x8d, 0xce, 0x5c, 0xeb, 0x72, 0x7f,
	0xe8, 0x93, 0x3d, 0xff, 0xb4, 0x07, 0xb2, 0x6a, 0x22, 0xa3, 0x17, 0xe1, 0x9e, 0x14, 0x1d, 0x68,
	0x5e, 0x1b, 0xd9, 0x09, 0xc5, 0xe3, 0xcd, 0x34, 0xc8, 0xaf, 0x97, 0xf1, 0xd0, 0x27, 0xb7, 0x3d,
	0xf1, 0x8f, 0x9d, 0x55, 0xbb, 0x5e, 0x9f, 0x39, 0x19, 0x9d, 0x84, 0xd7, 0xdc, 0xa1, 0xe2, 0xad,
	0x74, 0x33, 0xdf, 0x39, 0xba, 0x87, 0xc6, 0x23, 0xa1, 0x2b, 0xff, 0xa6, 0xbc, 0x35, 0xf4, 0xc9,
	0xae, 0xdf, 0xe9, 0x98, 0xac, 0xf2, 0x6c, 0xf9, 0xfa, 0xfc, 0xa5, 0x00, 0xc4, 0x89, 0xf9, 0x0c,
	0x0b, 0x83, 0x14, 0x50, 0xa2, 0x30, 0x85, 0xce, 0x6a, 0x42, 0xad, 0xf1, 0x27, 0xd0, 0x7c, 0x01,
	0x45, 0x0b, 0x8c, 0x2b, 0x83, 0xa7, 0x20, 0x76, 0x12, 0x8f, 0x0f, 0x36, 0xdb, 0x2e, 0x74, 0xfc,
	0x2b, 0x00, 0x00, 0xff, 0xff, 0x22, 0xba, 0xc8, 0x0a, 0x44, 0x02, 0x00, 0x00,
}
