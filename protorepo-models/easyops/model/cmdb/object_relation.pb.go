// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: object_relation.proto

package cmdb

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//模型关系
type ObjectRelation struct {
	//
	//关系名称, 不是必填, 而且在引入了 left_description 和 right_description 之后这个字段几乎处于废弃状态
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name" form:"name"`
	//
	//true 内置关系
	Protected bool `protobuf:"varint,2,opt,name=protected,proto3" json:"protected" form:"protected"`
	//
	//必须全局唯一: 新添加的关系ID字段建议增加下划线前缀
	RelationId string `protobuf:"bytes,3,opt,name=relation_id,json=relationId,proto3" json:"relation_id" form:"relation_id"`
	//
	//关系右端模型中表达左端模型实例的别名字段: 比如应用的负责人需要在应用的实例中表达出一个字段; 对已有模型添加关系时这个ID需要加下划线前缀避免冲突
	RightId string `protobuf:"bytes,4,opt,name=right_id,json=rightId,proto3" json:"right_id" form:"right_id"`
	//
	//是与 right_id 对应的含义, 但仅用于前端展示
	RightName string `protobuf:"bytes,5,opt,name=right_name,json=rightName,proto3" json:"right_name" form:"right_name"`
	//
	//是与 right_id 相反的含义, 但仅用于前端展示 (p.s.: 关系右端模型的描述)
	RightDescription string `protobuf:"bytes,6,opt,name=right_description,json=rightDescription,proto3" json:"right_description" form:"right_description"`
	//
	//关系在右端模型的哪些分组里
	RightGroups []string `protobuf:"bytes,7,rep,name=right_groups,json=rightGroups,proto3" json:"right_groups" form:"right_groups"`
	//
	//关系右端标签
	RightTags []string `protobuf:"bytes,8,rep,name=right_tags,json=rightTags,proto3" json:"right_tags" form:"right_tags"`
	//
	//关系右端的资源模型实例最多包含多少数量的关系: 有数据库级别的索引支持, 一般情况填 1 或者 -1, -1表示无限多
	RightMax int32 `protobuf:"varint,9,opt,name=right_max,json=rightMax,proto3" json:"right_max" form:"right_max"`
	//
	//关系右端的资源模型实例至少包含多少数量的关系: 目前来说这个字段是过度设计的字段, 一般填 0 就好了
	RightMin int32 `protobuf:"varint,10,opt,name=right_min,json=rightMin,proto3" json:"right_min" form:"right_min"`
	//
	//关系右端的模型ID
	RightObjectId string `protobuf:"bytes,11,opt,name=right_object_id,json=rightObjectId,proto3" json:"right_object_id" form:"right_object_id"`
	//
	//关系左端模型中表达右端模型实例的别名字段: 比如应用的负责人需要在应用的实例中表达出一个字段; 对已有模型添加关系时这个ID需要加下划线前缀避免冲突
	LeftId string `protobuf:"bytes,12,opt,name=left_id,json=leftId,proto3" json:"left_id" form:"left_id"`
	//
	//是与 left_id 对应的含义, 但仅用于前端展示
	LeftName string `protobuf:"bytes,13,opt,name=left_name,json=leftName,proto3" json:"left_name" form:"left_name"`
	//
	//是与 left_id 相反的含义, 但仅用于前端展示 (p.s.: 关系左端模型的描述)
	LeftDescription string `protobuf:"bytes,14,opt,name=left_description,json=leftDescription,proto3" json:"left_description" form:"left_description"`
	//
	//关系在左端模型的哪些分组里
	LeftGroups []string `protobuf:"bytes,15,rep,name=left_groups,json=leftGroups,proto3" json:"left_groups" form:"left_groups"`
	//
	//关系左端标签
	LeftTags []string `protobuf:"bytes,16,rep,name=left_tags,json=leftTags,proto3" json:"left_tags" form:"left_tags"`
	//
	//关系左端的资源模型实例最多包含多少数量的关系: 有数据库级别的索引支持, 一般情况填1 或者 -1, -1表示无限多
	LeftMax int32 `protobuf:"varint,17,opt,name=left_max,json=leftMax,proto3" json:"left_max" form:"left_max"`
	//
	//关系左端的资源模型实例至少包含多少数量的关系: 目前来说这个字段是过度设计的字段, 一般填0就好了
	LeftMin int32 `protobuf:"varint,18,opt,name=left_min,json=leftMin,proto3" json:"left_min" form:"left_min"`
	//
	//关系左端的模型ID
	LeftObjectId string `protobuf:"bytes,19,opt,name=left_object_id,json=leftObjectId,proto3" json:"left_object_id" form:"left_object_id"`
	//
	//创建者
	Creator string `protobuf:"bytes,20,opt,name=creator,proto3" json:"creator" form:"creator"`
	//
	//创建时间
	Ctime string `protobuf:"bytes,21,opt,name=ctime,proto3" json:"ctime" form:"ctime"`
	//
	//创建时间的时间截
	XTs int32 `protobuf:"varint,22,opt,name=_ts,json=Ts,proto3" json:"_ts" form:"_ts"`
	//
	//版本
	XVersion int32 `protobuf:"varint,23,opt,name=_version,json=Version,proto3" json:"_version" form:"_version"`
	//
	//是否继承自父模型
	IsInherit            bool     `protobuf:"varint,24,opt,name=isInherit,proto3" json:"isInherit" form:"isInherit"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ObjectRelation) Reset()         { *m = ObjectRelation{} }
func (m *ObjectRelation) String() string { return proto.CompactTextString(m) }
func (*ObjectRelation) ProtoMessage()    {}
func (*ObjectRelation) Descriptor() ([]byte, []int) {
	return fileDescriptor_94f967a991685d94, []int{0}
}
func (m *ObjectRelation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectRelation.Unmarshal(m, b)
}
func (m *ObjectRelation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectRelation.Marshal(b, m, deterministic)
}
func (m *ObjectRelation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectRelation.Merge(m, src)
}
func (m *ObjectRelation) XXX_Size() int {
	return xxx_messageInfo_ObjectRelation.Size(m)
}
func (m *ObjectRelation) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectRelation.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectRelation proto.InternalMessageInfo

func (m *ObjectRelation) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ObjectRelation) GetProtected() bool {
	if m != nil {
		return m.Protected
	}
	return false
}

func (m *ObjectRelation) GetRelationId() string {
	if m != nil {
		return m.RelationId
	}
	return ""
}

func (m *ObjectRelation) GetRightId() string {
	if m != nil {
		return m.RightId
	}
	return ""
}

func (m *ObjectRelation) GetRightName() string {
	if m != nil {
		return m.RightName
	}
	return ""
}

func (m *ObjectRelation) GetRightDescription() string {
	if m != nil {
		return m.RightDescription
	}
	return ""
}

func (m *ObjectRelation) GetRightGroups() []string {
	if m != nil {
		return m.RightGroups
	}
	return nil
}

func (m *ObjectRelation) GetRightTags() []string {
	if m != nil {
		return m.RightTags
	}
	return nil
}

func (m *ObjectRelation) GetRightMax() int32 {
	if m != nil {
		return m.RightMax
	}
	return 0
}

func (m *ObjectRelation) GetRightMin() int32 {
	if m != nil {
		return m.RightMin
	}
	return 0
}

func (m *ObjectRelation) GetRightObjectId() string {
	if m != nil {
		return m.RightObjectId
	}
	return ""
}

func (m *ObjectRelation) GetLeftId() string {
	if m != nil {
		return m.LeftId
	}
	return ""
}

func (m *ObjectRelation) GetLeftName() string {
	if m != nil {
		return m.LeftName
	}
	return ""
}

func (m *ObjectRelation) GetLeftDescription() string {
	if m != nil {
		return m.LeftDescription
	}
	return ""
}

func (m *ObjectRelation) GetLeftGroups() []string {
	if m != nil {
		return m.LeftGroups
	}
	return nil
}

func (m *ObjectRelation) GetLeftTags() []string {
	if m != nil {
		return m.LeftTags
	}
	return nil
}

func (m *ObjectRelation) GetLeftMax() int32 {
	if m != nil {
		return m.LeftMax
	}
	return 0
}

func (m *ObjectRelation) GetLeftMin() int32 {
	if m != nil {
		return m.LeftMin
	}
	return 0
}

func (m *ObjectRelation) GetLeftObjectId() string {
	if m != nil {
		return m.LeftObjectId
	}
	return ""
}

func (m *ObjectRelation) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *ObjectRelation) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

func (m *ObjectRelation) GetXTs() int32 {
	if m != nil {
		return m.XTs
	}
	return 0
}

func (m *ObjectRelation) GetXVersion() int32 {
	if m != nil {
		return m.XVersion
	}
	return 0
}

func (m *ObjectRelation) GetIsInherit() bool {
	if m != nil {
		return m.IsInherit
	}
	return false
}

func init() {
	proto.RegisterType((*ObjectRelation)(nil), "cmdb.ObjectRelation")
}

func init() { proto.RegisterFile("object_relation.proto", fileDescriptor_94f967a991685d94) }

var fileDescriptor_94f967a991685d94 = []byte{
	// 880 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0x56, 0xb6, 0x3f, 0x69, 0x26, 0xd9, 0xa4, 0x75, 0xb7, 0xed, 0x50, 0x40, 0x0e, 0xde, 0x5e,
	0x38, 0xbb, 0x4c, 0xfe, 0xda, 0x5d, 0xd4, 0x5c, 0x10, 0x88, 0x10, 0x28, 0x17, 0x2c, 0xc2, 0x14,
	0x2e, 0x6a, 0xb2, 0x91, 0x63, 0xbb, 0xee, 0x40, 0xec, 0x89, 0x6c, 0x77, 0x77, 0xa1, 0xd9, 0x17,
	0x42, 0xe2, 0x15, 0xb8, 0xe0, 0x2d, 0xb8, 0x31, 0x12, 0x8f, 0xe0, 0x27, 0x40, 0x73, 0xc6, 0x3f,
	0x43, 0x29, 0x12, 0x57, 0x39, 0xe7, 0x7c, 0x3f, 0x3a, 0x33, 0x9f, 0xed, 0xa0, 0x03, 0xb6, 0xf8,
	0xc1, 0xb5, 0xe3, 0x79, 0xe8, 0x2e, 0xad, 0x98, 0xb2, 0xa0, 0xbb, 0x0a, 0x59, 0xcc, 0x94, 0x4d,
	0xdb, 0x77, 0x16, 0xc7, 0xc4, 0xa3, 0xf1, 0xf5, 0xcd, 0xa2, 0x6b, 0x33, 0xbf, 0xe7, 0x31, 0x8f,
	0xf5, 0x00, 0x5c, 0xdc, 0x5c, 0x41, 0x07, 0x0d, 0x54, 0x42, 0x74, 0xfc, 0x5c, 0xa2, 0xfb, 0xaf,
	0x69, 0xfc, 0x23, 0x7b, 0xdd, 0xf3, 0x18, 0x01, 0x90, 0xbc, 0xb2, 0x96, 0xd4, 0xb1, 0x62, 0x16,
	0x46, 0xbd, 0xa2, 0x14, 0x3a, 0xed, 0xb7, 0x06, 0x6a, 0x7e, 0x05, 0x6b, 0x18, 0xd9, 0x16, 0xca,
	0x63, 0xb4, 0x19, 0x58, 0xbe, 0x8b, 0x2b, 0xed, 0x8a, 0x5e, 0x9b, 0xb4, 0xd2, 0x44, 0xad, 0x5f,
	0xb1, 0xd0, 0x1f, 0x69, 0x7c, 0xaa, 0x19, 0x00, 0x2a, 0x43, 0x54, 0xe3, 0x06, 0xae, 0x1d, 0xbb,
	0x0e, 0x7e, 0xd0, 0xae, 0xe8, 0x3b, 0x93, 0x47, 0x69, 0xa2, 0xee, 0x0a, 0x66, 0x01, 0x69, 0x46,
	0x49, 0x53, 0xbe, 0x45, 0xf5, 0xfc, 0xa8, 0x73, 0xea, 0xe0, 0x0d, 0xf0, 0x3f, 0x4b, 0x13, 0x55,
	0x11, 0x2a, 0x09, 0xd4, 0xfe, 0xfa, 0x53, 0x3d, 0x46, 0xf8, 0xa5, 0x69, 0x91, 0x9f, 0x3f, 0x25,
	0x97, 0xf3, 0x99, 0xd9, 0x27, 0xe7, 0x79, 0xfd, 0xe4, 0xc4, 0x40, 0x39, 0x77, 0xea, 0x28, 0x5f,
	0xa3, 0x9d, 0x90, 0x7a, 0xd7, 0x31, 0xf7, 0xdc, 0x04, 0xcf, 0xe7, 0x69, 0xa2, 0xb6, 0x32, 0xcf,
	0x0c, 0xe1, 0x86, 0x2a, 0x7a, 0xff, 0x7e, 0xc3, 0xdb, 0xfe, 0x87, 0xa7, 0x83, 0xb7, 0x27, 0x46,
	0x15, 0xd8, 0x53, 0x47, 0x39, 0x43, 0x48, 0x08, 0xe1, 0x22, 0xb6, 0xc0, 0xf4, 0x20, 0x4d, 0xd4,
	0x3d, 0xd9, 0x54, 0x5c, 0x47, 0x0d, 0x9a, 0x17, 0xfc, 0x4e, 0xa6, 0x68, 0x4f, 0x20, 0x8e, 0x1b,
	0xd9, 0x21, 0x5d, 0xf1, 0xfd, 0xf0, 0x36, 0x88, 0xdf, 0x4b, 0x13, 0x15, 0xcb, 0x62, 0x89, 0xa2,
	0x19, 0xbb, 0x30, 0xfb, 0xac, 0x1c, 0x29, 0x23, 0xd4, 0x10, 0x3c, 0x2f, 0x64, 0x37, 0xab, 0x08,
	0x57, 0xdb, 0x1b, 0x7a, 0x6d, 0x72, 0x94, 0x26, 0xea, 0xbe, 0xec, 0x22, 0x50, 0xcd, 0xa8, 0x43,
	0xfb, 0x05, 0x74, 0xe5, 0xf2, 0xb1, 0xe5, 0x45, 0x78, 0x07, 0x94, 0xff, 0x5a, 0x9e, 0x63, 0xf9,
	0xf2, 0x17, 0x96, 0x17, 0x29, 0x03, 0x24, 0x9a, 0xb9, 0x6f, 0xbd, 0xc1, 0xb5, 0x76, 0x45, 0xdf,
	0x92, 0x03, 0x2d, 0x20, 0xcd, 0x10, 0x97, 0xfd, 0xa5, 0xf5, 0x46, 0x92, 0xd0, 0x00, 0xa3, 0xff,
	0x90, 0xd0, 0xa0, 0x90, 0xd0, 0x40, 0x99, 0xa0, 0x96, 0x98, 0x67, 0x8f, 0x3e, 0x75, 0x70, 0x1d,
	0x2e, 0xe8, 0x38, 0x4d, 0xd4, 0x43, 0x59, 0x58, 0x10, 0x34, 0xe3, 0x21, 0x4c, 0xc4, 0x53, 0x3a,
	0x75, 0x94, 0x17, 0xa8, 0xba, 0x74, 0xaf, 0x40, 0xdb, 0x00, 0xed, 0xb3, 0x34, 0x51, 0x9b, 0x42,
	0x9b, 0x01, 0xff, 0x2b, 0xed, 0x6d, 0x4e, 0x9e, 0x3a, 0xfc, 0x18, 0x20, 0x83, 0xac, 0x1f, 0x82,
	0xa3, 0x74, 0x8c, 0x02, 0xd2, 0x8c, 0x1d, 0x5e, 0x43, 0xd2, 0x9f, 0xa3, 0x5d, 0x98, 0xcb, 0x41,
	0x37, 0x41, 0xf9, 0x6e, 0x9a, 0xa8, 0x47, 0x92, 0xf2, 0x1f, 0x39, 0xb7, 0xf8, 0x48, 0x8e, 0xf9,
	0x23, 0x54, 0x07, 0x56, 0x96, 0x72, 0x0b, 0xb2, 0x3a, 0x2c, 0xdf, 0x08, 0x09, 0xd4, 0x0c, 0xc4,
	0xbb, 0x2c, 0xe3, 0x7c, 0x67, 0x88, 0x78, 0x17, 0x64, 0x77, 0x77, 0x16, 0x09, 0xc3, 0xce, 0x10,
	0x70, 0x17, 0x41, 0x0d, 0xf9, 0xee, 0x41, 0x58, 0xfb, 0xe5, 0x6b, 0x92, 0x23, 0x9a, 0x01, 0x77,
	0xcb, 0xd3, 0x2d, 0xf8, 0x34, 0xc0, 0xca, 0xfd, 0x7c, 0x9e, 0xad, 0xe0, 0xd3, 0x40, 0x19, 0xa3,
	0x26, 0x4c, 0xcb, 0x64, 0xf7, 0xe1, 0x46, 0xde, 0x49, 0x13, 0xf5, 0x40, 0x52, 0x49, 0xc1, 0x36,
	0xf8, 0xa0, 0xc8, 0xf5, 0x1b, 0x54, 0xb5, 0x43, 0x97, 0x7f, 0x9b, 0xf0, 0x23, 0x50, 0x9e, 0x97,
	0xb9, 0x66, 0x00, 0xcf, 0xf5, 0x31, 0xfa, 0x20, 0xcf, 0xb5, 0x4f, 0xce, 0x67, 0x66, 0xb7, 0xa8,
	0xe7, 0x64, 0x76, 0x3b, 0xcc, 0xde, 0xe4, 0x4c, 0xa0, 0xfc, 0x51, 0x41, 0x5b, 0x76, 0x4c, 0x7d,
	0x17, 0x1f, 0x80, 0xe7, 0xef, 0x95, 0x34, 0x51, 0x1b, 0x99, 0x29, 0x9f, 0x73, 0xcb, 0x5f, 0x2b,
	0xe8, 0x97, 0xca, 0x4b, 0x5d, 0x1f, 0x8f, 0xcc, 0x01, 0xb7, 0xe4, 0xbe, 0x4f, 0x3a, 0x63, 0xf8,
	0xbd, 0x3d, 0x7b, 0xdb, 0x21, 0xfa, 0xc0, 0xec, 0x93, 0xe1, 0x6c, 0xdd, 0x07, 0xbc, 0x43, 0xf4,
	0x53, 0xb3, 0x4f, 0x06, 0x79, 0xbf, 0x36, 0x07, 0x64, 0x28, 0x54, 0x1d, 0xf3, 0xa2, 0x3d, 0xd3,
	0x87, 0x66, 0x9f, 0x9c, 0xce, 0xd6, 0xc0, 0x11, 0xe3, 0x91, 0x6e, 0xf6, 0xc9, 0xb3, 0xbc, 0x29,
	0x6b, 0xfd, 0xfb, 0x2e, 0xfc, 0x3e, 0xed, 0x8c, 0xf5, 0xcb, 0xb5, 0xf9, 0x94, 0xcc, 0xf4, 0xf1,
	0xe8, 0x1e, 0xb9, 0xa4, 0x1e, 0x9f, 0x18, 0xe2, 0x44, 0x8a, 0x8a, 0x36, 0xe6, 0x71, 0x84, 0x0f,
	0x21, 0x9c, 0x66, 0x9a, 0xa8, 0x48, 0x9c, 0x6b, 0x1e, 0x47, 0x9a, 0xf1, 0xe0, 0x02, 0x22, 0x9f,
	0xbf, 0x72, 0xc3, 0x88, 0x3f, 0x9e, 0x47, 0x77, 0x23, 0xcc, 0x11, 0xcd, 0xa8, 0x7e, 0x27, 0x2a,
	0xfe, 0x51, 0xa7, 0xd1, 0x34, 0xb8, 0x76, 0x43, 0x1a, 0x63, 0x7c, 0xf7, 0xa3, 0x5e, 0x40, 0x9a,
	0x51, 0xd2, 0x26, 0x9f, 0x5c, 0x7e, 0xec, 0xb1, 0xae, 0x6b, 0x45, 0x3f, 0xb1, 0x55, 0xd4, 0x5d,
	0x32, 0xdb, 0x5a, 0xf6, 0x6c, 0x16, 0xc4, 0xa1, 0x65, 0xc7, 0x91, 0xf8, 0xd3, 0x0a, 0xdd, 0x15,
	0x23, 0x3e, 0x73, 0xdc, 0x65, 0xd4, 0xcb, 0x88, 0x3d, 0x68, 0x7b, 0xfc, 0x9f, 0x6e, 0xb1, 0x0d,
	0xa4, 0xd3, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xec, 0xf7, 0xc8, 0xb0, 0x0f, 0x07, 0x00, 0x00,
}
