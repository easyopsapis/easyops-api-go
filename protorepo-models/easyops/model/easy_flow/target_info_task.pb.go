// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: target_info_task.proto

package easy_flow

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	cmdb "github.com/easyopsapis/easyops-api-go/protorepo-models/easyops/model/cmdb"
	file_repository "github.com/easyopsapis/easyops-api-go/protorepo-models/easyops/model/file_repository"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//目标设备信息
type TaskTargetInfo struct {
	//
	//目标设备Id
	TargetId string `protobuf:"bytes,1,opt,name=targetId,proto3" json:"targetId" form:"targetId"`
	//
	//目标设备名称
	TargetName string `protobuf:"bytes,2,opt,name=targetName,proto3" json:"targetName" form:"targetName"`
	//
	//实例Id
	InstanceId string `protobuf:"bytes,3,opt,name=instanceId,proto3" json:"instanceId" form:"instanceId"`
	//
	//集群列表
	Cluster *cmdb.ClusterInfo `protobuf:"bytes,4,opt,name=cluster,proto3" json:"cluster" form:"cluster"`
	//
	//目标设备上次成功部署的实例信息
	InstanceInfo []*TaskTargetInfo_InstanceInfo `protobuf:"bytes,5,rep,name=instanceInfo,proto3" json:"instanceInfo" form:"instanceInfo"`
	//
	//包版本信息
	VersionInfo          *TaskTargetInfo_VersionInfo `protobuf:"bytes,6,opt,name=versionInfo,proto3" json:"versionInfo" form:"versionInfo"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *TaskTargetInfo) Reset()         { *m = TaskTargetInfo{} }
func (m *TaskTargetInfo) String() string { return proto.CompactTextString(m) }
func (*TaskTargetInfo) ProtoMessage()    {}
func (*TaskTargetInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_6572304d35f684a6, []int{0}
}
func (m *TaskTargetInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskTargetInfo.Unmarshal(m, b)
}
func (m *TaskTargetInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskTargetInfo.Marshal(b, m, deterministic)
}
func (m *TaskTargetInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskTargetInfo.Merge(m, src)
}
func (m *TaskTargetInfo) XXX_Size() int {
	return xxx_messageInfo_TaskTargetInfo.Size(m)
}
func (m *TaskTargetInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskTargetInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TaskTargetInfo proto.InternalMessageInfo

func (m *TaskTargetInfo) GetTargetId() string {
	if m != nil {
		return m.TargetId
	}
	return ""
}

func (m *TaskTargetInfo) GetTargetName() string {
	if m != nil {
		return m.TargetName
	}
	return ""
}

func (m *TaskTargetInfo) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *TaskTargetInfo) GetCluster() *cmdb.ClusterInfo {
	if m != nil {
		return m.Cluster
	}
	return nil
}

func (m *TaskTargetInfo) GetInstanceInfo() []*TaskTargetInfo_InstanceInfo {
	if m != nil {
		return m.InstanceInfo
	}
	return nil
}

func (m *TaskTargetInfo) GetVersionInfo() *TaskTargetInfo_VersionInfo {
	if m != nil {
		return m.VersionInfo
	}
	return nil
}

type TaskTargetInfo_InstanceInfo struct {
	//
	//版本名
	VersionName string `protobuf:"bytes,1,opt,name=versionName,proto3" json:"versionName" form:"versionName"`
	//
	//包Id
	PackageId string `protobuf:"bytes,2,opt,name=packageId,proto3" json:"packageId" form:"packageId"`
	//
	//安装路径
	InstallPath string `protobuf:"bytes,3,opt,name=installPath,proto3" json:"installPath" form:"installPath"`
	//
	//版本Id
	VersionId            string   `protobuf:"bytes,4,opt,name=versionId,proto3" json:"versionId" form:"versionId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskTargetInfo_InstanceInfo) Reset()         { *m = TaskTargetInfo_InstanceInfo{} }
func (m *TaskTargetInfo_InstanceInfo) String() string { return proto.CompactTextString(m) }
func (*TaskTargetInfo_InstanceInfo) ProtoMessage()    {}
func (*TaskTargetInfo_InstanceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_6572304d35f684a6, []int{0, 0}
}
func (m *TaskTargetInfo_InstanceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskTargetInfo_InstanceInfo.Unmarshal(m, b)
}
func (m *TaskTargetInfo_InstanceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskTargetInfo_InstanceInfo.Marshal(b, m, deterministic)
}
func (m *TaskTargetInfo_InstanceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskTargetInfo_InstanceInfo.Merge(m, src)
}
func (m *TaskTargetInfo_InstanceInfo) XXX_Size() int {
	return xxx_messageInfo_TaskTargetInfo_InstanceInfo.Size(m)
}
func (m *TaskTargetInfo_InstanceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskTargetInfo_InstanceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TaskTargetInfo_InstanceInfo proto.InternalMessageInfo

func (m *TaskTargetInfo_InstanceInfo) GetVersionName() string {
	if m != nil {
		return m.VersionName
	}
	return ""
}

func (m *TaskTargetInfo_InstanceInfo) GetPackageId() string {
	if m != nil {
		return m.PackageId
	}
	return ""
}

func (m *TaskTargetInfo_InstanceInfo) GetInstallPath() string {
	if m != nil {
		return m.InstallPath
	}
	return ""
}

func (m *TaskTargetInfo_InstanceInfo) GetVersionId() string {
	if m != nil {
		return m.VersionId
	}
	return ""
}

type TaskTargetInfo_VersionInfo struct {
	//
	//包存储源信息
	SourceDecode *TaskTargetInfo_VersionInfo_SourceDecode `protobuf:"bytes,1,opt,name=sourceDecode,proto3" json:"sourceDecode" form:"sourceDecode"`
	//
	//包存储源序列化信息
	Source string `protobuf:"bytes,2,opt,name=source,proto3" json:"source" form:"source"`
	//
	//包diff信息
	Diff []*file_repository.Diff `protobuf:"bytes,3,rep,name=diff,proto3" json:"diff" form:"diff"`
	//
	//包名称
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name" form:"name"`
	//
	//版本Id
	VersionId string `protobuf:"bytes,5,opt,name=versionId,proto3" json:"versionId" form:"versionId"`
	//
	//包Id
	PackageId string `protobuf:"bytes,6,opt,name=packageId,proto3" json:"packageId" form:"packageId"`
	//
	//组织id
	Org int32 `protobuf:"varint,7,opt,name=org,proto3" json:"org" form:"org"`
	//
	//创建者
	Creator string `protobuf:"bytes,8,opt,name=creator,proto3" json:"creator" form:"creator"`
	//
	//版本备注
	Memo string `protobuf:"bytes,9,opt,name=memo,proto3" json:"memo" form:"memo"`
	//
	//创建时间
	Ctime string `protobuf:"bytes,10,opt,name=ctime,proto3" json:"ctime" form:"ctime"`
	//
	//修改时间
	Mtime string `protobuf:"bytes,11,opt,name=mtime,proto3" json:"mtime" form:"mtime"`
	//
	//包文件的md5检验值
	Sign string `protobuf:"bytes,12,opt,name=sign,proto3" json:"sign" form:"sign"`
	//
	//包存储服务版本
	SourceType string `protobuf:"bytes,13,opt,name=sourceType,proto3" json:"sourceType" form:"sourceType"`
	//
	//版本的进程及启停、安装、升级脚本, package.conf.yaml
	Conf string `protobuf:"bytes,14,opt,name=conf,proto3" json:"conf" form:"conf"`
	//
	//版本类型 1 开发, 3 测试, 7 预发布, 15 生产
	EnvType              int32    `protobuf:"varint,15,opt,name=env_type,json=envType,proto3" json:"env_type" form:"env_type"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskTargetInfo_VersionInfo) Reset()         { *m = TaskTargetInfo_VersionInfo{} }
func (m *TaskTargetInfo_VersionInfo) String() string { return proto.CompactTextString(m) }
func (*TaskTargetInfo_VersionInfo) ProtoMessage()    {}
func (*TaskTargetInfo_VersionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_6572304d35f684a6, []int{0, 1}
}
func (m *TaskTargetInfo_VersionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskTargetInfo_VersionInfo.Unmarshal(m, b)
}
func (m *TaskTargetInfo_VersionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskTargetInfo_VersionInfo.Marshal(b, m, deterministic)
}
func (m *TaskTargetInfo_VersionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskTargetInfo_VersionInfo.Merge(m, src)
}
func (m *TaskTargetInfo_VersionInfo) XXX_Size() int {
	return xxx_messageInfo_TaskTargetInfo_VersionInfo.Size(m)
}
func (m *TaskTargetInfo_VersionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskTargetInfo_VersionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TaskTargetInfo_VersionInfo proto.InternalMessageInfo

func (m *TaskTargetInfo_VersionInfo) GetSourceDecode() *TaskTargetInfo_VersionInfo_SourceDecode {
	if m != nil {
		return m.SourceDecode
	}
	return nil
}

func (m *TaskTargetInfo_VersionInfo) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *TaskTargetInfo_VersionInfo) GetDiff() []*file_repository.Diff {
	if m != nil {
		return m.Diff
	}
	return nil
}

func (m *TaskTargetInfo_VersionInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TaskTargetInfo_VersionInfo) GetVersionId() string {
	if m != nil {
		return m.VersionId
	}
	return ""
}

func (m *TaskTargetInfo_VersionInfo) GetPackageId() string {
	if m != nil {
		return m.PackageId
	}
	return ""
}

func (m *TaskTargetInfo_VersionInfo) GetOrg() int32 {
	if m != nil {
		return m.Org
	}
	return 0
}

func (m *TaskTargetInfo_VersionInfo) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *TaskTargetInfo_VersionInfo) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *TaskTargetInfo_VersionInfo) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

func (m *TaskTargetInfo_VersionInfo) GetMtime() string {
	if m != nil {
		return m.Mtime
	}
	return ""
}

func (m *TaskTargetInfo_VersionInfo) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

func (m *TaskTargetInfo_VersionInfo) GetSourceType() string {
	if m != nil {
		return m.SourceType
	}
	return ""
}

func (m *TaskTargetInfo_VersionInfo) GetConf() string {
	if m != nil {
		return m.Conf
	}
	return ""
}

func (m *TaskTargetInfo_VersionInfo) GetEnvType() int32 {
	if m != nil {
		return m.EnvType
	}
	return 0
}

type TaskTargetInfo_VersionInfo_SourceDecode struct {
	//
	//源服务名字
	EnsName string `protobuf:"bytes,1,opt,name=ensName,proto3" json:"ensName" form:"ensName"`
	//
	//源域名
	Host string `protobuf:"bytes,2,opt,name=host,proto3" json:"host" form:"host"`
	//
	//源类型
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type" form:"type"`
	//
	//http源的ip
	Ip string `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip" form:"ip"`
	//
	//http源的port
	Port                 int32    `protobuf:"varint,5,opt,name=port,proto3" json:"port" form:"port"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskTargetInfo_VersionInfo_SourceDecode) Reset() {
	*m = TaskTargetInfo_VersionInfo_SourceDecode{}
}
func (m *TaskTargetInfo_VersionInfo_SourceDecode) String() string { return proto.CompactTextString(m) }
func (*TaskTargetInfo_VersionInfo_SourceDecode) ProtoMessage()    {}
func (*TaskTargetInfo_VersionInfo_SourceDecode) Descriptor() ([]byte, []int) {
	return fileDescriptor_6572304d35f684a6, []int{0, 1, 0}
}
func (m *TaskTargetInfo_VersionInfo_SourceDecode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskTargetInfo_VersionInfo_SourceDecode.Unmarshal(m, b)
}
func (m *TaskTargetInfo_VersionInfo_SourceDecode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskTargetInfo_VersionInfo_SourceDecode.Marshal(b, m, deterministic)
}
func (m *TaskTargetInfo_VersionInfo_SourceDecode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskTargetInfo_VersionInfo_SourceDecode.Merge(m, src)
}
func (m *TaskTargetInfo_VersionInfo_SourceDecode) XXX_Size() int {
	return xxx_messageInfo_TaskTargetInfo_VersionInfo_SourceDecode.Size(m)
}
func (m *TaskTargetInfo_VersionInfo_SourceDecode) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskTargetInfo_VersionInfo_SourceDecode.DiscardUnknown(m)
}

var xxx_messageInfo_TaskTargetInfo_VersionInfo_SourceDecode proto.InternalMessageInfo

func (m *TaskTargetInfo_VersionInfo_SourceDecode) GetEnsName() string {
	if m != nil {
		return m.EnsName
	}
	return ""
}

func (m *TaskTargetInfo_VersionInfo_SourceDecode) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *TaskTargetInfo_VersionInfo_SourceDecode) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TaskTargetInfo_VersionInfo_SourceDecode) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *TaskTargetInfo_VersionInfo_SourceDecode) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func init() {
	proto.RegisterType((*TaskTargetInfo)(nil), "easy_flow.TaskTargetInfo")
	proto.RegisterType((*TaskTargetInfo_InstanceInfo)(nil), "easy_flow.TaskTargetInfo.InstanceInfo")
	proto.RegisterType((*TaskTargetInfo_VersionInfo)(nil), "easy_flow.TaskTargetInfo.VersionInfo")
	proto.RegisterType((*TaskTargetInfo_VersionInfo_SourceDecode)(nil), "easy_flow.TaskTargetInfo.VersionInfo.SourceDecode")
}

func init() { proto.RegisterFile("target_info_task.proto", fileDescriptor_6572304d35f684a6) }

var fileDescriptor_6572304d35f684a6 = []byte{
	// 1122 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x56, 0xdb, 0x6e, 0xe3, 0x44,
	0x18, 0x5e, 0x37, 0xe9, 0x69, 0x92, 0x9e, 0x66, 0x4f, 0x56, 0x25, 0xe4, 0xe2, 0x2d, 0x2b, 0xa7,
	0x5d, 0xdb, 0x49, 0xca, 0xa2, 0x6d, 0x84, 0x88, 0x36, 0xbb, 0x80, 0x72, 0x83, 0xd8, 0x69, 0xc5,
	0x45, 0xed, 0x24, 0x72, 0x1d, 0x3b, 0x35, 0x4d, 0x3c, 0x96, 0xed, 0xb6, 0x74, 0x9b, 0x5e, 0x82,
	0xe0, 0x0d, 0x78, 0x06, 0x24, 0x5e, 0x82, 0x4b, 0xde, 0x80, 0x1b, 0x23, 0x71, 0xc5, 0xb5, 0x9f,
	0x00, 0xcd, 0x8c, 0xe3, 0x4c, 0x53, 0x90, 0x60, 0xa5, 0xd5, 0x8a, 0x2b, 0xcf, 0xfc, 0xdf, 0xf7,
	0x9f, 0x7f, 0xcf, 0x0c, 0x78, 0x10, 0x5b, 0xe1, 0xc0, 0x89, 0x7b, 0x9e, 0xef, 0xe2, 0x5e, 0x6c,
	0x45, 0xa7, 0x5a, 0x10, 0xe2, 0x18, 0xc3, 0x65, 0xc7, 0x8a, 0x2e, 0x7b, 0xee, 0x10, 0x5f, 0x6c,
	0xaa, 0x03, 0x2f, 0x3e, 0x39, 0x3b, 0xd6, 0x6c, 0x3c, 0xd2, 0x07, 0x78, 0x80, 0x75, 0xca, 0x38,
	0x3e, 0x73, 0xe9, 0x8e, 0x6e, 0xe8, 0x8a, 0x69, 0x6e, 0xbe, 0x1a, 0x60, 0x8d, 0x28, 0xe3, 0x20,
	0xd2, 0x86, 0xd8, 0xb6, 0x86, 0xba, 0x8d, 0xfd, 0x38, 0xb4, 0xec, 0x38, 0x62, 0x9a, 0xa1, 0x13,
	0x60, 0x75, 0x84, 0xfb, 0xce, 0x30, 0xd2, 0x33, 0xa2, 0x4e, 0xb7, 0xba, 0x3d, 0xea, 0x1f, 0xeb,
	0xf6, 0xf0, 0x2c, 0x8a, 0x9d, 0x90, 0x46, 0x94, 0x99, 0x3c, 0x7c, 0x73, 0x93, 0xae, 0x37, 0x74,
	0x7a, 0x04, 0x8e, 0xbc, 0x18, 0x87, 0x97, 0x7a, 0xdf, 0x73, 0xdd, 0xcc, 0xea, 0x47, 0x5c, 0x5e,
	0xa3, 0x0b, 0x2f, 0x3e, 0xc5, 0x17, 0xfa, 0x00, 0xab, 0x14, 0x54, 0xcf, 0xad, 0xa1, 0xd7, 0xb7,
	0x62, 0x1c, 0x46, 0x7a, 0xbe, 0x64, 0x7a, 0xf2, 0x8f, 0xf7, 0xc0, 0xea, 0xa1, 0x15, 0x9d, 0x1e,
	0xd2, 0xca, 0xb5, 0x7d, 0x17, 0xc3, 0xef, 0x04, 0xb0, 0xc4, 0x0a, 0xd9, 0xee, 0x8b, 0xc2, 0x96,
	0xa0, 0x2c, 0xb7, 0xbe, 0x4e, 0x13, 0x69, 0xcd, 0xc5, 0xe1, 0xa8, 0x21, 0x4f, 0x10, 0xf9, 0x8f,
	0xdf, 0xa5, 0x03, 0xf0, 0xaa, 0x6b, 0x58, 0xaa, 0xfb, 0x5c, 0xfd, 0xac, 0xaa, 0xee, 0x77, 0xae,
	0x9e, 0x5d, 0xab, 0x4d, 0x7e, 0xff, 0xe1, 0x7f, 0xdc, 0xd7, 0xea, 0xd7, 0xdb, 0x28, 0xf7, 0x0d,
	0x9f, 0x02, 0xc0, 0xd6, 0x5f, 0x58, 0x23, 0x47, 0x9c, 0xa3, 0x91, 0xdc, 0x4f, 0x13, 0x69, 0x83,
	0x8f, 0x84, 0x60, 0x32, 0xe2, 0x88, 0xb0, 0x0d, 0x80, 0xe7, 0x47, 0xb1, 0xe5, 0xdb, 0x4e, 0xbb,
	0x2f, 0x16, 0xa8, 0x5a, 0x65, 0xaa, 0x36, 0xc5, 0x48, 0x0a, 0xeb, 0x60, 0xb5, 0x6b, 0x54, 0xd5,
	0x7d, 0x4b, 0x7d, 0xdd, 0xb9, 0xaa, 0xed, 0x5d, 0x6f, 0x23, 0x4e, 0x19, 0x36, 0xc1, 0x62, 0xd6,
	0x41, 0xb1, 0xb8, 0x25, 0x28, 0xa5, 0xfa, 0x86, 0x46, 0xda, 0xaa, 0xbd, 0x60, 0x42, 0x52, 0xae,
	0x16, 0x4c, 0x13, 0x69, 0x95, 0x99, 0xce, 0xb8, 0x32, 0x9a, 0x68, 0x41, 0x1b, 0x94, 0x73, 0x73,
	0xbe, 0x8b, 0xc5, 0xf9, 0xad, 0x82, 0x52, 0xaa, 0x3f, 0xd6, 0xf2, 0x81, 0xd4, 0x6e, 0x16, 0x5f,
	0x6b, 0x73, 0xec, 0xd6, 0xc3, 0x34, 0x91, 0xee, 0xce, 0x44, 0xed, 0xbb, 0x58, 0x46, 0x37, 0x8c,
	0xc2, 0x1e, 0x28, 0x9d, 0x3b, 0x61, 0xe4, 0x61, 0x9f, 0xfa, 0x58, 0xa0, 0x91, 0x7e, 0xf0, 0xcf,
	0x3e, 0xbe, 0x9a, 0x92, 0x5b, 0x0f, 0xd2, 0x44, 0x82, 0xcc, 0x05, 0x67, 0x43, 0x46, 0xbc, 0xc5,
	0xcd, 0x3f, 0x0b, 0xa0, 0xcc, 0x07, 0x06, 0x9f, 0xe5, 0x1e, 0x69, 0x6b, 0xd8, 0x90, 0xdc, 0x36,
	0xc5, 0x7a, 0xc3, 0x53, 0xe1, 0x0f, 0x02, 0x58, 0x0e, 0x2c, 0xfb, 0xd4, 0x1a, 0x90, 0xe6, 0xb0,
	0x9e, 0x9e, 0xa6, 0x89, 0xb4, 0xce, 0x14, 0x73, 0xe8, 0xad, 0x8d, 0xd7, 0xd4, 0x3b, 0xfc, 0x56,
	0x00, 0x25, 0x5a, 0xc8, 0xe1, 0xf0, 0x4b, 0x2b, 0x3e, 0xc9, 0x46, 0xc5, 0x9e, 0xa6, 0xc1, 0x81,
	0x24, 0x9e, 0x36, 0xf8, 0xbc, 0xab, 0x28, 0xa6, 0x6e, 0x74, 0x4d, 0xbd, 0x61, 0xee, 0x98, 0x4d,
	0x59, 0xfe, 0xf8, 0x13, 0x73, 0x6c, 0x86, 0xa6, 0xdf, 0xd9, 0xad, 0xec, 0x56, 0xc6, 0x8a, 0xa9,
	0x57, 0xc6, 0x86, 0xa5, 0xbe, 0x7e, 0xae, 0x1e, 0x75, 0x1a, 0x8a, 0x69, 0x1a, 0x5d, 0xd3, 0xbc,
	0xcd, 0xdc, 0xd9, 0x46, 0xbc, 0x5f, 0x5a, 0x93, 0x49, 0xb9, 0xfb, 0x74, 0xd0, 0x6e, 0xd4, 0x24,
	0x87, 0xde, 0x5e, 0x4d, 0x72, 0x17, 0x9b, 0xdf, 0x97, 0x41, 0x89, 0x9b, 0x0f, 0x88, 0x41, 0x39,
	0xc2, 0x67, 0xa1, 0xed, 0xbc, 0x74, 0x6c, 0xdc, 0x67, 0xad, 0x2e, 0xd5, 0xeb, 0xff, 0x6a, 0xb8,
	0xb4, 0x03, 0x4e, 0x93, 0x1f, 0x66, 0xde, 0xa2, 0x8c, 0x6e, 0x38, 0x80, 0x15, 0xb0, 0xc0, 0xf6,
	0xd9, 0x70, 0x6c, 0xa4, 0x89, 0xb4, 0xc2, 0xab, 0xc9, 0x28, 0x23, 0xc0, 0x06, 0x28, 0x92, 0x13,
	0x50, 0x2c, 0xd0, 0x9f, 0xea, 0xbe, 0x36, 0x73, 0x3c, 0x6a, 0x2f, 0x3d, 0xd7, 0x6d, 0xad, 0xa5,
	0x89, 0x54, 0x62, 0xfa, 0x84, 0x2c, 0x23, 0xaa, 0x03, 0x77, 0x41, 0xd1, 0x27, 0xa3, 0xcb, 0xaa,
	0xfd, 0x70, 0x4a, 0x22, 0x52, 0x52, 0xe8, 0x62, 0x70, 0xe7, 0x1b, 0x0d, 0x51, 0xd2, 0x4c, 0x83,
	0xe6, 0xdf, 0x65, 0x83, 0x66, 0x7e, 0xa0, 0x85, 0x77, 0xfa, 0x03, 0x3d, 0x06, 0x05, 0x1c, 0x0e,
	0xc4, 0xc5, 0x2d, 0x41, 0x99, 0x6f, 0xdd, 0x4b, 0x13, 0x09, 0xb0, 0x20, 0x70, 0x38, 0x20, 0xee,
	0xe7, 0xd6, 0xef, 0x20, 0x42, 0x80, 0x07, 0x60, 0xd1, 0x0e, 0x1d, 0x72, 0xeb, 0x88, 0x4b, 0x34,
	0xe0, 0x7d, 0xee, 0xcc, 0x64, 0x00, 0xe1, 0x3f, 0x02, 0xef, 0x77, 0xb3, 0xbf, 0x87, 0xb8, 0x33,
	0xb4, 0x7c, 0xdd, 0x53, 0x3b, 0x57, 0xf5, 0x27, 0x7b, 0xb5, 0xeb, 0x6d, 0x34, 0xb1, 0x04, 0x2b,
	0xa0, 0x38, 0x72, 0x46, 0x58, 0x5c, 0xce, 0xef, 0x85, 0xac, 0x83, 0x44, 0x4a, 0xdd, 0x07, 0x77,
	0x10, 0xa5, 0xc0, 0xdf, 0x04, 0x30, 0x6f, 0xc7, 0xde, 0xc8, 0x11, 0x01, 0x25, 0xff, 0x22, 0xa4,
	0x89, 0x54, 0xce, 0xfc, 0x13, 0x39, 0xa1, 0xff, 0x2c, 0x80, 0x9f, 0x84, 0xae, 0xa2, 0x34, 0x1b,
	0x46, 0x8d, 0x78, 0x27, 0x21, 0xec, 0x54, 0x9a, 0x46, 0x56, 0x89, 0x8a, 0xaa, 0xd4, 0x8c, 0xaa,
	0x5a, 0xef, 0x8c, 0xab, 0x14, 0xaf, 0xa8, 0xca, 0x9e, 0x51, 0x55, 0x6b, 0x93, 0xfd, 0xd8, 0xa8,
	0xa9, 0x75, 0xa6, 0x55, 0x31, 0x0e, 0xb7, 0x3a, 0x4a, 0xdd, 0xa8, 0xaa, 0x7b, 0x9d, 0x31, 0xe5,
	0x30, 0x71, 0x43, 0x31, 0xaa, 0xea, 0xd3, 0xc9, 0x66, 0xba, 0x56, 0x4c, 0x8d, 0x7e, 0x77, 0x2b,
	0x4d, 0xe5, 0x68, 0x6c, 0xec, 0xaa, 0x1d, 0xa5, 0xd9, 0xf8, 0x1b, 0x75, 0x4e, 0xbb, 0xb9, 0x8d,
	0x58, 0x46, 0x34, 0xb7, 0x11, 0xcd, 0xad, 0x74, 0x2b, 0xb7, 0xd1, 0xff, 0x36, 0x37, 0x1a, 0x39,
	0x7c, 0x04, 0x8a, 0x91, 0x37, 0xf0, 0xc5, 0x32, 0xcd, 0x8c, 0xfb, 0x93, 0x89, 0x54, 0x46, 0x14,
	0x24, 0xaf, 0x04, 0x76, 0x1e, 0x1c, 0x5e, 0x06, 0x8e, 0xb8, 0x32, 0xfb, 0x4a, 0x98, 0x62, 0x32,
	0xe2, 0x88, 0xc4, 0xb6, 0x8d, 0x7d, 0x57, 0x5c, 0x9d, 0xb5, 0x4d, 0xa4, 0x32, 0xa2, 0x20, 0xd4,
	0xc0, 0x92, 0xe3, 0x9f, 0xf7, 0x62, 0x62, 0x79, 0x8d, 0x4e, 0xf9, 0xdd, 0xe9, 0x4b, 0x68, 0x82,
	0xc8, 0x68, 0xd1, 0xf1, 0xcf, 0x89, 0xd1, 0xcd, 0x5f, 0x05, 0x50, 0xe6, 0x0f, 0x3d, 0xf8, 0x04,
	0x2c, 0x3a, 0x7e, 0xc4, 0x5d, 0x92, 0xdc, 0x6b, 0x21, 0x03, 0xa8, 0x3a, 0x5d, 0x91, 0x98, 0x4e,
	0x70, 0x14, 0x67, 0x27, 0x1f, 0x17, 0x13, 0x91, 0xca, 0x88, 0x82, 0x84, 0x44, 0xe3, 0x29, 0xcc,
	0x92, 0x58, 0x2c, 0x14, 0x84, 0xef, 0x81, 0x39, 0x2f, 0xc8, 0x0e, 0xb7, 0x95, 0x34, 0x91, 0x96,
	0xb3, 0x0b, 0x2d, 0x90, 0xd1, 0x9c, 0x17, 0x10, 0x1b, 0x01, 0x0e, 0x63, 0x7a, 0x94, 0xcd, 0xf3,
	0x36, 0x88, 0x54, 0x46, 0x14, 0x6c, 0x7d, 0x7a, 0xf4, 0xe2, 0xcd, 0x9f, 0xaa, 0xf9, 0xfd, 0x70,
	0xbc, 0x40, 0x99, 0x7b, 0x7f, 0x05, 0x00, 0x00, 0xff, 0xff, 0x54, 0x7f, 0xeb, 0x6e, 0x9d, 0x0b,
	0x00, 0x00,
}
