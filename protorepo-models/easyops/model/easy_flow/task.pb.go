// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: task.proto

package easy_flow

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//部署任务实例
type Task struct {
	//
	//应用Id
	AppId string `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId" form:"appId"`
	//
	//应用名称
	AppName string `protobuf:"bytes,2,opt,name=appName,proto3" json:"appName" form:"appName"`
	//
	//集群Id
	ClusterId string `protobuf:"bytes,3,opt,name=clusterId,proto3" json:"clusterId" form:"clusterId"`
	//
	//集群类型
	ClusterType string `protobuf:"bytes,4,opt,name=clusterType,proto3" json:"clusterType" form:"clusterType"`
	//
	//操作人
	Operator string `protobuf:"bytes,5,opt,name=operator,proto3" json:"operator" form:"operator"`
	//
	//组织
	Org int32 `protobuf:"varint,6,opt,name=org,proto3" json:"org" form:"org"`
	//
	//配置列表
	ConfigList *Task_ConfigList `protobuf:"bytes,7,opt,name=configList,proto3" json:"configList" form:"configList"`
	//
	//任务时间戳
	TaskTimeStamp string `protobuf:"bytes,8,opt,name=taskTimeStamp,proto3" json:"taskTimeStamp" form:"taskTimeStamp"`
	//
	//配置版本
	ConfigVersion string `protobuf:"bytes,9,opt,name=configVersion,proto3" json:"configVersion" form:"configVersion"`
	//
	//配置包Id
	ConfigPackageId string `protobuf:"bytes,10,opt,name=configPackageId,proto3" json:"configPackageId" form:"configPackageId"`
	//
	//标签
	Labels *types.Struct `protobuf:"bytes,11,opt,name=labels,proto3" json:"labels" form:"labels"`
	//
	//配置变更信息
	ConfigDiff           string   `protobuf:"bytes,12,opt,name=configDiff,proto3" json:"configDiff" form:"configDiff"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{0}
}
func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *Task) GetAppName() string {
	if m != nil {
		return m.AppName
	}
	return ""
}

func (m *Task) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *Task) GetClusterType() string {
	if m != nil {
		return m.ClusterType
	}
	return ""
}

func (m *Task) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

func (m *Task) GetOrg() int32 {
	if m != nil {
		return m.Org
	}
	return 0
}

func (m *Task) GetConfigList() *Task_ConfigList {
	if m != nil {
		return m.ConfigList
	}
	return nil
}

func (m *Task) GetTaskTimeStamp() string {
	if m != nil {
		return m.TaskTimeStamp
	}
	return ""
}

func (m *Task) GetConfigVersion() string {
	if m != nil {
		return m.ConfigVersion
	}
	return ""
}

func (m *Task) GetConfigPackageId() string {
	if m != nil {
		return m.ConfigPackageId
	}
	return ""
}

func (m *Task) GetLabels() *types.Struct {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Task) GetConfigDiff() string {
	if m != nil {
		return m.ConfigDiff
	}
	return ""
}

type Task_ConfigList struct {
	//
	//主机列表
	Hosts []string `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts" form:"hosts"`
	//
	//配置信息
	Configs              []*Task_ConfigList_Configs `protobuf:"bytes,2,rep,name=configs,proto3" json:"configs" form:"configs"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *Task_ConfigList) Reset()         { *m = Task_ConfigList{} }
func (m *Task_ConfigList) String() string { return proto.CompactTextString(m) }
func (*Task_ConfigList) ProtoMessage()    {}
func (*Task_ConfigList) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{0, 0}
}
func (m *Task_ConfigList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task_ConfigList.Unmarshal(m, b)
}
func (m *Task_ConfigList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task_ConfigList.Marshal(b, m, deterministic)
}
func (m *Task_ConfigList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task_ConfigList.Merge(m, src)
}
func (m *Task_ConfigList) XXX_Size() int {
	return xxx_messageInfo_Task_ConfigList.Size(m)
}
func (m *Task_ConfigList) XXX_DiscardUnknown() {
	xxx_messageInfo_Task_ConfigList.DiscardUnknown(m)
}

var xxx_messageInfo_Task_ConfigList proto.InternalMessageInfo

func (m *Task_ConfigList) GetHosts() []string {
	if m != nil {
		return m.Hosts
	}
	return nil
}

func (m *Task_ConfigList) GetConfigs() []*Task_ConfigList_Configs {
	if m != nil {
		return m.Configs
	}
	return nil
}

type Task_ConfigList_Configs struct {
	//
	//包Id
	PackageId string `protobuf:"bytes,1,opt,name=packageId,proto3" json:"packageId" form:"packageId"`
	//
	//选项列表
	Items                []*Task_ConfigList_Configs_Items `protobuf:"bytes,2,rep,name=items,proto3" json:"items" form:"items"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *Task_ConfigList_Configs) Reset()         { *m = Task_ConfigList_Configs{} }
func (m *Task_ConfigList_Configs) String() string { return proto.CompactTextString(m) }
func (*Task_ConfigList_Configs) ProtoMessage()    {}
func (*Task_ConfigList_Configs) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{0, 0, 0}
}
func (m *Task_ConfigList_Configs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task_ConfigList_Configs.Unmarshal(m, b)
}
func (m *Task_ConfigList_Configs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task_ConfigList_Configs.Marshal(b, m, deterministic)
}
func (m *Task_ConfigList_Configs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task_ConfigList_Configs.Merge(m, src)
}
func (m *Task_ConfigList_Configs) XXX_Size() int {
	return xxx_messageInfo_Task_ConfigList_Configs.Size(m)
}
func (m *Task_ConfigList_Configs) XXX_DiscardUnknown() {
	xxx_messageInfo_Task_ConfigList_Configs.DiscardUnknown(m)
}

var xxx_messageInfo_Task_ConfigList_Configs proto.InternalMessageInfo

func (m *Task_ConfigList_Configs) GetPackageId() string {
	if m != nil {
		return m.PackageId
	}
	return ""
}

func (m *Task_ConfigList_Configs) GetItems() []*Task_ConfigList_Configs_Items {
	if m != nil {
		return m.Items
	}
	return nil
}

type Task_ConfigList_Configs_Items struct {
	//
	//名称
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name" form:"name"`
	//
	//路径
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path" form:"path"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Task_ConfigList_Configs_Items) Reset()         { *m = Task_ConfigList_Configs_Items{} }
func (m *Task_ConfigList_Configs_Items) String() string { return proto.CompactTextString(m) }
func (*Task_ConfigList_Configs_Items) ProtoMessage()    {}
func (*Task_ConfigList_Configs_Items) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{0, 0, 0, 0}
}
func (m *Task_ConfigList_Configs_Items) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task_ConfigList_Configs_Items.Unmarshal(m, b)
}
func (m *Task_ConfigList_Configs_Items) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task_ConfigList_Configs_Items.Marshal(b, m, deterministic)
}
func (m *Task_ConfigList_Configs_Items) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task_ConfigList_Configs_Items.Merge(m, src)
}
func (m *Task_ConfigList_Configs_Items) XXX_Size() int {
	return xxx_messageInfo_Task_ConfigList_Configs_Items.Size(m)
}
func (m *Task_ConfigList_Configs_Items) XXX_DiscardUnknown() {
	xxx_messageInfo_Task_ConfigList_Configs_Items.DiscardUnknown(m)
}

var xxx_messageInfo_Task_ConfigList_Configs_Items proto.InternalMessageInfo

func (m *Task_ConfigList_Configs_Items) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Task_ConfigList_Configs_Items) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func init() {
	proto.RegisterType((*Task)(nil), "easy_flow.Task")
	proto.RegisterType((*Task_ConfigList)(nil), "easy_flow.Task.ConfigList")
	proto.RegisterType((*Task_ConfigList_Configs)(nil), "easy_flow.Task.ConfigList.Configs")
	proto.RegisterType((*Task_ConfigList_Configs_Items)(nil), "easy_flow.Task.ConfigList.Configs.Items")
}

func init() { proto.RegisterFile("task.proto", fileDescriptor_ce5d8dd45b4a91ff) }

var fileDescriptor_ce5d8dd45b4a91ff = []byte{
	// 856 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0xc6, 0x4d, 0xd3, 0x6e, 0x26, 0xed, 0xb6, 0x3b, 0x5a, 0x16, 0x2b, 0x42, 0x72, 0xf0, 0x46,
	0x2b, 0x87, 0xdd, 0xb1, 0xf3, 0xc3, 0xa2, 0xdd, 0x5c, 0x10, 0x6d, 0x16, 0x90, 0x2a, 0x21, 0xd4,
	0xba, 0xd5, 0x5e, 0xd4, 0xa4, 0xab, 0xa9, 0xe3, 0xb8, 0x56, 0xec, 0x8c, 0xf1, 0x38, 0x54, 0xbb,
	0x4d, 0x1e, 0x80, 0x67, 0x80, 0x27, 0x40, 0xe2, 0x05, 0xb8, 0xe5, 0x8e, 0x87, 0x30, 0x12, 0x6f,
	0x80, 0x9f, 0x00, 0xcd, 0x8c, 0xed, 0x38, 0x0b, 0x08, 0x71, 0xd1, 0xab, 0xcc, 0x39, 0xdf, 0xf7,
	0x1d, 0x9f, 0x6f, 0xe6, 0xe8, 0x04, 0x80, 0x18, 0xd3, 0x99, 0x1e, 0x46, 0x24, 0x26, 0xb0, 0xe6,
	0x60, 0xfa, 0xe6, 0xf5, 0xd4, 0x27, 0xd7, 0x0d, 0xe4, 0x7a, 0xf1, 0xd5, 0xe2, 0x52, 0xb7, 0x49,
	0x60, 0xb8, 0xc4, 0x25, 0x06, 0x67, 0x5c, 0x2e, 0xa6, 0x3c, 0xe2, 0x01, 0x3f, 0x09, 0x65, 0xe3,
	0xd3, 0x12, 0x3d, 0xb8, 0xf6, 0xe2, 0x19, 0xb9, 0x36, 0x5c, 0x82, 0x38, 0x88, 0xbe, 0xc3, 0xbe,
	0x37, 0xc1, 0x31, 0x89, 0xa8, 0x51, 0x1c, 0x33, 0xdd, 0x87, 0x2e, 0x21, 0xae, 0xef, 0xac, 0xab,
	0xd3, 0x38, 0x5a, 0xd8, 0xb1, 0x40, 0xd5, 0x1f, 0xf7, 0xc0, 0xf6, 0x19, 0xa6, 0x33, 0x38, 0x00,
	0x55, 0x1c, 0x86, 0x47, 0x13, 0x59, 0x6a, 0x4a, 0x5a, 0x6d, 0xd4, 0x4a, 0x13, 0x65, 0x6f, 0x4a,
	0xa2, 0x60, 0xa0, 0xf2, 0xb4, 0xfa, 0xc7, 0xef, 0xca, 0x21, 0xb8, 0x7b, 0x61, 0x75, 0xd0, 0x73,
	0x8c, 0xde, 0x8e, 0x6f, 0xba, 0xfd, 0x55, 0xcb, 0x14, 0x12, 0xf8, 0x04, 0xec, 0xe2, 0x30, 0xfc,
	0x1a, 0x07, 0x8e, 0xbc, 0xc5, 0xd5, 0x30, 0x4d, 0x94, 0xbb, 0x85, 0x9a, 0x01, 0xaa, 0x99, 0x53,
	0xe0, 0xf7, 0x12, 0xa8, 0xd9, 0xfe, 0x82, 0xc6, 0x4e, 0x74, 0x34, 0x91, 0x2b, 0x5c, 0x30, 0x4b,
	0x13, 0xe5, 0x50, 0x08, 0x0a, 0x88, 0x7d, 0xf2, 0x14, 0x9c, 0x5c, 0x58, 0x18, 0x4d, 0x5f, 0xa0,
	0x2f, 0x3b, 0xe8, 0xf9, 0xf8, 0xe6, 0xd9, 0x0a, 0x0d, 0xcb, 0xf1, 0x27, 0xff, 0x33, 0xee, 0xf6,
	0x56, 0x2d, 0x73, 0xfd, 0x75, 0xf8, 0x0c, 0xd4, 0xb3, 0xe0, 0xec, 0x4d, 0xe8, 0xc8, 0xdb, 0xbc,
	0x99, 0x07, 0x69, 0xa2, 0xc0, 0x8d, 0x66, 0x18, 0xa8, 0x9a, 0x65, 0x2a, 0x7c, 0x05, 0xee, 0x90,
	0xd0, 0x89, 0xd8, 0x45, 0xcb, 0x55, 0x2e, 0x1b, 0xa4, 0x89, 0x72, 0x20, 0x64, 0x39, 0xc2, 0x2c,
	0x3c, 0x04, 0x1f, 0x31, 0x0b, 0x6f, 0x5f, 0xa0, 0x73, 0xd6, 0x82, 0xa5, 0x17, 0xe7, 0xd7, 0x68,
	0x7c, 0xd3, 0x7b, 0xd2, 0xef, 0xae, 0x5a, 0x66, 0x51, 0x0b, 0x3e, 0x02, 0x15, 0x12, 0xb9, 0xf2,
	0x4e, 0x53, 0xd2, 0xaa, 0xa3, 0xfb, 0x69, 0xa2, 0x80, 0xac, 0x64, 0xe4, 0xb2, 0x6a, 0x5b, 0x87,
	0xef, 0x99, 0x8c, 0x00, 0x4f, 0x00, 0xb0, 0xc9, 0x7c, 0xea, 0xb9, 0x5f, 0x79, 0x34, 0x96, 0x77,
	0x9b, 0x92, 0x56, 0xef, 0x35, 0xf4, 0x62, 0xba, 0x74, 0xf6, 0xa8, 0xfa, 0xcb, 0x82, 0x31, 0x7a,
	0x3f, 0x4d, 0x94, 0x7b, 0x99, 0xa9, 0x22, 0xab, 0x9a, 0xa5, 0x22, 0xf0, 0x4f, 0x09, 0xec, 0xb3,
	0x51, 0x3d, 0xf3, 0x02, 0xe7, 0x34, 0xc6, 0x41, 0x28, 0xdf, 0xe1, 0xc6, 0x7e, 0x93, 0xd2, 0x44,
	0xb9, 0x2f, 0xb4, 0x1b, 0x38, 0x6b, 0xe8, 0x67, 0x09, 0xfc, 0x24, 0x5d, 0x68, 0xda, 0x70, 0x60,
	0x75, 0x99, 0x3d, 0xe6, 0xf1, 0xe3, 0xf6, 0xd0, 0xca, 0xae, 0xbf, 0x8d, 0xb4, 0xae, 0xd5, 0x41,
	0xbd, 0xf1, 0xb2, 0xc3, 0xf1, 0x36, 0xd2, 0xfa, 0x56, 0x07, 0x75, 0xf3, 0x78, 0x69, 0x75, 0x51,
	0x4f, 0xa8, 0xda, 0xd6, 0x59, 0x73, 0xac, 0xf5, 0xac, 0x0e, 0xea, 0x8f, 0x97, 0x9c, 0x23, 0xd2,
	0x03, 0xcd, 0xea, 0xa0, 0xa7, 0x79, 0xb0, 0x3e, 0x6b, 0xdf, 0xe8, 0xfc, 0xf7, 0x71, 0x7b, 0xa8,
	0x9d, 0x2f, 0xad, 0xc7, 0x68, 0xac, 0x0d, 0x07, 0xff, 0x20, 0x2f, 0xa9, 0x87, 0x2d, 0x73, 0xd3,
	0x21, 0xfc, 0x0c, 0xec, 0x8b, 0x1b, 0x78, 0xe5, 0x44, 0xd4, 0x23, 0x73, 0xb9, 0xc6, 0x2d, 0xcb,
	0x6b, 0xc7, 0x1b, 0xb0, 0x6a, 0x6e, 0xd2, 0xe1, 0x0f, 0x12, 0x38, 0x10, 0x99, 0x63, 0x6c, 0xcf,
	0xb0, 0xeb, 0x1c, 0x4d, 0x64, 0xc0, 0x4b, 0x7c, 0x9b, 0x26, 0xca, 0x83, 0x72, 0x89, 0x82, 0x70,
	0x6b, 0x83, 0xfd, 0x6e, 0x27, 0x70, 0x04, 0x76, 0x7c, 0x7c, 0xe9, 0xf8, 0x54, 0xae, 0xf3, 0x01,
	0xf9, 0x40, 0x17, 0xcb, 0x40, 0xcf, 0x97, 0x81, 0x7e, 0xca, 0x97, 0xc1, 0xe8, 0x5e, 0x9a, 0x28,
	0xfb, 0xa2, 0x59, 0x21, 0x50, 0xcd, 0x4c, 0x09, 0x9f, 0xe6, 0x83, 0xf6, 0xb9, 0x37, 0x9d, 0xca,
	0x7b, 0xdc, 0xdb, 0xdf, 0x86, 0x89, 0x61, 0xc5, 0x30, 0xb1, 0xa0, 0xf1, 0x6b, 0x05, 0x80, 0xf5,
	0xf8, 0xc1, 0x47, 0xa0, 0x7a, 0x45, 0x68, 0x4c, 0x65, 0xa9, 0x59, 0xd1, 0x6a, 0xa3, 0xc3, 0xf5,
	0x7a, 0xe1, 0x69, 0xd5, 0x14, 0x30, 0x3c, 0x06, 0xbb, 0xa2, 0x08, 0x95, 0xb7, 0x9a, 0x15, 0xad,
	0xde, 0x53, 0xff, 0x7d, 0xa6, 0xb3, 0x23, 0x2d, 0xaf, 0x9b, 0x4c, 0xac, 0x9a, 0x79, 0x99, 0xc6,
	0x2f, 0x5b, 0x60, 0x37, 0x23, 0xf2, 0xd5, 0x13, 0x16, 0xef, 0x24, 0xbd, 0xbb, 0x7a, 0xc2, 0x5b,
	0x7f, 0xa1, 0xf5, 0xd7, 0xe1, 0x31, 0xa8, 0x7a, 0xb1, 0x13, 0xe4, 0x3e, 0xb5, 0xff, 0xf6, 0xa9,
	0x1f, 0x31, 0x7e, 0xf9, 0xee, 0x78, 0x01, 0xd5, 0x14, 0x85, 0x1a, 0x27, 0xa0, 0xca, 0x19, 0xf0,
	0x21, 0xd8, 0x9e, 0xb3, 0x65, 0x2c, 0x0c, 0x1e, 0xa4, 0x89, 0x52, 0x17, 0xfc, 0x39, 0xdf, 0xc4,
	0x1c, 0x64, 0xa4, 0x10, 0xc7, 0x57, 0xd9, 0xc6, 0x2e, 0x91, 0x58, 0x56, 0x35, 0x39, 0x38, 0xfa,
	0xe2, 0xfc, 0xa5, 0x4b, 0x78, 0x67, 0x24, 0xa4, 0xba, 0x4f, 0x6c, 0xec, 0x1b, 0x36, 0x99, 0xc7,
	0x11, 0xb6, 0x63, 0x2a, 0xfe, 0x52, 0x22, 0x27, 0x24, 0x28, 0x20, 0x13, 0xc7, 0xa7, 0x46, 0x46,
	0x34, 0x78, 0x68, 0x14, 0x86, 0x2e, 0x77, 0x38, 0xb3, 0xff, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x02, 0x57, 0x79, 0x3a, 0x0a, 0x07, 0x00, 0x00,
}
