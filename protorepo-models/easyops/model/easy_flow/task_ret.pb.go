// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: task_ret.proto

package easy_flow

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

//
//部署任务返回
type TaskRet struct {
	//
	//任务Id
	TaskId string `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId" form:"taskId"`
	//
	//姓名
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name" form:"name"`
	//
	//组Id
	GroupId string `protobuf:"bytes,3,opt,name=groupId,proto3" json:"groupId" form:"groupId"`
	//
	//应用Id
	AppId string `protobuf:"bytes,4,opt,name=appId,proto3" json:"appId" form:"appId"`
	//
	//分批数量
	BatchNum int32 `protobuf:"varint,5,opt,name=batchNum,proto3" json:"batchNum" form:"batchNum"`
	//
	//分批间隔
	BatchInterval int32 `protobuf:"varint,6,opt,name=batchInterval,proto3" json:"batchInterval" form:"batchInterval"`
	//
	//是否暂停失败
	FailedStop string `protobuf:"bytes,7,opt,name=failedStop,proto3" json:"failedStop" form:"failedStop"`
	//
	//包Id
	PackageId string `protobuf:"bytes,8,opt,name=packageId,proto3" json:"packageId" form:"packageId"`
	//
	//类型
	Type string `protobuf:"bytes,9,opt,name=type,proto3" json:"type" form:"type"`
	//
	//操作
	Operation string `protobuf:"bytes,10,opt,name=operation,proto3" json:"operation" form:"operation"`
	//
	//客户id
	Org int32 `protobuf:"varint,11,opt,name=org,proto3" json:"org" form:"org"`
	//
	//操作人
	Operator string `protobuf:"bytes,12,opt,name=operator,proto3" json:"operator" form:"operator"`
	//
	//状态
	Status string `protobuf:"bytes,13,opt,name=status,proto3" json:"status" form:"status"`
	//
	//错误码
	Code int32 `protobuf:"varint,14,opt,name=code,proto3" json:"code" form:"code"`
	//
	//使用次数
	UsedTime int32 `protobuf:"varint,15,opt,name=usedTime,proto3" json:"usedTime" form:"usedTime"`
	//
	//开始时间
	StartTime string `protobuf:"bytes,16,opt,name=startTime,proto3" json:"startTime" form:"startTime"`
	//
	//结束时间
	EndTime string `protobuf:"bytes,17,opt,name=endTime,proto3" json:"endTime" form:"endTime"`
	//
	//额外信息
	ExtraInfo *types.Struct `protobuf:"bytes,18,opt,name=extraInfo,proto3" json:"extraInfo" form:"extraInfo"`
	//
	//目标设备日志
	TargetsLog           []*TaskRet_TargetsLog `protobuf:"bytes,19,rep,name=targetsLog,proto3" json:"targetsLog" form:"targetsLog"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *TaskRet) Reset()         { *m = TaskRet{} }
func (m *TaskRet) String() string { return proto.CompactTextString(m) }
func (*TaskRet) ProtoMessage()    {}
func (*TaskRet) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ee839931d343e4e, []int{0}
}
func (m *TaskRet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskRet.Unmarshal(m, b)
}
func (m *TaskRet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskRet.Marshal(b, m, deterministic)
}
func (m *TaskRet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskRet.Merge(m, src)
}
func (m *TaskRet) XXX_Size() int {
	return xxx_messageInfo_TaskRet.Size(m)
}
func (m *TaskRet) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskRet.DiscardUnknown(m)
}

var xxx_messageInfo_TaskRet proto.InternalMessageInfo

func (m *TaskRet) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *TaskRet) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TaskRet) GetGroupId() string {
	if m != nil {
		return m.GroupId
	}
	return ""
}

func (m *TaskRet) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *TaskRet) GetBatchNum() int32 {
	if m != nil {
		return m.BatchNum
	}
	return 0
}

func (m *TaskRet) GetBatchInterval() int32 {
	if m != nil {
		return m.BatchInterval
	}
	return 0
}

func (m *TaskRet) GetFailedStop() string {
	if m != nil {
		return m.FailedStop
	}
	return ""
}

func (m *TaskRet) GetPackageId() string {
	if m != nil {
		return m.PackageId
	}
	return ""
}

func (m *TaskRet) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TaskRet) GetOperation() string {
	if m != nil {
		return m.Operation
	}
	return ""
}

func (m *TaskRet) GetOrg() int32 {
	if m != nil {
		return m.Org
	}
	return 0
}

func (m *TaskRet) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

func (m *TaskRet) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *TaskRet) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *TaskRet) GetUsedTime() int32 {
	if m != nil {
		return m.UsedTime
	}
	return 0
}

func (m *TaskRet) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *TaskRet) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *TaskRet) GetExtraInfo() *types.Struct {
	if m != nil {
		return m.ExtraInfo
	}
	return nil
}

func (m *TaskRet) GetTargetsLog() []*TaskRet_TargetsLog {
	if m != nil {
		return m.TargetsLog
	}
	return nil
}

type TaskRet_TargetsLog struct {
	//
	//目标设备Id
	TargetId string `protobuf:"bytes,1,opt,name=targetId,proto3" json:"targetId" form:"targetId"`
	//
	//目标设备名称
	TargetName string `protobuf:"bytes,2,opt,name=targetName,proto3" json:"targetName" form:"targetName"`
	//
	//状态
	Status string `protobuf:"bytes,3,opt,name=status,proto3" json:"status" form:"status"`
	//
	//系统状态
	SysStatus string `protobuf:"bytes,4,opt,name=sysStatus,proto3" json:"sysStatus" form:"sysStatus"`
	//
	//错误码
	Code int32 `protobuf:"varint,5,opt,name=code,proto3" json:"code" form:"code"`
	//
	//消息
	Msg string `protobuf:"bytes,6,opt,name=msg,proto3" json:"msg" form:"msg"`
	//
	//进度
	Progress *types.Struct `protobuf:"bytes,7,opt,name=progress,proto3" json:"progress" form:"progress"`
	//
	//执行日志
	ActionsLog           []*TaskRet_TargetsLog_ActionsLog `protobuf:"bytes,8,rep,name=actionsLog,proto3" json:"actionsLog" form:"actionsLog"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *TaskRet_TargetsLog) Reset()         { *m = TaskRet_TargetsLog{} }
func (m *TaskRet_TargetsLog) String() string { return proto.CompactTextString(m) }
func (*TaskRet_TargetsLog) ProtoMessage()    {}
func (*TaskRet_TargetsLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ee839931d343e4e, []int{0, 0}
}
func (m *TaskRet_TargetsLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskRet_TargetsLog.Unmarshal(m, b)
}
func (m *TaskRet_TargetsLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskRet_TargetsLog.Marshal(b, m, deterministic)
}
func (m *TaskRet_TargetsLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskRet_TargetsLog.Merge(m, src)
}
func (m *TaskRet_TargetsLog) XXX_Size() int {
	return xxx_messageInfo_TaskRet_TargetsLog.Size(m)
}
func (m *TaskRet_TargetsLog) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskRet_TargetsLog.DiscardUnknown(m)
}

var xxx_messageInfo_TaskRet_TargetsLog proto.InternalMessageInfo

func (m *TaskRet_TargetsLog) GetTargetId() string {
	if m != nil {
		return m.TargetId
	}
	return ""
}

func (m *TaskRet_TargetsLog) GetTargetName() string {
	if m != nil {
		return m.TargetName
	}
	return ""
}

func (m *TaskRet_TargetsLog) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *TaskRet_TargetsLog) GetSysStatus() string {
	if m != nil {
		return m.SysStatus
	}
	return ""
}

func (m *TaskRet_TargetsLog) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *TaskRet_TargetsLog) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *TaskRet_TargetsLog) GetProgress() *types.Struct {
	if m != nil {
		return m.Progress
	}
	return nil
}

func (m *TaskRet_TargetsLog) GetActionsLog() []*TaskRet_TargetsLog_ActionsLog {
	if m != nil {
		return m.ActionsLog
	}
	return nil
}

type TaskRet_TargetsLog_ActionsLog struct {
	//
	//执行名称
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name" form:"name"`
	//
	//类型
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type" form:"type"`
	//
	//动作
	Action string `protobuf:"bytes,3,opt,name=action,proto3" json:"action" form:"action"`
	//
	//状态
	Status string `protobuf:"bytes,4,opt,name=status,proto3" json:"status" form:"status"`
	//
	//错误码
	Code int32 `protobuf:"varint,5,opt,name=code,proto3" json:"code" form:"code"`
	//
	//额外信息
	ExtInfo *types.Struct `protobuf:"bytes,6,opt,name=extInfo,proto3" json:"extInfo" form:"extInfo"`
	//
	//消息
	Msg string `protobuf:"bytes,7,opt,name=msg,proto3" json:"msg" form:"msg"`
	//
	//进度
	Progress *types.Struct `protobuf:"bytes,8,opt,name=progress,proto3" json:"progress" form:"progress"`
	//
	//使用次数
	UsedTime int32 `protobuf:"varint,9,opt,name=usedTime,proto3" json:"usedTime" form:"usedTime"`
	//
	//开始时间
	StartTime string `protobuf:"bytes,10,opt,name=startTime,proto3" json:"startTime" form:"startTime"`
	//
	//结束时间
	EndTime              string   `protobuf:"bytes,11,opt,name=endTime,proto3" json:"endTime" form:"endTime"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskRet_TargetsLog_ActionsLog) Reset()         { *m = TaskRet_TargetsLog_ActionsLog{} }
func (m *TaskRet_TargetsLog_ActionsLog) String() string { return proto.CompactTextString(m) }
func (*TaskRet_TargetsLog_ActionsLog) ProtoMessage()    {}
func (*TaskRet_TargetsLog_ActionsLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ee839931d343e4e, []int{0, 0, 0}
}
func (m *TaskRet_TargetsLog_ActionsLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskRet_TargetsLog_ActionsLog.Unmarshal(m, b)
}
func (m *TaskRet_TargetsLog_ActionsLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskRet_TargetsLog_ActionsLog.Marshal(b, m, deterministic)
}
func (m *TaskRet_TargetsLog_ActionsLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskRet_TargetsLog_ActionsLog.Merge(m, src)
}
func (m *TaskRet_TargetsLog_ActionsLog) XXX_Size() int {
	return xxx_messageInfo_TaskRet_TargetsLog_ActionsLog.Size(m)
}
func (m *TaskRet_TargetsLog_ActionsLog) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskRet_TargetsLog_ActionsLog.DiscardUnknown(m)
}

var xxx_messageInfo_TaskRet_TargetsLog_ActionsLog proto.InternalMessageInfo

func (m *TaskRet_TargetsLog_ActionsLog) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TaskRet_TargetsLog_ActionsLog) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TaskRet_TargetsLog_ActionsLog) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *TaskRet_TargetsLog_ActionsLog) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *TaskRet_TargetsLog_ActionsLog) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *TaskRet_TargetsLog_ActionsLog) GetExtInfo() *types.Struct {
	if m != nil {
		return m.ExtInfo
	}
	return nil
}

func (m *TaskRet_TargetsLog_ActionsLog) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *TaskRet_TargetsLog_ActionsLog) GetProgress() *types.Struct {
	if m != nil {
		return m.Progress
	}
	return nil
}

func (m *TaskRet_TargetsLog_ActionsLog) GetUsedTime() int32 {
	if m != nil {
		return m.UsedTime
	}
	return 0
}

func (m *TaskRet_TargetsLog_ActionsLog) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *TaskRet_TargetsLog_ActionsLog) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func init() {
	proto.RegisterType((*TaskRet)(nil), "easy_flow.TaskRet")
	proto.RegisterType((*TaskRet_TargetsLog)(nil), "easy_flow.TaskRet.TargetsLog")
	proto.RegisterType((*TaskRet_TargetsLog_ActionsLog)(nil), "easy_flow.TaskRet.TargetsLog.ActionsLog")
}

func init() { proto.RegisterFile("task_ret.proto", fileDescriptor_0ee839931d343e4e) }

var fileDescriptor_0ee839931d343e4e = []byte{
	// 1051 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x56, 0xdb, 0x6e, 0x1b, 0x45,
	0x18, 0x66, 0x73, 0xb0, 0xbd, 0xe3, 0xe6, 0x34, 0x0d, 0x74, 0x15, 0x81, 0x6c, 0x0d, 0x11, 0x5a,
	0x53, 0x66, 0x7d, 0x6a, 0x2b, 0xe2, 0x0b, 0xac, 0x04, 0x55, 0xc2, 0x02, 0xe5, 0x62, 0xe2, 0xab,
	0x6c, 0x9d, 0x68, 0x62, 0x8f, 0xb7, 0xc6, 0x87, 0x59, 0xed, 0x8e, 0x9b, 0xe6, 0x74, 0x87, 0x84,
	0xc4, 0x53, 0x70, 0x8d, 0x04, 0x4f, 0x81, 0x78, 0x0c, 0x57, 0x42, 0xe2, 0x05, 0xfc, 0x02, 0xa0,
	0x9d, 0xd9, 0x53, 0x53, 0x64, 0x5a, 0xa1, 0x5e, 0x40, 0xaf, 0x3c, 0x33, 0xdf, 0xf7, 0xcd, 0xfe,
	0xff, 0xfc, 0x27, 0x83, 0x75, 0x41, 0xfd, 0xe1, 0xa9, 0xc7, 0x84, 0xe5, 0x7a, 0x5c, 0x70, 0xa8,
	0x33, 0xea, 0x5f, 0x9c, 0xf6, 0x47, 0xfc, 0x7c, 0x07, 0x3b, 0x03, 0xf1, 0x74, 0x7a, 0x66, 0x75,
	0xf9, 0xb8, 0xec, 0x70, 0x87, 0x97, 0x25, 0xe3, 0x6c, 0xda, 0x97, 0x3b, 0xb9, 0x91, 0x2b, 0xa5,
	0xdc, 0x79, 0x94, 0xa2, 0x8f, 0xcf, 0x07, 0x62, 0xc8, 0xcf, 0xcb, 0x0e, 0xc7, 0x12, 0xc4, 0xcf,
	0xe8, 0x68, 0xd0, 0xa3, 0x82, 0x7b, 0x7e, 0x39, 0x5e, 0x86, 0xba, 0x0f, 0x1d, 0xce, 0x9d, 0x11,
	0x4b, 0x6e, 0xf7, 0x85, 0x37, 0xed, 0x86, 0xf6, 0xa0, 0x5f, 0xee, 0x81, 0x6c, 0x9b, 0xfa, 0x43,
	0xc2, 0x04, 0x2c, 0x81, 0x4c, 0x60, 0x6d, 0xab, 0x67, 0x68, 0x45, 0xcd, 0xd4, 0x0f, 0xb6, 0xe6,
	0xb3, 0xc2, 0x5a, 0x9f, 0x7b, 0xe3, 0x06, 0x52, 0xe7, 0x88, 0x84, 0x04, 0xf8, 0x31, 0x58, 0x99,
	0xd0, 0x31, 0x33, 0x96, 0x24, 0x71, 0x63, 0x3e, 0x2b, 0xe4, 0x15, 0x31, 0x38, 0x45, 0x44, 0x82,
	0xf0, 0x3b, 0x0d, 0x64, 0x1d, 0x8f, 0x4f, 0xdd, 0x56, 0xcf, 0x58, 0x96, 0xc4, 0x6f, 0xe7, 0xb3,
	0xc2, 0xba, 0x22, 0x86, 0x00, 0xfa, 0xfd, 0x45, 0xa1, 0x0d, 0xc8, 0x89, 0xdd, 0xa4, 0xf8, 0x72,
	0x1f, 0x1f, 0x57, 0xf0, 0x5e, 0xe7, 0xea, 0xf3, 0x1b, 0xfc, 0xd2, 0xfe, 0xc1, 0x1b, 0xee, 0xab,
	0xb5, 0x9b, 0x5d, 0x12, 0x7d, 0x1a, 0x36, 0xc0, 0x2a, 0x75, 0x03, 0x1b, 0x56, 0xa4, 0x0d, 0xbb,
	0xf3, 0x59, 0xe1, 0x8e, 0xb2, 0x41, 0x1e, 0x07, 0x16, 0x6c, 0x82, 0xf5, 0x13, 0xbb, 0x82, 0xf7,
	0x28, 0xbe, 0xec, 0x5c, 0x55, 0xeb, 0x37, 0xbb, 0x44, 0x49, 0x60, 0x19, 0xe4, 0xce, 0xa8, 0xe8,
	0x3e, 0x3d, 0x9c, 0x8e, 0x8d, 0xd5, 0xa2, 0x66, 0xae, 0x1e, 0xdc, 0x9d, 0xcf, 0x0a, 0x1b, 0x4a,
	0x1e, 0x21, 0x88, 0xc4, 0x24, 0xf8, 0x05, 0x58, 0x93, 0xeb, 0xd6, 0x44, 0x30, 0xef, 0x19, 0x1d,
	0x19, 0x19, 0xa9, 0x32, 0xe6, 0xb3, 0xc2, 0x76, 0x4a, 0x15, 0xc1, 0x88, 0xbc, 0x4c, 0x87, 0x0f,
	0x01, 0xe8, 0xd3, 0xc1, 0x88, 0xf5, 0x8e, 0x04, 0x77, 0x8d, 0xac, 0xb4, 0xf8, 0xfd, 0xf9, 0xac,
	0xb0, 0xa5, 0xc4, 0x09, 0x86, 0x48, 0x8a, 0x08, 0x7f, 0xd0, 0x80, 0xee, 0xd2, 0xee, 0x90, 0x3a,
	0xac, 0xd5, 0x33, 0x72, 0x52, 0x36, 0x9a, 0xcf, 0x0a, 0x9b, 0x4a, 0x16, 0x43, 0x6f, 0xef, 0xb9,
	0x93, 0xcf, 0x07, 0xc9, 0x21, 0x2e, 0x5c, 0x66, 0xe8, 0xb7, 0x93, 0x23, 0x38, 0x45, 0x44, 0x82,
	0xb0, 0x06, 0x74, 0xee, 0x32, 0x8f, 0x8a, 0x01, 0x9f, 0x18, 0x40, 0x32, 0xb7, 0x13, 0x83, 0x63,
	0x08, 0x91, 0x84, 0x06, 0x3f, 0x01, 0xcb, 0xdc, 0x73, 0x8c, 0xbc, 0x7c, 0xd2, 0x80, 0x0d, 0x42,
	0xb6, 0xe7, 0x04, 0x8e, 0x2d, 0x6d, 0xbe, 0x47, 0x02, 0x02, 0x6c, 0x81, 0x9c, 0x12, 0x71, 0xcf,
	0xb8, 0x23, 0xaf, 0xc6, 0x49, 0xd4, 0x22, 0x24, 0x50, 0x7c, 0x00, 0xb6, 0x4f, 0xec, 0x7d, 0x7c,
	0x4c, 0xf1, 0xe5, 0x29, 0xee, 0x3c, 0x39, 0xbf, 0xaa, 0x7f, 0xf6, 0xe8, 0xc1, 0xcd, 0x2e, 0x89,
	0xe5, 0x41, 0x4d, 0xf8, 0x82, 0x8a, 0xa9, 0x6f, 0xac, 0xdd, 0xae, 0x09, 0x75, 0x8e, 0x48, 0x48,
	0x08, 0xdc, 0xee, 0xf2, 0x1e, 0x33, 0xd6, 0xa5, 0x79, 0x29, 0xb7, 0x83, 0x53, 0x44, 0x24, 0x18,
	0x24, 0xd4, 0xd4, 0x67, 0xbd, 0xf6, 0x60, 0xcc, 0x8c, 0x8d, 0xdb, 0x09, 0x15, 0x21, 0x88, 0xc4,
	0x24, 0xf8, 0x87, 0x06, 0x74, 0x5f, 0x50, 0x4f, 0x48, 0xc9, 0xa6, 0x34, 0xe2, 0x37, 0x2d, 0x79,
	0xa9, 0x18, 0x0b, 0xfc, 0xf9, 0x59, 0x03, 0x3f, 0x69, 0x27, 0xa6, 0xd9, 0x6c, 0xd8, 0x55, 0xbc,
	0xd7, 0x09, 0x52, 0xba, 0xf3, 0x69, 0xa9, 0x69, 0x87, 0x61, 0x2b, 0x61, 0xb3, 0x6a, 0x57, 0x70,
	0xad, 0x73, 0x5d, 0x91, 0x78, 0x09, 0x9b, 0x75, 0xbb, 0x82, 0xab, 0xd1, 0xfe, 0xda, 0xae, 0xe2,
	0x9a, 0x52, 0x95, 0xec, 0x76, 0xb1, 0x63, 0xd6, 0xec, 0x0a, 0xae, 0x77, 0xae, 0x25, 0x47, 0x1d,
	0x37, 0x4c, 0xbb, 0x82, 0x1f, 0x46, 0x9b, 0x64, 0x6d, 0x3e, 0xb1, 0xe4, 0xef, 0xfd, 0x52, 0xd3,
	0x3c, 0xbe, 0xb6, 0xef, 0xe3, 0x8e, 0xd9, 0x6c, 0xfc, 0x8d, 0x3c, 0xa5, 0x6e, 0xee, 0x92, 0xc4,
	0x33, 0xf8, 0x42, 0x03, 0x59, 0x36, 0x51, 0x0f, 0xb3, 0x25, 0xbd, 0xfc, 0x55, 0x4b, 0xba, 0x45,
	0x88, 0xfc, 0x17, 0x7d, 0x8c, 0xbc, 0x82, 0x5f, 0x03, 0x9d, 0x3d, 0x17, 0x1e, 0x6d, 0x4d, 0xfa,
	0xdc, 0x80, 0x45, 0xcd, 0xcc, 0xd7, 0xee, 0x59, 0xaa, 0x39, 0x5b, 0x51, 0x73, 0xb6, 0x8e, 0x64,
	0x73, 0x4e, 0x97, 0x42, 0xac, 0x41, 0x24, 0xd1, 0xc3, 0x36, 0x00, 0x82, 0x7a, 0x0e, 0x13, 0xfe,
	0x37, 0xdc, 0x31, 0xee, 0x16, 0x97, 0xcd, 0x7c, 0xed, 0x23, 0x2b, 0x1e, 0x2e, 0x56, 0xd8, 0xd3,
	0xad, 0x76, 0x4c, 0x4a, 0xb7, 0x91, 0x44, 0x8a, 0x48, 0xea, 0x9e, 0x9d, 0x1f, 0xf3, 0x00, 0x24,
	0x0a, 0xf8, 0xbd, 0x06, 0x72, 0x0a, 0x8d, 0x67, 0xc2, 0x30, 0xc9, 0xd6, 0x08, 0x79, 0x7b, 0x3d,
	0x25, 0xfe, 0x78, 0xd0, 0x16, 0xd5, 0xfa, 0x30, 0x99, 0x3a, 0xaf, 0xf8, 0x73, 0x28, 0x67, 0x4f,
	0x8a, 0x98, 0xaa, 0xde, 0xe5, 0x7f, 0xaa, 0xde, 0x1a, 0xd0, 0xfd, 0x0b, 0xff, 0x48, 0xb1, 0x57,
	0x6e, 0xf7, 0xa3, 0x18, 0x42, 0x24, 0xa1, 0xc5, 0x15, 0xbf, 0xba, 0xa8, 0xe2, 0x8b, 0x60, 0x79,
	0xec, 0x3b, 0x72, 0x0e, 0xe8, 0x07, 0xeb, 0x49, 0xd3, 0x1a, 0xfb, 0x0e, 0x22, 0x01, 0x04, 0xbf,
	0x02, 0x39, 0xd7, 0xe3, 0x8e, 0xc7, 0x7c, 0x5f, 0x76, 0xfc, 0x05, 0x79, 0x91, 0x6a, 0x16, 0x91,
	0x04, 0x91, 0x58, 0x0d, 0x4f, 0x01, 0xa0, 0xdd, 0xa0, 0x55, 0xca, 0xac, 0xc8, 0xc9, 0xac, 0x30,
	0x17, 0x66, 0x85, 0xb5, 0x1f, 0xf3, 0xd3, 0x0f, 0x9a, 0xdc, 0x82, 0x48, 0xea, 0xca, 0x9d, 0x3f,
	0x33, 0x00, 0x24, 0x8a, 0xf8, 0x6f, 0x80, 0xb6, 0xe8, 0x6f, 0x40, 0x34, 0x0e, 0x96, 0x16, 0x8d,
	0x83, 0x12, 0xc8, 0xa8, 0xcf, 0xbc, 0x1a, 0x29, 0x75, 0x8e, 0x48, 0x48, 0x48, 0x05, 0x75, 0xe5,
	0x75, 0x5b, 0xf2, 0xc2, 0x00, 0x3d, 0x06, 0x59, 0xf6, 0x5c, 0xc8, 0xaa, 0xcc, 0x2c, 0x7e, 0x7d,
	0x98, 0x6a, 0x48, 0x4a, 0x81, 0x48, 0xa4, 0x8d, 0xe2, 0x9c, 0x7d, 0xbd, 0x38, 0xe7, 0xfe, 0x55,
	0x9c, 0xd3, 0x53, 0x44, 0x7f, 0xf3, 0x29, 0x02, 0xde, 0x89, 0x29, 0x92, 0xff, 0x3f, 0x4e, 0x91,
	0x83, 0xc7, 0xc7, 0x5f, 0x3a, 0x5c, 0x96, 0x34, 0x77, 0x7d, 0x6b, 0xc4, 0xbb, 0x74, 0x54, 0xee,
	0xf2, 0x89, 0xf0, 0x68, 0x57, 0xf8, 0xea, 0x4f, 0xbe, 0xc7, 0x5c, 0x8e, 0xc7, 0xbc, 0xc7, 0x46,
	0x7e, 0x39, 0x24, 0x96, 0xe5, 0xb6, 0x1c, 0x77, 0x82, 0xb3, 0x8c, 0x64, 0xd6, 0xff, 0x0a, 0x00,
	0x00, 0xff, 0xff, 0xf9, 0x93, 0xf7, 0xa2, 0xa0, 0x0c, 0x00, 0x00,
}
