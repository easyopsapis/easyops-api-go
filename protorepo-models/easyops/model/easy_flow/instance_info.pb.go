// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: instance_info.proto

package easy_flow

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//实例信息
type InstanceInfo struct {
	//
	//实例Id
	InstanceId int32 `protobuf:"varint,1,opt,name=instanceId,proto3" json:"instanceId" form:"instanceId"`
	//
	//包Id
	PackageId string `protobuf:"bytes,2,opt,name=packageId,proto3" json:"packageId" form:"packageId"`
	//
	//版本Id
	VersionId string `protobuf:"bytes,3,opt,name=versionId,proto3" json:"versionId" form:"versionId"`
	//
	//设备Id
	DeviceId string `protobuf:"bytes,4,opt,name=deviceId,proto3" json:"deviceId" form:"deviceId"`
	//
	//安装路径
	InstallPath string `protobuf:"bytes,5,opt,name=installPath,proto3" json:"installPath" form:"installPath"`
	//
	//创建人
	Creator string `protobuf:"bytes,6,opt,name=creator,proto3" json:"creator" form:"creator"`
	//
	//包名
	PackageName string `protobuf:"bytes,7,opt,name=packageName,proto3" json:"packageName" form:"packageName"`
	//
	//包类型
	PackageType int32 `protobuf:"varint,8,opt,name=packageType,proto3" json:"packageType" form:"packageType"`
	//
	//版本名称
	VersionName string `protobuf:"bytes,9,opt,name=versionName,proto3" json:"versionName" form:"versionName"`
	//
	//设备Ip
	DeviceIp string `protobuf:"bytes,10,opt,name=deviceIp,proto3" json:"deviceIp" form:"deviceIp"`
	//
	//组织名称
	Org int32 `protobuf:"varint,11,opt,name=org,proto3" json:"org" form:"org"`
	//
	//安装时间
	InstallTime string `protobuf:"bytes,12,opt,name=installTime,proto3" json:"installTime" form:"installTime"`
	//
	//更新时间
	UpdateTime string `protobuf:"bytes,13,opt,name=updateTime,proto3" json:"updateTime" form:"updateTime"`
	//
	//创建时间
	Ctime string `protobuf:"bytes,14,opt,name=ctime,proto3" json:"ctime" form:"ctime"`
	//
	//修改时间
	Mtime string `protobuf:"bytes,15,opt,name=mtime,proto3" json:"mtime" form:"mtime"`
	//
	//应用Id
	AppId string `protobuf:"bytes,16,opt,name=appId,proto3" json:"appId" form:"appId"`
	//
	//集群Id
	ClusterId string `protobuf:"bytes,17,opt,name=clusterId,proto3" json:"clusterId" form:"clusterId"`
	//
	//最后操作信息
	LastOperation string `protobuf:"bytes,18,opt,name=lastOperation,proto3" json:"lastOperation" form:"lastOperation"`
	//
	//配置Id
	ConfigId string `protobuf:"bytes,19,opt,name=configId,proto3" json:"configId" form:"configId"`
	//
	//配置包Id
	ConfigPackageId string `protobuf:"bytes,20,opt,name=configPackageId,proto3" json:"configPackageId" form:"configPackageId"`
	//
	//主机实例Id
	HostInstanceId       string   `protobuf:"bytes,21,opt,name=hostInstanceId,proto3" json:"hostInstanceId" form:"hostInstanceId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstanceInfo) Reset()         { *m = InstanceInfo{} }
func (m *InstanceInfo) String() string { return proto.CompactTextString(m) }
func (*InstanceInfo) ProtoMessage()    {}
func (*InstanceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad13907b28b89324, []int{0}
}
func (m *InstanceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceInfo.Unmarshal(m, b)
}
func (m *InstanceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceInfo.Marshal(b, m, deterministic)
}
func (m *InstanceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceInfo.Merge(m, src)
}
func (m *InstanceInfo) XXX_Size() int {
	return xxx_messageInfo_InstanceInfo.Size(m)
}
func (m *InstanceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceInfo proto.InternalMessageInfo

func (m *InstanceInfo) GetInstanceId() int32 {
	if m != nil {
		return m.InstanceId
	}
	return 0
}

func (m *InstanceInfo) GetPackageId() string {
	if m != nil {
		return m.PackageId
	}
	return ""
}

func (m *InstanceInfo) GetVersionId() string {
	if m != nil {
		return m.VersionId
	}
	return ""
}

func (m *InstanceInfo) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *InstanceInfo) GetInstallPath() string {
	if m != nil {
		return m.InstallPath
	}
	return ""
}

func (m *InstanceInfo) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *InstanceInfo) GetPackageName() string {
	if m != nil {
		return m.PackageName
	}
	return ""
}

func (m *InstanceInfo) GetPackageType() int32 {
	if m != nil {
		return m.PackageType
	}
	return 0
}

func (m *InstanceInfo) GetVersionName() string {
	if m != nil {
		return m.VersionName
	}
	return ""
}

func (m *InstanceInfo) GetDeviceIp() string {
	if m != nil {
		return m.DeviceIp
	}
	return ""
}

func (m *InstanceInfo) GetOrg() int32 {
	if m != nil {
		return m.Org
	}
	return 0
}

func (m *InstanceInfo) GetInstallTime() string {
	if m != nil {
		return m.InstallTime
	}
	return ""
}

func (m *InstanceInfo) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

func (m *InstanceInfo) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

func (m *InstanceInfo) GetMtime() string {
	if m != nil {
		return m.Mtime
	}
	return ""
}

func (m *InstanceInfo) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *InstanceInfo) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *InstanceInfo) GetLastOperation() string {
	if m != nil {
		return m.LastOperation
	}
	return ""
}

func (m *InstanceInfo) GetConfigId() string {
	if m != nil {
		return m.ConfigId
	}
	return ""
}

func (m *InstanceInfo) GetConfigPackageId() string {
	if m != nil {
		return m.ConfigPackageId
	}
	return ""
}

func (m *InstanceInfo) GetHostInstanceId() string {
	if m != nil {
		return m.HostInstanceId
	}
	return ""
}

func init() {
	proto.RegisterType((*InstanceInfo)(nil), "easy_flow.InstanceInfo")
}

func init() { proto.RegisterFile("instance_info.proto", fileDescriptor_ad13907b28b89324) }

var fileDescriptor_ad13907b28b89324 = []byte{
	// 1097 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x97, 0xcb, 0x6e, 0xdb, 0x46,
	0x17, 0xc7, 0x3f, 0x26, 0x9f, 0x93, 0x68, 0xec, 0xd8, 0x0e, 0x63, 0x07, 0x44, 0x80, 0x42, 0xae,
	0xea, 0x16, 0x43, 0xdb, 0x23, 0x8a, 0xba, 0x38, 0x31, 0x51, 0x44, 0xb0, 0x8b, 0xa6, 0xd0, 0xa6,
	0x75, 0x15, 0xaf, 0x4c, 0x52, 0x06, 0x4d, 0x52, 0xb2, 0x6a, 0x49, 0xc3, 0x92, 0xb4, 0x8d, 0x44,
	0xe4, 0xb2, 0x05, 0xba, 0x2a, 0xd0, 0x55, 0x81, 0xbe, 0x41, 0x80, 0xbe, 0x42, 0x17, 0xdd, 0xa4,
	0xaf, 0xd0, 0x8d, 0x0a, 0x74, 0x55, 0xa0, 0x3b, 0x3d, 0x41, 0x31, 0x33, 0x14, 0x49, 0x4b, 0x56,
	0x2f, 0x40, 0x64, 0xc0, 0x2b, 0xcd, 0xe1, 0xff, 0x1c, 0x9e, 0xdf, 0x5f, 0x1c, 0xcc, 0x05, 0x3c,
	0x6c, 0xf7, 0x3c, 0xdf, 0xe8, 0x99, 0xf6, 0x51, 0xbb, 0xd7, 0xc4, 0x79, 0xc7, 0xc5, 0x3e, 0xe6,
	0x33, 0xb6, 0xe1, 0xbd, 0x3c, 0x6a, 0x76, 0xf0, 0xc5, 0x63, 0xd4, 0x6a, 0xfb, 0x27, 0x67, 0xc7,
	0x79, 0x13, 0x77, 0xa5, 0x16, 0x6e, 0x61, 0x89, 0x66, 0x1c, 0x9f, 0x35, 0x69, 0x44, 0x03, 0x3a,
	0x62, 0x95, 0x8f, 0xb7, 0x53, 0xe9, 0xdd, 0x8b, 0xb6, 0x7f, 0x8a, 0x2f, 0xa4, 0x16, 0x46, 0x54,
	0x44, 0xe7, 0x46, 0xa7, 0x6d, 0x19, 0x3e, 0x76, 0x3d, 0x29, 0x1e, 0xb2, 0xba, 0xdc, 0x4f, 0xef,
	0x80, 0x85, 0x5a, 0x44, 0x52, 0xeb, 0x35, 0x31, 0x5f, 0x01, 0x60, 0x44, 0x56, 0xb3, 0x04, 0x6e,
	0x8d, 0x83, 0x73, 0x7b, 0xab, 0xc3, 0x41, 0xf6, 0x41, 0x13, 0xbb, 0x5d, 0x25, 0x97, 0x68, 0xb9,
	0x7a, 0x2a, 0x91, 0xff, 0x86, 0x03, 0x19, 0xc7, 0x30, 0x4f, 0x8d, 0x16, 0x29, 0xbb, 0xb5, 0xc6,
	0xc1, 0xcc, 0xde, 0xe9, 0x70, 0x90, 0x5d, 0x66, 0x65, 0xb1, 0x94, 0xfb, 0xfd, 0xb7, 0xec, 0x0b,
	0xf0, 0x79, 0x43, 0x35, 0x50, 0x73, 0x17, 0x3d, 0x2f, 0xa0, 0x1d, 0xbd, 0xff, 0x34, 0x44, 0xd5,
	0x74, 0x5c, 0xfe, 0x8f, 0xb1, 0x5c, 0x0c, 0xd7, 0xeb, 0x49, 0x77, 0xca, 0x72, 0x6e, 0xbb, 0x5e,
	0x1b, 0xf7, 0x6a, 0x96, 0x70, 0x7b, 0x9c, 0x25, 0x96, 0x66, 0xc7, 0x12, 0xb7, 0xe0, 0xbf, 0xe6,
	0xc0, 0x3d, 0xcb, 0x3e, 0x6f, 0xd3, 0x7f, 0xf3, 0xff, 0x14, 0xe5, 0x8b, 0xe1, 0x20, 0xbb, 0xc4,
	0x50, 0x46, 0xca, 0xcc, 0x48, 0xe2, 0xde, 0xfc, 0x57, 0x1c, 0x98, 0xa7, 0xdf, 0xab, 0xd3, 0xd9,
	0x37, 0xfc, 0x13, 0x61, 0x8e, 0xb2, 0x98, 0xc3, 0x41, 0x96, 0x4f, 0x7d, 0x59, 0x26, 0x12, 0x9c,
	0x1a, 0xf8, 0xa4, 0x01, 0xa1, 0x26, 0xa9, 0x0d, 0x4d, 0x52, 0xb4, 0x0d, 0xad, 0x9a, 0xcb, 0x7d,
	0xf8, 0x4c, 0x0b, 0x34, 0x57, 0xeb, 0xe9, 0x9b, 0xe2, 0xa6, 0x18, 0x40, 0x4d, 0x12, 0x03, 0xd5,
	0x40, 0xaf, 0x76, 0xd1, 0xa1, 0xae, 0x40, 0x4d, 0x53, 0x1b, 0x9a, 0x36, 0x99, 0xb9, 0xb1, 0x5e,
	0x4f, 0xf7, 0xe5, 0x5f, 0x80, 0xbb, 0xa6, 0x6b, 0x93, 0x19, 0x28, 0xdc, 0xa1, 0x08, 0x3b, 0xc3,
	0x41, 0x76, 0x91, 0x21, 0x44, 0x02, 0x69, 0xff, 0x1e, 0x78, 0xb7, 0x11, 0xbd, 0x9c, 0xb8, 0x51,
	0xf3, 0xf1, 0xf8, 0x08, 0xe9, 0xfd, 0xe2, 0x56, 0x49, 0x0e, 0xd7, 0xeb, 0xa3, 0x37, 0xf1, 0x4f,
	0xc1, 0x7c, 0xf4, 0xf9, 0x3f, 0x35, 0xba, 0xb6, 0x70, 0x97, 0xbe, 0xf8, 0x51, 0xe2, 0x2d, 0x25,
	0xe6, 0xea, 0xe9, 0xd4, 0x54, 0xe5, 0xc1, 0x4b, 0xc7, 0x16, 0xee, 0xd1, 0xf9, 0x3e, 0x59, 0x49,
	0xc4, 0xa4, 0x92, 0x44, 0xa4, 0x32, 0xfa, 0xcc, 0xb4, 0x67, 0x66, 0xbc, 0x67, 0x4a, 0xcc, 0xd5,
	0xd3, 0xa9, 0xfc, 0x9b, 0x4c, 0x3c, 0x27, 0x1c, 0x01, 0xd0, 0xba, 0xd7, 0x99, 0x89, 0x49, 0xe1,
	0x90, 0xbf, 0xe1, 0xbb, 0x0c, 0xf8, 0x36, 0xd3, 0x80, 0xb0, 0x08, 0x2b, 0x6a, 0x01, 0x55, 0xf4,
	0xbe, 0x1c, 0x06, 0x6a, 0x01, 0x95, 0x75, 0xcd, 0xea, 0xcb, 0xa1, 0x48, 0xc6, 0xb2, 0x5e, 0x25,
	0xc1, 0x56, 0x31, 0x14, 0xa1, 0x96, 0xff, 0x97, 0x99, 0x62, 0xbf, 0x14, 0x8a, 0x81, 0xe6, 0x6d,
	0x40, 0x08, 0xd5, 0x02, 0xda, 0xd9, 0x45, 0xcf, 0x0d, 0xd4, 0xd4, 0xfb, 0xf2, 0x56, 0x39, 0x54,
	0xc4, 0xfe, 0x93, 0x70, 0xe2, 0x69, 0xa0, 0x88, 0x62, 0x70, 0x65, 0xf2, 0x76, 0x08, 0x95, 0x89,
	0x6c, 0x08, 0x8b, 0x8c, 0x23, 0x28, 0x46, 0x14, 0x81, 0xac, 0x59, 0x9a, 0x15, 0xa8, 0x32, 0xda,
	0x21, 0x1c, 0x0c, 0xf6, 0x1f, 0x72, 0x18, 0xe6, 0xd4, 0xce, 0x95, 0x10, 0xc2, 0xc9, 0xde, 0x22,
	0xb3, 0x18, 0x28, 0xd7, 0xc2, 0x50, 0x9e, 0xca, 0x40, 0xca, 0xae, 0x92, 0xaa, 0x6f, 0x13, 0xec,
	0x6f, 0xc8, 0x4a, 0x53, 0xc9, 0xca, 0x53, 0xc8, 0xfa, 0x85, 0xad, 0x62, 0x78, 0x4d, 0x74, 0xc5,
	0xa9, 0x74, 0x95, 0xe9, 0x74, 0xa5, 0xeb, 0xa2, 0x93, 0xa7, 0xd2, 0x6d, 0x4f, 0xa7, 0x2b, 0xcf,
	0x82, 0x4e, 0x99, 0x06, 0xf2, 0x64, 0x3a, 0x48, 0xe5, 0xed, 0x83, 0x88, 0xf0, 0xfd, 0xfc, 0xa6,
	0x58, 0xd5, 0xbc, 0x8d, 0x64, 0x53, 0x71, 0xf8, 0x0f, 0xc0, 0x6d, 0xec, 0xb6, 0x84, 0x79, 0xba,
	0x6a, 0xae, 0x0c, 0x07, 0x59, 0xc0, 0x96, 0x30, 0xec, 0xb6, 0xc8, 0xea, 0x75, 0x6b, 0xf9, 0x7f,
	0x75, 0x92, 0xc0, 0xff, 0x99, 0x6c, 0x3e, 0x07, 0xed, 0xae, 0x2d, 0x2c, 0xd0, 0x45, 0xef, 0x17,
	0x6e, 0x62, 0xf7, 0x21, 0x2a, 0xa9, 0xfc, 0x91, 0x03, 0xaf, 0xb9, 0x06, 0x84, 0x55, 0x85, 0xb2,
	0x10, 0x93, 0xfa, 0x86, 0x58, 0x55, 0xa3, 0x9d, 0x4e, 0x44, 0x50, 0x56, 0x0b, 0xa8, 0xa8, 0x07,
	0x05, 0xaa, 0x8b, 0x08, 0x96, 0xe8, 0x02, 0x17, 0xc5, 0xc4, 0x41, 0x91, 0x55, 0x89, 0xea, 0xc1,
	0x9a, 0x0e, 0x89, 0xc1, 0x92, 0xce, 0x16, 0x41, 0xf6, 0x58, 0x81, 0xd4, 0x7a, 0x14, 0x24, 0x63,
	0xa8, 0xe5, 0xe9, 0xef, 0xa6, 0x58, 0x85, 0x87, 0x81, 0xba, 0x89, 0x74, 0x58, 0x55, 0xae, 0x28,
	0x4f, 0x55, 0x57, 0x93, 0x2d, 0x8e, 0xf0, 0xf3, 0x7f, 0x70, 0x00, 0x9c, 0x39, 0x96, 0xe1, 0xdb,
	0xd4, 0xec, 0x7d, 0x6a, 0xf6, 0x0d, 0x97, 0x1c, 0xa2, 0x12, 0xf1, 0x26, 0x7a, 0x4d, 0x79, 0xe3,
	0x7f, 0xe5, 0xc0, 0x9c, 0xe9, 0x13, 0x97, 0x8b, 0xd4, 0xe5, 0xcf, 0xc4, 0xe5, 0x42, 0xb4, 0x9b,
	0xfb, 0x37, 0xd4, 0x20, 0x73, 0x44, 0xbd, 0x75, 0xa9, 0xb7, 0xa5, 0x09, 0x6f, 0xdd, 0x1b, 0xeb,
	0x8d, 0x92, 0xf3, 0x0a, 0x98, 0x33, 0x1c, 0xa7, 0x66, 0x09, 0xcb, 0xd4, 0xda, 0x7a, 0xe2, 0x8c,
	0x3e, 0x26, 0xce, 0x96, 0xc1, 0x62, 0x83, 0x94, 0x19, 0xe8, 0x95, 0xde, 0x97, 0x4b, 0xe1, 0x7a,
	0x9d, 0x95, 0xd0, 0xe3, 0xb5, 0xd9, 0x39, 0xf3, 0x7c, 0xdb, 0xad, 0x59, 0xc2, 0x83, 0xf1, 0xe3,
	0x75, 0x2c, 0xcd, 0xee, 0x78, 0x1d, 0xb7, 0xe0, 0x9f, 0x81, 0xfb, 0x1d, 0xc3, 0xf3, 0x3f, 0x73,
	0x6c, 0xd7, 0xf0, 0xdb, 0xb8, 0x27, 0xf0, 0x14, 0x47, 0x18, 0x0e, 0xb2, 0x2b, 0x0c, 0xe7, 0x92,
	0x9c, 0xab, 0x5f, 0x4e, 0xa7, 0xc7, 0x73, 0x13, 0xf7, 0x9a, 0xed, 0x56, 0xcd, 0x12, 0x1e, 0x8e,
	0x1f, 0xcf, 0x47, 0xca, 0xec, 0x8e, 0xe7, 0xa3, 0x0e, 0xfc, 0x0f, 0x1c, 0x58, 0x62, 0xc1, 0x7e,
	0x7c, 0x8b, 0x5a, 0xa1, 0x3c, 0x5f, 0x0e, 0x07, 0xd9, 0x47, 0x69, 0x9e, 0xfd, 0x99, 0xdf, 0xa5,
	0xc6, 0x49, 0xf8, 0xef, 0x39, 0xb0, 0x78, 0x82, 0x3d, 0xbf, 0x96, 0xdc, 0x0c, 0x57, 0x29, 0x9c,
	0x33, 0x1c, 0x64, 0x57, 0x19, 0xdc, 0x65, 0x7d, 0x66, 0x6c, 0x63, 0x1c, 0x7b, 0x1f, 0x1f, 0x7e,
	0xd4, 0xc2, 0x79, 0x72, 0x6f, 0xc6, 0x8e, 0x97, 0xef, 0x60, 0xd3, 0xe8, 0x48, 0x26, 0xee, 0xf9,
	0xae, 0x61, 0xfa, 0x1e, 0xbb, 0x34, 0xbb, 0xb6, 0x83, 0x51, 0x17, 0x5b, 0x76, 0xc7, 0x93, 0xa2,
	0x44, 0x89, 0x86, 0x52, 0x7c, 0xdd, 0x3e, 0xbe, 0x43, 0x33, 0x4b, 0x7f, 0x05, 0x00, 0x00, 0xff,
	0xff, 0xa9, 0xc4, 0x88, 0xec, 0x97, 0x0f, 0x00, 0x00,
}
