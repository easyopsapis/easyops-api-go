// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: sql_package.proto

package database_delivery

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//SQL包
type SQLPackage struct {
	//
	//SQL包ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" form:"id"`
	//
	//名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name" form:"name"`
	//
	//SQL包的数据库类型
	DbType string `protobuf:"bytes,3,opt,name=dbType,proto3" json:"dbType" form:"dbType"`
	//
	//描述
	Memo string `protobuf:"bytes,4,opt,name=memo,proto3" json:"memo" form:"memo"`
	//
	//创建者
	Creator string `protobuf:"bytes,5,opt,name=creator,proto3" json:"creator" form:"creator"`
	//
	//ctime
	Ctime int64 `protobuf:"varint,6,opt,name=ctime,proto3" json:"ctime" form:"ctime"`
	//
	//mtime
	Mtime int64 `protobuf:"varint,7,opt,name=mtime,proto3" json:"mtime" form:"mtime"`
	//
	//程序包Id
	AppPackageId string `protobuf:"bytes,8,opt,name=appPackageId,proto3" json:"appPackageId" form:"appPackageId"`
	//
	//文件仓库包ID
	RepoPackageId        string   `protobuf:"bytes,9,opt,name=repoPackageId,proto3" json:"repoPackageId" form:"repoPackageId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SQLPackage) Reset()         { *m = SQLPackage{} }
func (m *SQLPackage) String() string { return proto.CompactTextString(m) }
func (*SQLPackage) ProtoMessage()    {}
func (*SQLPackage) Descriptor() ([]byte, []int) {
	return fileDescriptor_101b27065b98e986, []int{0}
}
func (m *SQLPackage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SQLPackage.Unmarshal(m, b)
}
func (m *SQLPackage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SQLPackage.Marshal(b, m, deterministic)
}
func (m *SQLPackage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SQLPackage.Merge(m, src)
}
func (m *SQLPackage) XXX_Size() int {
	return xxx_messageInfo_SQLPackage.Size(m)
}
func (m *SQLPackage) XXX_DiscardUnknown() {
	xxx_messageInfo_SQLPackage.DiscardUnknown(m)
}

var xxx_messageInfo_SQLPackage proto.InternalMessageInfo

func (m *SQLPackage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SQLPackage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SQLPackage) GetDbType() string {
	if m != nil {
		return m.DbType
	}
	return ""
}

func (m *SQLPackage) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *SQLPackage) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *SQLPackage) GetCtime() int64 {
	if m != nil {
		return m.Ctime
	}
	return 0
}

func (m *SQLPackage) GetMtime() int64 {
	if m != nil {
		return m.Mtime
	}
	return 0
}

func (m *SQLPackage) GetAppPackageId() string {
	if m != nil {
		return m.AppPackageId
	}
	return ""
}

func (m *SQLPackage) GetRepoPackageId() string {
	if m != nil {
		return m.RepoPackageId
	}
	return ""
}

func init() {
	proto.RegisterType((*SQLPackage)(nil), "database_delivery.SQLPackage")
}

func init() { proto.RegisterFile("sql_package.proto", fileDescriptor_101b27065b98e986) }

var fileDescriptor_101b27065b98e986 = []byte{
	// 443 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0x51, 0x4f, 0xd4, 0x40,
	0x10, 0xc7, 0x73, 0x77, 0x70, 0x78, 0x2b, 0x20, 0x57, 0x4d, 0x6c, 0x78, 0x29, 0x2c, 0xc4, 0x60,
	0xe2, 0xb6, 0x9c, 0x97, 0x98, 0x9c, 0x26, 0x26, 0xde, 0x9b, 0x51, 0x13, 0x2d, 0x3e, 0x71, 0x39,
	0x2e, 0xdb, 0xee, 0x52, 0x1b, 0xba, 0x4c, 0x6d, 0x17, 0xc8, 0x41, 0xf8, 0x9a, 0x3e, 0xd6, 0xc4,
	0x8f, 0xd0, 0x4f, 0x60, 0x76, 0xb6, 0x22, 0x77, 0x3c, 0x75, 0x66, 0xfe, 0xbf, 0xff, 0x3f, 0xd3,
	0xcd, 0x90, 0x7e, 0xf9, 0x33, 0x9b, 0xe5, 0x3c, 0x3e, 0xe3, 0x89, 0xf4, 0xf3, 0x02, 0x34, 0x38,
	0x7d, 0xc1, 0x35, 0x8f, 0x78, 0x29, 0x67, 0x42, 0x66, 0xe9, 0xa5, 0x2c, 0xe6, 0xdb, 0x2c, 0x49,
	0xf5, 0x8f, 0x8b, 0xc8, 0x8f, 0x41, 0x05, 0x09, 0x24, 0x10, 0x20, 0x19, 0x5d, 0x9c, 0x62, 0x87,
	0x0d, 0x56, 0x36, 0x61, 0xfb, 0xcd, 0x3d, 0x5c, 0x5d, 0xa5, 0xfa, 0x0c, 0xae, 0x82, 0x04, 0x18,
	0x8a, 0xec, 0x92, 0x67, 0xa9, 0xe0, 0x1a, 0x8a, 0x32, 0xb8, 0x2b, 0xad, 0x8f, 0xfe, 0xea, 0x10,
	0x72, 0xf4, 0xed, 0xf3, 0x57, 0xbb, 0x8e, 0x33, 0x20, 0xed, 0x54, 0xb8, 0xad, 0x9d, 0xd6, 0x41,
	0x6f, 0xbc, 0x5b, 0x57, 0x5e, 0xef, 0x14, 0x0a, 0xf5, 0x96, 0xa6, 0x82, 0xfe, 0xf9, 0xed, 0x6d,
	0x91, 0xcd, 0x93, 0xc9, 0x21, 0x1b, 0x71, 0x76, 0x3d, 0xbd, 0x19, 0x0c, 0x6f, 0xf7, 0xc3, 0x76,
	0x2a, 0x9c, 0x3d, 0xb2, 0x72, 0xce, 0x95, 0x74, 0xdb, 0x68, 0x7a, 0x52, 0x57, 0xde, 0x63, 0x6b,
	0x32, 0x53, 0x1a, 0xa2, 0xe8, 0xbc, 0x24, 0x5d, 0x11, 0x7d, 0x9f, 0xe7, 0xd2, 0xed, 0x20, 0xd6,
	0xaf, 0x2b, 0x6f, 0xc3, 0x62, 0x76, 0x4e, 0xc3, 0x06, 0x30, 0x79, 0x4a, 0x2a, 0x70, 0x57, 0x96,
	0xf3, 0xcc, 0x94, 0x86, 0x28, 0x3a, 0x47, 0x64, 0x2d, 0x2e, 0xa4, 0xf9, 0x0f, 0x77, 0x15, 0xb9,
	0x51, 0x5d, 0x79, 0x9b, 0x96, 0x6b, 0x04, 0xb3, 0xf1, 0x1e, 0xd9, 0x3d, 0x99, 0x70, 0x76, 0xfd,
	0x81, 0x1d, 0x1f, 0xb2, 0xd1, 0x74, 0xe2, 0xdf, 0xd5, 0x33, 0x36, 0xbd, 0x79, 0xfd, 0x6a, 0x38,
	0xb8, 0xdd, 0x0f, 0xff, 0x25, 0x39, 0x2f, 0xc8, 0x6a, 0xac, 0x53, 0x25, 0xdd, 0xee, 0x4e, 0xeb,
	0xa0, 0x33, 0xde, 0xaa, 0x2b, 0x6f, 0xbd, 0x89, 0x34, 0x63, 0x1a, 0x5a, 0xd9, 0x70, 0x0a, 0xb9,
	0xb5, 0x65, 0x4e, 0x35, 0x1c, 0x7e, 0x9d, 0x77, 0x64, 0x9d, 0xe7, 0x79, 0xf3, 0xb4, 0x1f, 0x85,
	0xfb, 0x08, 0x37, 0x7d, 0x5e, 0x57, 0xde, 0x53, 0x8b, 0xdf, 0x57, 0x69, 0xb8, 0x00, 0x3b, 0xef,
	0xc9, 0x46, 0x21, 0x73, 0xf8, 0xef, 0xee, 0xa1, 0xdb, 0xad, 0x2b, 0xef, 0x99, 0x75, 0x2f, 0xc8,
	0x34, 0x5c, 0xc4, 0xc7, 0x5f, 0x8e, 0x3f, 0x25, 0xe0, 0x4b, 0x5e, 0xce, 0x21, 0x2f, 0xfd, 0x0c,
	0x62, 0x9e, 0x05, 0x31, 0x9c, 0xeb, 0x82, 0xc7, 0xba, 0xb4, 0xc7, 0x64, 0x0c, 0x4c, 0x81, 0x90,
	0x59, 0x19, 0x34, 0x60, 0x80, 0x6d, 0xf0, 0xe0, 0x1c, 0xa3, 0x2e, 0x3a, 0x86, 0x7f, 0x03, 0x00,
	0x00, 0xff, 0xff, 0xcd, 0xa3, 0x0b, 0x94, 0xbd, 0x02, 0x00, 0x00,
}
