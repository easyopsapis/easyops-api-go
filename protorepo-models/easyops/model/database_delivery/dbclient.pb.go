// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: dbclient.proto

package database_delivery

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//数据库实例
type DBClient struct {
	//
	//客户端ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" form:"id"`
	//
	//客户端名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name" form:"name"`
	//
	//easyCommand任务ID
	CmdTaskId string `protobuf:"bytes,3,opt,name=cmdTaskId,proto3" json:"cmdTaskId" form:"cmdTaskId"`
	//
	//客户端IP
	Ip string `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip" form:"ip"`
	//
	//客户端状态
	Status string `protobuf:"bytes,5,opt,name=status,proto3" json:"status" form:"status"`
	//
	//客户端安装时间
	Ctime int64 `protobuf:"varint,6,opt,name=ctime,proto3" json:"ctime" form:"ctime"`
	//
	//客户端更新时间
	Mtime int64 `protobuf:"varint,7,opt,name=mtime,proto3" json:"mtime" form:"mtime"`
	//
	//客户端创建者
	Creator              string   `protobuf:"bytes,8,opt,name=creator,proto3" json:"creator" form:"creator"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DBClient) Reset()         { *m = DBClient{} }
func (m *DBClient) String() string { return proto.CompactTextString(m) }
func (*DBClient) ProtoMessage()    {}
func (*DBClient) Descriptor() ([]byte, []int) {
	return fileDescriptor_9805f0353f5ec33c, []int{0}
}
func (m *DBClient) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DBClient.Unmarshal(m, b)
}
func (m *DBClient) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DBClient.Marshal(b, m, deterministic)
}
func (m *DBClient) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DBClient.Merge(m, src)
}
func (m *DBClient) XXX_Size() int {
	return xxx_messageInfo_DBClient.Size(m)
}
func (m *DBClient) XXX_DiscardUnknown() {
	xxx_messageInfo_DBClient.DiscardUnknown(m)
}

var xxx_messageInfo_DBClient proto.InternalMessageInfo

func (m *DBClient) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DBClient) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DBClient) GetCmdTaskId() string {
	if m != nil {
		return m.CmdTaskId
	}
	return ""
}

func (m *DBClient) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *DBClient) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *DBClient) GetCtime() int64 {
	if m != nil {
		return m.Ctime
	}
	return 0
}

func (m *DBClient) GetMtime() int64 {
	if m != nil {
		return m.Mtime
	}
	return 0
}

func (m *DBClient) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func init() {
	proto.RegisterType((*DBClient)(nil), "database_delivery.DBClient")
}

func init() { proto.RegisterFile("dbclient.proto", fileDescriptor_9805f0353f5ec33c) }

var fileDescriptor_9805f0353f5ec33c = []byte{
	// 624 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x95, 0x4d, 0x4e, 0xdb, 0x4c,
	0x18, 0x80, 0x45, 0xf8, 0xf5, 0x7c, 0x7c, 0x14, 0xac, 0x2e, 0x2c, 0x36, 0x06, 0x43, 0xab, 0x31,
	0xcd, 0xd8, 0xb1, 0x93, 0x80, 0x92, 0x0d, 0x22, 0xad, 0x2a, 0x55, 0x55, 0x37, 0x69, 0x57, 0x24,
	0x06, 0x4d, 0x3c, 0x26, 0xb5, 0x88, 0x99, 0xc8, 0x36, 0x20, 0xb0, 0x7d, 0x86, 0x4a, 0x3d, 0x40,
	0x57, 0xbd, 0x42, 0xaf, 0x93, 0x4a, 0x3d, 0x82, 0x4f, 0x50, 0xcd, 0x8c, 0x4b, 0x51, 0x83, 0xdb,
	0x2e, 0x28, 0x2b, 0xbf, 0x3f, 0xcf, 0x3b, 0xf3, 0x78, 0xf3, 0x0e, 0x58, 0x21, 0x03, 0x77, 0xe4,
	0x7b, 0x67, 0xb1, 0x31, 0x0e, 0x69, 0x4c, 0xe5, 0x35, 0x82, 0x63, 0x3c, 0xc0, 0x91, 0x77, 0x4c,
	0xbc, 0x91, 0x7f, 0xe1, 0x85, 0x57, 0xeb, 0x68, 0xe8, 0xc7, 0xef, 0xcf, 0x07, 0x86, 0x4b, 0x03,
	0x73, 0x48, 0x87, 0xd4, 0xe4, 0xe4, 0xe0, 0xfc, 0x84, 0x67, 0x3c, 0xe1, 0x91, 0x38, 0x61, 0x7d,
	0xf7, 0x16, 0x1e, 0x5c, 0xfa, 0xf1, 0x29, 0xbd, 0x34, 0x87, 0x14, 0xf1, 0x26, 0xba, 0xc0, 0x23,
	0x9f, 0xe0, 0x98, 0x86, 0x91, 0x79, 0x13, 0x8a, 0x39, 0xed, 0xd3, 0x32, 0x58, 0x7a, 0xd1, 0x79,
	0xce, 0x65, 0x64, 0x0b, 0x54, 0x7c, 0xa2, 0xcc, 0x6c, 0xcc, 0x40, 0xa9, 0xb3, 0x99, 0x4f, 0x54,
	0xe9, 0x84, 0x86, 0x41, 0x5b, 0xf3, 0x89, 0xf6, 0xed, 0xab, 0xba, 0x0a, 0x56, 0x8e, 0x7a, 0x35,
	0xd4, 0xc2, 0xe8, 0xda, 0x49, 0xac, 0x7a, 0xb6, 0xdd, 0xad, 0xf8, 0x44, 0xde, 0x02, 0x73, 0x67,
	0x38, 0xf0, 0x94, 0x0a, 0x1f, 0x7a, 0x94, 0x4f, 0xd4, 0xff, 0xc4, 0x10, 0xab, 0x6a, 0x5d, 0xde,
	0x94, 0x6d, 0x20, 0xb9, 0x01, 0x79, 0x87, 0xa3, 0xd3, 0x57, 0x44, 0x99, 0xe5, 0xe4, 0xe3, 0x7c,
	0xa2, 0xae, 0x0a, 0xf2, 0xa6, 0xa5, 0x75, 0x7f, 0x62, 0xf2, 0x17, 0x09, 0x54, 0xfc, 0xb1, 0x32,
	0xc7, 0xe9, 0xcf, 0xd2, 0x2d, 0x9b, 0x31, 0xb3, 0xf9, 0x28, 0x81, 0x0f, 0xd2, 0x11, 0x84, 0x36,
	0x6c, 0xf6, 0x6a, 0xa8, 0xe9, 0x24, 0x56, 0x96, 0xf6, 0x6a, 0xa8, 0xe1, 0xf4, 0x49, 0x62, 0x65,
	0x3a, 0x8b, 0x2d, 0x67, 0x9f, 0x25, 0x55, 0x3b, 0xd3, 0x61, 0xdf, 0xf8, 0x4b, 0x52, 0x4f, 0xea,
	0x99, 0x9e, 0xf6, 0xa3, 0x1d, 0x08, 0x21, 0xfb, 0xdb, 0x03, 0xf4, 0x12, 0xa3, 0x13, 0x27, 0xb1,
	0xaa, 0x8d, 0xac, 0xad, 0x27, 0x7b, 0xd9, 0x54, 0x35, 0x6d, 0xeb, 0x7a, 0x7a, 0x27, 0xbc, 0x9b,
	0xc1, 0xf6, 0x14, 0x0d, 0xa1, 0x2d, 0x3c, 0x52, 0xbb, 0xb0, 0x48, 0xad, 0x3e, 0xe9, 0x93, 0xb4,
	0x67, 0xa1, 0x16, 0xf3, 0x10, 0xb2, 0x7f, 0x60, 0x84, 0x66, 0xe9, 0xcd, 0xcd, 0x0c, 0xc2, 0xe9,
	0xbb, 0x75, 0xf1, 0x8b, 0x69, 0xfb, 0x41, 0x1c, 0x1a, 0xa5, 0x0e, 0x6c, 0xec, 0xae, 0xd6, 0xfe,
	0x7d, 0x8a, 0xfd, 0xc6, 0xac, 0x5e, 0x6a, 0xd6, 0x28, 0x31, 0x4b, 0x6a, 0x55, 0x3b, 0x7b, 0x20,
	0x3b, 0xbb, 0xd4, 0xae, 0x59, 0x6e, 0x57, 0x7f, 0x28, 0x3b, 0xab, 0xd4, 0x6e, 0xb7, 0xdc, 0xae,
	0xf1, 0x2f, 0xec, 0xda, 0x65, 0x22, 0x7b, 0xe5, 0x22, 0xcd, 0xfb, 0x17, 0xd1, 0xe1, 0x13, 0xe3,
	0x99, 0xbe, 0xdf, 0x8f, 0x76, 0xd8, 0x42, 0x1c, 0xcb, 0x3a, 0x58, 0x88, 0x62, 0x1c, 0x9f, 0x47,
	0xca, 0x3c, 0x5f, 0x5d, 0x6b, 0xf9, 0x44, 0xfd, 0x5f, 0x6c, 0x2e, 0x51, 0xd7, 0xba, 0x05, 0x20,
	0x3f, 0x05, 0xf3, 0x6e, 0xec, 0x07, 0x9e, 0xb2, 0xb0, 0x31, 0x03, 0x67, 0x3b, 0xab, 0xf9, 0x44,
	0x5d, 0x2e, 0x56, 0x22, 0x2b, 0x6b, 0x5d, 0xd1, 0x66, 0x5c, 0xc0, 0xb9, 0xc5, 0x5f, 0xb9, 0xa0,
	0xe0, 0xf8, 0x57, 0x7e, 0x0b, 0x16, 0xdd, 0xd0, 0x63, 0xcb, 0x5d, 0x59, 0xe2, 0x77, 0xb7, 0xf2,
	0x89, 0xba, 0x52, 0x9c, 0x28, 0x1a, 0x6c, 0x75, 0x6e, 0x81, 0xcd, 0xa3, 0x1e, 0x46, 0xd7, 0x07,
	0xe8, 0xb0, 0x86, 0x5a, 0x4e, 0xcf, 0xb8, 0x89, 0x8f, 0x91, 0x93, 0xd8, 0xd5, 0xba, 0x95, 0x6d,
	0x77, 0x7f, 0x9c, 0xd4, 0x79, 0x73, 0xf8, 0x7a, 0x48, 0x0d, 0x0f, 0x47, 0x57, 0x74, 0x1c, 0x19,
	0x23, 0xea, 0xe2, 0x91, 0xe9, 0xd2, 0xb3, 0x38, 0xc4, 0x6e, 0x1c, 0x89, 0x47, 0x29, 0xf4, 0xc6,
	0x14, 0x05, 0x94, 0x78, 0xa3, 0xc8, 0x2c, 0x40, 0x93, 0xa7, 0xe6, 0xd4, 0xb3, 0x36, 0x58, 0xe0,
	0x13, 0xf5, 0xef, 0x01, 0x00, 0x00, 0xff, 0xff, 0x3e, 0x00, 0xaa, 0x6d, 0x02, 0x07, 0x00, 0x00,
}
