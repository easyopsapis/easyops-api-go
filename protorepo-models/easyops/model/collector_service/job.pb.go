// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: job.proto

package collector_service

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//采集任务
type CollectorJob struct {
	//
	//采集实例objectId
	ObjectId string `protobuf:"bytes,1,opt,name=objectId,proto3" json:"objectId" form:"objectId"`
	//
	//采集实例instanceId
	InstanceId string `protobuf:"bytes,2,opt,name=instanceId,proto3" json:"instanceId" form:"instanceId"`
	//
	//指标名称
	MetricName string `protobuf:"bytes,3,opt,name=metricName,proto3" json:"metricName" form:"metricName"`
	//
	//采集参数组，每个分组是一组采集参数
	ParamGroups []*types.Struct `protobuf:"bytes,4,rep,name=paramGroups,proto3" json:"paramGroups" form:"paramGroups"`
	//
	//采集器
	Collector *types.Struct `protobuf:"bytes,5,opt,name=collector,proto3" json:"collector" form:"collector"`
	//
	//采集间隔
	Interval             int32    `protobuf:"varint,6,opt,name=interval,proto3" json:"interval" form:"interval"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CollectorJob) Reset()         { *m = CollectorJob{} }
func (m *CollectorJob) String() string { return proto.CompactTextString(m) }
func (*CollectorJob) ProtoMessage()    {}
func (*CollectorJob) Descriptor() ([]byte, []int) {
	return fileDescriptor_f32c477d91a04ead, []int{0}
}
func (m *CollectorJob) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollectorJob.Unmarshal(m, b)
}
func (m *CollectorJob) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollectorJob.Marshal(b, m, deterministic)
}
func (m *CollectorJob) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectorJob.Merge(m, src)
}
func (m *CollectorJob) XXX_Size() int {
	return xxx_messageInfo_CollectorJob.Size(m)
}
func (m *CollectorJob) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectorJob.DiscardUnknown(m)
}

var xxx_messageInfo_CollectorJob proto.InternalMessageInfo

func (m *CollectorJob) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *CollectorJob) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *CollectorJob) GetMetricName() string {
	if m != nil {
		return m.MetricName
	}
	return ""
}

func (m *CollectorJob) GetParamGroups() []*types.Struct {
	if m != nil {
		return m.ParamGroups
	}
	return nil
}

func (m *CollectorJob) GetCollector() *types.Struct {
	if m != nil {
		return m.Collector
	}
	return nil
}

func (m *CollectorJob) GetInterval() int32 {
	if m != nil {
		return m.Interval
	}
	return 0
}

func init() {
	proto.RegisterType((*CollectorJob)(nil), "collector_service.CollectorJob")
}

func init() { proto.RegisterFile("job.proto", fileDescriptor_f32c477d91a04ead) }

var fileDescriptor_f32c477d91a04ead = []byte{
	// 421 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xdf, 0x6a, 0xd4, 0x40,
	0x14, 0xc6, 0x89, 0x6b, 0x4b, 0x77, 0x2a, 0xda, 0x8e, 0xff, 0x42, 0x51, 0x12, 0x42, 0x2f, 0x56,
	0x30, 0x99, 0xd6, 0xc5, 0x82, 0xde, 0x19, 0x2f, 0x64, 0x2d, 0x0a, 0xc6, 0xbb, 0x96, 0xb6, 0x4c,
	0x26, 0xd3, 0x98, 0x3a, 0xc9, 0x09, 0x33, 0x93, 0x2d, 0x5a, 0xf6, 0xb1, 0x7c, 0x9d, 0x08, 0x3e,
	0x42, 0x9e, 0x40, 0x9c, 0x6c, 0xfe, 0x80, 0xd0, 0xbb, 0x73, 0xf8, 0xbe, 0xef, 0xc7, 0xf0, 0x9d,
	0x41, 0xd3, 0x2b, 0x88, 0x83, 0x52, 0x82, 0x06, 0xbc, 0xcb, 0x40, 0x08, 0xce, 0x34, 0xc8, 0x0b,
	0xc5, 0xe5, 0x32, 0x63, 0x7c, 0xcf, 0x4f, 0x33, 0xfd, 0xad, 0x8a, 0x03, 0x06, 0x39, 0x49, 0x21,
	0x05, 0x62, 0x9c, 0x71, 0x75, 0x69, 0x36, 0xb3, 0x98, 0xa9, 0x25, 0xec, 0x1d, 0x8d, 0xec, 0xf9,
	0x75, 0xa6, 0xbf, 0xc3, 0x35, 0x49, 0xc1, 0x37, 0xa2, 0xbf, 0xa4, 0x22, 0x4b, 0xa8, 0x06, 0xa9,
	0x48, 0x3f, 0xae, 0x73, 0xcf, 0x52, 0x80, 0x54, 0xf0, 0x81, 0xae, 0xb4, 0xac, 0x98, 0x6e, 0x55,
	0xef, 0xd7, 0x04, 0xdd, 0x7b, 0xdf, 0x3d, 0xed, 0x23, 0xc4, 0x38, 0x42, 0x5b, 0x10, 0x5f, 0x71,
	0xa6, 0x17, 0x89, 0x6d, 0xb9, 0xd6, 0x6c, 0x1a, 0x1e, 0x35, 0xb5, 0xf3, 0xe0, 0x12, 0x64, 0xfe,
	0xd6, 0xeb, 0x14, 0xef, 0xcf, 0x6f, 0xc7, 0x41, 0xcf, 0xcf, 0x4f, 0xa9, 0xff, 0xf3, 0x9d, 0x7f,
	0x72, 0x71, 0x76, 0x7a, 0xe0, 0xbf, 0xe9, 0xe6, 0x9b, 0x83, 0x97, 0xf3, 0xc3, 0xd5, 0x7e, 0xd4,
	0x73, 0xf0, 0x02, 0xa1, 0xac, 0x50, 0x9a, 0x16, 0x8c, 0x2f, 0x12, 0xfb, 0x8e, 0xa1, 0xbe, 0x68,
	0x6a, 0x67, 0xb7, 0xa5, 0x0e, 0xda, 0x3f, 0xee, 0x0e, 0xba, 0x7f, 0xbe, 0xc6, 0x9d, 0xdd, 0x1c,
	0xce, 0x57, 0xfb, 0xd1, 0x28, 0x8c, 0x5f, 0x23, 0x94, 0x73, 0x2d, 0x33, 0xf6, 0x99, 0xe6, 0xdc,
	0x9e, 0x18, 0xd4, 0xe3, 0x01, 0x35, 0x68, 0x5e, 0x34, 0x32, 0xe2, 0x2f, 0x68, 0xbb, 0xa4, 0x92,
	0xe6, 0x1f, 0x24, 0x54, 0xa5, 0xb2, 0xef, 0xba, 0x93, 0xd9, 0xf6, 0xab, 0xa7, 0x41, 0x5b, 0x4d,
	0xd0, 0x55, 0x13, 0x7c, 0x35, 0xd5, 0x84, 0x4f, 0x9a, 0xda, 0xc1, 0x2d, 0x70, 0x94, 0xf2, 0xa2,
	0x31, 0x03, 0x1f, 0xa3, 0x69, 0x7f, 0x53, 0x7b, 0xc3, 0xb5, 0x6e, 0x03, 0x3e, 0x6a, 0x6a, 0x67,
	0xa7, 0x05, 0xf6, 0x19, 0x2f, 0x1a, 0xf2, 0x98, 0xa0, 0xad, 0xac, 0xd0, 0x5c, 0x2e, 0xa9, 0xb0,
	0x37, 0x5d, 0x6b, 0xb6, 0x11, 0x3e, 0x1c, 0x5a, 0xef, 0x14, 0x2f, 0xea, 0x4d, 0xe1, 0xa7, 0x93,
	0xe3, 0x14, 0x02, 0x4e, 0xd5, 0x0f, 0x28, 0x55, 0x20, 0x80, 0x51, 0x41, 0x18, 0x14, 0x5a, 0x52,
	0xa6, 0x55, 0x7b, 0x6b, 0xc9, 0x4b, 0xf0, 0x73, 0x48, 0xb8, 0x50, 0x64, 0x6d, 0x24, 0x66, 0x25,
	0xff, 0xfd, 0xc5, 0x78, 0xd3, 0x24, 0xe6, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x63, 0xbd, 0x99,
	0xae, 0xb2, 0x02, 0x00, 0x00,
}
