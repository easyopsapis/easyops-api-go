// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: config.proto

package collector_service

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//采集配置
type CollectorConfig struct {
	//
	//采集配置id
	ConfigId string `protobuf:"bytes,1,opt,name=configId,proto3" json:"configId" form:"configId"`
	//
	//采集实例objectId
	ObjectId string `protobuf:"bytes,2,opt,name=objectId,proto3" json:"objectId" form:"objectId"`
	//
	//关系查询路径
	Path string `protobuf:"bytes,3,opt,name=path,proto3" json:"path" form:"path"`
	//
	//指标名称
	MetricName string `protobuf:"bytes,4,opt,name=metricName,proto3" json:"metricName" form:"metricName"`
	//
	//采集参数
	Params []*CollectorConfig_Params `protobuf:"bytes,5,rep,name=params,proto3" json:"params" form:"params"`
	//
	//采集间隔
	Interval int32 `protobuf:"varint,6,opt,name=interval,proto3" json:"interval" form:"interval"`
	//
	//采集配置实例版本号
	ConfigVersion        int32    `protobuf:"varint,7,opt,name=configVersion,proto3" json:"configVersion" form:"configVersion"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CollectorConfig) Reset()         { *m = CollectorConfig{} }
func (m *CollectorConfig) String() string { return proto.CompactTextString(m) }
func (*CollectorConfig) ProtoMessage()    {}
func (*CollectorConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{0}
}
func (m *CollectorConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollectorConfig.Unmarshal(m, b)
}
func (m *CollectorConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollectorConfig.Marshal(b, m, deterministic)
}
func (m *CollectorConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectorConfig.Merge(m, src)
}
func (m *CollectorConfig) XXX_Size() int {
	return xxx_messageInfo_CollectorConfig.Size(m)
}
func (m *CollectorConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectorConfig.DiscardUnknown(m)
}

var xxx_messageInfo_CollectorConfig proto.InternalMessageInfo

func (m *CollectorConfig) GetConfigId() string {
	if m != nil {
		return m.ConfigId
	}
	return ""
}

func (m *CollectorConfig) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *CollectorConfig) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *CollectorConfig) GetMetricName() string {
	if m != nil {
		return m.MetricName
	}
	return ""
}

func (m *CollectorConfig) GetParams() []*CollectorConfig_Params {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *CollectorConfig) GetInterval() int32 {
	if m != nil {
		return m.Interval
	}
	return 0
}

func (m *CollectorConfig) GetConfigVersion() int32 {
	if m != nil {
		return m.ConfigVersion
	}
	return 0
}

type CollectorConfig_Params struct {
	//
	//参数名
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key" form:"key"`
	//
	//参数值
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value" form:"value"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CollectorConfig_Params) Reset()         { *m = CollectorConfig_Params{} }
func (m *CollectorConfig_Params) String() string { return proto.CompactTextString(m) }
func (*CollectorConfig_Params) ProtoMessage()    {}
func (*CollectorConfig_Params) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{0, 0}
}
func (m *CollectorConfig_Params) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollectorConfig_Params.Unmarshal(m, b)
}
func (m *CollectorConfig_Params) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollectorConfig_Params.Marshal(b, m, deterministic)
}
func (m *CollectorConfig_Params) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectorConfig_Params.Merge(m, src)
}
func (m *CollectorConfig_Params) XXX_Size() int {
	return xxx_messageInfo_CollectorConfig_Params.Size(m)
}
func (m *CollectorConfig_Params) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectorConfig_Params.DiscardUnknown(m)
}

var xxx_messageInfo_CollectorConfig_Params proto.InternalMessageInfo

func (m *CollectorConfig_Params) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *CollectorConfig_Params) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*CollectorConfig)(nil), "collector_service.CollectorConfig")
	proto.RegisterType((*CollectorConfig_Params)(nil), "collector_service.CollectorConfig.Params")
}

func init() { proto.RegisterFile("config.proto", fileDescriptor_3eaf2c85e69e9ea4) }

var fileDescriptor_3eaf2c85e69e9ea4 = []byte{
	// 476 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0xdf, 0x6a, 0x13, 0x41,
	0x14, 0xc6, 0x89, 0xf9, 0x63, 0x9c, 0xfe, 0x49, 0x33, 0x2a, 0x2c, 0x01, 0xd9, 0x30, 0x8a, 0x46,
	0x70, 0x77, 0x5a, 0x83, 0x05, 0xbd, 0x10, 0x4c, 0xae, 0x8a, 0x28, 0x32, 0x88, 0x17, 0x2d, 0x6d,
	0x99, 0x4c, 0x26, 0xdb, 0x35, 0xbb, 0x39, 0x61, 0x76, 0x92, 0x92, 0x16, 0x1f, 0xc6, 0x17, 0x5b,
	0xc1, 0x47, 0xd8, 0x27, 0x90, 0x9d, 0xd9, 0x4d, 0x62, 0x7b, 0x37, 0xe7, 0x7c, 0xbf, 0xef, 0xdb,
	0xc3, 0x39, 0x8b, 0x76, 0x05, 0xcc, 0x26, 0x61, 0xe0, 0xcf, 0x15, 0x68, 0xc0, 0x6d, 0x01, 0x51,
	0x24, 0x85, 0x06, 0x75, 0x99, 0x48, 0xb5, 0x0c, 0x85, 0xec, 0x78, 0x41, 0xa8, 0xaf, 0x16, 0x23,
	0x5f, 0x40, 0x4c, 0x03, 0x08, 0x80, 0x1a, 0x72, 0xb4, 0x98, 0x98, 0xca, 0x14, 0xe6, 0x65, 0x13,
	0x3a, 0xc7, 0x5b, 0x78, 0x7c, 0x1d, 0xea, 0x29, 0x5c, 0xd3, 0x00, 0x3c, 0x23, 0x7a, 0x4b, 0x1e,
	0x85, 0x63, 0xae, 0x41, 0x25, 0x74, 0xfd, 0xb4, 0x3e, 0xf2, 0xbb, 0x86, 0x5a, 0xc3, 0xf2, 0xe3,
	0x43, 0x33, 0x13, 0x1e, 0xa2, 0xa6, 0x9d, 0xee, 0x64, 0xec, 0x54, 0xba, 0x95, 0xde, 0xa3, 0xc1,
	0xab, 0x2c, 0x75, 0x5b, 0x13, 0x50, 0xf1, 0x07, 0x52, 0x2a, 0xe4, 0xef, 0x1f, 0xf7, 0x00, 0xed,
	0x5f, 0x9c, 0x1d, 0x7a, 0xef, 0xb9, 0x77, 0x73, 0x7e, 0x7b, 0xd4, 0xff, 0xf5, 0x82, 0xad, 0x8d,
	0x98, 0xa1, 0x26, 0x8c, 0x7e, 0x4a, 0xa1, 0x4f, 0xc6, 0xce, 0x03, 0x13, 0x72, 0xbc, 0x09, 0x29,
	0x95, 0x3c, 0xc4, 0x45, 0xcf, 0x2e, 0xce, 0xb8, 0x77, 0xf3, 0xc9, 0x3b, 0xbd, 0x3c, 0x2f, 0xd2,
	0xcc, 0xfb, 0xf6, 0xf0, 0x4d, 0xff, 0x28, 0xcf, 0x2c, 0x69, 0xfc, 0x1c, 0xd5, 0xe6, 0x5c, 0x5f,
	0x39, 0x55, 0x93, 0xd7, 0xca, 0x52, 0x77, 0xc7, 0xe6, 0xe5, 0x5d, 0xc2, 0x8c, 0x88, 0xdf, 0x21,
	0x14, 0x4b, 0xad, 0x42, 0xf1, 0x95, 0xc7, 0xd2, 0xa9, 0x19, 0xf4, 0x69, 0x96, 0xba, 0x6d, 0x8b,
	0x6e, 0x34, 0xc2, 0xb6, 0x40, 0xfc, 0x1d, 0x35, 0xe6, 0x5c, 0xf1, 0x38, 0x71, 0xea, 0xdd, 0x6a,
	0x6f, 0xe7, 0xed, 0x6b, 0xff, 0xde, 0x4d, 0xfc, 0x3b, 0x8b, 0xf2, 0xbf, 0x19, 0xc3, 0xa0, 0x9d,
	0xa5, 0xee, 0x5e, 0x39, 0x48, 0xde, 0x21, 0xac, 0xc8, 0xc2, 0x14, 0x35, 0xc3, 0x99, 0x96, 0x6a,
	0xc9, 0x23, 0xa7, 0xd1, 0xad, 0xf4, 0xea, 0x83, 0xc7, 0x9b, 0x2d, 0x94, 0x0a, 0x61, 0x6b, 0x08,
	0x7f, 0x44, 0x7b, 0x76, 0x85, 0x3f, 0xa4, 0x4a, 0x42, 0x98, 0x39, 0x0f, 0x8d, 0xcb, 0xc9, 0x52,
	0xf7, 0xc9, 0xf6, 0x01, 0x0a, 0x99, 0xb0, 0xff, 0xf1, 0x0e, 0x43, 0x0d, 0x3b, 0x15, 0xee, 0xa2,
	0xea, 0x54, 0xae, 0x8a, 0x03, 0xee, 0x67, 0xa9, 0x8b, 0xac, 0x7f, 0x2a, 0x57, 0x84, 0xe5, 0x12,
	0x7e, 0x89, 0xea, 0x4b, 0x1e, 0x2d, 0x64, 0x71, 0x9f, 0x83, 0x2c, 0x75, 0x77, 0x2d, 0x63, 0xda,
	0x84, 0x59, 0x79, 0xf0, 0xe5, 0xf4, 0x73, 0x00, 0xbe, 0xe4, 0xc9, 0x0a, 0xe6, 0x89, 0x1f, 0x81,
	0xe0, 0x11, 0x15, 0x30, 0xd3, 0x8a, 0x0b, 0x9d, 0xd8, 0xff, 0x52, 0xc9, 0x39, 0x78, 0x31, 0x8c,
	0x65, 0x94, 0xd0, 0x02, 0xa4, 0xa6, 0xa4, 0xf7, 0xb6, 0x38, 0x6a, 0x18, 0x47, 0xff, 0x5f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xec, 0x58, 0x90, 0x05, 0x03, 0x03, 0x00, 0x00,
}
