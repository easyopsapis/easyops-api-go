// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: idcrack_unit_info.proto

package cmdb_extend

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//机柜U位信息
type IdcrackUnitInfo struct {
	//
	//实例ID
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id" form:"instance_id"`
	//
	//u位数
	Unum int32 `protobuf:"varint,2,opt,name=unum,proto3" json:"unum" form:"unum"`
	//
	//机柜名称
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name" form:"name"`
	//
	//u位信息
	UnitInfo             *types.Struct `protobuf:"bytes,4,opt,name=unitInfo,proto3" json:"unitInfo" form:"unitInfo"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *IdcrackUnitInfo) Reset()         { *m = IdcrackUnitInfo{} }
func (m *IdcrackUnitInfo) String() string { return proto.CompactTextString(m) }
func (*IdcrackUnitInfo) ProtoMessage()    {}
func (*IdcrackUnitInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe9106f601064aea, []int{0}
}
func (m *IdcrackUnitInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdcrackUnitInfo.Unmarshal(m, b)
}
func (m *IdcrackUnitInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdcrackUnitInfo.Marshal(b, m, deterministic)
}
func (m *IdcrackUnitInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdcrackUnitInfo.Merge(m, src)
}
func (m *IdcrackUnitInfo) XXX_Size() int {
	return xxx_messageInfo_IdcrackUnitInfo.Size(m)
}
func (m *IdcrackUnitInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_IdcrackUnitInfo.DiscardUnknown(m)
}

var xxx_messageInfo_IdcrackUnitInfo proto.InternalMessageInfo

func (m *IdcrackUnitInfo) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *IdcrackUnitInfo) GetUnum() int32 {
	if m != nil {
		return m.Unum
	}
	return 0
}

func (m *IdcrackUnitInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *IdcrackUnitInfo) GetUnitInfo() *types.Struct {
	if m != nil {
		return m.UnitInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*IdcrackUnitInfo)(nil), "cmdb_extend.IdcrackUnitInfo")
}

func init() { proto.RegisterFile("idcrack_unit_info.proto", fileDescriptor_fe9106f601064aea) }

var fileDescriptor_fe9106f601064aea = []byte{
	// 346 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x91, 0xdd, 0x4a, 0xc3, 0x30,
	0x14, 0xc7, 0xa9, 0x4e, 0xd1, 0x16, 0x9c, 0xd4, 0x8b, 0x95, 0x21, 0x74, 0x54, 0x2f, 0x86, 0xd0,
	0x46, 0x1d, 0x08, 0x7a, 0x59, 0x10, 0x1d, 0xde, 0x55, 0xbc, 0x51, 0xb4, 0xa4, 0x69, 0x5a, 0xc3,
	0xda, 0x9c, 0xd1, 0x26, 0xce, 0x0f, 0x7c, 0xd5, 0x09, 0x3e, 0x42, 0x9f, 0x40, 0x96, 0x6c, 0xb3,
	0x77, 0xe7, 0x9c, 0xff, 0xef, 0x7f, 0x3e, 0x12, 0xb3, 0xc7, 0x52, 0x52, 0x61, 0x32, 0x89, 0x25,
	0x67, 0x22, 0x66, 0x3c, 0x83, 0x60, 0x5a, 0x81, 0x00, 0xdb, 0x22, 0x65, 0x9a, 0xc4, 0xf4, 0x5d,
	0x50, 0x9e, 0xf6, 0xfd, 0x9c, 0x89, 0x57, 0x99, 0x04, 0x04, 0x4a, 0x94, 0x43, 0x0e, 0x48, 0x31,
	0x89, 0xcc, 0x54, 0xa6, 0x12, 0x15, 0x69, 0x6f, 0xff, 0xa2, 0x85, 0x97, 0x33, 0x26, 0x26, 0x30,
	0x43, 0x39, 0xf8, 0x4a, 0xf4, 0xdf, 0x70, 0xc1, 0x52, 0x2c, 0xa0, 0xaa, 0xd1, 0x3a, 0x5c, 0xfa,
	0x0e, 0x73, 0x80, 0xbc, 0xa0, 0xff, 0xdd, 0x6b, 0x51, 0x49, 0x22, 0xb4, 0xea, 0x35, 0x86, 0xd9,
	0x1d, 0xeb, 0x6d, 0x1f, 0x38, 0x13, 0x63, 0x9e, 0x81, 0x7d, 0x67, 0x5a, 0x8c, 0xd7, 0x02, 0x73,
	0x42, 0x63, 0x96, 0x3a, 0xc6, 0xc0, 0x18, 0xee, 0x86, 0x27, 0xcd, 0xdc, 0xb5, 0x33, 0xa8, 0xca,
	0x2b, 0xaf, 0x25, 0x7a, 0xbf, 0x3f, 0xee, 0xbe, 0xb9, 0xf7, 0xf2, 0x74, 0xea, 0x5f, 0x62, 0xff,
	0xf3, 0xf9, 0xeb, 0x6c, 0xf4, 0x7d, 0x1c, 0x99, 0x2b, 0x62, 0x9c, 0xda, 0x47, 0x66, 0x47, 0x72,
	0x59, 0x3a, 0x1b, 0x03, 0x63, 0xb8, 0x15, 0x76, 0x9b, 0xb9, 0x6b, 0xe9, 0x2e, 0x8b, 0xaa, 0x17,
	0x29, 0x71, 0x01, 0x71, 0x5c, 0x52, 0x67, 0x53, 0x8d, 0x6a, 0x41, 0x8b, 0xaa, 0x17, 0x29, 0xd1,
	0xbe, 0x35, 0x77, 0xe4, 0x72, 0x45, 0xa7, 0x33, 0x30, 0x86, 0xd6, 0x79, 0x2f, 0xd0, 0xb7, 0x05,
	0xab, 0xdb, 0x82, 0x7b, 0x75, 0x5b, 0x78, 0xd0, 0xcc, 0xdd, 0xee, 0x6a, 0x8c, 0xb6, 0x78, 0xd1,
	0xda, 0x1d, 0xde, 0x3c, 0x5e, 0xe7, 0x10, 0x50, 0x5c, 0x7f, 0xc0, 0xb4, 0x0e, 0x0a, 0x20, 0xb8,
	0x40, 0x04, 0xb8, 0xa8, 0x30, 0x11, 0xb5, 0x7e, 0xa8, 0x8a, 0x4e, 0xc1, 0x2f, 0x21, 0xa5, 0x45,
	0x8d, 0x96, 0x20, 0x52, 0x29, 0x6a, 0x7d, 0x61, 0xb2, 0xad, 0xd8, 0xd1, 0x5f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x5b, 0x85, 0x14, 0x57, 0xf1, 0x01, 0x00, 0x00,
}
