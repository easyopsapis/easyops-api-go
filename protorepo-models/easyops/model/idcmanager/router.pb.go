// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: router.proto

package idcmanager

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//路由器
type Router struct {
	//
	//路由器ID
	InstanceId string `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId" form:"instanceId"`
	//
	//路由器名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name" form:"name"`
	//
	//管理IP
	Ip string `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip" form:"ip"`
	//
	//路由器状态
	Status string `protobuf:"bytes,4,opt,name=status,proto3" json:"status" form:"status"`
	//
	//资产编号
	Propertyid string `protobuf:"bytes,5,opt,name=propertyid,proto3" json:"propertyid" form:"propertyid"`
	//
	//备注
	Memo string `protobuf:"bytes,6,opt,name=memo,proto3" json:"memo" form:"memo"`
	//
	//起始U位
	XStartU int32 `protobuf:"varint,7,opt,name=_startU,json=StartU,proto3" json:"_startU" form:"_startU"`
	//
	//占用U位
	XOccupiedU int32 `protobuf:"varint,8,opt,name=_occupiedU,json=OccupiedU,proto3" json:"_occupiedU" form:"_occupiedU"`
	//
	//创建时间
	Ctime string `protobuf:"bytes,9,opt,name=ctime,proto3" json:"ctime" form:"ctime"`
	//
	//创建者
	Creator string `protobuf:"bytes,10,opt,name=creator,proto3" json:"creator" form:"creator"`
	//
	//产品线
	Product string `protobuf:"bytes,11,opt,name=product,proto3" json:"product" form:"product"`
	//
	//客户
	Customer string `protobuf:"bytes,12,opt,name=customer,proto3" json:"customer" form:"customer"`
	//
	//是否单电源
	IsSinglePower        bool     `protobuf:"varint,13,opt,name=isSinglePower,proto3" json:"isSinglePower" form:"isSinglePower"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Router) Reset()         { *m = Router{} }
func (m *Router) String() string { return proto.CompactTextString(m) }
func (*Router) ProtoMessage()    {}
func (*Router) Descriptor() ([]byte, []int) {
	return fileDescriptor_367072455c71aedc, []int{0}
}
func (m *Router) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Router.Unmarshal(m, b)
}
func (m *Router) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Router.Marshal(b, m, deterministic)
}
func (m *Router) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Router.Merge(m, src)
}
func (m *Router) XXX_Size() int {
	return xxx_messageInfo_Router.Size(m)
}
func (m *Router) XXX_DiscardUnknown() {
	xxx_messageInfo_Router.DiscardUnknown(m)
}

var xxx_messageInfo_Router proto.InternalMessageInfo

func (m *Router) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *Router) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Router) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Router) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Router) GetPropertyid() string {
	if m != nil {
		return m.Propertyid
	}
	return ""
}

func (m *Router) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *Router) GetXStartU() int32 {
	if m != nil {
		return m.XStartU
	}
	return 0
}

func (m *Router) GetXOccupiedU() int32 {
	if m != nil {
		return m.XOccupiedU
	}
	return 0
}

func (m *Router) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

func (m *Router) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *Router) GetProduct() string {
	if m != nil {
		return m.Product
	}
	return ""
}

func (m *Router) GetCustomer() string {
	if m != nil {
		return m.Customer
	}
	return ""
}

func (m *Router) GetIsSinglePower() bool {
	if m != nil {
		return m.IsSinglePower
	}
	return false
}

func init() {
	proto.RegisterType((*Router)(nil), "idcmanager.Router")
}

func init() { proto.RegisterFile("router.proto", fileDescriptor_367072455c71aedc) }

var fileDescriptor_367072455c71aedc = []byte{
	// 842 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x96, 0xc1, 0x6e, 0xe3, 0x44,
	0x18, 0xc7, 0x95, 0xb2, 0x4d, 0x9b, 0xd9, 0x76, 0xcb, 0x1a, 0x90, 0xac, 0xbd, 0xb8, 0x78, 0x8b,
	0x34, 0xd3, 0x66, 0xe2, 0xd8, 0x49, 0xba, 0xaa, 0x0f, 0x44, 0x5b, 0xa1, 0x95, 0xf6, 0x04, 0x72,
	0xd9, 0x4b, 0x1d, 0xb7, 0x72, 0x6d, 0x37, 0x58, 0xc4, 0x19, 0xcb, 0x9e, 0x50, 0xed, 0xda, 0x7e,
	0x06, 0x24, 0x9e, 0x81, 0x13, 0x12, 0x47, 0x5e, 0x80, 0xb7, 0xe0, 0x62, 0x24, 0x8e, 0x1c, 0xfd,
	0x04, 0x68, 0x66, 0xdc, 0x26, 0xd0, 0x1a, 0x38, 0x74, 0x7b, 0xf2, 0xf7, 0x7d, 0xff, 0xff, 0x37,
	0xf3, 0x1b, 0x8f, 0xf4, 0xd9, 0x60, 0x2b, 0x21, 0x0b, 0x1a, 0x24, 0xbd, 0x38, 0x21, 0x94, 0x48,
	0x20, 0xf4, 0xbd, 0xc8, 0x9d, 0xbb, 0xd3, 0x20, 0x79, 0x86, 0xa7, 0x21, 0xfd, 0x66, 0x71, 0xd1,
	0xf3, 0x48, 0xa4, 0x4d, 0xc9, 0x94, 0x68, 0xdc, 0x72, 0xb1, 0xb8, 0xe4, 0x19, 0x4f, 0x78, 0x24,
	0x5a, 0x9f, 0x1d, 0xae, 0xd8, 0xa3, 0xab, 0x90, 0x7e, 0x4b, 0xae, 0xb4, 0x29, 0xc1, 0x5c, 0xc4,
	0xdf, 0xb9, 0xb3, 0xd0, 0x77, 0x29, 0x49, 0x52, 0xed, 0x26, 0x14, 0x7d, 0xea, 0x9f, 0x3b, 0xa0,
	0x6d, 0x71, 0x06, 0xe9, 0x35, 0x00, 0xe1, 0x3c, 0xa5, 0xee, 0xdc, 0x0b, 0x5e, 0xfb, 0x72, 0x6b,
	0xb7, 0x05, 0x3b, 0xc7, 0xa8, 0x2a, 0x95, 0xa7, 0x97, 0x24, 0x89, 0x4c, 0x75, 0xa9, 0xa9, 0x7f,
	0xfc, 0xae, 0x7c, 0x08, 0x9e, 0x9c, 0xd9, 0x7d, 0x7c, 0xe4, 0xe2, 0x77, 0x4e, 0xa6, 0x0f, 0x8a,
	0x3d, 0x6b, 0xa5, 0x59, 0x7a, 0x0e, 0x1e, 0xcd, 0xdd, 0x28, 0x90, 0xd7, 0xf8, 0x22, 0x3b, 0x55,
	0xa9, 0x3c, 0x16, 0x8b, 0xb0, 0xaa, 0x6a, 0x71, 0x51, 0xfa, 0xa5, 0x03, 0xd6, 0xc2, 0x58, 0xfe,
	0x80, 0x7b, 0x7e, 0xec, 0x54, 0xa5, 0xd2, 0xa9, 0x77, 0x8a, 0xd9, 0x0e, 0x3f, 0x74, 0xc0, 0xf7,
	0x9d, 0x33, 0x08, 0x0d, 0x38, 0xb2, 0xfb, 0x78, 0xe4, 0x64, 0x7a, 0x91, 0xdb, 0x7d, 0x3c, 0x74,
	0x26, 0x7e, 0xa6, 0x17, 0x88, 0xc5, 0xba, 0x33, 0x66, 0x49, 0xd7, 0x28, 0x10, 0x9c, 0xf4, 0xfe,
	0xa7, 0x13, 0x65, 0x83, 0x02, 0xe5, 0x93, 0x74, 0x1f, 0x42, 0xc8, 0x4e, 0xf0, 0x12, 0xbf, 0x72,
	0xf1, 0xa5, 0x93, 0xe9, 0xdd, 0x61, 0x61, 0xa2, 0xec, 0x45, 0x71, 0xab, 0x9a, 0x9b, 0x08, 0xe5,
	0x77, 0x9a, 0x0f, 0x0b, 0x68, 0xde, 0x72, 0x43, 0x68, 0x08, 0x8e, 0xdc, 0xa8, 0x29, 0x72, 0x7d,
	0xe2, 0x4f, 0xfc, 0xdc, 0xd6, 0xf1, 0x11, 0xe3, 0x10, 0xb0, 0xff, 0xe1, 0x11, 0x98, 0x8d, 0x3b,
	0x8f, 0x0a, 0x08, 0x6f, 0xef, 0x8d, 0xc4, 0x11, 0x73, 0xf3, 0x41, 0x18, 0x86, 0x8d, 0x0c, 0xac,
	0xed, 0x2e, 0x69, 0x7c, 0x9f, 0x60, 0xff, 0x42, 0x36, 0x68, 0x24, 0x1b, 0x36, 0x90, 0x65, 0xfd,
	0xae, 0x51, 0x3c, 0x10, 0x9d, 0xd1, 0x48, 0x37, 0x6a, 0xa6, 0x1b, 0x3c, 0x14, 0x9d, 0xde, 0x48,
	0x77, 0xd8, 0x4c, 0x37, 0x7c, 0x1f, 0x74, 0x66, 0x13, 0xc8, 0x8b, 0x66, 0x90, 0xd1, 0xfd, 0x83,
	0x20, 0xf8, 0x59, 0xef, 0x00, 0x8d, 0x27, 0xe9, 0xfe, 0x9e, 0xb5, 0x16, 0xc6, 0x12, 0x02, 0xed,
	0x94, 0xba, 0x74, 0x91, 0xca, 0x8f, 0xf8, 0xe8, 0x7a, 0x5a, 0x95, 0xca, 0xb6, 0x98, 0x5c, 0xa2,
	0xae, 0x5a, 0xb5, 0x41, 0x1a, 0x01, 0x10, 0x27, 0x24, 0x0e, 0x12, 0xfa, 0x36, 0xf4, 0xe5, 0x75,
	0x6e, 0xff, 0x64, 0x39, 0x52, 0x97, 0x9a, 0x6a, 0xad, 0x18, 0xd9, 0xf8, 0x8c, 0x82, 0x88, 0xc8,
	0xed, 0x7f, 0x8e, 0x4f, 0x56, 0x55, 0x2d, 0x2e, 0x4a, 0x07, 0x60, 0xe3, 0x3c, 0xa5, 0x6e, 0x42,
	0xdf, 0xc8, 0x1b, 0xbb, 0x2d, 0xb8, 0x7e, 0x2c, 0x55, 0xa5, 0xf2, 0x44, 0xf8, 0x6a, 0x41, 0xb5,
	0xda, 0x27, 0x3c, 0x90, 0x86, 0x00, 0x9c, 0x13, 0xcf, 0x5b, 0xc4, 0x61, 0xe0, 0xbf, 0x91, 0x37,
	0xb9, 0x7f, 0x05, 0x64, 0xa9, 0xa9, 0x56, 0xe7, 0xcb, 0xeb, 0x58, 0xfa, 0xad, 0x05, 0xd6, 0x3d,
	0x1a, 0x46, 0x81, 0xdc, 0xe1, 0x24, 0xbf, 0xb6, 0xaa, 0x52, 0xd9, 0x12, 0x2d, 0xbc, 0xce, 0xe6,
	0xf4, 0xcf, 0x2d, 0xf0, 0x53, 0xeb, 0x0c, 0xc2, 0xb1, 0xc9, 0xdf, 0x1d, 0xbb, 0x14, 0x67, 0x1f,
	0x8d, 0xf9, 0x33, 0x1b, 0x16, 0x08, 0x43, 0xdd, 0xee, 0x63, 0xc3, 0xc9, 0xfb, 0x5c, 0x47, 0x18,
	0x0e, 0xf8, 0x40, 0xae, 0x73, 0xf6, 0xc6, 0x0d, 0xd1, 0x85, 0xec, 0xaf, 0x77, 0x1d, 0xc8, 0x2e,
	0x64, 0xe0, 0x88, 0xa1, 0x2d, 0xca, 0x26, 0xe4, 0x57, 0x55, 0x27, 0xcb, 0x18, 0x4e, 0x7a, 0xfc,
	0x79, 0x80, 0xc6, 0xf0, 0x34, 0xb7, 0x0f, 0xb0, 0x03, 0xc7, 0xe6, 0x1d, 0xed, 0x2b, 0xdd, 0xe3,
	0x3d, 0x4b, 0x9c, 0x48, 0x3a, 0x01, 0x1b, 0x5e, 0x12, 0xb0, 0x2f, 0xa1, 0x0c, 0xf8, 0xe1, 0x8e,
	0x96, 0xaf, 0xaf, 0x16, 0xd8, 0xe9, 0x9e, 0x83, 0x4f, 0xcf, 0x6c, 0x17, 0xbf, 0x7b, 0x89, 0x4f,
	0xd9, 0x02, 0x76, 0xef, 0x26, 0x3e, 0xc7, 0x4e, 0x66, 0x74, 0x07, 0x7a, 0xb1, 0x67, 0x5d, 0xaf,
	0x24, 0x75, 0xc1, 0x46, 0x9c, 0x10, 0x7f, 0xe1, 0x51, 0xf9, 0x31, 0x5f, 0x74, 0xe5, 0x4e, 0x6a,
	0x41, 0xb5, 0xae, 0x2d, 0x92, 0x06, 0x36, 0xbd, 0x45, 0x4a, 0x49, 0x14, 0x24, 0xf2, 0x16, 0xb7,
	0x7f, 0x54, 0x95, 0xca, 0x4e, 0xcd, 0x50, 0x2b, 0xaa, 0x75, 0x63, 0x92, 0x3e, 0x07, 0xdb, 0x61,
	0x7a, 0x12, 0xce, 0xa7, 0xb3, 0xe0, 0x2b, 0x72, 0x15, 0x24, 0xf2, 0xf6, 0x6e, 0x0b, 0x6e, 0x1e,
	0xcb, 0x55, 0xa9, 0x7c, 0x5c, 0x7f, 0x3a, 0x57, 0x65, 0xd5, 0xfa, 0xbb, 0xfd, 0xf8, 0xd5, 0xe9,
	0x17, 0x53, 0xd2, 0x0b, 0xdc, 0xf4, 0x2d, 0x89, 0xd3, 0xde, 0x8c, 0x78, 0xee, 0x4c, 0xf3, 0xc8,
	0x9c, 0x26, 0xae, 0x47, 0x53, 0xf1, 0x83, 0x91, 0x04, 0x31, 0xc1, 0x11, 0xf1, 0x83, 0x59, 0xaa,
	0xd5, 0x46, 0x8d, 0xa7, 0xda, 0xf2, 0xdf, 0xe4, 0xa2, 0xcd, 0xad, 0x83, 0xbf, 0x02, 0x00, 0x00,
	0xff, 0xff, 0xe2, 0x79, 0xd2, 0xae, 0xbe, 0x08, 0x00, 0x00,
}
