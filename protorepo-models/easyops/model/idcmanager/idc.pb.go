// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: idc.proto

package idcmanager

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//机房
type IDC struct {
	//
	//机房ID
	InstanceId string `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId" form:"instanceId"`
	//
	//机房名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name" form:"name"`
	//
	//楼层号
	Building string `protobuf:"bytes,3,opt,name=building,proto3" json:"building" form:"building"`
	//
	//简称
	Shortname string `protobuf:"bytes,4,opt,name=shortname,proto3" json:"shortname" form:"shortname"`
	//
	//值班电话
	Telphone string `protobuf:"bytes,5,opt,name=telphone,proto3" json:"telphone" form:"telphone"`
	//
	//区域，如1F01
	Area string `protobuf:"bytes,6,opt,name=area,proto3" json:"area" form:"area"`
	//
	//机房地址，如华北机房
	Address string `protobuf:"bytes,7,opt,name=address,proto3" json:"address" form:"address"`
	//
	//机房布局，用json保存二维数组[[{instanceId, type, code}]]
	Layout string `protobuf:"bytes,8,opt,name=layout,proto3" json:"layout" form:"layout"`
	//
	//机房创建时间
	Ctime string `protobuf:"bytes,9,opt,name=ctime,proto3" json:"ctime" form:"ctime"`
	//
	//机房创建者
	Creator              string   `protobuf:"bytes,10,opt,name=creator,proto3" json:"creator" form:"creator"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IDC) Reset()         { *m = IDC{} }
func (m *IDC) String() string { return proto.CompactTextString(m) }
func (*IDC) ProtoMessage()    {}
func (*IDC) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d51ed080ac0058f, []int{0}
}
func (m *IDC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IDC.Unmarshal(m, b)
}
func (m *IDC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IDC.Marshal(b, m, deterministic)
}
func (m *IDC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IDC.Merge(m, src)
}
func (m *IDC) XXX_Size() int {
	return xxx_messageInfo_IDC.Size(m)
}
func (m *IDC) XXX_DiscardUnknown() {
	xxx_messageInfo_IDC.DiscardUnknown(m)
}

var xxx_messageInfo_IDC proto.InternalMessageInfo

func (m *IDC) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *IDC) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *IDC) GetBuilding() string {
	if m != nil {
		return m.Building
	}
	return ""
}

func (m *IDC) GetShortname() string {
	if m != nil {
		return m.Shortname
	}
	return ""
}

func (m *IDC) GetTelphone() string {
	if m != nil {
		return m.Telphone
	}
	return ""
}

func (m *IDC) GetArea() string {
	if m != nil {
		return m.Area
	}
	return ""
}

func (m *IDC) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *IDC) GetLayout() string {
	if m != nil {
		return m.Layout
	}
	return ""
}

func (m *IDC) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

func (m *IDC) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func init() {
	proto.RegisterType((*IDC)(nil), "idcmanager.IDC")
}

func init() { proto.RegisterFile("idc.proto", fileDescriptor_7d51ed080ac0058f) }

var fileDescriptor_7d51ed080ac0058f = []byte{
	// 555 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x93, 0xcd, 0x6e, 0xd3, 0x4c,
	0x14, 0x86, 0xe5, 0xaf, 0x6d, 0xd2, 0xcc, 0x07, 0xfd, 0x31, 0x2c, 0xac, 0x6e, 0x5c, 0xdc, 0x2c,
	0x6c, 0xda, 0xf1, 0x4f, 0x02, 0x48, 0xc9, 0x26, 0xa2, 0x54, 0x48, 0xd9, 0x1a, 0x56, 0x31, 0x0e,
	0x9a, 0xd8, 0x53, 0xc7, 0xc2, 0xf6, 0x44, 0xb6, 0x43, 0xd5, 0x26, 0xb9, 0x21, 0x24, 0x6e, 0x80,
	0x25, 0x77, 0xc1, 0xc6, 0x48, 0x5c, 0x82, 0xaf, 0x00, 0xf9, 0x4c, 0x9c, 0x44, 0x15, 0xab, 0x39,
	0xe7, 0xbc, 0xcf, 0x7b, 0x66, 0xce, 0xd8, 0x83, 0x5a, 0xa1, 0xef, 0xe9, 0xb3, 0x94, 0xe5, 0x4c,
	0x44, 0xa1, 0xef, 0xc5, 0x24, 0x21, 0x01, 0x4d, 0xcf, 0x70, 0x10, 0xe6, 0xd3, 0xf9, 0x44, 0xf7,
	0x58, 0x6c, 0x04, 0x2c, 0x60, 0x06, 0x20, 0x93, 0xf9, 0x2d, 0x64, 0x90, 0x40, 0xc4, 0xad, 0x67,
	0x6f, 0x76, 0xf0, 0xf8, 0x2e, 0xcc, 0xbf, 0xb0, 0x3b, 0x23, 0x60, 0x18, 0x44, 0xfc, 0x95, 0x44,
	0xa1, 0x4f, 0x72, 0x96, 0x66, 0xc6, 0x26, 0xe4, 0x3e, 0xe5, 0xc7, 0x01, 0xda, 0x1b, 0xde, 0xbc,
	0x13, 0x87, 0x08, 0x85, 0x49, 0x96, 0x93, 0xc4, 0xa3, 0x43, 0x5f, 0x12, 0xce, 0x05, 0xb5, 0x75,
	0xad, 0x95, 0x85, 0x7c, 0x7a, 0xcb, 0xd2, 0xb8, 0xaf, 0x6c, 0x35, 0xe5, 0xcf, 0x6f, 0xf9, 0x04,
	0x1d, 0x8d, 0x1d, 0x13, 0xf7, 0x08, 0x7e, 0x70, 0x17, 0x56, 0x77, 0xd5, 0xb6, 0x77, 0xcc, 0xe2,
	0x05, 0xda, 0x4f, 0x48, 0x4c, 0xa5, 0xff, 0xa0, 0xc9, 0x71, 0x59, 0xc8, 0xff, 0xf3, 0x26, 0x55,
	0x55, 0xb1, 0x41, 0x14, 0x0d, 0x74, 0x38, 0x99, 0x87, 0x91, 0x1f, 0x26, 0x81, 0xb4, 0x07, 0xe0,
	0xb3, 0xb2, 0x90, 0x8f, 0x39, 0x58, 0x2b, 0x8a, 0xbd, 0x81, 0xc4, 0x0e, 0x6a, 0x65, 0x53, 0x96,
	0xe6, 0xd0, 0x7a, 0x1f, 0x1c, 0xcf, 0xcb, 0x42, 0x3e, 0xe1, 0x8e, 0x8d, 0xa4, 0xd8, 0x5b, 0xac,
	0xda, 0x24, 0xa7, 0xd1, 0x6c, 0xca, 0x12, 0x2a, 0x1d, 0x3c, 0xde, 0xa4, 0x56, 0x14, 0x7b, 0x03,
	0x55, 0x47, 0x27, 0x29, 0x25, 0x52, 0xe3, 0xf1, 0xd1, 0xab, 0xaa, 0x62, 0x83, 0x28, 0x5e, 0xa1,
	0x26, 0xf1, 0xfd, 0x94, 0x66, 0x99, 0xd4, 0x04, 0x4e, 0x2c, 0x0b, 0xf9, 0x68, 0xcd, 0x71, 0x41,
	0xb1, 0x6b, 0x44, 0xd4, 0x50, 0x23, 0x22, 0xf7, 0x6c, 0x9e, 0x4b, 0x87, 0x00, 0x9f, 0x96, 0x85,
	0xfc, 0x94, 0xc3, 0xbc, 0xae, 0xd8, 0x6b, 0x40, 0xfc, 0x25, 0xa0, 0x03, 0x2f, 0x0f, 0x63, 0x2a,
	0xb5, 0x00, 0xfd, 0x29, 0x94, 0x85, 0xfc, 0x84, 0xb3, 0x50, 0xaf, 0xee, 0xfe, 0xbb, 0x80, 0xbe,
	0x09, 0x63, 0x55, 0x1d, 0xf4, 0x1d, 0x0b, 0xf7, 0xdc, 0xea, 0x33, 0xb8, 0x2f, 0xb5, 0x01, 0xac,
	0x8b, 0x57, 0x2b, 0x0d, 0xab, 0x96, 0x63, 0xe2, 0x8e, 0xbb, 0x34, 0x41, 0xd7, 0xb0, 0xda, 0x75,
	0x4c, 0x6c, 0xd5, 0xf9, 0xd2, 0xb1, 0x70, 0x87, 0xbb, 0x34, 0xe7, 0xe3, 0xb9, 0xab, 0x76, 0x1c,
	0x13, 0x77, 0xdd, 0x25, 0x30, 0xbc, 0xdc, 0x57, 0x1d, 0x13, 0xbf, 0xae, 0x93, 0x6d, 0xac, 0x7e,
	0xd2, 0x61, 0xbd, 0xd4, 0x06, 0xea, 0x68, 0xe9, 0x5c, 0x62, 0x57, 0x1d, 0xf4, 0xff, 0x61, 0xdf,
	0x71, 0x0f, 0xda, 0x36, 0x9f, 0x48, 0xfc, 0x80, 0x9a, 0x5e, 0x4a, 0xab, 0x1f, 0x4f, 0x42, 0x30,
	0x5c, 0x6f, 0x7b, 0x69, 0x6b, 0xa1, 0x9a, 0xee, 0x02, 0xbd, 0x18, 0x3b, 0x04, 0x3f, 0xbc, 0xc5,
	0xa3, 0xaa, 0x81, 0xa3, 0x6f, 0xe2, 0xcf, 0xd8, 0x5d, 0x74, 0xae, 0xba, 0xd6, 0xaa, 0x6d, 0xd7,
	0x9d, 0xae, 0xdf, 0x8f, 0x6e, 0x02, 0xa6, 0x53, 0x92, 0xdd, 0xb3, 0x59, 0xa6, 0x47, 0xcc, 0x23,
	0x91, 0xe1, 0xb1, 0x24, 0x4f, 0x89, 0x97, 0x67, 0xfc, 0xc1, 0xa4, 0x74, 0xc6, 0x70, 0xcc, 0x7c,
	0x1a, 0x65, 0xc6, 0x1a, 0x34, 0x20, 0x35, 0xb6, 0x6f, 0x6d, 0xd2, 0x00, 0xb4, 0xfb, 0x37, 0x00,
	0x00, 0xff, 0xff, 0xd8, 0xda, 0x27, 0x63, 0x8b, 0x03, 0x00, 0x00,
}
