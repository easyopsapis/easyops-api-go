// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: idcrack.proto

package idcmanager

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//机柜
type IDCRack struct {
	//
	//机柜ID
	InstanceId string `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId" form:"instanceId"`
	//
	//机柜名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name" form:"name"`
	//
	//机柜编号
	Code string `protobuf:"bytes,3,opt,name=code,proto3" json:"code" form:"code"`
	//
	//机柜状态
	Status string `protobuf:"bytes,4,opt,name=status,proto3" json:"status" form:"status"`
	//
	//机柜类型
	Type string `protobuf:"bytes,5,opt,name=type,proto3" json:"type" form:"type"`
	//
	//机柜U数
	Unum int32 `protobuf:"varint,6,opt,name=unum,proto3" json:"unum" form:"unum"`
	//
	//空闲U位数
	FreeUnum int32 `protobuf:"varint,7,opt,name=freeUnum,proto3" json:"freeUnum" form:"freeUnum"`
	//
	//备注
	Memo string `protobuf:"bytes,8,opt,name=memo,proto3" json:"memo" form:"memo"`
	//
	//机柜部局
	Layout []*IDCRack_Layout `protobuf:"bytes,9,rep,name=layout,proto3" json:"layout" form:"layout"`
	//
	//创建时间
	Ctime string `protobuf:"bytes,10,opt,name=ctime,proto3" json:"ctime" form:"ctime"`
	//
	//创建者
	Creator              string   `protobuf:"bytes,11,opt,name=creator,proto3" json:"creator" form:"creator"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IDCRack) Reset()         { *m = IDCRack{} }
func (m *IDCRack) String() string { return proto.CompactTextString(m) }
func (*IDCRack) ProtoMessage()    {}
func (*IDCRack) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d3f1ea1998bf75, []int{0}
}
func (m *IDCRack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IDCRack.Unmarshal(m, b)
}
func (m *IDCRack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IDCRack.Marshal(b, m, deterministic)
}
func (m *IDCRack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IDCRack.Merge(m, src)
}
func (m *IDCRack) XXX_Size() int {
	return xxx_messageInfo_IDCRack.Size(m)
}
func (m *IDCRack) XXX_DiscardUnknown() {
	xxx_messageInfo_IDCRack.DiscardUnknown(m)
}

var xxx_messageInfo_IDCRack proto.InternalMessageInfo

func (m *IDCRack) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *IDCRack) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *IDCRack) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *IDCRack) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *IDCRack) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *IDCRack) GetUnum() int32 {
	if m != nil {
		return m.Unum
	}
	return 0
}

func (m *IDCRack) GetFreeUnum() int32 {
	if m != nil {
		return m.FreeUnum
	}
	return 0
}

func (m *IDCRack) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *IDCRack) GetLayout() []*IDCRack_Layout {
	if m != nil {
		return m.Layout
	}
	return nil
}

func (m *IDCRack) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

func (m *IDCRack) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type IDCRack_Layout struct {
	//
	//设备ID
	InstanceId string `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId" form:"instanceId"`
	//
	//设备类型(host,switch,router,firewall,disable)
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type" form:"type"`
	//
	//起始U位
	StartU int32 `protobuf:"varint,3,opt,name=startU,proto3" json:"startU" form:"startU"`
	//
	//占用U位
	OccupiedU            int32    `protobuf:"varint,4,opt,name=occupiedU,proto3" json:"occupiedU" form:"occupiedU"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IDCRack_Layout) Reset()         { *m = IDCRack_Layout{} }
func (m *IDCRack_Layout) String() string { return proto.CompactTextString(m) }
func (*IDCRack_Layout) ProtoMessage()    {}
func (*IDCRack_Layout) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d3f1ea1998bf75, []int{0, 0}
}
func (m *IDCRack_Layout) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IDCRack_Layout.Unmarshal(m, b)
}
func (m *IDCRack_Layout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IDCRack_Layout.Marshal(b, m, deterministic)
}
func (m *IDCRack_Layout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IDCRack_Layout.Merge(m, src)
}
func (m *IDCRack_Layout) XXX_Size() int {
	return xxx_messageInfo_IDCRack_Layout.Size(m)
}
func (m *IDCRack_Layout) XXX_DiscardUnknown() {
	xxx_messageInfo_IDCRack_Layout.DiscardUnknown(m)
}

var xxx_messageInfo_IDCRack_Layout proto.InternalMessageInfo

func (m *IDCRack_Layout) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *IDCRack_Layout) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *IDCRack_Layout) GetStartU() int32 {
	if m != nil {
		return m.StartU
	}
	return 0
}

func (m *IDCRack_Layout) GetOccupiedU() int32 {
	if m != nil {
		return m.OccupiedU
	}
	return 0
}

func init() {
	proto.RegisterType((*IDCRack)(nil), "idcmanager.IDCRack")
	proto.RegisterType((*IDCRack_Layout)(nil), "idcmanager.IDCRack.Layout")
}

func init() { proto.RegisterFile("idcrack.proto", fileDescriptor_f3d3f1ea1998bf75) }

var fileDescriptor_f3d3f1ea1998bf75 = []byte{
	// 643 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x94, 0xcb, 0x6e, 0xd3, 0x40,
	0x14, 0x86, 0xe5, 0xb6, 0x49, 0xda, 0x29, 0xbd, 0x19, 0x90, 0xac, 0x6c, 0x1c, 0xdc, 0x2e, 0x6c,
	0xca, 0xd8, 0xb9, 0x50, 0xa4, 0x66, 0x13, 0x51, 0x0a, 0x52, 0x25, 0x56, 0x03, 0xd9, 0xd4, 0xb8,
	0x68, 0x3a, 0x9e, 0x06, 0xab, 0x71, 0x26, 0xb2, 0xc7, 0x54, 0x6d, 0xd3, 0xe7, 0x41, 0x42, 0xe2,
	0x25, 0xe0, 0x29, 0xd8, 0x18, 0x89, 0x47, 0xf0, 0x13, 0xa0, 0x99, 0xc9, 0x4d, 0x51, 0xc4, 0xca,
	0x73, 0xce, 0xff, 0xfd, 0xc7, 0x3a, 0x9e, 0x5f, 0x06, 0x5b, 0x51, 0x48, 0x12, 0x4c, 0xae, 0xdd,
	0x61, 0xc2, 0x38, 0xd3, 0x41, 0x14, 0x92, 0x18, 0x0f, 0x70, 0x8f, 0x26, 0x55, 0xd8, 0x8b, 0xf8,
	0x97, 0xec, 0xd2, 0x25, 0x2c, 0xf6, 0x7a, 0xac, 0xc7, 0x3c, 0x89, 0x5c, 0x66, 0x57, 0xb2, 0x92,
	0x85, 0x3c, 0x29, 0x6b, 0xf5, 0xd5, 0x1c, 0x1e, 0xdf, 0x44, 0xfc, 0x9a, 0xdd, 0x78, 0x3d, 0x06,
	0xa5, 0x08, 0xbf, 0xe2, 0x7e, 0x14, 0x62, 0xce, 0x92, 0xd4, 0x9b, 0x1e, 0x95, 0xcf, 0xfa, 0x56,
	0x01, 0x95, 0xb3, 0xd3, 0x37, 0x08, 0x93, 0x6b, 0xfd, 0x0c, 0x80, 0x68, 0x90, 0x72, 0x3c, 0x20,
	0xf4, 0x2c, 0x34, 0xb4, 0x9a, 0x66, 0x6f, 0x9c, 0x38, 0x45, 0x6e, 0xee, 0x5d, 0xb1, 0x24, 0x6e,
	0x5b, 0x33, 0xcd, 0xfa, 0xfb, 0xc7, 0xdc, 0x05, 0xdb, 0x17, 0x7e, 0x1d, 0x1e, 0x63, 0x78, 0x17,
	0xdc, 0x37, 0x5a, 0x0f, 0x07, 0x68, 0xce, 0xac, 0xef, 0x83, 0xb5, 0x01, 0x8e, 0xa9, 0xb1, 0x22,
	0x87, 0xec, 0x14, 0xb9, 0xb9, 0xa9, 0x86, 0x88, 0xae, 0x85, 0xa4, 0x28, 0x20, 0xc2, 0x42, 0x6a,
	0xac, 0x2e, 0x42, 0xa2, 0x6b, 0x21, 0x29, 0xea, 0x0e, 0x28, 0xa7, 0x1c, 0xf3, 0x2c, 0x35, 0xd6,
	0x24, 0xb6, 0x57, 0xe4, 0xe6, 0x96, 0xc2, 0x54, 0xdf, 0x42, 0x63, 0x40, 0xcc, 0xe3, 0xb7, 0x43,
	0x6a, 0x94, 0x16, 0xe7, 0x89, 0xae, 0x85, 0xa4, 0x28, 0xa0, 0x6c, 0x90, 0xc5, 0x46, 0xb9, 0xa6,
	0xd9, 0xa5, 0x79, 0x48, 0x74, 0x2d, 0x24, 0x45, 0xdd, 0x03, 0xeb, 0x57, 0x09, 0xa5, 0x5d, 0x01,
	0x56, 0x24, 0xf8, 0xb8, 0xc8, 0xcd, 0x1d, 0x05, 0x4e, 0x14, 0x0b, 0x4d, 0x21, 0x31, 0x35, 0xa6,
	0x31, 0x33, 0xd6, 0x17, 0x5f, 0x2d, 0xba, 0x16, 0x92, 0xa2, 0xfe, 0x16, 0x94, 0xfb, 0xf8, 0x96,
	0x65, 0xdc, 0xd8, 0xa8, 0xad, 0xda, 0x9b, 0xcd, 0xaa, 0x3b, 0xbb, 0x6f, 0x77, 0x7c, 0x09, 0xee,
	0x7b, 0x49, 0xcc, 0xaf, 0xa9, 0x3c, 0x16, 0x1a, 0x9b, 0xf5, 0xdf, 0x1a, 0x28, 0x11, 0x1e, 0xc5,
	0xd4, 0x00, 0xf2, 0x6d, 0x3f, 0xb5, 0x22, 0x37, 0x1f, 0x8d, 0xbf, 0x9c, 0xe8, 0x8b, 0xeb, 0xf9,
	0xa1, 0x81, 0xef, 0xda, 0x85, 0x6d, 0x77, 0xda, 0x7e, 0x03, 0x1e, 0x07, 0xe2, 0xa6, 0x82, 0xe7,
	0x4e, 0x47, 0x3e, 0xef, 0x5f, 0x3e, 0x38, 0xd0, 0x6e, 0xf8, 0x75, 0xd8, 0x0c, 0x46, 0x75, 0xa9,
	0x3b, 0xd0, 0x6e, 0xf9, 0x75, 0xd8, 0x98, 0xd4, 0x23, 0xbf, 0x01, 0x9b, 0xca, 0xe5, 0xf8, 0x1f,
	0x6b, 0x81, 0xdd, 0xf4, 0xeb, 0xb0, 0x15, 0x8c, 0x24, 0xa3, 0xda, 0x6d, 0xdb, 0xaf, 0xc3, 0xa3,
	0x49, 0x31, 0x3b, 0xdb, 0x9f, 0x5c, 0xf9, 0x3c, 0x74, 0x3a, 0xf6, 0xf9, 0xc8, 0x3f, 0x84, 0x81,
	0xdd, 0x69, 0x2f, 0xb1, 0xcf, 0xb9, 0x3b, 0x07, 0x48, 0x6d, 0xa4, 0x7f, 0x00, 0x15, 0x92, 0x50,
	0x91, 0x4f, 0x63, 0x53, 0x2e, 0x77, 0x5c, 0xe4, 0xe6, 0xf6, 0x78, 0x37, 0x25, 0x88, 0xed, 0xf6,
	0xc1, 0xb3, 0x0b, 0x1f, 0xc3, 0xbb, 0xd7, 0xf0, 0x5c, 0x0c, 0xf0, 0xdd, 0xe9, 0xf9, 0x33, 0x0c,
	0xee, 0x9b, 0x2f, 0x5a, 0x8d, 0x87, 0x03, 0x34, 0x99, 0x54, 0xfd, 0xa5, 0x81, 0xb2, 0xfa, 0xac,
	0xfa, 0xd1, 0x92, 0x88, 0x3f, 0x5d, 0x1a, 0xf1, 0xc5, 0x38, 0xcb, 0x64, 0xad, 0xfc, 0x2f, 0x59,
	0x2a, 0xa9, 0x09, 0xef, 0xca, 0x40, 0x97, 0x16, 0x92, 0x9a, 0xf0, 0xae, 0x4a, 0x6a, 0xc2, 0xbb,
	0x7a, 0x13, 0x6c, 0x30, 0x42, 0xb2, 0x61, 0x44, 0xc3, 0xae, 0xcc, 0x75, 0xe9, 0xe4, 0x49, 0x91,
	0x9b, 0xbb, 0x8a, 0x9e, 0x4a, 0x16, 0x9a, 0x61, 0x27, 0xef, 0xce, 0x4f, 0x7b, 0xcc, 0xa5, 0x38,
	0xbd, 0x65, 0xc3, 0xd4, 0xed, 0x33, 0x82, 0xfb, 0x1e, 0x61, 0x03, 0x9e, 0x60, 0xc2, 0x53, 0xf5,
	0x77, 0x48, 0xe8, 0x90, 0xc1, 0x98, 0x85, 0xb4, 0x9f, 0x7a, 0x63, 0xd0, 0x93, 0xa5, 0x37, 0x0b,
	0xda, 0x65, 0x59, 0xa2, 0xad, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x1e, 0xd6, 0xfb, 0x9e, 0x7c,
	0x04, 0x00, 0x00,
}
