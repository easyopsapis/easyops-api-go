// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: firewall.proto

package idcmanager

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//防火墙
type Firewall struct {
	//
	//防火墙ID
	InstanceId string `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId" form:"instanceId"`
	//
	//防火墙名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name" form:"name"`
	//
	//管理IP
	Ip string `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip" form:"ip"`
	//
	//备注
	Memo string `protobuf:"bytes,4,opt,name=memo,proto3" json:"memo" form:"memo"`
	//
	//起始U位
	XStartU int32 `protobuf:"varint,5,opt,name=_startU,json=StartU,proto3" json:"_startU" form:"_startU"`
	//
	//占用U位
	XOccupiedU int32 `protobuf:"varint,6,opt,name=_occupiedU,json=OccupiedU,proto3" json:"_occupiedU" form:"_occupiedU"`
	//
	//创建时间
	Ctime string `protobuf:"bytes,7,opt,name=ctime,proto3" json:"ctime" form:"ctime"`
	//
	//创建者
	Creator string `protobuf:"bytes,8,opt,name=creator,proto3" json:"creator" form:"creator"`
	//
	//产品线
	Product string `protobuf:"bytes,9,opt,name=product,proto3" json:"product" form:"product"`
	//
	//客户
	Customer string `protobuf:"bytes,10,opt,name=customer,proto3" json:"customer" form:"customer"`
	//
	//是否单电源
	IsSinglePower        bool     `protobuf:"varint,11,opt,name=isSinglePower,proto3" json:"isSinglePower" form:"isSinglePower"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Firewall) Reset()         { *m = Firewall{} }
func (m *Firewall) String() string { return proto.CompactTextString(m) }
func (*Firewall) ProtoMessage()    {}
func (*Firewall) Descriptor() ([]byte, []int) {
	return fileDescriptor_00e54131a1710129, []int{0}
}
func (m *Firewall) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Firewall.Unmarshal(m, b)
}
func (m *Firewall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Firewall.Marshal(b, m, deterministic)
}
func (m *Firewall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Firewall.Merge(m, src)
}
func (m *Firewall) XXX_Size() int {
	return xxx_messageInfo_Firewall.Size(m)
}
func (m *Firewall) XXX_DiscardUnknown() {
	xxx_messageInfo_Firewall.DiscardUnknown(m)
}

var xxx_messageInfo_Firewall proto.InternalMessageInfo

func (m *Firewall) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *Firewall) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Firewall) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Firewall) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *Firewall) GetXStartU() int32 {
	if m != nil {
		return m.XStartU
	}
	return 0
}

func (m *Firewall) GetXOccupiedU() int32 {
	if m != nil {
		return m.XOccupiedU
	}
	return 0
}

func (m *Firewall) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

func (m *Firewall) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *Firewall) GetProduct() string {
	if m != nil {
		return m.Product
	}
	return ""
}

func (m *Firewall) GetCustomer() string {
	if m != nil {
		return m.Customer
	}
	return ""
}

func (m *Firewall) GetIsSinglePower() bool {
	if m != nil {
		return m.IsSinglePower
	}
	return false
}

func init() {
	proto.RegisterType((*Firewall)(nil), "idcmanager.Firewall")
}

func init() { proto.RegisterFile("firewall.proto", fileDescriptor_00e54131a1710129) }

var fileDescriptor_00e54131a1710129 = []byte{
	// 799 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x96, 0xcf, 0x6e, 0xeb, 0x44,
	0x14, 0xc6, 0xe5, 0x72, 0xfb, 0xc7, 0x73, 0xa1, 0x05, 0x03, 0x92, 0x75, 0x37, 0x2e, 0xbe, 0x45,
	0x9a, 0x69, 0x33, 0x76, 0x6c, 0x27, 0xbd, 0xaa, 0x17, 0x58, 0x37, 0x42, 0x95, 0xee, 0x0a, 0xe4,
	0x72, 0x37, 0x75, 0x9c, 0xca, 0xb5, 0x9d, 0x60, 0x11, 0x67, 0x2c, 0xdb, 0x21, 0xe2, 0xda, 0x7e,
	0x01, 0x36, 0x48, 0x3c, 0x03, 0x2b, 0x24, 0x96, 0xbc, 0x00, 0x6f, 0xc1, 0x26, 0x48, 0x3c, 0x42,
	0x9e, 0x00, 0xcd, 0xd8, 0x6d, 0x02, 0xad, 0x81, 0x45, 0x6f, 0x57, 0x3e, 0x67, 0xbe, 0xef, 0xcc,
	0xfc, 0xce, 0x58, 0x3a, 0x36, 0xd8, 0x1f, 0x47, 0x69, 0xb8, 0xf0, 0xa6, 0x53, 0x25, 0x49, 0x49,
	0x4e, 0x04, 0x10, 0x05, 0x7e, 0xec, 0xcd, 0xbc, 0x49, 0x98, 0x3e, 0xc3, 0x93, 0x28, 0xff, 0x7a,
	0x7e, 0xad, 0xf8, 0x24, 0x56, 0x27, 0x64, 0x42, 0x54, 0x66, 0xb9, 0x9e, 0x8f, 0x59, 0xc6, 0x12,
	0x16, 0xd5, 0xa5, 0xcf, 0x4e, 0x37, 0xec, 0xf1, 0x22, 0xca, 0xbf, 0x21, 0x0b, 0x75, 0x42, 0x30,
	0x13, 0xf1, 0xb7, 0xde, 0x34, 0x0a, 0xbc, 0x9c, 0xa4, 0x99, 0x7a, 0x1b, 0xd6, 0x75, 0xf2, 0xf7,
	0x07, 0x60, 0xef, 0xbc, 0xa1, 0x10, 0x5e, 0x01, 0x10, 0xcd, 0xb2, 0xdc, 0x9b, 0xf9, 0xe1, 0xab,
	0x40, 0xe4, 0x0e, 0x39, 0xc8, 0x0f, 0xd0, 0x6a, 0x29, 0x7d, 0x30, 0x26, 0x69, 0x6c, 0xca, 0x6b,
	0x4d, 0xfe, 0xf3, 0x0f, 0xe9, 0x7d, 0xb0, 0x3f, 0x72, 0xba, 0xf8, 0xcc, 0xc3, 0x6f, 0xdc, 0x42,
	0x33, 0xaa, 0x23, 0x7b, 0xa3, 0x58, 0x78, 0x0e, 0x9e, 0xcc, 0xbc, 0x38, 0x14, 0xb7, 0xd8, 0x26,
	0x07, 0xab, 0xa5, 0xf4, 0xb4, 0xde, 0x84, 0xae, 0xca, 0x36, 0x13, 0x85, 0x5f, 0x79, 0xb0, 0x15,
	0x25, 0xe2, 0x3b, 0xcc, 0xf3, 0x13, 0xbf, 0x5a, 0x4a, 0x7c, 0x73, 0x52, 0x42, 0x4f, 0xf8, 0x91,
	0x07, 0x3f, 0xf0, 0x23, 0x08, 0x75, 0xd8, 0x77, 0xba, 0xb8, 0xef, 0x16, 0x5a, 0x55, 0x3a, 0x5d,
	0xdc, 0x73, 0x87, 0x41, 0xa1, 0x55, 0x88, 0xc6, 0x9a, 0x6b, 0xd1, 0xa4, 0xa3, 0x57, 0x08, 0x0e,
	0x95, 0xff, 0xe9, 0x44, 0x85, 0x51, 0xa1, 0x72, 0x98, 0x1d, 0x43, 0x08, 0x69, 0x07, 0x2f, 0xf1,
	0xb9, 0x87, 0xc7, 0x6e, 0xa1, 0x75, 0x7a, 0x95, 0x89, 0x8a, 0x17, 0xd5, 0x9d, 0xd5, 0xd2, 0x44,
	0xa8, 0xbc, 0xd7, 0x7c, 0x5a, 0x41, 0xf3, 0x8e, 0x1b, 0x42, 0xbd, 0xe6, 0x28, 0xf5, 0x86, 0xa2,
	0xd4, 0x86, 0xc1, 0x30, 0x28, 0x1d, 0x0d, 0x9f, 0x51, 0x8e, 0x1a, 0xf6, 0x3f, 0x3c, 0x35, 0x66,
	0xeb, 0xc9, 0xfd, 0x0a, 0xc2, 0xbb, 0x67, 0xa3, 0xba, 0xc5, 0xd2, 0x7c, 0x14, 0x86, 0x5e, 0x2b,
	0x03, 0x2d, 0xbb, 0x4f, 0xb2, 0x1e, 0x12, 0xec, 0x5f, 0xc8, 0x8c, 0x56, 0xb2, 0x5e, 0x0b, 0x59,
	0xd1, 0xed, 0xe8, 0xd5, 0x23, 0xd1, 0xe9, 0xad, 0x74, 0xfd, 0x76, 0x3a, 0xe3, 0xb1, 0xe8, 0xb4,
	0x56, 0xba, 0xd3, 0x76, 0xba, 0xde, 0xdb, 0xa0, 0x33, 0xdb, 0x40, 0x5e, 0xb4, 0x83, 0xf4, 0x1f,
	0x1e, 0x04, 0xc1, 0x4f, 0x95, 0x13, 0x64, 0x0d, 0xb3, 0xe3, 0x23, 0x7b, 0x2b, 0x4a, 0xe8, 0x70,
	0x8b, 0xc3, 0x98, 0x88, 0x4f, 0xfe, 0x39, 0xdc, 0xe8, 0xaa, 0x6c, 0x33, 0x51, 0x38, 0x01, 0xbb,
	0x57, 0x59, 0xee, 0xa5, 0xf9, 0x6b, 0x71, 0xfb, 0x90, 0x83, 0xdb, 0x03, 0x61, 0xb5, 0x94, 0xf6,
	0x6b, 0x5f, 0x23, 0xc8, 0xf6, 0xce, 0x05, 0x0b, 0x84, 0x1e, 0x00, 0x57, 0xc4, 0xf7, 0xe7, 0x49,
	0x14, 0x06, 0xaf, 0xc5, 0x1d, 0xe6, 0xff, 0x78, 0x3d, 0x79, 0xd7, 0x9a, 0x6c, 0xf3, 0x5f, 0xdc,
	0xc4, 0xc2, 0xef, 0x1c, 0xd8, 0xf6, 0xf3, 0x28, 0x0e, 0xc5, 0x5d, 0x46, 0xf2, 0x1b, 0xb7, 0x5a,
	0x4a, 0xef, 0xd6, 0x25, 0x6c, 0x9d, 0x4e, 0xd1, 0x5f, 0x38, 0xf0, 0x33, 0x37, 0x82, 0xd0, 0x32,
	0x59, 0x67, 0xf4, 0xca, 0xdc, 0x63, 0x64, 0xb1, 0x67, 0xd1, 0xab, 0x10, 0x86, 0x9a, 0xd3, 0xc5,
	0xba, 0x5b, 0x76, 0x99, 0x8e, 0x30, 0x34, 0xd8, 0xb8, 0x6c, 0x72, 0x7a, 0x1f, 0x7a, 0x5d, 0x85,
	0x9c, 0xaf, 0x0e, 0x5d, 0x48, 0xaf, 0xcb, 0x70, 0xeb, 0x91, 0x5a, 0x2f, 0x9b, 0x90, 0x5d, 0x64,
	0x93, 0xac, 0x63, 0x38, 0x54, 0xd8, 0xf3, 0x04, 0x59, 0xf0, 0xb2, 0x74, 0x4e, 0xb0, 0x0b, 0x2d,
	0xf3, 0x9e, 0xf2, 0x8d, 0x6a, 0xeb, 0xc8, 0xae, 0x3b, 0x12, 0x2e, 0xc0, 0xae, 0x9f, 0x86, 0xf4,
	0x4b, 0x25, 0xee, 0xb1, 0xe6, 0xce, 0xd6, 0xd7, 0xd7, 0x08, 0xb4, 0xbb, 0xe7, 0xe0, 0x93, 0x91,
	0xe3, 0xe1, 0x37, 0x2f, 0xf1, 0x25, 0xdd, 0xc0, 0x51, 0x6e, 0xe3, 0x2b, 0xec, 0x16, 0x7a, 0xc7,
	0xd0, 0xaa, 0x23, 0xfb, 0x66, 0x27, 0xa1, 0x03, 0x76, 0x93, 0x94, 0x04, 0x73, 0x3f, 0x17, 0x79,
	0xb6, 0xe9, 0xc6, 0x3b, 0x69, 0x04, 0xd9, 0xbe, 0xb1, 0x08, 0x2a, 0xd8, 0xf3, 0xe7, 0x59, 0x4e,
	0xe2, 0x30, 0x15, 0x01, 0xb3, 0x7f, 0xb8, 0x5a, 0x4a, 0x07, 0x0d, 0x43, 0xa3, 0xc8, 0xf6, 0xad,
	0x49, 0xf8, 0x0c, 0xbc, 0x17, 0x65, 0x17, 0xd1, 0x6c, 0x32, 0x0d, 0xbf, 0x24, 0x8b, 0x30, 0x15,
	0x9f, 0x1e, 0x72, 0x70, 0x6f, 0x20, 0xae, 0x96, 0xd2, 0x47, 0xcd, 0x87, 0x6d, 0x53, 0x96, 0xed,
	0xbf, 0xdb, 0x07, 0xe7, 0x97, 0x9f, 0x4f, 0x88, 0x12, 0x7a, 0xd9, 0x77, 0x24, 0xc9, 0x94, 0x29,
	0xf1, 0xbd, 0xa9, 0xea, 0x93, 0x59, 0x9e, 0x7a, 0x7e, 0x9e, 0xd5, 0x3f, 0x00, 0x69, 0x98, 0x10,
	0x1c, 0x93, 0x20, 0x9c, 0x66, 0x6a, 0x63, 0x54, 0x59, 0xaa, 0xae, 0xff, 0x1d, 0xae, 0x77, 0x98,
	0xd5, 0xf8, 0x2b, 0x00, 0x00, 0xff, 0xff, 0xfb, 0x88, 0x69, 0x4e, 0x60, 0x08, 0x00, 0x00,
}
