// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: storage_class.proto

package container

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//StorageClass 资源定义, 用于 CMDB 存储
type StorageClass struct {
	//
	//storageclass id，服务端自动生成
	InstanceId string `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId" form:"instanceId"`
	//
	//类型
	Kind string `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind" form:"kind"`
	//
	//storageclass 全称，命名规则 clusterId:kind:namespace:name, 创建之后不能修改
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name" form:"name"`
	//
	//名称
	ResourceName string `protobuf:"bytes,4,opt,name=resourceName,proto3" json:"resourceName" form:"resourceName"`
	//
	//StorageClass 定义
	ResourceSpec string `protobuf:"bytes,5,opt,name=resourceSpec,proto3" json:"resourceSpec" form:"resourceSpec"`
	//
	//描述
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description" form:"description"`
	//
	//annotations
	Annotations *types.Struct `protobuf:"bytes,7,opt,name=annotations,proto3" json:"annotations" form:"annotations"`
	//
	//provisioner
	Provisioner string `protobuf:"bytes,8,opt,name=provisioner,proto3" json:"provisioner" form:"provisioner"`
	//
	//参数
	Parameters *types.Struct `protobuf:"bytes,9,opt,name=parameters,proto3" json:"parameters" form:"parameters"`
	//
	//回收策略, "Recycle", "Delete", "Retain", 默认 Delete
	ReclaimPolicy string `protobuf:"bytes,10,opt,name=reclaimPolicy,proto3" json:"reclaimPolicy" form:"reclaimPolicy"`
	//
	//cmdb 创建时间
	Ctime                string   `protobuf:"bytes,11,opt,name=ctime,proto3" json:"ctime" form:"ctime"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StorageClass) Reset()         { *m = StorageClass{} }
func (m *StorageClass) String() string { return proto.CompactTextString(m) }
func (*StorageClass) ProtoMessage()    {}
func (*StorageClass) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a6f6673beb0c80c, []int{0}
}
func (m *StorageClass) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageClass.Unmarshal(m, b)
}
func (m *StorageClass) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageClass.Marshal(b, m, deterministic)
}
func (m *StorageClass) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageClass.Merge(m, src)
}
func (m *StorageClass) XXX_Size() int {
	return xxx_messageInfo_StorageClass.Size(m)
}
func (m *StorageClass) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageClass.DiscardUnknown(m)
}

var xxx_messageInfo_StorageClass proto.InternalMessageInfo

func (m *StorageClass) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *StorageClass) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *StorageClass) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StorageClass) GetResourceName() string {
	if m != nil {
		return m.ResourceName
	}
	return ""
}

func (m *StorageClass) GetResourceSpec() string {
	if m != nil {
		return m.ResourceSpec
	}
	return ""
}

func (m *StorageClass) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *StorageClass) GetAnnotations() *types.Struct {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *StorageClass) GetProvisioner() string {
	if m != nil {
		return m.Provisioner
	}
	return ""
}

func (m *StorageClass) GetParameters() *types.Struct {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *StorageClass) GetReclaimPolicy() string {
	if m != nil {
		return m.ReclaimPolicy
	}
	return ""
}

func (m *StorageClass) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

func init() {
	proto.RegisterType((*StorageClass)(nil), "container.StorageClass")
}

func init() { proto.RegisterFile("storage_class.proto", fileDescriptor_0a6f6673beb0c80c) }

var fileDescriptor_0a6f6673beb0c80c = []byte{
	// 636 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x54, 0xdf, 0x4e, 0xd4, 0x4c,
	0x14, 0x4f, 0xbf, 0x8f, 0x3f, 0x1f, 0xb3, 0x7c, 0xfe, 0x29, 0x2a, 0x0d, 0x31, 0x29, 0xa9, 0x5c,
	0xb4, 0x90, 0x69, 0xbb, 0xbb, 0x6a, 0x64, 0x4d, 0xdc, 0x08, 0xf1, 0x82, 0x1b, 0xa2, 0xc5, 0x2b,
	0x6a, 0xd7, 0x0c, 0xdd, 0xa1, 0x4e, 0x68, 0x3b, 0xcd, 0xcc, 0x2c, 0x04, 0x58, 0x6e, 0x7c, 0x0a,
	0x9f, 0xc1, 0xc4, 0x97, 0xf0, 0x2d, 0xbc, 0x59, 0x13, 0x1f, 0x61, 0x9f, 0xc0, 0xcc, 0x94, 0x65,
	0x07, 0x34, 0x5c, 0xcd, 0x39, 0xe7, 0xf7, 0xfb, 0x9d, 0xfe, 0xda, 0x73, 0x3a, 0x60, 0x89, 0x0b,
	0xca, 0x50, 0x86, 0x3f, 0xa6, 0x39, 0xe2, 0xdc, 0xaf, 0x18, 0x15, 0xd4, 0x5c, 0x48, 0x69, 0x29,
	0x10, 0x29, 0x31, 0x5b, 0x81, 0x19, 0x11, 0x9f, 0x06, 0x07, 0x7e, 0x4a, 0x8b, 0x20, 0xa3, 0x19,
	0x0d, 0x14, 0xe3, 0x60, 0x70, 0xa8, 0x32, 0x95, 0xa8, 0xa8, 0x56, 0xae, 0x3c, 0xd7, 0xe8, 0xc5,
	0x09, 0x11, 0x47, 0xf4, 0x24, 0xc8, 0x28, 0x54, 0x20, 0x3c, 0x46, 0x39, 0xe9, 0x23, 0x41, 0x19,
	0x0f, 0xae, 0xc2, 0x4b, 0xdd, 0xe3, 0x8c, 0xd2, 0x2c, 0xc7, 0xd3, 0xee, 0x5c, 0xb0, 0x41, 0x2a,
	0x6a, 0xd4, 0xf9, 0x32, 0x0f, 0x16, 0xf7, 0x6a, 0x9f, 0xdb, 0xd2, 0xa6, 0xb9, 0x03, 0x00, 0x29,
	0xb9, 0x40, 0x65, 0x8a, 0x77, 0xfa, 0x96, 0xb1, 0x6a, 0xb8, 0x0b, 0x5b, 0xde, 0x78, 0x64, 0xdf,
	0x3f, 0xa4, 0xac, 0xe8, 0x38, 0x53, 0xcc, 0xf9, 0xf5, 0xd3, 0xbe, 0x07, 0xee, 0xf4, 0xe2, 0x10,
	0x6e, 0x22, 0x78, 0x96, 0x9c, 0x37, 0xdb, 0x17, 0x6b, 0x91, 0x26, 0x36, 0x9f, 0x80, 0x99, 0x23,
	0x52, 0xf6, 0xad, 0x7f, 0x54, 0x93, 0xbb, 0xe3, 0x91, 0xdd, 0xa8, 0x9b, 0xc8, 0xaa, 0x13, 0x29,
	0x50, 0x92, 0x4a, 0x54, 0x60, 0xeb, 0xdf, 0x9b, 0x24, 0x59, 0x75, 0x22, 0x05, 0x9a, 0x9f, 0x0d,
	0xb0, 0xc8, 0x30, 0xa7, 0x03, 0x96, 0xe2, 0x5d, 0xc9, 0x9e, 0x51, 0xec, 0xde, 0x78, 0x64, 0x2f,
	0xd5, 0x6c, 0x1d, 0x95, 0xce, 0xb6, 0xc1, 0xeb, 0x5e, 0x8c, 0xe0, 0x59, 0x08, 0x37, 0x13, 0x37,
	0x86, 0x97, 0xd1, 0xfa, 0xa4, 0xe4, 0x75, 0xdd, 0x0f, 0xfe, 0xad, 0xb8, 0xb7, 0xbe, 0x16, 0x5d,
	0x7b, 0xa6, 0xf9, 0x72, 0xea, 0x61, 0xaf, 0xc2, 0xa9, 0x35, 0xab, 0x3c, 0x2c, 0xff, 0xe9, 0x41,
	0xa2, 0x4e, 0x74, 0x8d, 0x6c, 0xbe, 0x00, 0x8d, 0x3e, 0xe6, 0x29, 0x23, 0x95, 0x20, 0xb4, 0xb4,
	0xe6, 0x94, 0xf6, 0xd1, 0x78, 0x64, 0x9b, 0xb5, 0x56, 0x03, 0x9d, 0x48, 0xa7, 0x9a, 0xef, 0x40,
	0x03, 0x95, 0x25, 0x15, 0x48, 0x66, 0xdc, 0x9a, 0x5f, 0x35, 0xdc, 0x46, 0x6b, 0xd9, 0xaf, 0xa7,
	0xea, 0x4f, 0xa6, 0xea, 0xef, 0xa9, 0xa9, 0xea, 0x2d, 0x35, 0x95, 0x13, 0xe9, 0x3d, 0xa4, 0x99,
	0x8a, 0xd1, 0x63, 0xc2, 0x09, 0x2d, 0x31, 0xb3, 0xfe, 0xbb, 0x69, 0x46, 0x03, 0x9d, 0x48, 0xa7,
	0x9a, 0xbb, 0x00, 0x54, 0x88, 0xa1, 0x02, 0x0b, 0xcc, 0xb8, 0xb5, 0x70, 0xbb, 0x97, 0x87, 0xd3,
	0xb5, 0x99, 0x8a, 0x9c, 0x48, 0xeb, 0x60, 0xbe, 0x02, 0xff, 0x33, 0x9c, 0xe6, 0x88, 0x14, 0x6f,
	0x69, 0x4e, 0xd2, 0x53, 0x0b, 0x28, 0x2f, 0xd6, 0x78, 0x64, 0x3f, 0x98, 0x7c, 0x54, 0x0d, 0x76,
	0xa2, 0xeb, 0x74, 0xf3, 0x87, 0x01, 0x66, 0x53, 0x41, 0x0a, 0x6c, 0x35, 0x94, 0xf0, 0xbb, 0x31,
	0x1e, 0xd9, 0x8b, 0xb5, 0x52, 0xd5, 0xe5, 0x2e, 0x7c, 0x33, 0xc0, 0x57, 0xa3, 0xe7, 0xba, 0xdd,
	0x4e, 0xdc, 0x84, 0x9b, 0x49, 0xac, 0x26, 0xed, 0x75, 0xd5, 0x79, 0xfe, 0xf4, 0xc2, 0x83, 0x6e,
	0x33, 0x0e, 0x61, 0x2b, 0x19, 0x86, 0x0a, 0xf7, 0xa0, 0xdb, 0x8e, 0x43, 0xd8, 0x9c, 0xe4, 0xc3,
	0xb8, 0x09, 0x5b, 0xb5, 0xca, 0x8b, 0xdf, 0xaf, 0x26, 0x6e, 0x2b, 0x0e, 0x61, 0x3b, 0x19, 0x2a,
	0x4e, 0x5d, 0xee, 0xb8, 0x71, 0x08, 0x9f, 0x4d, 0x92, 0x69, 0x2c, 0x97, 0x4c, 0x9e, 0x1b, 0x5e,
	0xd7, 0xdd, 0x1f, 0xc6, 0x1b, 0x30, 0x71, 0xbb, 0x9d, 0xbf, 0xc8, 0x35, 0x75, 0x77, 0x2d, 0xaa,
	0xdf, 0x68, 0xeb, 0xcd, 0xfe, 0x76, 0x46, 0x7d, 0x8c, 0xf8, 0x29, 0xad, 0xb8, 0x9f, 0xd3, 0x14,
	0xe5, 0x81, 0xbc, 0x3d, 0x18, 0x4a, 0x05, 0xaf, 0x7f, 0x67, 0x86, 0x2b, 0x0a, 0x0b, 0xda, 0xc7,
	0x39, 0x0f, 0x2e, 0x89, 0x81, 0x4a, 0x83, 0xab, 0x6b, 0xe6, 0x60, 0x4e, 0x31, 0xdb, 0xbf, 0x03,
	0x00, 0x00, 0xff, 0xff, 0x06, 0x96, 0x3a, 0x52, 0x8f, 0x04, 0x00, 0x00,
}
