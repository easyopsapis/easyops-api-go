// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: label_selector.proto

package container

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//labels 筛选器
type LabelSelector struct {
	//
	//匹配标签
	MatchLabels *types.Struct `protobuf:"bytes,1,opt,name=matchLabels,proto3" json:"matchLabels" form:"matchLabels"`
	//
	//匹配表达式
	MatchExpressions     []*LabelSelector_MatchExpressions `protobuf:"bytes,2,rep,name=matchExpressions,proto3" json:"matchExpressions" form:"matchExpressions"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *LabelSelector) Reset()         { *m = LabelSelector{} }
func (m *LabelSelector) String() string { return proto.CompactTextString(m) }
func (*LabelSelector) ProtoMessage()    {}
func (*LabelSelector) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e817eb3c90cb08b, []int{0}
}
func (m *LabelSelector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LabelSelector.Unmarshal(m, b)
}
func (m *LabelSelector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LabelSelector.Marshal(b, m, deterministic)
}
func (m *LabelSelector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LabelSelector.Merge(m, src)
}
func (m *LabelSelector) XXX_Size() int {
	return xxx_messageInfo_LabelSelector.Size(m)
}
func (m *LabelSelector) XXX_DiscardUnknown() {
	xxx_messageInfo_LabelSelector.DiscardUnknown(m)
}

var xxx_messageInfo_LabelSelector proto.InternalMessageInfo

func (m *LabelSelector) GetMatchLabels() *types.Struct {
	if m != nil {
		return m.MatchLabels
	}
	return nil
}

func (m *LabelSelector) GetMatchExpressions() []*LabelSelector_MatchExpressions {
	if m != nil {
		return m.MatchExpressions
	}
	return nil
}

type LabelSelector_MatchExpressions struct {
	//
	//匹配对象
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key" form:"key"`
	//
	//操作符
	Operator string `protobuf:"bytes,2,opt,name=operator,proto3" json:"operator" form:"operator"`
	//
	//要匹配的值
	Values               []string `protobuf:"bytes,3,rep,name=values,proto3" json:"values" form:"values"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LabelSelector_MatchExpressions) Reset()         { *m = LabelSelector_MatchExpressions{} }
func (m *LabelSelector_MatchExpressions) String() string { return proto.CompactTextString(m) }
func (*LabelSelector_MatchExpressions) ProtoMessage()    {}
func (*LabelSelector_MatchExpressions) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e817eb3c90cb08b, []int{0, 0}
}
func (m *LabelSelector_MatchExpressions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LabelSelector_MatchExpressions.Unmarshal(m, b)
}
func (m *LabelSelector_MatchExpressions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LabelSelector_MatchExpressions.Marshal(b, m, deterministic)
}
func (m *LabelSelector_MatchExpressions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LabelSelector_MatchExpressions.Merge(m, src)
}
func (m *LabelSelector_MatchExpressions) XXX_Size() int {
	return xxx_messageInfo_LabelSelector_MatchExpressions.Size(m)
}
func (m *LabelSelector_MatchExpressions) XXX_DiscardUnknown() {
	xxx_messageInfo_LabelSelector_MatchExpressions.DiscardUnknown(m)
}

var xxx_messageInfo_LabelSelector_MatchExpressions proto.InternalMessageInfo

func (m *LabelSelector_MatchExpressions) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *LabelSelector_MatchExpressions) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

func (m *LabelSelector_MatchExpressions) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

func init() {
	proto.RegisterType((*LabelSelector)(nil), "container.LabelSelector")
	proto.RegisterType((*LabelSelector_MatchExpressions)(nil), "container.LabelSelector.MatchExpressions")
}

func init() { proto.RegisterFile("label_selector.proto", fileDescriptor_2e817eb3c90cb08b) }

var fileDescriptor_2e817eb3c90cb08b = []byte{
	// 342 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0xb1, 0x6e, 0xea, 0x30,
	0x14, 0x86, 0x05, 0x91, 0xd0, 0xc5, 0x88, 0x7b, 0xb9, 0x69, 0x55, 0x22, 0x5a, 0x29, 0x91, 0x27,
	0x18, 0xb0, 0x25, 0xba, 0x75, 0x4c, 0xc5, 0xd6, 0x0e, 0x0d, 0x5b, 0x97, 0xca, 0x71, 0x4d, 0x40,
	0x38, 0x9c, 0xc8, 0x76, 0xaa, 0xf2, 0x16, 0x7d, 0xc2, 0xec, 0x5d, 0xf3, 0x04, 0x15, 0x36, 0xd0,
	0x94, 0x6e, 0xfe, 0xcf, 0xff, 0x9d, 0xff, 0xf8, 0xd8, 0xe8, 0x52, 0xb2, 0x54, 0xc8, 0x17, 0x2d,
	0xa4, 0xe0, 0x06, 0x14, 0x29, 0x14, 0x18, 0xf0, 0xbb, 0x1c, 0xb6, 0x86, 0xad, 0xb7, 0x42, 0x8d,
	0xa6, 0xd9, 0xda, 0xac, 0xca, 0x94, 0x70, 0xc8, 0x69, 0x06, 0x19, 0x50, 0x4b, 0xa4, 0xe5, 0xd2,
	0x2a, 0x2b, 0xec, 0xc9, 0x75, 0x8e, 0x6e, 0x32, 0x80, 0x4c, 0x8a, 0x6f, 0x4a, 0x1b, 0x55, 0x72,
	0xe3, 0x5c, 0xfc, 0xd9, 0x46, 0xfd, 0x87, 0xfd, 0xc0, 0xc5, 0x61, 0x9e, 0xff, 0x84, 0x7a, 0x39,
	0x33, 0x7c, 0x65, 0xab, 0x3a, 0x68, 0x45, 0xad, 0x71, 0x6f, 0x36, 0x24, 0x2e, 0x85, 0x1c, 0x53,
	0xc8, 0xc2, 0xa6, 0xc4, 0x57, 0x75, 0x15, 0xfa, 0x4b, 0x50, 0xf9, 0x1d, 0x6e, 0x74, 0xe1, 0xa4,
	0x99, 0xe1, 0x2b, 0x34, 0xb0, 0x72, 0xfe, 0x5e, 0x28, 0xa1, 0xf5, 0x1a, 0xb6, 0x3a, 0x68, 0x47,
	0xde, 0xb8, 0x37, 0x9b, 0x90, 0xd3, 0x5e, 0xe4, 0xc7, 0x35, 0xc8, 0xe3, 0x59, 0x43, 0x7c, 0x5d,
	0x57, 0xe1, 0xb0, 0x31, 0xa9, 0xe1, 0xe1, 0xe4, 0x57, 0xfe, 0xe8, 0xa3, 0x85, 0x06, 0xe7, 0x19,
	0x7e, 0x84, 0xbc, 0x8d, 0xd8, 0xd9, 0x9d, 0xba, 0xf1, 0xdf, 0xba, 0x0a, 0x91, 0x0b, 0xdc, 0x88,
	0x1d, 0x4e, 0xf6, 0x96, 0x4f, 0xd1, 0x1f, 0x28, 0x84, 0x62, 0x06, 0x54, 0xd0, 0xb6, 0xd8, 0x45,
	0x5d, 0x85, 0xff, 0x1c, 0x76, 0x74, 0x70, 0x72, 0x82, 0xfc, 0x09, 0xea, 0xbc, 0x31, 0x59, 0x0a,
	0x1d, 0x78, 0x91, 0x37, 0xee, 0xc6, 0xff, 0xeb, 0x2a, 0xec, 0x3b, 0xdc, 0xd5, 0x71, 0x72, 0x00,
	0xe2, 0xf9, 0xf3, 0x7d, 0x06, 0x44, 0x30, 0xbd, 0x83, 0x42, 0x13, 0x09, 0x9c, 0x49, 0xba, 0x5f,
	0x5f, 0x31, 0x6e, 0xb4, 0xfb, 0x1f, 0x25, 0x0a, 0x98, 0xe6, 0xf0, 0x2a, 0xa4, 0xa6, 0x07, 0x90,
	0x5a, 0x49, 0x4f, 0xef, 0x94, 0x76, 0x2c, 0x79, 0xfb, 0x15, 0x00, 0x00, 0xff, 0xff, 0xf5, 0x2e,
	0x41, 0xfd, 0x29, 0x02, 0x00, 0x00,
}
