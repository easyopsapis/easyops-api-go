// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: volume_mount.proto

package container

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//容器挂载目录
type VolumeMount struct {
	//
	//引用pod定义的共享存储卷名称, 需要 volumes[]部分定义的卷名
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name" form:"name"`
	//
	//存储卷内 mount 的绝对路径
	MountPath string `protobuf:"bytes,2,opt,name=mountPath,proto3" json:"mountPath" form:"mountPath"`
	//
	//子路径
	SubPath string `protobuf:"bytes,3,opt,name=subPath,proto3" json:"subPath" form:"subPath"`
	//
	//是否为只读模式
	ReadOnly             bool     `protobuf:"varint,4,opt,name=readOnly,proto3" json:"readOnly" form:"readOnly"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeMount) Reset()         { *m = VolumeMount{} }
func (m *VolumeMount) String() string { return proto.CompactTextString(m) }
func (*VolumeMount) ProtoMessage()    {}
func (*VolumeMount) Descriptor() ([]byte, []int) {
	return fileDescriptor_bbde336a4634d84f, []int{0}
}
func (m *VolumeMount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeMount.Unmarshal(m, b)
}
func (m *VolumeMount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeMount.Marshal(b, m, deterministic)
}
func (m *VolumeMount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeMount.Merge(m, src)
}
func (m *VolumeMount) XXX_Size() int {
	return xxx_messageInfo_VolumeMount.Size(m)
}
func (m *VolumeMount) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeMount.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeMount proto.InternalMessageInfo

func (m *VolumeMount) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VolumeMount) GetMountPath() string {
	if m != nil {
		return m.MountPath
	}
	return ""
}

func (m *VolumeMount) GetSubPath() string {
	if m != nil {
		return m.SubPath
	}
	return ""
}

func (m *VolumeMount) GetReadOnly() bool {
	if m != nil {
		return m.ReadOnly
	}
	return false
}

func init() {
	proto.RegisterType((*VolumeMount)(nil), "container.VolumeMount")
}

func init() { proto.RegisterFile("volume_mount.proto", fileDescriptor_bbde336a4634d84f) }

var fileDescriptor_bbde336a4634d84f = []byte{
	// 381 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0x41, 0x8b, 0xda, 0x40,
	0x14, 0xc7, 0xb1, 0x4a, 0xab, 0x23, 0xb4, 0x25, 0xbd, 0x88, 0x97, 0xd8, 0xe0, 0x21, 0x51, 0x26,
	0x53, 0x68, 0x29, 0x54, 0x4a, 0xa5, 0x96, 0xd2, 0xee, 0x61, 0xd9, 0xc5, 0xc3, 0x1e, 0xcc, 0x18,
	0x99, 0xc4, 0x18, 0xc3, 0x26, 0x79, 0x32, 0x99, 0x28, 0x2e, 0xc2, 0x5e, 0xf6, 0x73, 0x66, 0x61,
	0x3f, 0x42, 0x3e, 0xc1, 0x92, 0x89, 0x66, 0x17, 0xf6, 0xba, 0xb7, 0xf7, 0xe6, 0xff, 0x7f, 0xff,
	0xdf, 0x0b, 0x79, 0x48, 0xd9, 0x42, 0x98, 0x46, 0xde, 0x22, 0x82, 0x34, 0x16, 0xe6, 0x86, 0x83,
	0x00, 0xa5, 0xe5, 0x42, 0x2c, 0x58, 0x10, 0x7b, 0xbc, 0x8b, 0xfd, 0x40, 0xac, 0x53, 0xc7, 0x74,
	0x21, 0x22, 0x3e, 0xf8, 0x40, 0xa4, 0xc3, 0x49, 0x57, 0xb2, 0x93, 0x8d, 0xac, 0xca, 0xc9, 0xee,
	0xf7, 0x67, 0xf6, 0x68, 0x17, 0x88, 0x6b, 0xd8, 0x11, 0x1f, 0xb0, 0x14, 0xf1, 0x96, 0x85, 0xc1,
	0x92, 0x09, 0xe0, 0x09, 0xa9, 0xca, 0x72, 0x4e, 0xbb, 0xab, 0xa3, 0xf6, 0x95, 0x5c, 0xe4, 0xbc,
	0xd8, 0x43, 0xf9, 0x8f, 0x1a, 0x31, 0x8b, 0xbc, 0x4e, 0xad, 0x57, 0xd3, 0x5b, 0x93, 0x6f, 0x79,
	0xa6, 0xb6, 0x57, 0xc0, 0xa3, 0x91, 0x56, 0xbc, 0x6a, 0x0f, 0xf7, 0xea, 0x67, 0xa4, 0xda, 0x16,
	0xc3, 0x37, 0x5f, 0xf0, 0x8f, 0xb9, 0x6e, 0xe1, 0x63, 0x35, 0x38, 0x3d, 0x19, 0xe3, 0xfe, 0x54,
	0x26, 0x28, 0xb7, 0xa8, 0x25, 0x3f, 0xed, 0x92, 0x89, 0x75, 0xe7, 0x8d, 0x8c, 0x63, 0x79, 0xa6,
	0x7e, 0x2c, 0xe3, 0x2a, 0xa9, 0xc8, 0x3c, 0x43, 0xff, 0x6c, 0x5d, 0xa7, 0xc4, 0xb2, 0x29, 0x19,
	0xd1, 0x01, 0x1d, 0x6b, 0xda, 0xcf, 0x5f, 0xf4, 0x40, 0x39, 0x8d, 0xe7, 0x43, 0x63, 0x68, 0x1c,
	0x74, 0x4a, 0x8c, 0x43, 0x81, 0xf8, 0x8d, 0x67, 0xf3, 0x91, 0x4e, 0xa9, 0x65, 0x53, 0xfa, 0xd2,
	0x39, 0xe8, 0x4f, 0x9f, 0x98, 0xca, 0x1e, 0xbd, 0x4b, 0x52, 0x47, 0xe2, 0xeb, 0x12, 0xbf, 0xc8,
	0x33, 0xf5, 0x7d, 0x89, 0x3f, 0x0a, 0xaf, 0x0c, 0x3f, 0xf1, 0x14, 0x82, 0x9a, 0xdc, 0x63, 0xcb,
	0x8b, 0x38, 0xdc, 0x77, 0x1a, 0xbd, 0x9a, 0xde, 0x9c, 0x7c, 0xca, 0x33, 0xf5, 0x43, 0xc9, 0x3e,
	0x29, 0xda, 0xb4, 0x32, 0x4d, 0xfe, 0xce, 0xfe, 0xf8, 0x60, 0x7a, 0x2c, 0xd9, 0xc3, 0x26, 0x31,
	0x43, 0x70, 0x59, 0x48, 0x8a, 0x5b, 0xe0, 0xcc, 0x15, 0x49, 0xf9, 0xeb, 0xb9, 0xb7, 0x01, 0x1c,
	0xc1, 0xd2, 0x0b, 0x13, 0x72, 0x34, 0x12, 0xd9, 0x92, 0xea, 0x68, 0x9c, 0xb7, 0xd2, 0xf9, 0xf5,
	0x31, 0x00, 0x00, 0xff, 0xff, 0x84, 0x6b, 0xf5, 0xd5, 0x5c, 0x02, 0x00, 0x00,
}
