// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cluster.proto

package container

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//集群
type Cluster struct {
	//
	//cluster id，服务端自动生成
	InstanceId string `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId" form:"instanceId"`
	//
	//集群名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name" form:"name"`
	//
	//集群地址
	Host string `protobuf:"bytes,3,opt,name=host,proto3" json:"host" form:"host"`
	//
	//环境类型
	Environment string `protobuf:"bytes,4,opt,name=environment,proto3" json:"environment" form:"environment"`
	//
	//授权模式
	AuthMode string `protobuf:"bytes,5,opt,name=authMode,proto3" json:"authMode" form:"authMode"`
	//
	//管理账号
	AuthInfo *Cluster_AuthInfo `protobuf:"bytes,6,opt,name=authInfo,proto3" json:"authInfo" form:"authInfo"`
	//
	//证书信息
	TlsConfig *Cluster_TlsConfig `protobuf:"bytes,7,opt,name=tlsConfig,proto3" json:"tlsConfig" form:"tlsConfig"`
	//
	//默认 StorageClass
	DefaultStorageClass string `protobuf:"bytes,8,opt,name=defaultStorageClass,proto3" json:"defaultStorageClass" form:"defaultStorageClass"`
	//
	//备注
	Description string `protobuf:"bytes,9,opt,name=description,proto3" json:"description" form:"description"`
	//
	//来源
	Provider string `protobuf:"bytes,10,opt,name=provider,proto3" json:"provider" form:"provider"`
	//
	//创建时间,服务端自动生成
	Ctime                string   `protobuf:"bytes,11,opt,name=ctime,proto3" json:"ctime" form:"ctime"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cluster) Reset()         { *m = Cluster{} }
func (m *Cluster) String() string { return proto.CompactTextString(m) }
func (*Cluster) ProtoMessage()    {}
func (*Cluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{0}
}
func (m *Cluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cluster.Unmarshal(m, b)
}
func (m *Cluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cluster.Marshal(b, m, deterministic)
}
func (m *Cluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cluster.Merge(m, src)
}
func (m *Cluster) XXX_Size() int {
	return xxx_messageInfo_Cluster.Size(m)
}
func (m *Cluster) XXX_DiscardUnknown() {
	xxx_messageInfo_Cluster.DiscardUnknown(m)
}

var xxx_messageInfo_Cluster proto.InternalMessageInfo

func (m *Cluster) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *Cluster) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Cluster) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Cluster) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *Cluster) GetAuthMode() string {
	if m != nil {
		return m.AuthMode
	}
	return ""
}

func (m *Cluster) GetAuthInfo() *Cluster_AuthInfo {
	if m != nil {
		return m.AuthInfo
	}
	return nil
}

func (m *Cluster) GetTlsConfig() *Cluster_TlsConfig {
	if m != nil {
		return m.TlsConfig
	}
	return nil
}

func (m *Cluster) GetDefaultStorageClass() string {
	if m != nil {
		return m.DefaultStorageClass
	}
	return ""
}

func (m *Cluster) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Cluster) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *Cluster) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

type Cluster_AuthInfo struct {
	//
	//用户名
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username" form:"username"`
	//
	//密码
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password" form:"password"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cluster_AuthInfo) Reset()         { *m = Cluster_AuthInfo{} }
func (m *Cluster_AuthInfo) String() string { return proto.CompactTextString(m) }
func (*Cluster_AuthInfo) ProtoMessage()    {}
func (*Cluster_AuthInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{0, 0}
}
func (m *Cluster_AuthInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cluster_AuthInfo.Unmarshal(m, b)
}
func (m *Cluster_AuthInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cluster_AuthInfo.Marshal(b, m, deterministic)
}
func (m *Cluster_AuthInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cluster_AuthInfo.Merge(m, src)
}
func (m *Cluster_AuthInfo) XXX_Size() int {
	return xxx_messageInfo_Cluster_AuthInfo.Size(m)
}
func (m *Cluster_AuthInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_Cluster_AuthInfo.DiscardUnknown(m)
}

var xxx_messageInfo_Cluster_AuthInfo proto.InternalMessageInfo

func (m *Cluster_AuthInfo) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Cluster_AuthInfo) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type Cluster_TlsConfig struct {
	//
	//客户端证书
	ClientCertificate string `protobuf:"bytes,1,opt,name=clientCertificate,proto3" json:"clientCertificate" form:"clientCertificate"`
	//
	//客户端Key
	ClientKey string `protobuf:"bytes,2,opt,name=clientKey,proto3" json:"clientKey" form:"clientKey"`
	//
	//集群证书
	ClusterCA            string   `protobuf:"bytes,3,opt,name=clusterCA,proto3" json:"clusterCA" form:"clusterCA"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cluster_TlsConfig) Reset()         { *m = Cluster_TlsConfig{} }
func (m *Cluster_TlsConfig) String() string { return proto.CompactTextString(m) }
func (*Cluster_TlsConfig) ProtoMessage()    {}
func (*Cluster_TlsConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{0, 1}
}
func (m *Cluster_TlsConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cluster_TlsConfig.Unmarshal(m, b)
}
func (m *Cluster_TlsConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cluster_TlsConfig.Marshal(b, m, deterministic)
}
func (m *Cluster_TlsConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cluster_TlsConfig.Merge(m, src)
}
func (m *Cluster_TlsConfig) XXX_Size() int {
	return xxx_messageInfo_Cluster_TlsConfig.Size(m)
}
func (m *Cluster_TlsConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_Cluster_TlsConfig.DiscardUnknown(m)
}

var xxx_messageInfo_Cluster_TlsConfig proto.InternalMessageInfo

func (m *Cluster_TlsConfig) GetClientCertificate() string {
	if m != nil {
		return m.ClientCertificate
	}
	return ""
}

func (m *Cluster_TlsConfig) GetClientKey() string {
	if m != nil {
		return m.ClientKey
	}
	return ""
}

func (m *Cluster_TlsConfig) GetClusterCA() string {
	if m != nil {
		return m.ClusterCA
	}
	return ""
}

func init() {
	proto.RegisterType((*Cluster)(nil), "container.Cluster")
	proto.RegisterType((*Cluster_AuthInfo)(nil), "container.Cluster.AuthInfo")
	proto.RegisterType((*Cluster_TlsConfig)(nil), "container.Cluster.TlsConfig")
}

func init() { proto.RegisterFile("cluster.proto", fileDescriptor_3cfb3b8ec240c376) }

var fileDescriptor_3cfb3b8ec240c376 = []byte{
	// 588 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x94, 0xdf, 0x6e, 0xd3, 0x3e,
	0x14, 0xc7, 0xd5, 0xdf, 0x6f, 0xff, 0xea, 0x02, 0xdb, 0x3c, 0x84, 0xac, 0x32, 0x29, 0x93, 0x41,
	0x68, 0x5c, 0x34, 0x81, 0x4d, 0x42, 0xc0, 0xdd, 0x56, 0x71, 0x31, 0xfe, 0x48, 0xc8, 0x70, 0x05,
	0x02, 0xc9, 0x4b, 0xdc, 0xcc, 0x22, 0xf1, 0xa9, 0x6c, 0x77, 0xd3, 0x40, 0x3c, 0x1b, 0xef, 0xc0,
	0x03, 0x04, 0x89, 0x47, 0xc8, 0x13, 0xa0, 0xd8, 0x6e, 0x1a, 0x4a, 0xef, 0x8e, 0xcf, 0xf7, 0xf3,
	0x3d, 0x3e, 0x3d, 0x3e, 0x0d, 0xba, 0x99, 0x16, 0x33, 0x63, 0x85, 0x8e, 0xa7, 0x1a, 0x2c, 0xe0,
	0x7e, 0x0a, 0xca, 0x72, 0xa9, 0x84, 0x1e, 0x8e, 0x72, 0x69, 0x2f, 0x66, 0xe7, 0x71, 0x0a, 0x65,
	0x92, 0x43, 0x0e, 0x89, 0x23, 0xce, 0x67, 0x13, 0x77, 0x72, 0x07, 0x17, 0x79, 0xe7, 0xf0, 0x49,
	0x07, 0x2f, 0xaf, 0xa4, 0xfd, 0x02, 0x57, 0x49, 0x0e, 0x23, 0x27, 0x8e, 0x2e, 0x79, 0x21, 0x33,
	0x6e, 0x41, 0x9b, 0xa4, 0x0d, 0xbd, 0x8f, 0xfe, 0xdc, 0x44, 0x9b, 0x63, 0xdf, 0x03, 0x3e, 0x43,
	0x48, 0x2a, 0x63, 0xb9, 0x4a, 0xc5, 0x59, 0x46, 0x7a, 0x07, 0xbd, 0xc3, 0xfe, 0xe9, 0xc3, 0xba,
	0x8a, 0x76, 0x27, 0xa0, 0xcb, 0xe7, 0x74, 0xa1, 0xd1, 0xdf, 0xbf, 0xa2, 0x1d, 0x74, 0xeb, 0xf3,
	0xc7, 0x47, 0xa3, 0x67, 0x7c, 0xf4, 0xf5, 0xd3, 0xb7, 0xc7, 0xc7, 0xdf, 0xef, 0xb3, 0x8e, 0x19,
	0xdf, 0x43, 0x6b, 0x8a, 0x97, 0x82, 0xfc, 0xe7, 0x8a, 0x6c, 0xd7, 0x55, 0x34, 0xf0, 0x45, 0x9a,
	0x2c, 0x65, 0x4e, 0x6c, 0xa0, 0x0b, 0x30, 0x96, 0xfc, 0xbf, 0x0c, 0x35, 0x59, 0xca, 0x9c, 0x88,
	0x9f, 0xa2, 0x81, 0x50, 0x97, 0x52, 0x83, 0x2a, 0x85, 0xb2, 0x64, 0xcd, 0xb1, 0x77, 0xea, 0x2a,
	0xc2, 0x9e, 0xed, 0x88, 0x94, 0x75, 0x51, 0x9c, 0xa0, 0x2d, 0x3e, 0xb3, 0x17, 0x6f, 0x20, 0x13,
	0x64, 0xdd, 0xd9, 0xf6, 0xea, 0x2a, 0xda, 0xf6, 0xb6, 0xb9, 0x42, 0x59, 0x0b, 0xe1, 0xd7, 0xde,
	0x70, 0xa6, 0x26, 0x40, 0x36, 0x0e, 0x7a, 0x87, 0x83, 0xa3, 0xbb, 0x71, 0xfb, 0x20, 0x71, 0x98,
	0x52, 0x7c, 0x12, 0x90, 0xe5, 0x6a, 0x4d, 0x2e, 0x54, 0x6b, 0x42, 0xfc, 0x16, 0xf5, 0x6d, 0x61,
	0xc6, 0xa0, 0x26, 0x32, 0x27, 0x9b, 0xae, 0xdc, 0xfe, 0x8a, 0x72, 0xef, 0xe7, 0xcc, 0xe9, 0xed,
	0xba, 0x8a, 0x76, 0x7c, 0xbd, 0xd6, 0x48, 0xd9, 0xa2, 0x08, 0xce, 0xd0, 0x5e, 0x26, 0x26, 0x7c,
	0x56, 0xd8, 0x77, 0x16, 0x34, 0xcf, 0xc5, 0xb8, 0xe0, 0xc6, 0x90, 0x2d, 0xf7, 0xdb, 0x8e, 0xea,
	0x2a, 0x1a, 0x7a, 0xf7, 0x0a, 0x68, 0xf5, 0x8b, 0xad, 0x2a, 0xd7, 0x0c, 0x3c, 0x13, 0x26, 0xd5,
	0x72, 0x6a, 0x25, 0x28, 0xd2, 0x5f, 0x1e, 0x78, 0x47, 0xa4, 0xac, 0x8b, 0x36, 0x03, 0x9f, 0x6a,
	0xb8, 0x94, 0x99, 0xd0, 0x04, 0x2d, 0x0f, 0x7c, 0xae, 0x50, 0xd6, 0x42, 0xf8, 0x01, 0x5a, 0x4f,
	0xad, 0x2c, 0x05, 0x19, 0x38, 0x7a, 0xa7, 0xae, 0xa2, 0x1b, 0x9e, 0x76, 0x69, 0xca, 0xbc, 0x3c,
	0x2c, 0xd0, 0xd6, 0x7c, 0xea, 0xcd, 0x25, 0x33, 0x23, 0xb4, 0xdb, 0xae, 0xde, 0xf2, 0x25, 0x73,
	0x85, 0xb2, 0x16, 0x72, 0x5d, 0x71, 0x63, 0xae, 0x40, 0x67, 0x61, 0x1d, 0xbb, 0x5d, 0x05, 0xa5,
	0xe9, 0x2a, 0x84, 0xc3, 0x1f, 0x3d, 0xd4, 0x6f, 0x5f, 0x05, 0xbf, 0x44, 0xbb, 0x69, 0x21, 0x85,
	0xb2, 0x63, 0xa1, 0xad, 0x9c, 0xc8, 0x94, 0xdb, 0xf9, 0xc5, 0xfb, 0x75, 0x15, 0x91, 0xd0, 0xef,
	0x32, 0x42, 0xd9, 0xbf, 0x36, 0x7c, 0x84, 0xfa, 0x3e, 0xf9, 0x4a, 0x5c, 0x87, 0x5e, 0x3a, 0x8f,
	0xde, 0x4a, 0x94, 0x2d, 0x30, 0xef, 0x71, 0xab, 0x32, 0x3e, 0x09, 0xff, 0x94, 0xbf, 0x3c, 0x41,
	0x72, 0x9e, 0x10, 0x9f, 0xbe, 0xf8, 0x30, 0xce, 0x21, 0x16, 0xdc, 0x5c, 0xc3, 0xd4, 0xc4, 0x05,
	0xa4, 0xbc, 0x48, 0x9a, 0xcd, 0xd3, 0x3c, 0xb5, 0xc6, 0x7f, 0x48, 0xb4, 0x98, 0xc2, 0xa8, 0x84,
	0x4c, 0x14, 0x26, 0x09, 0x60, 0xe2, 0x8e, 0x49, 0xbb, 0xa2, 0xe7, 0x1b, 0x8e, 0x3c, 0xfe, 0x13,
	0x00, 0x00, 0xff, 0xff, 0xdd, 0x1e, 0x7b, 0x8a, 0xa5, 0x04, 0x00, 0x00,
}
