// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: service.proto

package container

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//Service 资源定义, 用于 CMDB 存储
type Service struct {
	//
	//service id，服务端自动生成
	InstanceId string `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId" form:"instanceId"`
	//
	//service 类型, 只能是 Service
	Kind string `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind" form:"kind"`
	//
	//service 全称，命名规则 clusterId:kind:namespace:name, 创建之后不能修改
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name" form:"name"`
	//
	//命名空间, 创建之后不能修改
	Namespace string `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace" form:"namespace"`
	//
	//名称
	ResourceName string `protobuf:"bytes,5,opt,name=resourceName,proto3" json:"resourceName" form:"resourceName"`
	//
	//注解
	Annotations *types.Struct `protobuf:"bytes,6,opt,name=annotations,proto3" json:"annotations" form:"annotations"`
	//
	//标签
	Labels *types.Struct `protobuf:"bytes,7,opt,name=labels,proto3" json:"labels" form:"labels"`
	//
	//Service spec 信息
	Spec *ServiceSpec `protobuf:"bytes,8,opt,name=spec,proto3" json:"spec" form:"spec"`
	//
	//service 定义
	ResourceSpec string `protobuf:"bytes,9,opt,name=resourceSpec,proto3" json:"resourceSpec" form:"resourceSpec"`
	//
	//创建时间
	CreationTimestamp string `protobuf:"bytes,10,opt,name=creationTimestamp,proto3" json:"creationTimestamp" form:"creationTimestamp"`
	//
	//创建者, 服务端自动生成
	Creator              string   `protobuf:"bytes,11,opt,name=creator,proto3" json:"creator" form:"creator"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Service) Reset()         { *m = Service{} }
func (m *Service) String() string { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()    {}
func (*Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}
func (m *Service) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Service.Unmarshal(m, b)
}
func (m *Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Service.Marshal(b, m, deterministic)
}
func (m *Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Service.Merge(m, src)
}
func (m *Service) XXX_Size() int {
	return xxx_messageInfo_Service.Size(m)
}
func (m *Service) XXX_DiscardUnknown() {
	xxx_messageInfo_Service.DiscardUnknown(m)
}

var xxx_messageInfo_Service proto.InternalMessageInfo

func (m *Service) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *Service) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Service) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Service) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *Service) GetResourceName() string {
	if m != nil {
		return m.ResourceName
	}
	return ""
}

func (m *Service) GetAnnotations() *types.Struct {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *Service) GetLabels() *types.Struct {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Service) GetSpec() *ServiceSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *Service) GetResourceSpec() string {
	if m != nil {
		return m.ResourceSpec
	}
	return ""
}

func (m *Service) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *Service) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func init() {
	proto.RegisterType((*Service)(nil), "container.Service")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 660 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xcf, 0x6e, 0xd3, 0x30,
	0x18, 0x57, 0x61, 0xac, 0xd4, 0x65, 0x63, 0x0b, 0x68, 0x8b, 0xa6, 0x89, 0x8c, 0xac, 0x87, 0x94,
	0xe1, 0x24, 0x6d, 0x01, 0xa9, 0xdd, 0xa1, 0xa2, 0x88, 0xc3, 0x2e, 0x48, 0xa4, 0x13, 0x87, 0x99,
	0x6c, 0x72, 0x53, 0x2f, 0x44, 0x4b, 0xe2, 0x28, 0x4e, 0x37, 0xb1, 0x75, 0xcf, 0xc1, 0x3b, 0x20,
	0xf1, 0x2a, 0x3c, 0x42, 0x90, 0x78, 0x84, 0xdc, 0x91, 0x90, 0x9d, 0xb4, 0xcd, 0x18, 0xe2, 0xc4,
	0xc9, 0xdf, 0xe7, 0xdf, 0x1f, 0xfb, 0xfb, 0xc5, 0x0a, 0x58, 0x61, 0x24, 0x3e, 0xf7, 0x1c, 0xa2,
	0x47, 0x31, 0x4d, 0xa8, 0x54, 0x73, 0x68, 0x98, 0x60, 0x2f, 0x24, 0xf1, 0x16, 0x74, 0xbd, 0xe4,
	0xd3, 0x64, 0xa4, 0x3b, 0x34, 0x30, 0x5c, 0xea, 0x52, 0x43, 0x30, 0x46, 0x93, 0x53, 0xd1, 0x89,
	0x46, 0x54, 0xb9, 0x72, 0xeb, 0x83, 0x4b, 0x75, 0x82, 0xd9, 0x67, 0x1a, 0x31, 0xdd, 0xa7, 0x0e,
	0xf6, 0x0d, 0x6e, 0x15, 0x63, 0x27, 0x61, 0xb9, 0x32, 0x26, 0x11, 0x85, 0x01, 0x1d, 0x13, 0x9f,
	0x19, 0x05, 0xd1, 0x10, 0xad, 0x31, 0x3f, 0xd3, 0x28, 0x2e, 0x73, 0xc2, 0x22, 0xe2, 0x14, 0xbe,
	0xaf, 0x4a, 0xd7, 0x08, 0x2e, 0xbc, 0xe4, 0x8c, 0x5e, 0x18, 0x2e, 0x85, 0x02, 0x84, 0xe7, 0xd8,
	0xf7, 0xc6, 0x38, 0xa1, 0x31, 0x33, 0xe6, 0x65, 0xa1, 0xdb, 0x76, 0x29, 0x75, 0x7d, 0xb2, 0xb8,
	0x35, 0x4b, 0xe2, 0x89, 0x93, 0xe4, 0xa8, 0xfa, 0xa5, 0x0a, 0xaa, 0xc3, 0xfc, 0x30, 0xe9, 0x00,
	0x00, 0x2f, 0x64, 0x09, 0x0e, 0x1d, 0x72, 0x30, 0x96, 0x2b, 0x3b, 0x15, 0xad, 0x36, 0x68, 0x66,
	0xa9, 0xb2, 0x7e, 0x4a, 0xe3, 0xa0, 0xa7, 0x2e, 0x30, 0xf5, 0xe7, 0x0f, 0x65, 0x0d, 0xac, 0x1e,
	0x23, 0x13, 0x76, 0x31, 0xbc, 0xb4, 0xaf, 0x5a, 0x9d, 0xeb, 0x86, 0x55, 0x12, 0x4b, 0xbb, 0x60,
	0xe9, 0xcc, 0x0b, 0xc7, 0xf2, 0x1d, 0x61, 0xf2, 0x30, 0x4b, 0x95, 0x7a, 0x6e, 0xc2, 0x77, 0x55,
	0x4b, 0x80, 0x9c, 0x14, 0xe2, 0x80, 0xc8, 0x77, 0xff, 0x24, 0xf1, 0x5d, 0xd5, 0x12, 0xa0, 0xd4,
	0x06, 0x35, 0xbe, 0xb2, 0x08, 0x3b, 0x44, 0x5e, 0x12, 0xcc, 0xc7, 0x59, 0xaa, 0xac, 0x2d, 0x98,
	0x02, 0x52, 0xad, 0x05, 0x4d, 0xb2, 0xc1, 0x83, 0x98, 0x30, 0x3a, 0x89, 0x1d, 0xf2, 0x8e, 0x1f,
	0x70, 0x4f, 0xc8, 0xba, 0x59, 0xaa, 0x3c, 0xca, 0x65, 0x65, 0x94, 0x0f, 0xf3, 0x04, 0x6c, 0x1f,
	0x23, 0x3e, 0x89, 0x86, 0x20, 0x86, 0x97, 0x26, 0xec, 0xda, 0xcf, 0x50, 0x51, 0x34, 0xfb, 0x0d,
	0xeb, 0x86, 0x9d, 0xf4, 0x1e, 0xd4, 0x71, 0x18, 0xd2, 0x04, 0x27, 0x1e, 0x0d, 0x99, 0xbc, 0xbc,
	0x53, 0xd1, 0xea, 0xed, 0x4d, 0x3d, 0xcf, 0x59, 0x9f, 0xe5, 0xac, 0x0f, 0x45, 0xce, 0x83, 0x8d,
	0x2c, 0x55, 0xa4, 0xfc, 0xd8, 0x92, 0x4a, 0xb5, 0xca, 0x1e, 0xd2, 0x00, 0x2c, 0xfb, 0x78, 0x44,
	0x7c, 0x26, 0x57, 0xff, 0xed, 0xb6, 0x9e, 0xa5, 0xca, 0x4a, 0xee, 0x96, 0x0b, 0x54, 0xab, 0x50,
	0x4a, 0xfb, 0x60, 0x89, 0x3f, 0x17, 0xf9, 0xbe, 0x70, 0xd8, 0xd0, 0xe7, 0xaf, 0x49, 0x2f, 0x3e,
	0xf0, 0x30, 0x22, 0x4e, 0x39, 0x66, 0xce, 0x56, 0x2d, 0x21, 0x92, 0xf6, 0x17, 0x91, 0x71, 0x9a,
	0x5c, 0x13, 0x91, 0x6d, 0xde, 0x8e, 0x6c, 0x28, 0x44, 0x37, 0xc8, 0xd2, 0xaf, 0x0a, 0x58, 0x77,
	0x62, 0x22, 0x66, 0x39, 0xf4, 0x02, 0xc2, 0x12, 0x1c, 0x44, 0x32, 0x10, 0x16, 0xdf, 0x2b, 0x59,
	0xaa, 0xc8, 0xb9, 0xc7, 0x2d, 0x0e, 0xcf, 0xfe, 0x5b, 0x05, 0x7c, 0xad, 0x1c, 0x6b, 0x5a, 0xbf,
	0x87, 0x5a, 0xb0, 0x6b, 0x23, 0x11, 0x7e, 0xb3, 0x2f, 0xd6, 0xab, 0x17, 0xd7, 0x4d, 0xa8, 0xb5,
	0x90, 0x09, 0xdb, 0xf6, 0xd4, 0x14, 0x78, 0x13, 0x6a, 0x1d, 0x64, 0xc2, 0xd6, 0xac, 0x9f, 0xa2,
	0x16, 0x6c, 0xe7, 0xaa, 0x26, 0x3a, 0xdc, 0xb1, 0xb5, 0x36, 0x32, 0x61, 0xc7, 0x9e, 0x0a, 0x4e,
	0xbe, 0xdd, 0xd3, 0x90, 0x09, 0x5f, 0xce, 0x9a, 0x45, 0xad, 0x7d, 0xd4, 0xc5, 0xba, 0xd7, 0xec,
	0x6b, 0x47, 0x53, 0xb4, 0x07, 0x6d, 0xad, 0xdf, 0xfb, 0x8b, 0xbc, 0xa4, 0xee, 0x37, 0xac, 0xdb,
	0x93, 0x4a, 0x43, 0x50, 0x15, 0x9b, 0x34, 0x96, 0xeb, 0xf3, 0xa7, 0xb6, 0x5a, 0x9a, 0x99, 0xc6,
	0x7c, 0xd2, 0x5d, 0xf0, 0x54, 0xbc, 0xb2, 0xd7, 0xf0, 0x88, 0x9b, 0x21, 0x7d, 0x5e, 0x9f, 0x40,
	0xfb, 0xaa, 0xfd, 0xbc, 0xd3, 0xba, 0x6e, 0x58, 0x33, 0xa7, 0xc1, 0xdb, 0xa3, 0x37, 0xff, 0xe1,
	0x4f, 0x32, 0x5a, 0x16, 0xcc, 0xce, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf3, 0x40, 0x2c, 0x1d,
	0xe0, 0x04, 0x00, 0x00,
}
