// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: container.proto

package container

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//容器配置
type ContainerConfig struct {
	//
	//容器名称, 需符合RFC 1035规范
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name" form:"name"`
	//
	//镜像
	Image string `protobuf:"bytes,2,opt,name=image,proto3" json:"image" form:"image"`
	//
	//工作目录
	WorkingDir string `protobuf:"bytes,3,opt,name=workingDir,proto3" json:"workingDir" form:"workingDir"`
	//
	//镜像拉取策略，默认为 IfNotPresent
	ImagePullPolicy string `protobuf:"bytes,4,opt,name=imagePullPolicy,proto3" json:"imagePullPolicy" form:"imagePullPolicy"`
	//
	//容器启动命令
	Command []string `protobuf:"bytes,5,rep,name=command,proto3" json:"command" form:"command"`
	//
	//容器启动命令参数
	Args []string `protobuf:"bytes,6,rep,name=args,proto3" json:"args" form:"args"`
	//
	//容器端口设置
	Ports []*ContainerPort `protobuf:"bytes,7,rep,name=ports,proto3" json:"ports" form:"ports"`
	//
	//挂载到容器内部的存储卷配置
	VolumeMounts []*VolumeMount `protobuf:"bytes,8,rep,name=volumeMounts,proto3" json:"volumeMounts" form:"volumeMounts"`
	//
	//容器运行前需设置的环境变量
	Env []*EnvVar `protobuf:"bytes,9,rep,name=env,proto3" json:"env" form:"env"`
	//
	//最大资源限制和初始资源请求
	Resources *ResourceRequirements `protobuf:"bytes,10,opt,name=resources,proto3" json:"resources" form:"resources"`
	//
	//判断容器是否启动完成(running状态)
	ReadinessProbe *Probe `protobuf:"bytes,11,opt,name=readinessProbe,proto3" json:"readinessProbe" form:"readinessProbe"`
	//
	//判断容器是否存活(running状态), 一般复用 readinessProbe
	LivenessProbe        *Probe   `protobuf:"bytes,12,opt,name=livenessProbe,proto3" json:"livenessProbe" form:"livenessProbe"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerConfig) Reset()         { *m = ContainerConfig{} }
func (m *ContainerConfig) String() string { return proto.CompactTextString(m) }
func (*ContainerConfig) ProtoMessage()    {}
func (*ContainerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_7afe31759757e49a, []int{0}
}
func (m *ContainerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerConfig.Unmarshal(m, b)
}
func (m *ContainerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerConfig.Marshal(b, m, deterministic)
}
func (m *ContainerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerConfig.Merge(m, src)
}
func (m *ContainerConfig) XXX_Size() int {
	return xxx_messageInfo_ContainerConfig.Size(m)
}
func (m *ContainerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerConfig proto.InternalMessageInfo

func (m *ContainerConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ContainerConfig) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *ContainerConfig) GetWorkingDir() string {
	if m != nil {
		return m.WorkingDir
	}
	return ""
}

func (m *ContainerConfig) GetImagePullPolicy() string {
	if m != nil {
		return m.ImagePullPolicy
	}
	return ""
}

func (m *ContainerConfig) GetCommand() []string {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *ContainerConfig) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *ContainerConfig) GetPorts() []*ContainerPort {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *ContainerConfig) GetVolumeMounts() []*VolumeMount {
	if m != nil {
		return m.VolumeMounts
	}
	return nil
}

func (m *ContainerConfig) GetEnv() []*EnvVar {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *ContainerConfig) GetResources() *ResourceRequirements {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *ContainerConfig) GetReadinessProbe() *Probe {
	if m != nil {
		return m.ReadinessProbe
	}
	return nil
}

func (m *ContainerConfig) GetLivenessProbe() *Probe {
	if m != nil {
		return m.LivenessProbe
	}
	return nil
}

func init() {
	proto.RegisterType((*ContainerConfig)(nil), "container.ContainerConfig")
}

func init() { proto.RegisterFile("container.proto", fileDescriptor_7afe31759757e49a) }

var fileDescriptor_7afe31759757e49a = []byte{
	// 646 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0xdd, 0x4e, 0xdb, 0x3e,
	0x18, 0xc6, 0xd5, 0x7f, 0xf9, 0xf8, 0xd7, 0x65, 0x14, 0x32, 0xc6, 0xbc, 0x9e, 0xa4, 0xf2, 0xa6,
	0x29, 0xc0, 0xda, 0x48, 0x20, 0xed, 0x00, 0x4d, 0xfb, 0x28, 0xa0, 0x69, 0x07, 0xd3, 0x3a, 0x23,
	0xa1, 0x09, 0x02, 0x95, 0x9b, 0x9a, 0x2c, 0x22, 0xb1, 0x3b, 0x3b, 0x09, 0x62, 0xe2, 0x68, 0xd7,
	0xb6, 0xeb, 0xc8, 0xa4, 0x5d, 0x42, 0xae, 0x60, 0x8a, 0x9d, 0x36, 0x81, 0x69, 0x67, 0x3d, 0xb3,
	0xdf, 0xe7, 0x79, 0x7e, 0xaf, 0xf5, 0x26, 0x2f, 0x68, 0xb9, 0x9c, 0x45, 0xc4, 0x67, 0x54, 0xf4,
	0x26, 0x82, 0x47, 0xdc, 0x68, 0xcc, 0x0a, 0xed, 0xae, 0xe7, 0x47, 0x5f, 0xe3, 0x51, 0xcf, 0xe5,
	0xa1, 0xed, 0x71, 0x8f, 0xdb, 0xca, 0x31, 0x8a, 0x2f, 0xd5, 0x4d, 0x5d, 0xd4, 0x49, 0x27, 0xdb,
	0x5f, 0x3c, 0xde, 0xa3, 0x44, 0xde, 0xf0, 0x89, 0xec, 0x05, 0xdc, 0x25, 0x81, 0x9d, 0xa3, 0x04,
	0x71, 0x23, 0xa9, 0x93, 0x82, 0x4e, 0x78, 0x37, 0xe4, 0x63, 0x1a, 0x48, 0xbb, 0x30, 0xda, 0xea,
	0x6a, 0xcf, 0x7a, 0x96, 0xa7, 0xe1, 0x84, 0x8b, 0xa8, 0x20, 0x9f, 0xcc, 0x83, 0x9c, 0xf0, 0x20,
	0x0e, 0xe9, 0x30, 0xe4, 0x31, 0x9b, 0x72, 0x3f, 0xcf, 0x83, 0x4b, 0x59, 0x32, 0x4c, 0x48, 0x31,
	0xbe, 0xf6, 0x70, 0x1e, 0x48, 0x41, 0x25, 0x8f, 0x85, 0x4b, 0x87, 0x82, 0x7e, 0x8b, 0x7d, 0x41,
	0x43, 0xca, 0x22, 0x59, 0x34, 0xf8, 0x34, 0x8f, 0x06, 0x13, 0xc1, 0x47, 0xb4, 0x00, 0xbe, 0xac,
	0x7c, 0xe5, 0xf0, 0xda, 0x8f, 0xae, 0xf8, 0xb5, 0xed, 0xf1, 0xae, 0x12, 0xbb, 0x09, 0x09, 0xfc,
	0x31, 0x89, 0xb8, 0x90, 0xf6, 0xec, 0xa8, 0x73, 0xe8, 0xe7, 0x12, 0x68, 0x1d, 0x4c, 0x89, 0x07,
	0x9c, 0x5d, 0xfa, 0x9e, 0xf1, 0x14, 0x2c, 0x30, 0x12, 0x52, 0x58, 0xeb, 0xd4, 0xac, 0x46, 0xbf,
	0x95, 0xa5, 0x66, 0xf3, 0x92, 0x8b, 0x70, 0x1f, 0xe5, 0x55, 0x84, 0x95, 0x68, 0x3c, 0x07, 0x8b,
	0x7e, 0x48, 0x3c, 0x0a, 0xff, 0x53, 0xae, 0xb5, 0x2c, 0x35, 0x57, 0xb4, 0x4b, 0x95, 0x11, 0xd6,
	0xb2, 0xf1, 0xa3, 0x06, 0xc0, 0x35, 0x17, 0x57, 0x3e, 0xf3, 0x0e, 0x7d, 0x01, 0xeb, 0xca, 0x3d,
	0xca, 0x52, 0x73, 0x5d, 0xbb, 0x4b, 0x0d, 0xfd, 0xfe, 0x65, 0x7e, 0x00, 0xef, 0x2f, 0x2c, 0xcb,
	0xb1, 0xcf, 0x2e, 0x1c, 0x7b, 0xdf, 0xd9, 0x76, 0xde, 0x20, 0xf4, 0xea, 0xb5, 0x73, 0xeb, 0x08,
	0x87, 0x9d, 0xef, 0x6c, 0xed, 0x6c, 0xdd, 0x5a, 0x8e, 0xbd, 0x75, 0x7b, 0x46, 0xba, 0xdf, 0xdf,
	0x75, 0x4f, 0xcf, 0xf7, 0x2d, 0xc7, 0x39, 0xbb, 0x70, 0x9c, 0xbf, 0x9d, 0xdb, 0xcf, 0x70, 0xa5,
	0xab, 0x71, 0x08, 0x5a, 0xea, 0x35, 0x83, 0x38, 0x08, 0x06, 0x3c, 0xf0, 0xdd, 0x1b, 0xb8, 0xa0,
	0x1e, 0xd2, 0xce, 0x52, 0x73, 0xb3, 0xf2, 0xec, 0xd2, 0x80, 0xf0, 0xfd, 0x88, 0xf1, 0x02, 0x2c,
	0xbb, 0x3c, 0x0c, 0x09, 0x1b, 0xc3, 0xc5, 0x4e, 0xdd, 0x6a, 0xf4, 0x8d, 0x2c, 0x35, 0x57, 0x75,
	0xba, 0x10, 0x10, 0x9e, 0x5a, 0xf2, 0x29, 0x12, 0xe1, 0x49, 0xb8, 0xa4, 0xac, 0x95, 0x29, 0xe6,
	0x55, 0x84, 0x95, 0x68, 0xbc, 0x05, 0x8b, 0xf9, 0x86, 0x48, 0xb8, 0xdc, 0xa9, 0x5b, 0xcd, 0x5d,
	0xd8, 0x2b, 0x17, 0x79, 0xf6, 0x55, 0x06, 0x5c, 0x44, 0xd5, 0xf9, 0xaa, 0x00, 0xc2, 0x3a, 0x68,
	0x1c, 0x83, 0x15, 0xbd, 0x13, 0x1f, 0xf3, 0x95, 0x90, 0xf0, 0x7f, 0x05, 0xda, 0xac, 0x80, 0x4e,
	0x4a, 0xb9, 0xff, 0x38, 0x4b, 0xcd, 0x87, 0x1a, 0x53, 0x4d, 0x21, 0x7c, 0x07, 0x62, 0xec, 0x81,
	0x3a, 0x65, 0x09, 0x6c, 0x28, 0xd6, 0x7a, 0x85, 0x75, 0xc4, 0x92, 0x13, 0x22, 0xfa, 0xab, 0x59,
	0x6a, 0x02, 0x8d, 0xa1, 0x2c, 0x41, 0x38, 0x77, 0x1b, 0xc7, 0xa0, 0x31, 0xfd, 0xe5, 0x25, 0x04,
	0x9d, 0x9a, 0xd5, 0xdc, 0x35, 0x2b, 0x51, 0x5c, 0x68, 0xb8, 0xb2, 0x0d, 0xfd, 0x8d, 0x2c, 0x35,
	0xd7, 0x34, 0x68, 0x96, 0x45, 0xb8, 0xe4, 0x18, 0xc7, 0x60, 0x55, 0x50, 0x32, 0xf6, 0x19, 0x95,
	0x72, 0x90, 0xff, 0xef, 0xb0, 0xa9, 0xc8, 0x6b, 0x15, 0xb2, 0xaa, 0xf7, 0x9f, 0x64, 0xa9, 0xf9,
	0x68, 0x8a, 0xaa, 0x26, 0x10, 0xbe, 0x87, 0x30, 0x06, 0xe0, 0x41, 0xe0, 0x27, 0xb4, 0x64, 0xae,
	0xfc, 0x83, 0x09, 0xb3, 0xd4, 0xdc, 0xd0, 0xcc, 0x3b, 0x01, 0x84, 0xef, 0x02, 0xfa, 0x47, 0xa7,
	0x07, 0x73, 0xd8, 0xe8, 0xd1, 0x92, 0x72, 0xee, 0xfd, 0x09, 0x00, 0x00, 0xff, 0xff, 0x86, 0xff,
	0xa8, 0x9c, 0xd0, 0x05, 0x00, 0x00,
}
