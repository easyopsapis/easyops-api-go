// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: permission.proto

package permission

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//权限点
type Permission struct {
	//
	//权限点id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" form:"id"`
	//
	//系统名
	System string `protobuf:"bytes,2,opt,name=system,proto3" json:"system" form:"system"`
	//
	//需要鉴权的动作, 全局唯一
	Action string `protobuf:"bytes,3,opt,name=action,proto3" json:"action" form:"action"`
	//
	//权限备注
	Remark string `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark" form:"remark"`
	//
	//权限角色
	Roles []string `protobuf:"bytes,5,rep,name=roles,proto3" json:"roles" form:"roles"`
	//
	//单个资源结构参考PermissionResource. 如果依赖多个资源，资源间判定逻辑条件用%and或者%or来扩住。 比如： { "%or":[ { "system":"flow", "condition":{ "executeAuthorizers":"%user" }, "name":"flow" }, { "system":"tool", "condition":{ "executeAuthorizers":"%user" }, "name":"tool" } ] } 表示这个权限点依赖流程的执行授权白名单和工具的执行授权白名单才能鉴权成功。
	Resource             *types.Value `protobuf:"bytes,6,opt,name=resource,proto3" json:"resource" form:"resource"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Permission) Reset()         { *m = Permission{} }
func (m *Permission) String() string { return proto.CompactTextString(m) }
func (*Permission) ProtoMessage()    {}
func (*Permission) Descriptor() ([]byte, []int) {
	return fileDescriptor_c837ef01cbda0ad8, []int{0}
}
func (m *Permission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Permission.Unmarshal(m, b)
}
func (m *Permission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Permission.Marshal(b, m, deterministic)
}
func (m *Permission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Permission.Merge(m, src)
}
func (m *Permission) XXX_Size() int {
	return xxx_messageInfo_Permission.Size(m)
}
func (m *Permission) XXX_DiscardUnknown() {
	xxx_messageInfo_Permission.DiscardUnknown(m)
}

var xxx_messageInfo_Permission proto.InternalMessageInfo

func (m *Permission) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Permission) GetSystem() string {
	if m != nil {
		return m.System
	}
	return ""
}

func (m *Permission) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *Permission) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *Permission) GetRoles() []string {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *Permission) GetResource() *types.Value {
	if m != nil {
		return m.Resource
	}
	return nil
}

func init() {
	proto.RegisterType((*Permission)(nil), "permission.Permission")
}

func init() { proto.RegisterFile("permission.proto", fileDescriptor_c837ef01cbda0ad8) }

var fileDescriptor_c837ef01cbda0ad8 = []byte{
	// 366 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x92, 0xd1, 0x6a, 0xe2, 0x40,
	0x14, 0x86, 0x31, 0xae, 0xb2, 0xce, 0xee, 0xb2, 0x1a, 0x61, 0x09, 0xb2, 0x10, 0x19, 0x64, 0x71,
	0x2f, 0x92, 0x29, 0x56, 0x0a, 0xed, 0x5d, 0x43, 0xb1, 0xb7, 0x25, 0x17, 0xbd, 0x68, 0x69, 0x61,
	0x4c, 0xc6, 0x74, 0x30, 0xf1, 0x84, 0x99, 0x49, 0x45, 0x4a, 0xdf, 0xaa, 0xcf, 0x93, 0x42, 0x1f,
	0x21, 0x4f, 0x50, 0x9c, 0x89, 0x5a, 0xbc, 0x3b, 0xe7, 0x3f, 0xdf, 0x37, 0x33, 0x1c, 0x06, 0x75,
	0x73, 0x26, 0x32, 0x2e, 0x25, 0x87, 0x95, 0x9f, 0x0b, 0x50, 0x60, 0xa3, 0x43, 0x32, 0xf0, 0x12,
	0xae, 0x9e, 0x8a, 0xb9, 0x1f, 0x41, 0x46, 0x12, 0x48, 0x80, 0x68, 0x64, 0x5e, 0x2c, 0x74, 0xa7,
	0x1b, 0x5d, 0x19, 0x75, 0x70, 0xf6, 0x05, 0xcf, 0xd6, 0x5c, 0x2d, 0x61, 0x4d, 0x12, 0xf0, 0xf4,
	0xd0, 0x7b, 0xa6, 0x29, 0x8f, 0xa9, 0x02, 0x21, 0xc9, 0xbe, 0xac, 0xbd, 0xbf, 0x09, 0x40, 0x92,
	0xb2, 0xc3, 0xe9, 0x52, 0x89, 0x22, 0x52, 0x66, 0x8a, 0xdf, 0x2c, 0x84, 0x6e, 0xf6, 0x6f, 0xb2,
	0xa7, 0xc8, 0xe2, 0xb1, 0xd3, 0x18, 0x36, 0xc6, 0x9d, 0x60, 0x54, 0x95, 0x6e, 0x67, 0x01, 0x22,
	0xbb, 0xc0, 0x3c, 0xc6, 0x1f, 0xef, 0x6e, 0x1f, 0xf5, 0x1e, 0xef, 0x4f, 0xbc, 0x73, 0xea, 0x2d,
	0x2e, 0xbd, 0xd9, 0xc3, 0xcb, 0x64, 0xfa, 0x3a, 0x0a, 0x2d, 0x1e, 0xdb, 0xff, 0x51, 0x5b, 0x6e,
	0xa4, 0x62, 0x99, 0x63, 0x69, 0xb3, 0x57, 0x95, 0xee, 0x2f, 0x63, 0x9a, 0x1c, 0x87, 0x35, 0xb0,
	0x45, 0x69, 0xa4, 0x38, 0xac, 0x9c, 0xe6, 0x31, 0x6a, 0x72, 0x1c, 0xd6, 0xc0, 0x16, 0x15, 0x2c,
	0xa3, 0x62, 0xe9, 0x7c, 0x3b, 0x46, 0x4d, 0x8e, 0xc3, 0x1a, 0xb0, 0xff, 0xa1, 0x96, 0x80, 0x94,
	0x49, 0xa7, 0x35, 0x6c, 0x8e, 0x3b, 0x41, 0xb7, 0x2a, 0xdd, 0x9f, 0x35, 0xb9, 0x8d, 0x71, 0x68,
	0xc6, 0xf6, 0x35, 0xfa, 0x2e, 0x98, 0x84, 0x42, 0x44, 0xcc, 0x69, 0x0f, 0x1b, 0xe3, 0x1f, 0x93,
	0x3f, 0xbe, 0x59, 0x8f, 0xbf, 0x5b, 0x8f, 0x7f, 0x4b, 0xd3, 0x82, 0x05, 0xfd, 0xaa, 0x74, 0x7f,
	0xef, 0x2e, 0x33, 0x06, 0x0e, 0xf7, 0x72, 0x30, 0xbb, 0xbb, 0x4a, 0xc0, 0x67, 0x54, 0x6e, 0x20,
	0x97, 0x7e, 0x0a, 0x11, 0x4d, 0x49, 0x04, 0x2b, 0x25, 0x68, 0xa4, 0xa4, 0x59, 0xb5, 0x60, 0x39,
	0x78, 0x19, 0xc4, 0x2c, 0x95, 0xa4, 0x06, 0x89, 0x6e, 0xc9, 0xe1, 0x0f, 0xcc, 0xdb, 0x1a, 0x3d,
	0xfd, 0x0c, 0x00, 0x00, 0xff, 0xff, 0x5f, 0xb7, 0xa8, 0x5f, 0x2a, 0x02, 0x00, 0x00,
}
