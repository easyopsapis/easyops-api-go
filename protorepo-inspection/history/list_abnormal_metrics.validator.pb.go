// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: list_abnormal_metrics.proto

package history

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "github.com/easyopsapis/easyops-api-go/protorepo-models/easyops/model/inspection"
	math "math"
	regexp "regexp"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

var _regex_ListAbnormalMetricsRequest_PluginId = regexp.MustCompile(`^[a-zA-Z_][0-9a-zA-Z_]{0,31}$`)
var _regex_ListAbnormalMetricsRequest_InstanceId = regexp.MustCompile(`^[0-9a-z]{13}$`)

func (this *ListAbnormalMetricsRequest) Validate() error {
	if !_regex_ListAbnormalMetricsRequest_PluginId.MatchString(this.PluginId) {
		return github_com_mwitkow_go_proto_validators.FieldError("PluginId", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z_][0-9a-zA-Z_]{0,31}$"`, this.PluginId))
	}
	if !_regex_ListAbnormalMetricsRequest_InstanceId.MatchString(this.InstanceId) {
		return github_com_mwitkow_go_proto_validators.FieldError("InstanceId", fmt.Errorf(`value '%v' must be a string conforming to regex "^[0-9a-z]{13}$"`, this.InstanceId))
	}
	return nil
}
func (this *ListAbnormalMetricsResponse) Validate() error {
	if !(this.Page > 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("Page", fmt.Errorf(`value '%v' must be greater than '0'`, this.Page))
	}
	if !(this.PageSize > 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("PageSize", fmt.Errorf(`value '%v' must be greater than '0'`, this.PageSize))
	}
	for _, item := range this.List {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("List", err)
			}
		}
	}
	return nil
}

var _regex_ListAbnormalMetricsResponse_List_TargetId = regexp.MustCompile(`^[0-9a-z]{13}$`)

func (this *ListAbnormalMetricsResponse_List) Validate() error {
	if !_regex_ListAbnormalMetricsResponse_List_TargetId.MatchString(this.TargetId) {
		return github_com_mwitkow_go_proto_validators.FieldError("TargetId", fmt.Errorf(`value '%v' must be a string conforming to regex "^[0-9a-z]{13}$"`, this.TargetId))
	}
	if this.AbnormalMetricGroups != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.AbnormalMetricGroups); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("AbnormalMetricGroups", err)
		}
	}
	return nil
}
func (this *ListAbnormalMetricsResponse_List_AbnormalMetricGroups) Validate() error {
	for _, item := range this.Dims {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Dims", err)
			}
		}
	}
	if this.AbnormalMetrics != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.AbnormalMetrics); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("AbnormalMetrics", err)
		}
	}
	return nil
}
func (this *ListAbnormalMetricsResponse_List_AbnormalMetricGroups_AbnormalMetrics) Validate() error {
	return nil
}
func (this *ListAbnormalMetricsResponseWrapper) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
