// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: get_version_permission_by_ids.proto

package version

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	math "math"
	regexp "regexp"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

var _regex_GetVersionPermissionByIdsRequest_PackageId = regexp.MustCompile(`^[a-fA-F0-9]{8}-?[a-fA-F0-9]{4}-?[a-fA-F0-9]{4}-?[a-fA-F0-9]{4}-?[a-fA-F0-9]{12}$`)
var _regex_GetVersionPermissionByIdsRequest_VersionIds = regexp.MustCompile(`^[a-fA-F0-9]{8}-?[a-fA-F0-9]{4}-?[a-fA-F0-9]{4}-?[a-fA-F0-9]{4}-?[a-fA-F0-9]{12}$`)

func (this *GetVersionPermissionByIdsRequest) Validate() error {
	if !_regex_GetVersionPermissionByIdsRequest_PackageId.MatchString(this.PackageId) {
		return github_com_mwitkow_go_proto_validators.FieldError("PackageId", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-fA-F0-9]{8}-?[a-fA-F0-9]{4}-?[a-fA-F0-9]{4}-?[a-fA-F0-9]{4}-?[a-fA-F0-9]{12}$"`, this.PackageId))
	}
	for _, item := range this.VersionIds {
		if !_regex_GetVersionPermissionByIdsRequest_VersionIds.MatchString(item) {
			return github_com_mwitkow_go_proto_validators.FieldError("VersionIds", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-fA-F0-9]{8}-?[a-fA-F0-9]{4}-?[a-fA-F0-9]{4}-?[a-fA-F0-9]{4}-?[a-fA-F0-9]{12}$"`, item))
		}
	}
	return nil
}
func (this *GetVersionPermissionByIdsResponse) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *GetVersionPermissionByIdsResponse_Data) Validate() error {
	for _, item := range this.List {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("List", err)
			}
		}
	}
	return nil
}

var _regex_GetVersionPermissionByIdsResponse_Data_List_VersionId = regexp.MustCompile(`^[a-fA-F0-9]{8}-?[a-fA-F0-9]{4}-?[a-fA-F0-9]{4}-?[a-fA-F0-9]{4}-?[a-fA-F0-9]{12}$`)

func (this *GetVersionPermissionByIdsResponse_Data_List) Validate() error {
	if !_regex_GetVersionPermissionByIdsResponse_Data_List_VersionId.MatchString(this.VersionId) {
		return github_com_mwitkow_go_proto_validators.FieldError("VersionId", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-fA-F0-9]{8}-?[a-fA-F0-9]{4}-?[a-fA-F0-9]{4}-?[a-fA-F0-9]{4}-?[a-fA-F0-9]{12}$"`, this.VersionId))
	}
	if this.Permission != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Permission); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Permission", err)
		}
	}
	return nil
}

var _regex_GetVersionPermissionByIdsResponse_Data_List_Permission_UpdateAuthorizers = regexp.MustCompile(`^[a-zA-Z0-9][.a-zA-Z0-9_-]{2,31}$`)
var _regex_GetVersionPermissionByIdsResponse_Data_List_Permission_DeleteAuthorizers = regexp.MustCompile(`^[a-zA-Z0-9][.a-zA-Z0-9_-]{2,31}$`)

func (this *GetVersionPermissionByIdsResponse_Data_List_Permission) Validate() error {
	for _, item := range this.UpdateAuthorizers {
		if !_regex_GetVersionPermissionByIdsResponse_Data_List_Permission_UpdateAuthorizers.MatchString(item) {
			return github_com_mwitkow_go_proto_validators.FieldError("UpdateAuthorizers", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9][.a-zA-Z0-9_-]{2,31}$"`, item))
		}
	}
	for _, item := range this.DeleteAuthorizers {
		if !_regex_GetVersionPermissionByIdsResponse_Data_List_Permission_DeleteAuthorizers.MatchString(item) {
			return github_com_mwitkow_go_proto_validators.FieldError("DeleteAuthorizers", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9][.a-zA-Z0-9_-]{2,31}$"`, item))
		}
	}
	return nil
}
func (this *GetVersionPermissionByIdsResponseWrapper) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
