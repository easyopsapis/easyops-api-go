// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: giraffe_service.proto

package admin_task

import (
	context "context"
	fmt "fmt"
	giraffe_micro "github.com/easyops-cn/giraffe-micro"
	go_proto_giraffe "github.com/easyops-cn/go-proto-giraffe"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	agent_admin "github.com/easyopsapis/easyops-api-go/protorepo-models/easyops/model/agent_admin"
	io "io"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ = io.EOF
var _ context.Context
var _ giraffe_micro.Client
var _ go_proto_giraffe.Contract

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = giraffe_micro.SupportPackageIsVersion4 // please upgrade the giraffe_micro package

// Client is the client API for admin_task service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type Client interface {
	CallbackAdminTask(ctx context.Context, in *CallbackAdminTaskRequest) (*CallbackAdminTaskResponse, error)
	CallbackAdminTaskV1(ctx context.Context, in *CallbackAdminTaskV1Request) (*CallbackAdminTaskV1Response, error)
	GetDeployTaskV1(ctx context.Context, in *GetDeployTaskV1Request) (*GetDeployTaskV1Response, error)
	GetTask(ctx context.Context, in *GetTaskRequest) (*agent_admin.AdminTask, error)
	InstallPluginTask(ctx context.Context, in *InstallPluginTaskRequest) (*InstallPluginTaskResponse, error)
	InstallPluginTaskV1(ctx context.Context, in *InstallPluginTaskV1Request) (*InstallPluginTaskV1Response, error)
	ListPluginTask(ctx context.Context, in *ListPluginTaskRequest) (*ListPluginTaskResponse, error)
	RefreshAgentPluginTask(ctx context.Context, in *RefreshAgentPluginTaskRequest) (*RefreshAgentPluginTaskResponse, error)
	RefreshAgentPluginTaskV1(ctx context.Context, in *RefreshAgentPluginTaskV1Request) (*types.Empty, error)
}

type client struct {
	c giraffe_micro.Client
}

func NewClient(c giraffe_micro.Client) Client {
	return &client{
		c: c,
	}
}

func (c *client) CallbackAdminTask(ctx context.Context, in *CallbackAdminTaskRequest) (*CallbackAdminTaskResponse, error) {
	out := new(CallbackAdminTaskResponse)
	err := c.c.Invoke(ctx, _CallbackAdminTaskMethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) CallbackAdminTaskV1(ctx context.Context, in *CallbackAdminTaskV1Request) (*CallbackAdminTaskV1Response, error) {
	out := new(CallbackAdminTaskV1Response)
	err := c.c.Invoke(ctx, _CallbackAdminTaskV1MethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) GetDeployTaskV1(ctx context.Context, in *GetDeployTaskV1Request) (*GetDeployTaskV1Response, error) {
	out := new(GetDeployTaskV1Response)
	err := c.c.Invoke(ctx, _GetDeployTaskV1MethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) GetTask(ctx context.Context, in *GetTaskRequest) (*agent_admin.AdminTask, error) {
	out := new(agent_admin.AdminTask)
	err := c.c.Invoke(ctx, _GetTaskMethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) InstallPluginTask(ctx context.Context, in *InstallPluginTaskRequest) (*InstallPluginTaskResponse, error) {
	out := new(InstallPluginTaskResponse)
	err := c.c.Invoke(ctx, _InstallPluginTaskMethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) InstallPluginTaskV1(ctx context.Context, in *InstallPluginTaskV1Request) (*InstallPluginTaskV1Response, error) {
	out := new(InstallPluginTaskV1Response)
	err := c.c.Invoke(ctx, _InstallPluginTaskV1MethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) ListPluginTask(ctx context.Context, in *ListPluginTaskRequest) (*ListPluginTaskResponse, error) {
	out := new(ListPluginTaskResponse)
	err := c.c.Invoke(ctx, _ListPluginTaskMethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) RefreshAgentPluginTask(ctx context.Context, in *RefreshAgentPluginTaskRequest) (*RefreshAgentPluginTaskResponse, error) {
	out := new(RefreshAgentPluginTaskResponse)
	err := c.c.Invoke(ctx, _RefreshAgentPluginTaskMethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *client) RefreshAgentPluginTaskV1(ctx context.Context, in *RefreshAgentPluginTaskV1Request) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.c.Invoke(ctx, _RefreshAgentPluginTaskV1MethodDesc, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Service is the server API for admin_task service.
type Service interface {
	CallbackAdminTask(context.Context, *CallbackAdminTaskRequest) (*CallbackAdminTaskResponse, error)
	CallbackAdminTaskV1(context.Context, *CallbackAdminTaskV1Request) (*CallbackAdminTaskV1Response, error)
	GetDeployTaskV1(context.Context, *GetDeployTaskV1Request) (*GetDeployTaskV1Response, error)
	GetTask(context.Context, *GetTaskRequest) (*agent_admin.AdminTask, error)
	InstallPluginTask(context.Context, *InstallPluginTaskRequest) (*InstallPluginTaskResponse, error)
	InstallPluginTaskV1(context.Context, *InstallPluginTaskV1Request) (*InstallPluginTaskV1Response, error)
	ListPluginTask(context.Context, *ListPluginTaskRequest) (*ListPluginTaskResponse, error)
	RefreshAgentPluginTask(context.Context, *RefreshAgentPluginTaskRequest) (*RefreshAgentPluginTaskResponse, error)
	RefreshAgentPluginTaskV1(context.Context, *RefreshAgentPluginTaskV1Request) (*types.Empty, error)
}

func _CallbackAdminTaskEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.CallbackAdminTask(ctx, req.(*CallbackAdminTaskRequest))
	}
}

func _CallbackAdminTaskV1Endpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.CallbackAdminTaskV1(ctx, req.(*CallbackAdminTaskV1Request))
	}
}

func _GetDeployTaskV1Endpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.GetDeployTaskV1(ctx, req.(*GetDeployTaskV1Request))
	}
}

func _GetTaskEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.GetTask(ctx, req.(*GetTaskRequest))
	}
}

func _InstallPluginTaskEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.InstallPluginTask(ctx, req.(*InstallPluginTaskRequest))
	}
}

func _InstallPluginTaskV1Endpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.InstallPluginTaskV1(ctx, req.(*InstallPluginTaskV1Request))
	}
}

func _ListPluginTaskEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.ListPluginTask(ctx, req.(*ListPluginTaskRequest))
	}
}

func _RefreshAgentPluginTaskEndpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.RefreshAgentPluginTask(ctx, req.(*RefreshAgentPluginTaskRequest))
	}
}

func _RefreshAgentPluginTaskV1Endpoint(s Service) giraffe_micro.UnaryEndpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.RefreshAgentPluginTaskV1(ctx, req.(*RefreshAgentPluginTaskV1Request))
	}
}

func RegisterService(s giraffe_micro.Server, srv Service) {
	s.RegisterUnaryEndpoint(_CallbackAdminTaskMethodDesc, _CallbackAdminTaskEndpoint(srv))
	s.RegisterUnaryEndpoint(_CallbackAdminTaskV1MethodDesc, _CallbackAdminTaskV1Endpoint(srv))
	s.RegisterUnaryEndpoint(_GetDeployTaskV1MethodDesc, _GetDeployTaskV1Endpoint(srv))
	s.RegisterUnaryEndpoint(_GetTaskMethodDesc, _GetTaskEndpoint(srv))
	s.RegisterUnaryEndpoint(_InstallPluginTaskMethodDesc, _InstallPluginTaskEndpoint(srv))
	s.RegisterUnaryEndpoint(_InstallPluginTaskV1MethodDesc, _InstallPluginTaskV1Endpoint(srv))
	s.RegisterUnaryEndpoint(_ListPluginTaskMethodDesc, _ListPluginTaskEndpoint(srv))
	s.RegisterUnaryEndpoint(_RefreshAgentPluginTaskMethodDesc, _RefreshAgentPluginTaskEndpoint(srv))
	s.RegisterUnaryEndpoint(_RefreshAgentPluginTaskV1MethodDesc, _RefreshAgentPluginTaskV1Endpoint(srv))
}

// Method Description
var _CallbackAdminTaskMethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.agent_admin.admin_task.CallbackAdminTask",
		Version: "1.0",
	},
	ServiceName:  "admin_task.rpc",
	MethodName:   "CallbackAdminTask",
	RequestType:  (*CallbackAdminTaskRequest)(nil),
	ResponseType: (*CallbackAdminTaskResponse)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Post{
			Post: "/api/v1/task/callback",
		},
		Body:         "",
		ResponseBody: "data",
	},
}

var _CallbackAdminTaskV1MethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.agent_admin.admin_task.CallbackAdminTaskV1",
		Version: "1.0",
	},
	ServiceName:  "admin_task.rpc",
	MethodName:   "CallbackAdminTaskV1",
	RequestType:  (*CallbackAdminTaskV1Request)(nil),
	ResponseType: (*CallbackAdminTaskV1Response)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Post{
			Post: "/api/v1/plugin-tasks/callback",
		},
		Body:         "",
		ResponseBody: "data",
	},
}

var _GetDeployTaskV1MethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.agent_admin.admin_task.GetDeployTaskV1",
		Version: "1.0",
	},
	ServiceName:  "admin_task.rpc",
	MethodName:   "GetDeployTaskV1",
	RequestType:  (*GetDeployTaskV1Request)(nil),
	ResponseType: (*GetDeployTaskV1Response)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Get{
			Get: "/api/v1/plugin-tasks/:cmdTaskId",
		},
		Body:         "",
		ResponseBody: "data",
	},
}

var _GetTaskMethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.agent_admin.admin_task.GetTask",
		Version: "1.0",
	},
	ServiceName:  "admin_task.rpc",
	MethodName:   "GetTask",
	RequestType:  (*GetTaskRequest)(nil),
	ResponseType: (*agent_admin.AdminTask)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Get{
			Get: "/api/v1/task/:id",
		},
		Body:         "",
		ResponseBody: "data",
	},
}

var _InstallPluginTaskMethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.agent_admin.admin_task.InstallPluginTask",
		Version: "1.0",
	},
	ServiceName:  "admin_task.rpc",
	MethodName:   "InstallPluginTask",
	RequestType:  (*InstallPluginTaskRequest)(nil),
	ResponseType: (*InstallPluginTaskResponse)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Post{
			Post: "/api/v1/task/plugin/install",
		},
		Body:         "",
		ResponseBody: "data",
	},
}

var _InstallPluginTaskV1MethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.agent_admin.admin_task.InstallPluginTaskV1",
		Version: "1.0",
	},
	ServiceName:  "admin_task.rpc",
	MethodName:   "InstallPluginTaskV1",
	RequestType:  (*InstallPluginTaskV1Request)(nil),
	ResponseType: (*InstallPluginTaskV1Response)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Post{
			Post: "/api/v1/plugin-tasks",
		},
		Body:         "",
		ResponseBody: "data",
	},
}

var _ListPluginTaskMethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.agent_admin.admin_task.ListPluginTask",
		Version: "1.0",
	},
	ServiceName:  "admin_task.rpc",
	MethodName:   "ListPluginTask",
	RequestType:  (*ListPluginTaskRequest)(nil),
	ResponseType: (*ListPluginTaskResponse)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Get{
			Get: "/api/v1/plugin/:id/task",
		},
		Body:         "",
		ResponseBody: "data",
	},
}

var _RefreshAgentPluginTaskMethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.agent_admin.admin_task.RefreshAgentPluginTask",
		Version: "1.0",
	},
	ServiceName:  "admin_task.rpc",
	MethodName:   "RefreshAgentPluginTask",
	RequestType:  (*RefreshAgentPluginTaskRequest)(nil),
	ResponseType: (*RefreshAgentPluginTaskResponse)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Post{
			Post: "/api/v1/task/agent/plugin/refresh",
		},
		Body:         "",
		ResponseBody: "data",
	},
}

var _RefreshAgentPluginTaskV1MethodDesc = &giraffe_micro.MethodDesc{
	Contract: &go_proto_giraffe.Contract{
		Name:    "easyops.api.agent_admin.admin_task.RefreshAgentPluginTaskV1",
		Version: "1.0",
	},
	ServiceName:  "admin_task.rpc",
	MethodName:   "RefreshAgentPluginTaskV1",
	RequestType:  (*RefreshAgentPluginTaskV1Request)(nil),
	ResponseType: (*types.Empty)(nil),
	HttpRule: &go_proto_giraffe.HttpRule{
		Pattern: &go_proto_giraffe.HttpRule_Post{
			Post: "/api/v1/agents/:agentId/plugins/refresh",
		},
		Body:         "",
		ResponseBody: "data",
	},
}
